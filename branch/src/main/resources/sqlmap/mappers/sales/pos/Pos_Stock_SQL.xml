<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.coway.trust.biz.sales.pos.impl.PosStockMapper">


   <select id="getSeqSAL0293M" resultType="java.lang.Integer">
        SELECT SAL0293M_ID_SEQ.NEXTVAL FROM DUAL
    </select>


 <insert id="insertSAL0293M" parameterType="Map">

            INSERT INTO SAL0293M (
							SCN_NO
						   , SCN_TITLE
							,SCN_MOVE_TYPE
							,SCN_MOVE_STAT
							,SCN_FROM_LOC_ID
							,SCN_TO_LOC_ID
							,SCN_MOVE_DATE
							,CRT_USER_ID
							,CRT_DT
			)VALUES (
				    #{scnNo},
				    #{scnTitle},
				    #{scnMoveType},
				    'A',
				    #{scnFromLocId},
				    #{scnToLocId},
	                 sysdate,
	                 #{userId}   ,
	                 sysdate
			)


 </insert>


 <insert id="insertSAL0294D" parameterType="Map">

		INSERT INTO SAL0294D(
		        SCN_NO
		        ,ITEM_CODE
		        ,ITEM_DESC
		        ,ITEM_CTGRY_ID
		        ,ITEM_INVT_QTY
		        ,ITEM_PURH_ORD_NO
		        ,ITEM_COND
		        ,ITEM_REQ_QTY
		        ,ITEM_TRAN_QTY
		        ,ITEM_RECV_QTY
		        ,ITEM_VARI_QTY
		        ,ITEM_REASON
		        ,ITEM_STATUS
		        ,CRT_USER_ID
		        ,CRT_DT
		        ,ITEM_ADJ_QTY
		)VALUES (
		         #{scnNo}
		        ,#{itemCode}
		        ,#{itemDesc}
		        ,#{itemCtgryId}
		        ,#{itemInvtQty}
		        ,#{itemPurhOrdNo}
		        ,#{itemCond}
		        ,#{itemReqQty}
		        ,#{itemTranQty}
		        ,#{itemRecvQty}
		        ,#{itemVariQty}
		        ,#{itemReason}
		        ,#{itemStatus}
		        ,#{crtUserId}
		        ,#{crtDt}
		        ,#{itemAdjQty}
		)

 </insert>


   <select id="selectPosStockMgmtList" parameterType="Map" resultType="egovMap">
	SELECT  SCN_NO
            ,SCN_MOVE_TYPE_CODE
            ,SCN_FROM_LOC_ID
            ,SCN_FROM_LOC_DESC
            ,SCN_TO_LOC_ID
            ,SCN_TO_LOC_DESC
            ,SCN_MOVE_STAT_CODE
            ,SCN_MOVE_DATE
            ,UPD_DATE
            ,UPD_USER_ID
      FROM (
		SELECT
		            A.SCN_NO ,
				    B.ITEM_CODE ,
				    B.ITEM_DESC ,
				    DECODE (A.SCN_MOVE_TYPE ,'I','STOCK IN','T','STOCK TRANSFER','A','ADJUSTMENT') AS SCN_MOVE_TYPE_CODE,
				    A.SCN_FROM_LOC_ID ,
				    (SELECT CODE||'-'||NAME FROM SYS0005M  WHERE BRNCH_ID  = A.SCN_FROM_LOC_ID) AS SCN_FROM_LOC_DESC ,
				    A.SCN_TO_LOC_ID ,
				    (SELECT CODE||'-'||NAME  FROM SYS0005M  WHERE BRNCH_ID  = A.SCN_TO_LOC_ID) AS SCN_TO_LOC_DESC,
				    DECODE (A.SCN_MOVE_STAT,'A','ACT','C','COM','R','REJECT') AS SCN_MOVE_STAT_CODE,
				    TO_CHAR(A.SCN_MOVE_DATE,'dd-mm-yyyy')AS SCN_MOVE_DATE ,
				    TO_CHAR(A.UPD_DT,'dd-mm-yyyy')AS UPD_DATE ,
				    A.UPD_USER_ID
		FROM SAL0293M A , SAL0294D B
		WHERE A.SCN_NO  =B.SCN_NO
           <if test="scnNo != nul and scnNo != '' ">
                    AND A.SCN_NO = #{scnNo}
          </if>

           <if test="scnMoveType != nul and scnMoveType != '' ">
                   AND A.SCN_MOVE_TYPE = #{scnMoveType}
          </if>

          <if test="scnFromLocId != nul and scnFromLocId != '' ">
                  AND  A.SCN_FROM_LOC_ID = #{scnFromLocId}
          </if>

          <if test="scnToLocId != nul and scnToLocId != '' ">
                  AND  A.SCN_TO_LOC_ID = #{scnToLocId}
          </if>

          <if test="scnMoveStat != nul and scnMoveStat != '' ">
                  AND  A.SCN_MOVE_STAT = #{scnMoveStat}
          </if>

          <if test="scnMoveSdate != nul and scnMoveEdate != '' ">
                   AND to_char (A.SCN_MOVE_DATE,'yyyymmdd')   BETWEEN  to_char(TO_DATE(#{scnMoveSdate}, 'dd/mm/yyyy'),'yyyymmdd') AND to_char(TO_DATE (#{scnMoveEdate}, 'dd/mm/yyyy'),'yyyymmdd')
          </if>
        ) GROUP  BY
             SCN_NO
            ,SCN_MOVE_TYPE_CODE
            ,SCN_FROM_LOC_ID
            ,SCN_FROM_LOC_DESC
            ,SCN_TO_LOC_ID
            ,SCN_TO_LOC_DESC
            ,SCN_MOVE_STAT_CODE
            ,SCN_MOVE_DATE
            ,UPD_DATE
            ,UPD_USER_ID
            ORDER BY SCN_NO DESC
</select>


<select id="selectPosStockMgmtViewInfo" parameterType="Map" resultType="egovMap">
         SELECT
                    A.SCN_NO ,
                    DECODE (A.SCN_MOVE_TYPE ,'I','STOCK IN','T','STOCK TRANSFER','A','ADJUSTMENT') AS SCN_MOVE_TYPE_CODE,
                    A.SCN_MOVE_TYPE,
                    A.SCN_FROM_LOC_ID ,
                    (SELECT CODE||'-'||NAME FROM SYS0005M  WHERE BRNCH_ID  = A.SCN_FROM_LOC_ID) AS SCN_FROM_LOC_DESC ,
                    A.SCN_TO_LOC_ID ,
                    (SELECT CODE||'-'||NAME  FROM SYS0005M  WHERE BRNCH_ID  = A.SCN_TO_LOC_ID) AS SCN_TO_LOC_DESC,
                    DECODE (A.SCN_MOVE_STAT,'A','ACT','C','COM','R','REJECT') AS SCN_MOVE_STAT_CODE,
                    TO_CHAR(A.SCN_MOVE_DATE,'dd-mm-yyyy')AS SCN_MOVE_DATE ,
                    TO_CHAR(A.UPD_DT,'dd-mm-yyyy')AS UPD_DATE ,
                    A.UPD_USER_ID,
                    (SELECT USER_NAME FROM SYS0047M WHERE USER_ID = A.CRT_USER_ID) AS USER_NAME,
                    (SELECT COUNT (*) FROM SAL0294D WHERE SCN_NO = A.SCN_NO ) TOTALCNT
        FROM SAL0293M A
        WHERE A.SCN_NO = #{scnNo}
</select>


  <update id="updateReceviedRejectSAL0294D" parameterType="Map">
              UPDATE SAL0294D
                SET ITEM_STATUS  = #{scnMoveStat}
                     ,UPD_USER_ID  = #{userId}
                     ,UPD_DT       = SYSDATE
            WHERE SCN_NO =  #{scnNo}
    </update>

    <update id="updateReceviedRejectSAL0293M" parameterType="Map">
              UPDATE SAL0293M
                SET SCN_MOVE_STAT = #{scnMoveStat}
                     , UPD_USER_ID  = #{userId}
                     , UPD_DT       = SYSDATE
            WHERE SCN_NO =  #{scnNo}
     </update>

   <update id="updateReceviedSAL0294D" parameterType="Map">
              UPDATE SAL0294D
                SET  ITEM_RECV_QTY = #{itemRecvQty}
                     ,ITEM_REASON  = #{itemReason}
                     ,ITEM_STATUS  = #{itemStatus}
                     ,UPD_USER_ID  = #{userId}
                     ,UPD_DT       = SYSDATE
            WHERE SCN_NO =  #{scnNo}
               AND ITEM_CODE =#{itemCode}
    </update>

    <update id="updateReceviedSAL0293M" parameterType="Map">
              UPDATE SAL0293M
                SET SCN_MOVE_STAT = #{scnMoveStat}
                     , UPD_USER_ID  = #{userId}
                     , UPD_DT       = SYSDATE
            WHERE SCN_NO =  #{scnNo}
     </update>

 <update id="updateAdjSAL0294D" parameterType="Map">
              UPDATE SAL0294D
                SET  ITEM_ADJ_QTY = #{itemAdjQty}
                     ,ITEM_REASON    = #{itemReason}
                     ,UPD_USER_ID     = #{userId}
                     ,UPD_DT       = SYSDATE
            WHERE SCN_NO =  #{scnNo}
               AND ITEM_CODE =#{itemCode}
    </update>




 <update id="updateMergeLOG0106M" parameterType="Map">
  MERGE INTO LOG0106M C
            USING
            (
                  SELECT    #{logId}  as  LOC_ID
		                       ,#{itemCode} as    ITEM_CODE
		                       ,#{itemDesc}  as   ITEM_DESC
		                       ,#{itemCtgryId} as ITEM_CTGRY_ID
		                       ,#{itemInvQty} as ITEM_INV_QTY
		                       ,#{userId} as  USER_ID
                   FROM DUAL
            ) N
            ON ( C.LOC_ID = N.LOC_ID AND  C.ITEM_CODE =N.ITEM_CODE)
            WHEN MATCHED THEN
            UPDATE
            SET C.ITEM_INV_QTY = C.ITEM_INV_QTY + N.ITEM_INV_QTY
              , C.CRT_USER_ID  = N.USER_ID
              , C.CRT_DT       = SYSDATE
            WHEN NOT MATCHED THEN
            INSERT (    LOC_ID
		                   , ITEM_CODE
		                   , ITEM_DESC
		                   , ITEM_CTGRY_ID
		                   , ITEM_INV_QTY
		                   , CRT_USER_ID
		                   , CRT_DT
                   )
             VALUES (
		                     N.LOC_ID
		                   , N.ITEM_CODE
		                   , N.ITEM_DESC
		                   , N.ITEM_CTGRY_ID
		                   , N.ITEM_INV_QTY
		                   , N.USER_ID
		                   , SYSDATE
                   )
</update>

 <update id="updateLOG0106M" parameterType="Map">
MERGE INTO LOG0106M C
            USING
            (
                  SELECT    #{logId}  as  LOC_ID
                               ,#{itemCode} as    ITEM_CODE
                               ,#{itemDesc}  as   ITEM_DESC
                               ,#{itemCtgryCode} as ITEM_CTGRY_ID
                               ,#{itemRecvQty} as ITEM_INV_QTY
                               ,#{userId} as  USER_ID
                   FROM DUAL
            ) N
            ON ( C.LOC_ID = N.LOC_ID AND  C.ITEM_CODE =N.ITEM_CODE)
            WHEN MATCHED THEN
            UPDATE
            SET C.ITEM_INV_QTY = N.ITEM_INV_QTY
                  , C.UPD_USER_ID  = N.USER_ID
                  , C.UPD_DT       = SYSDATE
            WHEN NOT MATCHED THEN
            INSERT (    LOC_ID
                           , ITEM_CODE
                           , ITEM_DESC
                           , ITEM_CTGRY_ID
                           , ITEM_INV_QTY
                           , CRT_USER_ID
                           , CRT_DT
                   )
             VALUES (
                             N.LOC_ID
                           , N.ITEM_CODE
                           , N.ITEM_DESC
                           , N.ITEM_CTGRY_ID
                           , N.ITEM_INV_QTY
                           , N.USER_ID
                           , SYSDATE
                   )
</update>


 <update id="updateOutStockLOG0106M" parameterType="Map">
    Update  LOG0106M
        SET  ITEM_INV_QTY = ITEM_INV_QTY - #{itemRecvQty}
             , UPD_USER_ID  = #{userId}
             , UPD_DT       = SYSDATE
     WHERE  LOC_ID   = #{logId}
        AND  ITEM_CODE =#{itemCode}
 </update>



<select id="selectPosStockMgmtViewList" parameterType="Map" resultType="egovMap">
        SELECT
                    A.SCN_NO ,
                    B.ITEM_CODE,
					B.ITEM_DESC,
					B.ITEM_CTGRY_ID,
                    NVL((SELECT ITEM_INV_QTY FROM LOG0106M WHERE ITEM_CODE =B.ITEM_CODE AND LOC_ID =A.SCN_FROM_LOC_ID),0    ) AS ITEM_INVT_QTY,
                    NVL((SELECT ITEM_INV_QTY FROM LOG0106M WHERE ITEM_CODE =B.ITEM_CODE AND LOC_ID =A.SCN_TO_LOC_ID),0    ) AS ITEM_TO_INVT_QTY,
                   B.ITEM_PURH_ORD_NO,
					B.ITEM_COND,
					B.ITEM_TRAN_QTY,
					B.ITEM_RECV_QTY,
					B.ITEM_VARI_QTY,
					B.ITEM_ADJ_QTY,
					B.ITEM_REASON,
					B.ITEM_STATUS,
					B.CRT_USER_ID,
					B.CRT_DT,
					B.UPD_USER_ID,
					B.UPD_DT,
                    DECODE (A.SCN_MOVE_TYPE , 'I', B.ITEM_REQ_QTY,'T',B.ITEM_TRAN_QTY,'A',B.ITEM_ADJ_QTY) AS ITEM_REQ_QTY
                 FROM SAL0293M A , SAL0294D B
        WHERE A.SCN_NO  =B.SCN_NO
                 AND A.SCN_NO = #{scnNo}
</select>



<select id="selectItemInvtQty" parameterType="Map" resultType="egovMap">
        SELECT
                LOC_ID
				,ITEM_CODE
				,ITEM_DESC
				,ITEM_CTGRY_ID
				,ITEM_INV_QTY
				,ITEM_TRAN_QTY
            FROM LOG0106M
         WHERE ITEM_CODE =#{itemCode}
            AND LOC_ID =#{locId}
</select>

</mapper>