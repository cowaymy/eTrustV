<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.coway.trust.biz.logistics.stockmovement.impl.StockMovementMapper">
   
    <select id="selectStockMovementSeq" resultType="String">
        SELECT  TO_CHAR(SYSTIMESTAMP , 'yyyymmddhh24missff') FROM  DUAL
    </select>
    <select id="selectStockMovementMainList" parameterType="Map" resultType="egovMap">
        select ROWNUM rnum , l47.REQST_STUS     status
             , reqs.code_name     staname
             , l47.reqst_no       reqstno
             , l48.reqst_no_itm   reqitmno
             , l47.trnsc_type     ttype
             , tran.code_name     ttext
             , l47.trnsc_type_dtl mtype
             , trand.code_name    mtext
             , decode(l47.PRIDIC_FRQNCY , 'A' , 'Auto' , 'M' , 'Manual' ,l47.PRIDIC_FRQNCY) froncy
             , to_char(l47.reqst_crt_dt , 'yyyy-mm-dd')     crtdt
             , to_char(l47.reqst_require_dt , 'yyyy-mm-dd') reqdt
             , l47.REF_DOC_NO docno
             , l47.DOC_HDER_TXT headtitle
             , l47.GOODS_RCIPT grcipt
             , l47.RCIV_CDC_RDC rcvloc
             , s28c.wh_loc_code rcvlocnm
             , DBMS_LOB.SUBSTR (s28c.wh_loc_desc, 4000) rcvlocdesc
             , l47.reqst_cdc_rdc reqloc
             , s28q.wh_loc_code  reqlocnm
             , DBMS_LOB.SUBSTR (s28q.wh_loc_desc, 4000) reqlocdesc
             , l48.itm_code      itmcd
             , (select SERIAL_CHK from sys0026m where stk_code = l48.itm_code) serialchk
             , l48.itm_name      itmname
             , l48.reqst_qty     reqstqty
             , NVL (l55.DELVRY_QTY, 0) AS delyqty
             , 0 AS indelyqty
             , nvl(l55.RCIPT_QTY , 0) as rciptqty
             , l48.uom
             , uomt.code_name uomnm
          from log0047m l47
             , log0048d l48
             , (select * from sys0013m where code_master_id = 306) tran
             , (select * from sys0013m where code_master_id = 308) trand
             , (select * from sys0013m where code_master_id = 42) uomt
             , (select * from sys0013m where code_master_id = 309) reqs
             , sys0028m s28c
             , sys0028m s28q
             , (select reqst_no , itm_code , sum(DELVRY_QTY) DELVRY_QTY , sum(RCIPT_QTY) RCIPT_QTY from log0055d group by reqst_no , itm_code )l55
         where 1 =1 
           and l47.reqst_no       = l48.reqst_no
           and l47.trnsc_type     = tran.code(+)
           and l47.trnsc_type_dtl = trand.code(+)
           and l47.rciv_cdc_rdc   = s28c.wh_loc_id(+)
           and l47.reqst_cdc_rdc  = s28q.wh_loc_id(+)
           and l48.uom            = uomt.code_id
           AND l48.reqst_no       = l55.reqst_no(+)
           AND l48.itm_code       = l55.itm_code(+)
           and l47.reqst_stus     = reqs.code(+)
           and l47.trnsc_type     <![CDATA[<>]]> 'US'
           AND L47.REQST_TYPE  <![CDATA[<>]]> 'PO'
           AND NVL(l47.REQST_DEL , 'N') = 'N'
           AND NVL(l48.REQST_DEL , 'N') = 'N'
           <if test="streq !=null and streq !=''">
              and l47.reqst_no = #{streq}
           </if>
           <if test="smtype !=null and smtype !=''">
              and l47.trnsc_type_dtl = #{smtype}
           </if>
           <if test="sttype !=null and sttype !=''">
              and l47.trnsc_type = #{sttype}
           </if>
<!--            <if test="smtype !=null and smtype !=''"> -->
<!--               and l47.REQST_TYPE_DTL = #{smtype} -->
<!--            </if> -->
<!--            <if test="sttype !=null and sttype !=''"> -->
<!--               and l47.REQST_TYPE = #{sttype} -->
<!--            </if> -->
           <if test="flocation !=null and flocation !=''">
              and l47.rciv_cdc_rdc = #{flocation}
           </if>
           <if test="tlocation !=null and tlocation !=''">
              and l47.reqst_cdc_rdc = #{tlocation}
           </if>
           <if test="smvpath !=null and smvpath !=''">
              and l47.PRIDIC_FRQNCY = #{smvpath}
           </if>
           <if test="sam !=null and sam !=''">
              and l47.PRIDIC_FRQNCY = #{sam}
           </if>
           <if test="crtsdt !=null and crtsdt !=''">
              and to_char(l47.reqst_crt_dt , 'yyyymmdd') <![CDATA[>=]]> to_char(to_date(#{crtsdt},'dd/mm/yyyy'),'yyyymmdd')
           </if>
           <if test="crtedt !=null and crtedt !=''">
              and to_char(l47.reqst_crt_dt , 'yyyymmdd') <![CDATA[<=]]> to_char(to_date(#{crtedt},'dd/mm/yyyy'),'yyyymmdd')
           </if>
            <if test="reqsdt !=null and reqsdt !=''">
              and to_char(l47.reqst_require_dt , 'yyyymmdd') <![CDATA[>=]]> to_char(to_date(#{reqsdt},'dd/mm/yyyy'),'yyyymmdd')
           </if>
           <if test="reqedt !=null and reqedt !=''">
              and to_char(l47.reqst_require_dt , 'yyyymmdd') <![CDATA[<=]]> to_char(to_date(#{reqedt},'dd/mm/yyyy'),'yyyymmdd')
           </if>
           <if test="sstatus !=null and sstatus !=''">
              and l47.reqst_stus = #{sstatus}
           </if>
           ORDER by l47.CRT_DT desc
    </select> 
  
    <insert id="insStockMovement" parameterType="Map">
        MERGE INTO LOG0048D A
             USING DUAL
                ON (A.REQST_NO = #{reqno} and REQST_NO_ITM = #{resnoitm})
            WHEN MATCHED THEN
                UPDATE SET 
                       A.REQST_QTY = #{rqty}
                     , A.UOM       = #{uom}
                     , A.CRT_USER_ID = #{userId}
                     , A.CRT_DT      = SYSDATE
            WHEN NOT MATCHED THEN 
                INSERT ( REQST_NO, REQST_NO_ITM
                        ,ITM_CODE, ITM_NAME, REQST_QTY, UOM, CRT_USER_ID, CRT_DT)
                VALUES ( #{reqno} , (select decode(count(reqst_no_itm) , 0 , 1 , max(reqst_no_itm +1)) from log0048d where REQST_NO = #{reqno})
                        ,#{itmcd} , #{itmname}, #{rqty} ,#{uom} , #{userId}       , SYSDATE)
    </insert> 
    
    <update id="insStockMovementHead" parameterType="Map">
        MERGE INTO LOG0047M  a
             USING dual
                on (a.REQST_NO=#{reqno}) 
              WHEN MATCHED THEN
                   UPDATE SET
                          a.REQST_CRT_DT    =   to_date(#{reqcrtdate}|| to_char(sysdate , 'hh24miss') , 'dd/mm/yyyyhh24miss') 
                       ,  a.DOC_HDER_TXT    =   #{dochdertxt}                                                                 
                       ,  a.CRT_USER_ID     =   #{userId}                                                                     
                       ,  a.CRT_DT          =   SYSDATE 
              WHEN NOT MATCHED THEN
                       INSERT (REQST_NO,
                              TRNSC_TYPE,
                              TRNSC_TYPE_DTL,
                              PRIDIC_FRQNCY,
                              REQST_CRT_DT,
                              REQST_REQUIRE_DT,
                              DOC_HDER_TXT,
                              RCIV_CDC_RDC,
                              REQST_CDC_RDC,
                              REQST_STUS,
                              CRT_USER_ID,
			                  CRT_DT,
			                  REQST_TYPE,
			                  REQST_TYPE_DTL
                              )
                            VALUES (  #{reqno}
                                    , #{sttype}
                                    , #{smtype}
                                    , #{pridic}
                                    , SYSDATE
                                    , to_date(#{reqcrtdate}|| to_char(sysdate , 'hh24miss') , 'dd/mm/yyyyhh24miss')
                                    , #{dochdertxt}
                                    , #{flocation}
                                    , #{tlocation}
                                    , 'O'
                                    , #{userId}
					                , SYSDATE
                                    , #{sttype}
                                    , #{smtype}
                                    )
    </update>
    
    <select id="selectStockMovementNoList" parameterType="Map" resultType="egovMap">
        SELECT REQST_NO CODE_ID , REQST_NO CODE_NAME FROM log0047m where reqst_no in (select reqst_no from log0048d) AND SUBSTR(REQST_NO , 0,3) <![CDATA[<>]]> 'STO' AND NVL(REQST_DEL , 'N') = 'N'  ORDER BY CRT_DT DESC
    </select>
    
    <select id="selectDeliveryNoList" parameterType="Map" resultType="egovMap">
        SELECT DELVRY_NO CODE_ID , DELVRY_NO CODE_NAME FROM log0054m  where nvl(delvry_gi_cmplt , 'N') <![CDATA[<>]]> 'Y' ORDER BY CRT_DT DESC
    </select>
    
    <select id="selectStockMovementHead" parameterType="String" resultType="egovMap">
        SELECT REQST_NO REQNO , TRNSC_TYPE TRNTYPE , TRNSC_TYPE_DTL TRNDTL , PRIDIC_FRQNCY PRIFR , TO_CHAR(REQST_CRT_DT , 'DD/MM/YYYY') REQCRTDT
             , DOC_HDER_TXT DOCTXT , RCIV_CDC_RDC RCIVCR , REQST_CDC_RDC REQCR, REQST_STUS REQST
          FROM LOG0047M
         WHERE REQST_NO = #{param}
    </select>
    <select id="selectStockMovementItem" parameterType="String" resultType="egovMap">
        SELECT l48.REQST_NO_ITM resnoitm ,s26.STK_ID itmid, l48.ITM_CODE itmcd, l48.ITM_NAME itmname 
             , l48.REQST_QTY rqty 
             , l48.UOM uom
             , l55.delvry_no delyno 
             , l55.delvry_qty delyqty
          FROM LOG0048D l48, sys0026m s26 , 
               log0055d l55             
         WHERE l48.ITM_CODE = s26.STK_CODE
           AND l48.ITM_CODE = l55.ITM_CODE(+)
           AND l48.REQST_NO = l55.REQST_NO(+)
           AND NVL(l48.REQST_DEL , 'N') = 'N'
           AND l48.REQST_NO = #{param}           
         ORDER BY l48.REQST_NO_ITM 
    </select>
    
    <select id="selectStockMovementToItem" parameterType="Map" resultType="egovMap">
       select rownum rnum
             , l56.loc_id locid, l56.stk_code stkcd, dbms_lob.substr (l56.stk_desc, 4000) stknm
             , l56.stk_type_id typeid , s15.code_name typenm
             , l56.stk_ctgry_id cateid , s11.code_name catenm
             , (l56.qty - nvl(l75.bookqty , 0)) as qty , s26.stk_id stkid
             , (SELECT CODE_ID FROM SYS0013M WHERE CODE_ID=s26.UOM) uom
             , s26.SERIAL_CHK 
          from log0056m l56 , sys0026m s26
             ,(select loc_id , itm_code , sum(nvl(reqst_qty , 0)) - sum(nvl(mov_qty , 0)) as bookqty from log0075m where nvl(final_cmplt , 'N') <![CDATA[<>]]> 'Y'
                group by loc_id , itm_code ) l75
             , (select * from sys0013m where code_master_id = 15) s15
             , (select * from sys0013m where code_master_id = 11) s11 
         where 1 = 1
           and l56.stk_code = l75.itm_code(+)
           and l56.loc_id = l75.loc_id(+)
           and l56.stk_type_id = s15.code_id
           and l56.stk_ctgry_id = s11.code_id
           and l56.stk_code = s26.stk_code
           and l56.loc_id = #{toloc}
           <if test="ctype != null and ctype !=''">
              and l56.stk_type_id in
               <foreach item="item" collection="ctype" index="index" open="(" separator="," close=")">
               #{item}
               </foreach>
           </if>
           <if test="catetype != null and catetype !=''">
              and l56.stk_ctgry_id in
              <foreach item="item" collection="catetype" index="index" open="(" separator="," close=")">
               #{item}
               </foreach>
           </if>
    </select>
    
  <select id="selectStockMovementItemDeliveryQty" parameterType="Map" resultType="egovMap">
        select qty 
          from log0056m l56 
         where 1 = 1
           and l56.loc_id = #{toloc}
           and l56.stk_code = #{itmcd}
    </select>
    <select id="selectDeliveryStockMovementSeq" resultType="String">
        SELECT  'DVR'||TO_CHAR(SYSTIMESTAMP , 'yyyymmddhh24missff') FROM  DUAL
    </select>
<!--       
    <select id="selectDeliveryNobyReqsNo" parameterType="Map" resultType="String">
        select decode(count(1) , 0 , '0' ,max( DELVRY_NO)) dno from log0054m where reqst_no = #{reqno}
    </select>
    
    
    -->
    <insert id="insertDeliveryStockMovement" parameterType="Map">
        MERGE INTO LOG0054M A
             USING DUAL
                ON (DELVRY_NO = #{delno}) 
              WHEN MATCHED THEN
                     UPDATE SET
                                A.DOC_HDER_TXT= #{headtxt}
                              , A.UPD_USER_ID = #{userId}
                              , A.UPD_DT      = SYSDATE
              WHEN NOT MATCHED THEN              
                     INSERT (
                                DELVRY_NO
                              , TRNSC_TYPE
                              , TRNSC_TYPE_DTL
                              , DELVRY_DT
                              , CRT_USER_ID
                              , CRT_DT
                            ) VALUES(
                                #{delno}
                              , #{ttype}
                              , #{mtype}
                              , to_char(sysdate , 'yyyymmdd')
                              , #{userId}
                              , SYSDATE
                            )
    </insert>
    <insert id="insertDeliveryStockMovementDetail" parameterType="Map">
        MERGE INTO LOG0055D A
             USING DUAL
               ON (DELVRY_NO = #{delno} and ITM_CODE = #{itmcd} and REQST_NO = #{reqstno})
               WHEN MATCHED THEN
                     UPDATE SET
                                A.DELVRY_QTY  = #{indelyqty}
                              , A.REQST_NO_ITM = #{reqitmno}
                              , A.UPD_USER_ID = #{userId}
                              , A.UPD_DT      = SYSDATE
               WHEN NOT MATCHED THEN    
                     INSERT (  DELVRY_NO, DELVRY_NO_ITM
                             , ITM_CODE, ITM_NAME, DELVRY_QTY, REQST_NO, CRT_USER_ID, CRT_DT , REQST_NO_ITM)
                     VALUES (  #{delno} , (select decode(count(DELVRY_NO_ITM) , 0 , 1 , max(DELVRY_NO_ITM +1)) from log0055d where DELVRY_NO = #{delno})
                             , #{itmcd} , #{itmname}, #{indelyqty} , #{reqstno} , ${userId} , SYSDATE , #{reqitmno})
    </insert>
    <delete id="deleteDeliveryStockMovementItm" parameterType="Map">
        delete from LOG0055D where DELVRY_NO = #{delyno} and ITM_CODE = #{itmcd}
    </delete>
    <delete id="deleteStockMovementItm" parameterType="Map">
        delete from LOG0048D where REQST_NO = #{reqno} and REQST_NO_ITM = #{resnoitm}
    </delete>
    
    <select id="selectStockMovementDeliveryList" parameterType="Map" resultType="egovMap">
        SELECT Rownum rnum , T.* FROM (
        select 
               l47.reqst_no reqstno
             , l55.delvry_no delyno
             , l55.delvry_no_itm 
             , l47.trnsc_type ttype
             , tran.code_name     ttext
             , l47.trnsc_type_dtl mtype
             , trand.code_name    mtext
             , l47.ref_doc_no docno
             , l54.delvry_dt delydt
             , l54.delvry_gi_dt gidt
             , l54.delvry_gr_dt grdt
             , l48.itm_code itmcd
             , l48.itm_name itmname
             , l55.delvry_qty delyqty
             , l48.uom uom
             , uomt.code_name uomnm
             , l47.RCIV_CDC_RDC rcvloc
             , s28c.wh_loc_code rcvlocnm
             , DBMS_LOB.SUBSTR (s28c.wh_loc_desc, 4000) rcvlocdesc
             , l47.reqst_cdc_rdc reqloc
             , s28q.wh_loc_code  reqlocnm
             , DBMS_LOB.SUBSTR (s28q.wh_loc_desc, 4000) reqlocdesc
             , l48.reqst_no_itm ritmno
             , nvl(l55.rcipt_qty , 0) rciptqty
             , NVL (L54.DELVRY_GR_CMPLT , 'N') grcmplt
             , NVL (L54.DELVRY_GI_CMPLT , 'N') gicmplt
          from log0047m l47
             , log0048d l48
             , log0054m l54
             , log0055d l55
             , (select * from sys0013m where code_master_id = 306) tran
             , (select * from sys0013m where code_master_id = 308) trand
             , (select * from sys0013m where code_master_id = 42) uomt
             , sys0028m s28c
             , sys0028m s28q
         where 1 = 1
           and l47.trnsc_type     = tran.code
           and l47.trnsc_type_dtl = trand.code
           and l47.rciv_cdc_rdc   = s28c.wh_loc_id(+)
           and l47.reqst_cdc_rdc  = s28q.wh_loc_id(+)
           and l48.uom            = uomt.code_id
           and l48.itm_code  = l55.itm_code
           and l54.delvry_no = l55.delvry_no
           and l48.reqst_no  = l55.reqst_no
           and l47.reqst_no  = l48.reqst_no
           AND L47.REQST_TYPE  <![CDATA[<>]]> 'PO'
           <if test="reqstno != null and reqstno != ''">
              and l47.reqst_no  = #{reqstno}
           </if>
           <if test="seldelno != null and seldelno != ''">
              and l54.delvry_no  = #{seldelno}
           </if>
           <if test="smtype !=null and smtype !=''">
              and l47.trnsc_type_dtl = #{smtype}
           </if>
           <if test="sttype !=null and sttype !=''">
              and l47.trnsc_type = #{sttype}
           </if>
<!--            <if test="smtype !=null and smtype !=''"> -->
<!--               and l47.REQST_TYPE_DTL = #{smtype} -->
<!--            </if> -->
<!--            <if test="sttype !=null and sttype !=''"> -->
<!--               and l47.REQST_TYPE = #{sttype} -->
<!--            </if> -->
           <if test="flocation !=null and flocation !=''">
              and l47.rciv_cdc_rdc = #{flocation}
           </if>
           <if test="tlocation !=null and tlocation !=''">
              and l47.reqst_cdc_rdc = #{tlocation}
           </if>
           <if test="smvpath !=null and smvpath !=''">
              and l47.PRIDIC_FRQNCY = #{smvpath}
           </if>
           <if test="crtsdt !=null and crtsdt !=''">
              and l54.DELVRY_DT <![CDATA[>=]]> to_char(to_date(#{crtsdt},'dd/mm/yyyy'),'yyyymmdd')
           </if>
           <if test="crtedt !=null and crtedt !=''">
              and l54.DELVRY_DT <![CDATA[<=]]> to_char(to_date(#{crtedt},'dd/mm/yyyy'),'yyyymmdd')
           </if>
            <if test="reqsdt !=null and reqsdt !=''">
              and to_char(l47.reqst_require_dt , 'yyyymmdd') <![CDATA[>=]]> to_char(to_date(#{reqsdt},'dd/mm/yyyy'),'yyyymmdd')
           </if>
           <if test="reqedt !=null and reqedt !=''">
              and to_char(l47.reqst_require_dt , 'yyyymmdd') <![CDATA[<=]]> to_char(to_date(#{reqedt},'dd/mm/yyyy'),'yyyymmdd')
           </if>
           <if test="gtype !=null and gtype =='receipt'">
              and L54.DELVRY_GI_CMPLT <![CDATA[=]]> 'Y'
           </if>
           <if test="gtype !=null and gtype =='receiptList'">
              and L54.DELVRY_GR_CMPLT <![CDATA[=]]> 'Y'
           </if>
           ORDER BY l54.delvry_no desc
           ) T
    </select>
    <resultMap id="MOVEDATA" type="egovMap" />
    <select id="StockMovementIssue"  statementType="CALLABLE" parameterType="Map"> 
             { call SP_LOGISTIC_DELIVERY
                     (#{parray , mode=IN,typeHandler=com.coway.trust.util.OracleCallBackHandler}, #{gtype}, #{doctext}, #{gipfdate}, #{giptdate}, #{prgnm}, #{refdocno}, #{salesorder}, #{userId} , #{rdata , mode=OUT , jdbcType=VARCHAR , javaType=String , resultMap=MOVEDATA} )
             } 
     </select>
          <resultMap id="MoveCANCLEDATA" type="egovMap" />
     <select id="StockMovementCancelIssue"  statementType="CALLABLE" parameterType="Map"> 
             { call SP_LOGISTIC_DELIVERY_CANCEL
                     (#{parray , mode=IN,typeHandler=com.coway.trust.util.OracleCallBackHandler}, #{gtype}, #{doctext}, #{gipfdate}, #{giptdate}, #{prgnm}, #{refdocno}, #{salesorder}, #{userId} , #{rdata , mode=OUT , jdbcType=VARCHAR , javaType=String , resultMap=MoveCANCLEDATA} )
             } 
     </select>
     <select id="selectStockMovementSerial" parameterType="Map" resultType="Map">
         select max(serial_no)  serial_no , max(matnr) stkcode , max(stkdesc) stkdesc , max(l62cnt) l62cnt , max(l61cnt) l61cnt , max(l63cnt) l63cnt
          from (  
            SELECT serial_no , matnr , stk_desc stkdesc , count(1) l62cnt , 0 l61cnt , 0 l63cnt
              FROM LOG0062M l62 , 
                   sys0026m s26 
             WHERE l62.matnr = s26.stk_code
                and l62.SERIAL_NO =  #{serial}
              group by serial_no , matnr , stk_desc
             union 
            select l61.serial_no , '' matnr , '' stkdesc , 0 l62cnt ,  count(1) l61cnt ,0 l63cnt     
              from log0061d l61 
              WHERE l61.SERIAL_NO =  #{serial}
              group by l61.serial_no
             union 
            select l63.serial_no , '' matnr , '' stkdesc , 0 l62cnt ,  0 l61cnt ,  count(1) l63cnt  
              from log0063d l63 
              WHERE l63.SERIAL_NO =  #{serial}
              <if test='locid != null and locid !=""'>
               and l63.loc_id <![CDATA[<>]]> #{locid} 
              </if>
             group by l63.serial_no
         )
     </select>
     <insert id="insertMovementSerial" parameterType="Map">
     INSERT INTO LOG0061D (
                                        SERIAL_NO,
                                        DELVRY_NO,
                                        PDELVRY_NO_ITM,
                                        TTYPE,
                                        CRT_DT,
                                        CRT_USER_ID
                                        )
                          SELECT
                                   #{serial},
                                   #{delno},
                                   DELVRY_NO_ITM,
                                    (SELECT TRNSC_TYPE FROM LOG0047M WHERE REQST_NO= #{reqstno}) ,
                                    SYSDATE,
                                    #{userId}
                                    FROM LOG0055D
                                    WHERE 1=1
                                              AND DELVRY_NO= #{delno}
                                              AND ITM_CODE =#{itmcd}
                                              AND REQST_NO =#{reqstno}                                      
                                                       
     </insert>
     <select id="selectNewDeliveryNoITM" parameterType="Map" resultType="egovMap">
            SELECT
                DELVRY_NO,
                DELVRY_NO_ITM,
                ITM_CODE,
                REQST_NO
            FROM LOG0055D
            WHERE 1=1
                        AND DELVRY_NO = #{delno}
                        AND ITM_CODE  =  #{itmcd}
                        AND REQST_NO  =  #{reqstno}
     </select>
     
     <select id="selectStockMovementDeliverySerial" parameterType="Map" resultType="egovMap">
             SELECT 
                        l55d.DELVRY_NO,
                        l55d.DELVRY_NO_ITM,
                        l55d.ITM_CODE,
                        l55d.ITM_NAME,
                        l61d.SERIAL_NO,
                        l61d.DELVRY_NO DELVRY_NO2,
                        l61d.PDELVRY_NO_ITM,
                        l61d.TTYPE,
                        TO_CHAR(l61d.CRT_DT, 'DD/MM/YYYY') CRT_DT,
                        l61d.CRT_USER_ID
            FROM LOG0055D l55d, LOG0061D l61d
                        WHERE l55d.DELVRY_NO = l61d.DELVRY_NO
                                AND  l55d.DELVRY_NO_ITM = l61d.PDELVRY_NO_ITM
                                AND  l61d.DELVRY_NO = #{delno}
                                ORDER BY l61d.PDELVRY_NO_ITM, l61d.SERIAL_NO
     </select>
         <select id="selectStockMovementMtrDocInfoList"  parameterType="Map" resultType="egovMap">
        SELECT
                    lg59m.MATRL_DOC_NO,
                    lg60d.MATRL_DOC_ITM,
                    lg59m.TRNSC_TYPE_CODE,
                    tran.CODE_NAME,
                    lg60d.INVNTRY_MOV_TYPE,
                    tranD.CODE_NAME,
                    lg59m.MATRL_DOC_YEAR,
                    lg60d.AUTO_CRT_ITM,
                    lg60d.DEBT_CRDIT_INDICT,
                    lg60d.MATRL_NO,
                    lg48d.ITM_NAME,
                    lg60d.QTY,
                    lg48d.UOM,
                    uomt.CODE_NAME uomnm,
                    lg47m.REQST_CDC_RDC rqloc,
                    sy28rq.WH_LOC_CODE  rqloccode,
                    sy28rq.WH_LOC_ID rqlocid,
                    sy28rq.WH_LOC_DESC rqlocnm,
                    lg60d.DELVRY_NO,
                    lg48d.ITM_CODE,
                    lg60d.STOCK_TRNSFR_REQST,
                    lg47m.RCIV_CDC_RDC rcloc,
                    sy28rc.WH_LOC_CODE  rcloccode,
                    sy28rc.WH_LOC_ID rclocid,
                    sy28rc.WH_LOC_DESC rclocnm
            FROM LOG0059M lg59m JOIN LOG0060D lg60d
                    ON (lg59m.MATRL_DOC_NO = lg60d.MATRL_DOC_NO) 
                JOIN LOG0047M lg47m
                    ON (LG60D.STOCK_TRNSFR_REQST = lg47m.REQST_NO)
                JOIN LOG0048D lg48d 
                    ON (LG60D.STOCK_TRNSFR_REQST = lg48d.REQST_NO 
                          AND LG60D.DELVRY_ITM_NO = lg48d.REQST_NO_ITM
                          AND lg60d.MATRL_NO = lg48d.ITM_CODE)
                JOIN (SELECT * FROM SYS0013M WHERE CODE_MASTER_ID = 306) tran
                    ON (lg47m.TRNSC_TYPE = tran.CODE)
                JOIN (SELECT * FROM SYS0013M WHERE CODE_MASTER_ID = 308) tranD
                    ON (lg47m.TRNSC_TYPE_DTL = tranD.CODE)
                JOIN (SELECT * FROM SYS0013M WHERE CODE_MASTER_ID = 42) uomt
                    ON (lg48d.UOM = uomt.CODE_ID)
                JOIN SYS0028M sy28rq
                    ON (lg47m.REQST_CDC_RDC = sy28rq.WH_LOC_ID)
                JOIN SYS0028M sy28rc
                    ON (lg47m.RCIV_CDC_RDC = sy28rc.WH_LOC_ID)
            WHERE lg60d.STOCK_TRNSFR_REQST= #{reqstno}              
            ORDER BY lg59m.MATRL_DOC_NO, lg60d.MATRL_DOC_ITM
     </select>
     
     <update id="updateRequestMovement" parameterType="String">
        UPDATE LOG0047M 
           SET REQST_STUS = 'P'
         WHERE REQST_NO = #{param}
     </update>
     <insert id="insertStockBooking" parameterType="Map">
        INSERT INTO LOG0075M (REQST_NO, SEQ, LOC_ID, TRNSC_TYPE_DTL, ITM_CODE, REQST_QTY, REQST_CRT_DT, CRT_DT)
                    SELECT L47.REQST_NO
                         , L48.REQST_NO_ITM
                         , L47.REQST_CDC_RDC 
                         , L47.TRNSC_TYPE_DTL 
                         , L48.ITM_CODE 
                         , L48.REQST_QTY 
                         , REQST_CRT_DT 
                         , SYSDATE
                      FROM LOG0047M L47 , LOG0048D L48
                     WHERE 1 = 1
                       AND L47.REQST_NO = L48.REQST_NO
                       AND L47.REQST_NO = #{reqno}
     </insert>
     
     
  
</mapper>