<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.coway.trust.biz.logistics.inbound.impl.InboundMapper">

	<select id="inBoundList" parameterType="map" resultType="EgovMap">
		<!-- SELECT
					L83.IMP_NO,
					L83.INV_NO,
					L83.BL_NO,
					L83.PLANT,
					L83.ACC_NO,
					L83.INV_CRT_DT,
					L83.SHIP_DT,
					L83.GR_DT,
					L83.AP_CMPLT,
					L83.GR_CMPLT,
					L83.DEL_FLAG,
					L84.BL_NO,
					L84.INV_NO,
					L84.ITM_SEQ,
					L84.PUR_DOC_NO,
					L84.PUR_ITM_QTY,
					L84.MATRL_NO,
					L84.FREE_ITM,
					L84.IMPORT_CD,
					L84.QTY,
					L84.UOM,
					L84.DEL_FLAG DEL_FLAG_D
	                ,S28.WH_LOC_ID,  
			        S28.WH_LOC_CODE,
			        S28.WH_LOC_DESC, 
			        S28.SL_PLANT 
			FROM  LOG0083M L83, 
			          LOG0084D L84
			       ,SYS0028M S28 
			WHERE 1=1
					AND L83.INV_NO=L84.INV_NO
					AND L83.BL_NO=L84.BL_NO
			        AND L83.PLANT= S28.PLANT 
					AND L83.DEL_FLAG IS NULL
					AND L84.DEL_FLAG IS NULL
					<if test="invno !=null and invno !=''">
						AND L83.INV_NO LIKE #{invno}||'%'
					</if>
					<if test="invno !=null and invno !=''">
						AND L83.BL_NO LIKE #{blno}||'%'
					</if>
					<if test="location !=null and location !=''">
				  AND S28.WH_LOC_ID = #{location} 
						AND L83.PLANT = #{location}
					</if>
 		<if test="status eq 'N'.toString()">
						AND L83.GR_CMPLT IS NULL
					</if>
					<if test="status eq 'D'.toString()">
						AND L83.GR_CMPLT IS NOT NULL
					</if> 
					<if test="blsdt !=null and blsdt !=''">
						AND L83.SHIP_DT  <![CDATA[>=]]>
						TO_CHAR(TO_DATE(#{blsdt},'dd/mm/yyyy'),'yyyymmdd')
					</if>
					<if test="bledt !=null and bledt !=''">
						AND L83.SHIP_DT <![CDATA[<=]]>
						TO_CHAR(TO_DATE(#{bledt},'dd/mm/yyyy'),'yyyymmdd')
					</if>
					<if test="grsdt !=null and grsdt !=''">
						AND L83.GR_DT <![CDATA[>=]]>
						TO_CHAR(TO_DATE(#{grsdt},'dd/mm/yyyy'),'yyyymmdd')
					</if>
					<if test="gredt !=null and gredt !=''">
						AND L83.GR_DT  <![CDATA[<=]]>
						TO_CHAR(TO_DATE(#{gredt},'dd/mm/yyyy'),'yyyymmdd')
					</if>
					ORDER BY L83.IMP_NO, L83.INV_NO, L83.BL_NO -->
					
<![CDATA[					
                     SELECT 
                               S28.WH_LOC_ID
                              ,S28.WH_LOC_CODE
                              ,S28.WH_LOC_DESC
                              ,L83.PLANT
                              ,L83.BL_NO                              
                              ,L84.ITM_SEQ
                              ,L84.MATRL_NO
                              ,S26.STK_TYPE_ID
                              ,(SELECT CODE_NAME FROM SYS0013M WHERE  CODE_ID=S26.STK_TYPE_ID) TYPENAME
                              ,S26.STK_CTGRY_ID
                              ,(SELECT CODE_NAME FROM SYS0013M WHERE  CODE_ID=S26.STK_CTGRY_ID) CTGRYNAME
                              ,S26.STK_DESC STKDESC
                              ,S26.STK_ID STKID
                              ,L84.QTY
                              ,NVL (REQ.REQST_QTY, 0) REQED_QTY
                              , (L84.QTY - NVL (REQ.REQST_QTY, 0) ) AVRQTY
                              ,L84.UOM
                              ,(SELECT CODE_NAME FROM SYS0013M WHERE CODE_ID=L84.UOM) UOMNM
                      FROM LOG0083M L83
                              ,LOG0084D L84
                              ,SYS0026M S26
                              ,SYS0028M S28
                              , (SELECT L47.REQST_NO
                                           ,L48.ITM_CODE
                                           ,L48.REQST_QTY
                                           ,L48.BL_NO
                                 FROM LOG0047M L47, 
                                         LOG0048D L48
                                 WHERE L47.REQST_NO = L48.REQST_NO
                                          AND NVL (L47.REQST_DEL, 'N') <> 'Y') REQ
                     WHERE L83.AP_CMPLT = 'X'
                           AND L83.GR_CMPLT = 'X'
                           AND NVL (L83.DEL_FLAG, 'Y') <> 'X'
                           AND S28.WH_LOC_GB='06'
                           AND L83.BL_NO = L84.BL_NO
                           AND L83.INV_NO = L84.INV_NO
                           AND L84.MATRL_NO = S26.STK_CODE
                           AND L83.PLANT=S28.PLANT
                           AND L84.BL_NO = REQ.BL_NO(+)
                           AND L84.MATRL_NO = REQ.ITM_CODE(+)
                       ORDER BY L83.BL_NO,L84.ITM_SEQ
]]>					   
	</select>
	
	<select id="inboundLocation" parameterType="map" resultType="EgovMap">
		SELECT
	             WH_LOC_ID CODE_ID
		        ,WH_LOC_CODE
		        ,WH_LOC_DESC CODE_NAME
	    FROM SYS0028M
	    WHERE WH_LOC_GB IN    
		      <choose>
		          <when test="groupCode eq 'port'.toString()">
		          ('06')   
		          </when>
		          <otherwise>
		          ('01', '05')     
		          </otherwise>
		      </choose>
	      ORDER BY WH_LOC_ID
	</select>

 <select id="receiptList" parameterType="Map" resultType="EgovMap">
        SELECT Rownum rnum , T.* FROM (
        select 
               l47.reqst_no reqstno
             , l55.delvry_no delyno
             , l55.delvry_no_itm 
             , l47.trnsc_type ttype
             , tran.code_name     ttext
             , l47.trnsc_type_dtl mtype
             , trand.code_name    mtext
             , l47.ref_doc_no docno
             , l54.delvry_dt delydt
             , l54.delvry_gi_dt gidt
             , l54.delvry_gr_dt grdt
             , l48.itm_code itmcd
             , l48.itm_name itmname
             , l55.delvry_qty delyqty
             , l48.uom uom
             , uomt.code_name uomnm
             , l47.RCIV_CDC_RDC rcvloc
             , s28c.wh_loc_code rcvlocnm
             , DBMS_LOB.SUBSTR (s28c.wh_loc_desc, 4000) rcvlocdesc
             , l47.reqst_cdc_rdc reqloc
             , s28q.wh_loc_code  reqlocnm
             , DBMS_LOB.SUBSTR (s28q.wh_loc_desc, 4000) reqlocdesc
             , l48.reqst_no_itm ritmno
             , nvl(l55.rcipt_qty , 0) rciptqty
             , NVL (L54.DELVRY_GR_CMPLT , 'N') grcmplt
             , NVL (L54.DELVRY_GI_CMPLT , 'N') gicmplt
             , S26.SERIAL_CHK serialchk
          from log0047m l47
             , log0048d l48
             , log0054m l54
             , log0055d l55
             , (select * from sys0013m where code_master_id = 306) tran
             , (select * from sys0013m where code_master_id = 308) trand
             , (select * from sys0013m where code_master_id = 42) uomt
             , sys0028m s28c
             , sys0028m s28q
             , SYS0026M S26
         where 1 = 1
           and l47.trnsc_type     = tran.code
           and l47.trnsc_type_dtl = trand.code
           and l47.rciv_cdc_rdc   = s28c.wh_loc_id(+)
           and l47.reqst_cdc_rdc  = s28q.wh_loc_id(+)
           and l48.uom            = uomt.code_id
           and l48.itm_code  = l55.itm_code
           and l54.delvry_no = l55.delvry_no
           and l48.reqst_no  = l55.reqst_no
           and l47.reqst_no  = l48.reqst_no
           AND S26.STK_code  = l55.itm_code
           <if test="reqstno != null and reqstno != ''">
              and l47.reqst_no  = #{reqstno}
           </if>
           <if test="seldelno != null and seldelno != ''">
              and l54.delvry_no  = #{seldelno}
           </if>
           <if test="smtype !=null and smtype !=''">
              and l47.REQST_TYPE_DTL = #{smtype}
           </if>
           <if test="sttype !=null and sttype !=''">
              and l47.REQST_TYPE = #{sttype}
           </if>
           <if test="flocation !=null and flocation !=''">
              and l47.rciv_cdc_rdc = #{flocation}
           </if>
           <if test="tlocation !=null and tlocation !=''">
              and l47.reqst_cdc_rdc = #{tlocation}
           </if>
           <if test="smvpath !=null and smvpath !=''">
              and l47.PRIDIC_FRQNCY = #{smvpath}
           </if>
           <if test="crtsdt !=null and crtsdt !=''">
              and l55.DELVRY_DT <![CDATA[>=]]> to_char(to_date(#{crtsdt},'dd/mm/yyyy'),'yyyymmdd')
           </if>
           <if test="crtedt !=null and crtedt !=''">
              and l55.DELVRY_DT <![CDATA[<=]]> to_char(to_date(#{crtedt},'dd/mm/yyyy'),'yyyymmdd')
           </if>
           <if test="gtype !=null and gtype =='receipt'">
              and L54.DELVRY_GI_CMPLT <![CDATA[=]]> 'Y'
           </if>
           <if test="gtype !=null and gtype =='receiptList'">
              and L54.DELVRY_GR_CMPLT <![CDATA[=]]> 'Y'
           </if>
           ORDER BY l54.delvry_no desc
           ) T
    </select>
    
    <select id="selectStockTransferSeq" resultType="String">
        SELECT  TO_CHAR(SYSTIMESTAMP , 'yyyymmddhh24missff') FROM  DUAL
    </select>

    <update id="CreateReqM" parameterType="Map">
        MERGE INTO LOG0047M  a
             USING dual
                on (a.REQST_NO=#{reqNo}) 
              WHEN MATCHED THEN
                   UPDATE SET
                          a.REQST_CRT_DT    =   to_date(#{reqcrtdate}|| to_char(sysdate , 'hh24miss') , 'dd/mm/yyyyhh24miss') 
                       ,  a.CRT_USER_ID     =   #{userId}                                                                     
                       ,  a.CRT_DT          =   SYSDATE 
              WHEN NOT MATCHED THEN
                       INSERT (
                              REQST_NO,
                              TRNSC_TYPE,
                              TRNSC_TYPE_DTL,
                              PRIDIC_FRQNCY,
                              REQST_CRT_DT,
                              REQST_REQUIRE_DT,
                              RCIV_CDC_RDC,
                              REQST_CDC_RDC,
                              REQST_STUS,
                              CRT_USER_ID,
                              CRT_DT,
                              REQST_TYPE,
                              REQST_TYPE_DTL
                              )
                            VALUES (  
                                   #{reqNo}
                                    , 'UM'
                                    , 'UM03'
                                    , 'M'
                                    , SYSDATE
                                    , SYSDATE
                                    , #{flocation}
                                    , #{tlocation}
                                    , 'O'
                                    , #{userId}
                                    , SYSDATE
                                    , 'PO'
                                    ,  'PO03'
                                    )
    </update>

    <insert id="CreateReqD" parameterType="Map">
        MERGE INTO LOG0048D A
             USING DUAL
                ON (A.REQST_NO = #{reqNo} and REQST_NO_ITM = #{resnoitm})
            WHEN MATCHED THEN
                UPDATE SET 
                       A.REQST_QTY = #{reqQty}
                     , A.UOM       = #{uom}
                     , A.CRT_USER_ID = #{userId}
                     , A.CRT_DT      = SYSDATE
            WHEN NOT MATCHED THEN 
                INSERT ( 
                            REQST_NO, 
                            REQST_NO_ITM,
                            ITM_CODE, 
                            ITM_NAME, 
                            REQST_QTY, 
                            UOM, 
                            CRT_USER_ID, 
                            CRT_DT,
                            BL_NO
                            )
                VALUES ( 
                            #{reqNo} , 
                            (SELECT DECODE(COUNT(REQST_NO_ITM) , 0 , 1 , MAX(REQST_NO_ITM +1)) FROM LOG0048D WHERE REQST_NO = #{reqNo})
                            ,#{matrlNo} , 
                            #{stkdesc}, 
                            #{reqQty} ,
                            #{uom} , 
                            #{userId} ,
                             SYSDATE,
                             #{blNo}
                             )
    </insert> 
    
    <update id="updateReqStatus" parameterType="String">
        UPDATE LOG0047M 
           SET REQST_STUS = 'P'
         WHERE REQST_NO = #{param}
     </update>
     <select id="selectDeliverySeq" resultType="String">
        SELECT  'DVR'||TO_CHAR(SYSTIMESTAMP , 'yyyymmddhh24missff') FROM  DUAL
    </select>
    <insert id="CreateDeliveryM" parameterType="Map">
  <!--       MERGE INTO LOG0054M A
             USING DUAL
                ON (DELVRY_NO = #{deliveryNo}) 
              WHEN MATCHED THEN
                     UPDATE SET
                                A.UPD_USER_ID = #{userId}
                              , A.UPD_DT      = SYSDATE
              WHEN NOT MATCHED THEN              
                     INSERT 
                     (
                                DELVRY_NO
                              , TRNSC_TYPE
                              , TRNSC_TYPE_DTL
                              , DELVRY_DT
                              , CRT_USER_ID
                              , CRT_DT
                     )        
                            SELECT 
		                                #{deliveryNo}
		                              , TRNSC_TYPE
		                              , TRNSC_TYPE_DTL
		                              , TO_CHAR(SYSDATE , 'YYYYMMDD')
		                              , #{userId}
		                              , SYSDATE
		                              FROM LOG0047M
                              WHERE REQST_NO= #{reqNo}  -->
                     INSERT INTO LOG0054M
                     (
                                DELVRY_NO
                              , TRNSC_TYPE
                              , TRNSC_TYPE_DTL
                              , DELVRY_DT
                              , CRT_USER_ID
                              , CRT_DT
                     )        
                            SELECT 
		                                #{deliveryNo}
		                              , TRNSC_TYPE
		                              , TRNSC_TYPE_DTL
		                              , TO_CHAR(SYSDATE , 'YYYYMMDD')
		                              , #{userId}
		                              , SYSDATE
		                              FROM LOG0047M
                              WHERE REQST_NO= #{reqNo} 
    </insert>
    <insert id="CreateDeliveryD" parameterType="Map">
<!--         MERGE INTO LOG0055D A
             USING DUAL
               ON (DELVRY_NO = #{deliveryNo} and ITM_CODE = #{matrlNo} and REQST_NO = #{reqNo})
               WHEN MATCHED THEN
                     UPDATE SET
                                A.UPD_USER_ID = #{userId}
                              , A.UPD_DT      = SYSDATE
               WHEN NOT MATCHED THEN    
                     INSERT 
                                ( 
                                DELVRY_NO, 
                                DELVRY_NO_ITM, 
                                ITM_CODE, 
                                ITM_NAME, 
                                DELVRY_QTY, 
                                REQST_NO, 
                                CRT_USER_ID, 
                                CRT_DT
                                )
                     SELECT                       
                                #{deliveryNo} , 
                                (SELECT DECODE(COUNT(DELVRY_NO_ITM) , 0 , 1 , MAX(DELVRY_NO_ITM +1)) FROM LOG0055D WHERE DELVRY_NO = #{deliveryNo}),
                               ITM_CODE , 
                               ITM_NAME, 
                               REQST_QTY , 
                               #{reqNo} , 
                               ${userId} , 
                               SYSDATE
                     FROM LOG0048D
                     WHERE REQST_NO= #{reqNo} 
                         AND ITM_CODE = #{matrlNo}         -->  
                     INSERT  INTO LOG0055D
                                ( 
                                DELVRY_NO, 
                                DELVRY_NO_ITM, 
                                ITM_CODE, 
                                ITM_NAME, 
                                DELVRY_QTY, 
                                REQST_NO, 
                                CRT_USER_ID, 
                                CRT_DT
                                )
                     SELECT                       
                                #{deliveryNo} , 
                                (SELECT DECODE(COUNT(DELVRY_NO_ITM) , 0 , 1 , MAX(DELVRY_NO_ITM +1)) FROM LOG0055D WHERE DELVRY_NO = #{deliveryNo}),
                               ITM_CODE , 
                               ITM_NAME, 
                               REQST_QTY , 
                               #{reqNo} , 
                               ${userId} , 
                               SYSDATE
                     FROM LOG0048D
                     WHERE REQST_NO= #{reqNo} 
                         AND ITM_CODE = #{matrlNo}          
    </insert> 
        <resultMap id="BLISSUE" type="egovMap" />
    <select id="CreateIssue"  statementType="CALLABLE" parameterType="Map"> 
             { call SP_LOGISTIC_DELIVERY
                     (#{parray , mode=IN,typeHandler=com.coway.trust.util.OracleCallBackHandler}, #{gtype}, #{doctext}, #{gipfdate}, #{giptdate}, #{prgnm}, #{refdocno}, #{salesorder}, #{userId} , #{rdata , mode=OUT , jdbcType=VARCHAR , javaType=String , resultMap=BLISSUE} )
             } 
     </select>
<!--      <resultMap id="BLISSUECACELL" type="egovMap" />
     <select id="StockTransferCancelIssue"  statementType="CALLABLE" parameterType="Map"> 
             { call SP_LOGISTIC_DELIVERY_CANCEL
                     (#{parray , mode=IN,typeHandler=com.coway.trust.util.OracleCallBackHandler}, #{gtype}, #{doctext}, #{gipfdate}, #{giptdate}, #{prgnm}, #{refdocno}, #{salesorder}, #{userId} , #{rdata , mode=OUT , jdbcType=VARCHAR , javaType=String , resultMap=BLISSUECACELL} )
             } 
     </select>  -->  
</mapper>

