<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.coway.trust.biz.common.impl.CommonMapper">

	<select id="selectCodeList" parameterType="Map" resultType="egovMap">
		SELECT 
		      CODE_ID , 
		      CODE , 
		      CODE_NAME , 
		      DBMS_LOB.SUBSTR (CODE_DESC, 4000) DESCRIPTION 
		FROM SYS0013M
		WHERE DISAB = 0
		AND CODE_MASTER_ID = #{groupCode}
		ORDER BY CODE_NAME
	</select>
	
	<select id="selectI18NList" parameterType="Map" resultType="egovMap">
            SELECT * FROM SYS_I18N
    </select>
    
  <select id="getAccountCodeList" parameterType="Map" resultType="egovMap">
        SELECT 
              ACC_ID AS ACC_ID 
              ,ACC_CODE AS ACC_CODE 
              ,ACC_DESC AS ACC_DESC 
              ,ACC_CRT_USER_ID AS ACC_CRT_USER_ID 
              ,ACC_UPD_USER_ID AS ACC_UPD_USER_ID 
              ,ACC_STUS_ID AS ACC_STUS_ID 
              ,IS_PAY_CASH AS IS_PAY_CASH 
              ,IS_PAY_ONLINE AS IS_PAY_ONLINE 
              ,IS_PAY_CHQ AS IS_PAY_CHQ 
              ,IS_PAY_CRC AS IS_PAY_CRC 
              ,SYS0038M.Code AS STATUS_CODE 
              ,SYS0038M.NAME AS STATUS_NAME
              ,CASE WHEN (ACC_CURR_ID IS NOT NULL) THEN ACC_CURR_ID ELSE '' END AS ACC_CURR_ID 
              ,CASE WHEN (ACC_GRP IS NOT NULL) THEN ACC_GRP ELSE '' END AS ACC_GRP 
              ,CASE WHEN (ACC_IS_MFG IS NOT NULL) THEN ACC_IS_MFG ELSE 0 END AS ACC_IS_MFG 
              ,CASE WHEN (ACC_LINK IS NOT NULL) THEN ACC_LINK ELSE '' END AS ACC_LINK 
              ,CASE WHEN (ACC_PAY_TYPE_ID IS NOT NULL) THEN ACC_PAY_TYPE_ID ELSE 0 END AS ACC_PAY_TYPE_ID 
              ,CASE WHEN (ACC_TYPE IS NOT NULL) THEN ACC_TYPE ELSE 0 END AS ACC_TYPE 
              ,CASE WHEN (ACC_ADDR1 IS NOT NULL) THEN DBMS_LOB.SUBSTR (ACC_ADDR1,4000)  ELSE '' END AS ACC_ADDR1
              ,CASE WHEN (ACC_ADDR2 IS NOT NULL) THEN DBMS_LOB.SUBSTR (ACC_ADDR2,4000)  ELSE '' END AS ACC_ADDR2 
              ,CASE WHEN (ACC_ADDR3 IS NOT NULL) THEN DBMS_LOB.SUBSTR (ACC_ADDR3,4000)  ELSE '' END AS ACC_ADDR3
              ,CASE WHEN (ACC_ADD_AREA_ID IS NOT NULL) THEN ACC_ADD_AREA_ID ELSE 0 END AS ACC_ADD_AREA_ID 
              ,CASE WHEN (Extent4.AREA_ID IS NOT NULL) THEN Extent4.AREA_NAME ELSE '' END AS AREA_NAME 
              ,CASE WHEN (ACC_ADD_CNTY_ID IS NOT NULL) THEN ACC_ADD_CNTY_ID ELSE 0 END AS ACC_ADD_CNTY_ID 
              ,CASE WHEN (Extent6.CNTY_ID IS NOT NULL) THEN Extent6.NAME ELSE '' END AS NAME15 
              ,CASE WHEN (ACC_CRT_DT IS NOT NULL) THEN  TO_CHAR(ACC_CRT_DT,'DD-MON-YYYY HH24:MI:SS')   ELSE TO_CHAR(TO_DATE('19000101','YYYY-MM-DD'),'DD-MON-YYYY HH24:MI:SS') END AS C14 
              ,CASE WHEN (Extent7.USER_ID IS NOT NULL) THEN Extent7.USER_NAME ELSE '' END AS USER_NAME47 
              ,CASE WHEN (ACC_ADD_POST_CODE_ID IS NOT NULL) THEN ACC_ADD_POST_CODE_ID ELSE 0 END AS ACC_ADD_POST_CODE_ID 
              ,CASE WHEN (Extent3.POST_CODE_ID IS NOT NULL) THEN Extent3.POST_CODE_ID ELSE 0 END AS POST_CODE_ID 
              ,CASE WHEN (SAP_ACC_CODE IS NOT NULL) THEN SAP_ACC_CODE ELSE '' END AS SAP_ACC_CODE 
              ,CASE WHEN (ACC_ADD_STATE_ID IS NOT NULL) THEN ACC_ADD_STATE_ID ELSE 0 END AS ACC_ADD_STATE_ID 
              ,CASE WHEN (Extent5.STATE_ID IS NOT NULL) THEN Extent5.NAME ELSE '' END AS NAME35 
              ,CASE WHEN (ACC_TEL_NO1 IS NOT NULL) THEN ACC_TEL_NO1 ELSE '' END AS ACC_TEL_NO1 
              ,CASE WHEN (ACC_TEL_NO2 IS NOT NULL) THEN ACC_TEL_NO2 ELSE '' END AS ACC_TEL_NO2 
              ,CASE WHEN (ACC_UPD_DT IS NOT NULL) THEN TO_CHAR(ACC_UPD_DT,'DD-MON-YYYY HH24:MI:SS') ELSE  TO_CHAR(TO_DATE('19000101','YYYY-MM-DD'),'DD-MON-YYYY HH24:MI:SS') END AS C23 
              ,CASE WHEN (Extent8.USER_ID IS NOT NULL) THEN Extent8.USER_NAME ELSE '' END AS USER_NAME
          FROM  SYS0001M
                INNER JOIN SYS0038M  ON SYS0038M.STUS_CODE_ID = ACC_STUS_ID
                  LEFT OUTER JOIN SYS0030C  Extent3 ON Extent3.POST_CODE_ID = ACC_ADD_POST_CODE_ID
                  LEFT OUTER JOIN SYS0039M  Extent4 ON Extent4.AREA_ID = ACC_ADD_AREA_ID
                  LEFT OUTER JOIN SYS0035M  Extent5 ON Extent5.STATE_ID = ACC_ADD_STATE_ID
                  LEFT OUTER JOIN SYS0015M  Extent6 ON Extent6.CNTY_ID = ACC_ADD_CNTY_ID
                  LEFT OUTER JOIN SYS0047M  Extent7 ON Extent7.USER_ID = ACC_CRT_USER_ID
                  LEFT OUTER JOIN SYS0047M  Extent8 ON Extent8.USER_ID = ACC_UPD_USER_ID
          WHERE 1 = 1
          <if test="accStusId !=null and accStusId != 0">          
            AND ACC_STUS_ID = #{accStusId} 
          </if>
          <if test="accId !=null and accId != ''">
            AND ACC_ID = #{accId}
          </if>
          <if test="accCode !=null and accCode != ''">
            AND ACC_CODE = #{accCode}
          </if>         
          <if test="accDesc !=null and accDesc != ''">
            AND ACC_DESC LIKE  '%' || #{accDesc} || '%'
          </if>         
          <if test="sapAccCode !=null and sapAccCode != ''">
            AND SAP_ACC_CODE = #{sapAccCode}
          </if>  
          <if test="paymentCd !=null and paymentCd == 'CSH' ">
            AND IS_PAY_CASH = 1
          </if>               
          <if test="paymentCd !=null and paymentCd == 'ONL' ">
            AND IS_PAY_ONLINE = 1
          </if>               
          <if test="paymentCd !=null and paymentCd == 'CHQ' ">
            AND IS_PAY_CHQ = 1
          </if>               
          <if test="paymentCd !=null and paymentCd == 'CRC' ">
            AND IS_PAY_CRC = 1
          </if>               
         ORDER BY ACC_CODE ASC
  </select>    
    
    <select id="getMstCommonCodeList" parameterType="Map" resultType="egovMap">
    
			SELECT 
				 CdMst.CODE_MASTER_ID AS CODE_MASTER_ID, 
				 CdMst.CODE_MASTER_NAME AS CODE_MASTER_NAME, 
				 CdMst.CODE_DESC AS CODE_DESC, 
				 /* CASE WHEN (CdMst.CRT_DT IS NOT NULL) THEN  TO_CHAR(CdMst.CRT_DT,'DD-MON-YYYY HH24:MI:SS') ELSE TO_CHAR(TO_DATE('19000101','YYYY-MM-DD'),'DD-MON-YYYY HH24:MI:SS') END AS CRT_DT, */
				 CdMst.CRT_DT,
				 CASE WHEN (CdMst.CRT_USER_ID IS NOT NULL) THEN CdMst.CRT_USER_ID ELSE 0 END AS CRT_USER_ID, 
				 CASE WHEN (User1.USER_ID IS NOT NULL) THEN User1.USER_NAME ELSE '' END AS CREATE_NAME, 
				 DECODE(CASE WHEN (CdMst.DISAB IS NOT NULL) THEN CdMst.DISAB ELSE 0 END,0,'N',1,'Y','N') AS DISABLED, 
				 CASE WHEN (CdMst.UPD_DT IS NOT NULL) THEN  TO_CHAR(CdMst.UPD_DT,'DD-MON-YYYY HH24:MI:SS') ELSE TO_CHAR(TO_DATE('19000101','YYYY-MM-DD'),'DD-MON-YYYY HH24:MI:SS') END AS UPD_DT, 
				 CASE WHEN (CdMst.UPD_USER_ID IS NOT NULL) THEN CdMst.UPD_USER_ID ELSE 0 END AS UPD_USER_ID, 
				 CASE WHEN (User2.USER_ID IS NOT NULL) THEN User2.USER_NAME ELSE '' END AS USER_NAME2    
				 FROM SYS0012M  CdMst
				 LEFT OUTER JOIN SYS0047M  User1 ON User1.USER_ID = CdMst.CRT_USER_ID
				 LEFT OUTER JOIN SYS0047M  User2 ON User2.USER_ID = CdMst.UPD_USER_ID   
			WHERE 1 = 1	 
				<if test="cdMstId !=null and cdMstId != ''">
                    AND  CdMst.CODE_MASTER_ID  = #{cdMstId} 
                </if>
                <if test="cdMstNm !=null and cdMstNm != ''">
                    AND (UPPER(CdMst.CODE_MASTER_NAME) LIKE UPPER(#{cdMstNm}) || '%' )
                </if>
                <if test="cdMstDesc !=null and cdMstDesc != ''">
                    AND (UPPER(CdMst.CODE_DESC) LIKE UPPER(#{cdMstDesc})  || '%' )
                </if>
                <if test="cdMstDisabled !=null and cdMstDisabled != ''">
                    AND (CdMst.DISAB = #{cdMstDisabled})
                </if>
                <if test="createID !=null and createID != ''">
                    AND (User1.USER_NAME = #{createID} )
                </if>
                <if test="crtDtFrom !=null and crtDtFrom != ''">
                    AND TO_CHAR(CdMst.CRT_DT,'YYYYMMDDHH24MISS') <![CDATA[ >= ]]> TO_CHAR(TO_DATE(#{crtDtFrom} , 'DD/MM/YYYY'),'YYYYMMDD')||'000000'        
                </if>
                <if test="crtDtTo !=null and crtDtTo != ''">
                    AND TO_CHAR(CdMst.CRT_DT,'YYYYMMDDHH24MISS') <![CDATA[ <= ]]> TO_CHAR(TO_DATE(#{crtDtTo} , 'DD/MM/YYYY'),'YYYYMMDD')||'235959'
                </if>
			ORDER BY CdMst.CODE_MASTER_NAME ASC	
	 	
    </select>
    
    <select id="getDetailCommonCodeList" parameterType="Map" resultType="egovMap">
			 SELECT
			      CODE_ID detailCodeId,
			      CODE_MASTER_ID,
			      CODE detailCode,
			      CODE_NAME detailCodeName,
			      DBMS_LOB.SUBSTR (CODE_DESC, 4000) detailCodeDesc,
			      CASE WHEN (CRT_DT IS NOT NULL) THEN  TO_CHAR(CRT_DT,'DD-MON-YYYY HH24:MI:SS') ELSE TO_CHAR(TO_DATE('19000101','YYYY-MM-DD'),'DD-MON-YYYY HH24:MI:SS') END AS CRT_DT,
			      CASE WHEN (CRT_USER_ID IS NOT NULL) THEN CRT_USER_ID ELSE 0 END AS CRT_USER_ID,
			      DECODE(CASE WHEN (DISAB IS NOT NULL) THEN DISAB ELSE 0 END , 0,'N',1,'Y','N')  AS detailDisabled, 
			      CASE WHEN (UPD_DT IS NOT NULL) THEN  TO_CHAR(UPD_DT,'DD-MON-YYYY HH24:MI:SS') ELSE TO_CHAR(TO_DATE('19000101','YYYY-MM-DD'),'DD-MON-YYYY HH24:MI:SS') END AS UPD_DT,
			      CASE WHEN (UPD_USER_ID IS NOT NULL) THEN UPD_USER_ID ELSE 0 END AS UPD_USER_ID
			      FROM SYS0013M
			WHERE CODE_MASTER_ID = #{mstCdId} 
			    <if test="dtailDisabled !=null and dtailDisabled != ''">
                    AND DISAB = #{dtailDisabled} 
                </if>
			ORDER BY CODE ASC
    </select>

    <insert id="addCommCodeGrid" parameterType="Map">
      INSERT INTO SYS0012M
        ( CODE_MASTER_ID  /*pk*/
         , CODE_MASTER_NAME  /*NN*/
         , CODE_DESC  /*NN*/
         , DISAB
         , CRT_DT
         , CRT_USER_ID
         , UPD_DT
         , UPD_USER_ID
        )
        VALUES
        ( (SELECT MAX(CODE_MASTER_ID +1) CODE_MASTER_ID_SEQ FROM SYS0012M)
         , #{codeMasterName}
         , NVL(#{codeDesc},DBMS_LOB.SUBSTR (#{codeMasterName},4000) )
         , DECODE(#{disabled},'N',0,'Y',1,0)
         , SYSDATE
         , #{crtUserId}
         , SYSDATE
         , #{updUserId}
         )
    </insert>    
    
    <update id="updCommCodeGrid" parameterType="Map">
		UPDATE SYS0012M
		   SET CODE_DESC   = NVL(#{codeDesc},DBMS_LOB.SUBSTR (#{codeMasterName},4000) ) 
		     , CODE_MASTER_NAME = #{codeMasterName}
		     , DISAB       = DECODE(#{disabled},'N',0,'Y',1,0)
		     , UPD_USER_ID = #{updUserId}
		     , UPD_DT      = SYSDATE  
		WHERE CODE_MASTER_ID = #{codeMasterId}
    </update>    
    
    <insert id="addDetailCommCodeGrid" parameterType="Map">
		INSERT INTO SYS0013M
		        ( CODE_ID   
		        , CODE_MASTER_ID   
		        , CODE
		        , CODE_NAME 
		        , CODE_DESC
		        , DISAB
		        , CRT_DT
		        , CRT_USER_ID
		        , UPD_DT
		        , UPD_USER_ID
		        , OLD_CODE_ID
		        )
		VALUES
		        ( (SELECT MAX(CODE_ID +1) FROM SYS0013M)
		         , #{codeMasterId}
		         , #{detailcode}
		         , #{detailcodename}
		         , DBMS_LOB.SUBSTR (#{detailcodedesc}, 4000) 
		         , DECODE(#{detaildisabled},'N',0,'Y',1,0)
		         , SYSDATE  
		         , #{crtUserId} 
		         , SYSDATE 
		         , #{updUserId}
		         , 0    
		         )
    </insert>    

    <update id="updDetailCommCodeGrid" parameterType="Map">
		UPDATE SYS0013M
		   SET CODE        = #{detailcode}
		     , CODE_NAME   = #{detailcodename}
		     , CODE_DESC   = DBMS_LOB.SUBSTR (#{detailcodedesc}, 4000)  
		     , DISAB       = DECODE(#{detaildisabled},'N',0,'Y',1,0)
		     , UPD_USER_ID = #{crtUserId}
		     , UPD_DT      = SYSDATE  
		WHERE CODE_ID      = #{detailcodeid}
    </update>  
    
    
    <select id="selectBranchList" parameterType="Map" resultType="egovMap">
        SELECT <choose>
	              <when test="groupCode !=null and groupCode == '0'">
	                 BRNCH_ID,CODE,NAME,ADDR1,ADDR2,ADDR3,ADDR4,AREA_ID,POST_CODE_ID,STATE_CODE_ID,CNTY_ID,TEL1,TEL2,FAX,CNTC,TYPE_ID,STUS_ID,UPD_USER_ID,UPD_DT,IS_SYNC,REGN_ID
	              </when>
	              <otherwise>
	                 BRNCH_ID CODE_ID 
                     , CODE ||#{separator}|| NAME  CODE_NAME
                     , TYPE_ID
	              </otherwise>
	          </choose>
	           
		  FROM SYS0005M
		 WHERE 1 = 1
		 <choose>
              <when test="groupCode !=null and groupCode == '2' or groupCode == '5'">
                 AND STUS_ID = 1
                 AND TYPE_ID IN (40 , 43)
              </when>
              <when test="groupCode !=null and groupCode == '3'">
                 AND STUS_ID = 1
                 AND TYPE_ID IN (40 , 43 , 42)
              </when>
              <when test="groupCode !=null and groupCode == '4'">
                 AND STUS_ID = 1
                 AND TYPE_ID IN (42)
              </when>
              <when test="groupCode !=null and groupCode == '7'">
                 AND STUS_ID = 1
                 AND TYPE_ID IN (1160)
              </when>
              <otherwise>
                 AND STUS_ID = 1
              </otherwise>
          </choose>
		   AND TYPE_ID IN (40 , 43 , 42)
		<choose>
            <when test="groupCode !=null and groupCode == '0'">
               ORDER BY CODE
            </when>
            <otherwise>
               ORDER BY CODE_NAME
            </otherwise>
        </choose>		 
    </select>
    
    <!--Branch ID로 User 정보 조회 -->
     <select id="getUsersByBranch" parameterType="Map" resultType="egovMap">
        SELECT 
            USER_ID AS CODE_ID, USER_NAME AS CODE_NAME 
        FROM
            SYS1012V        /* SystemUserView */
        WHERE
            BRNCH_ID = #{groupCode}
        ORDER BY 
            USER_NAME            
    </select>
    
    <!--Account 정보 조회 (크레딧 카드 리스트 / 은행 계좌 리스트)  -->
    <select id="getAccountList" parameterType="Map" resultType="egovMap">
        SELECT 
            ACC_ID AS CODE_ID, 
            ACC_CODE, 
            ACC_DESC, 
            ACC_CODE || ' - ' ||  ACC_DESC AS CODE_NAME
        FROM
            SYS0001M    
        WHERE
            ACC_STUS_ID = 1
            <if test="groupCode != null and groupCode == 'CRC'">
                AND IS_PAY_CRC = 1
            </if>
            <if test="groupCode != null and groupCode == 'CASH'">
                AND IS_PAY_CASH = 1
            </if>
        ORDER BY ACC_CODE ASC
    </select>

</mapper>