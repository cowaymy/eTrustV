<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.coway.trust.biz.common.impl.CommonMapper">

<insert id="insertRoleAuthMapping" parameterType="Map">
  INSERT INTO SYS0054M
     (
       AUTH_CODE
      ,ROLE_ID
      ,ROLE_LVL
      ,VALID_DT_FROM
      ,VALID_DT_TO
      ,CRT_USER_ID
      ,CRT_DT
      ,UPD_USER_ID
      ,UPD_DT  
     )
     VALUES
     (
       #{authCode}
      ,#{roleId}
      ,DECODE( #{authCode},'EXT','0','MGR','0','INT','0',#{roleLvl})           
      ,NVL(REPLACE(#{fromDt},'/',''),TO_CHAR(SYSDATE,'YYYYMMDD') )
      ,NVL(REPLACE(#{toDt},  '/',''),'20201231')          
      ,#{crtUserId}
      ,SYSDATE
      ,#{updUserId}
      ,SYSDATE    
     )
  </insert>

  <update id="updateRoleAuthMapping" parameterType="Map">
     UPDATE SYS0054M
        SET AUTH_CODE = UPPER(#{authCode})
           ,ROLE_ID   = #{roleId}
           ,ROLE_LVL  = DECODE( #{authCode},'EXT','0','MGR','0','INT','0',#{roleLvl}) 
           ,VALID_DT_FROM = REPLACE(#{fromDt},'/','')
           ,VALID_DT_TO   = REPLACE(#{toDt},'/','')
           ,UPD_USER_ID   = #{updUserId}
           ,UPD_DT        = SYSDATE   
     WHERE AUTH_CODE = UPPER(#{authCode}) 
       AND ROLE_ID   = #{roleId}
  </update>
  
<delete id="deleteRoleAuthMapping" parameterType="Map">
      DELETE SYS0054M  WHERE AUTH_CODE  = #{authCode}
</delete>

<select id="selectRoleAuthMappingPopUpList" parameterType="Map" resultType="egovMap">
      SELECT AUTH_CODE
            , AUTH_NAME
            , ROLE_ID
            , ROLE_LVL
        FROM SYS0053M A
       WHERE 1 = 1 
       <choose>
         <when test='roleSelectBox == "01" and roleIdNm != null and roleIdNm != ""'>
             AND ROLE_ID = #{roleIdNm}
         </when>
         <when test='roleSelectBox == "02" and roleIdNm != null and roleIdNm != "" '>
             AND UPPER(AUTH_NAME) LIKE  '%' || UPPER(#{roleIdNm}) || '%'
         </when>
         <otherwise>
         </otherwise>
       </choose>
       
       ORDER BY AUTH_NAME
 
</select>

<select id="selectRoleAuthMappingAdjustList" parameterType="Map" resultType="egovMap">
 SELECT  F.AUTH_CODE ,
         F.AUTH_NAME,
         G.ROLE_ID ,
         F.ROLE_LVL,
         H.VALID_DT_FROM FROM_DT,
         H.VALID_DT_TO TO_DT,
         F.AUTH_CODE HIDDEN
    FROM SYS0053M F
        ,SYS0054M H
        ,(SELECT B.AUTH_CODE ,
                 A.ROLE_ID ,
                 A.ROLE_LEV                       
            FROM SYS0044M A ,
                 SYS0053M B
           WHERE A.ROLE_ID = B.ROLE_ID(+)
        <if test='roleId !=null and roleId != "" '>
             AND B.ROLE_ID(+) = #{roleId}
        </if>
           START WITH A.ROLE_ID = B.ROLE_ID         
         CONNECT BY A.ROLE_ID = PRIOR A.PARENT_ROLE) G
   WHERE F.ROLE_ID = G.ROLE_ID
     AND G.ROLE_ID = H.ROLE_ID
     AND F.AUTH_CODE = H.AUTH_CODE 
     AND H.VALID_DT_FROM <![CDATA[ <= ]]> TO_CHAR(SYSDATE,'YYYYMMDD')
     AND H.VALID_DT_TO   <![CDATA[ >= ]]> TO_CHAR(SYSDATE,'YYYYMMDD')            
   UNION
         
   SELECT 
          C.AUTH_CODE , 
          D.CODE_NAME, 
          A.ROLE_ID ,
          '0' ROLE_LVL,
          '19990101' FROM_DT,
          '29991231' TO_DT,
          C.AUTH_CODE HIDDEN
    FROM SYS0053M A ,          
          (SELECT B.AUTH_CODE ,
                  A.ROLE_ID ,
                  A.ROLE_LEV                       
             FROM SYS0044M A ,
                  SYS0053M B
            WHERE A.ROLE_ID = B.ROLE_ID(+)
         <if test='roleId !=null and roleId != "" '>
              AND B.ROLE_ID(+) = #{roleId}
         </if>
              AND A.ROLE_LEV = 1
            START WITH A.ROLE_ID = B.ROLE_ID         
          CONNECT BY A.ROLE_ID = PRIOR A.PARENT_ROLE
          ) B ,
          SYS0054M C, 
          SYS0013M D 
   WHERE A.ROLE_ID = B.ROLE_ID(+)
     AND A.ROLE_ID = C.ROLE_ID(+)
     AND D.CODE_MASTER_ID = 313
     AND C.AUTH_CODE = D.CODE
     AND VALID_DT_FROM <![CDATA[ <= ]]> TO_CHAR(SYSDATE,'YYYYMMDD')
     AND VALID_DT_TO   <![CDATA[ >= ]]> TO_CHAR(SYSDATE,'YYYYMMDD')
   ORDER BY ROLE_LVL,AUTH_NAME   
</select>

<select id="selectRoleAuthMappingBtn" parameterType="Map" resultType="egovMap">
   SELECT SYS54M.AUTH_CODE
		     ,CASE SYS54M.AUTH_CODE WHEN 'INT' THEN  ( SELECT CODE_NAME FROM SYS0013M WHERE CODE_MASTER_ID= #{CodeMasterId}  AND CODE = SYS54M.AUTH_CODE )
		                     WHEN 'EXT' THEN  ( SELECT CODE_NAME FROM SYS0013M WHERE CODE_MASTER_ID= #{CodeMasterId}  AND CODE = SYS54M.AUTH_CODE )
		                     WHEN 'MGR' THEN  ( SELECT CODE_NAME FROM SYS0013M WHERE CODE_MASTER_ID= #{CodeMasterId}  AND CODE = SYS54M.AUTH_CODE )
		                     ELSE (SELECT DISTINCT AUTH_NAME FROM SYS0053M SYS53M WHERE SYS53M.AUTH_CODE = SYS54M.AUTH_CODE  AND SYS53M.ROLE_ID = SYS54M.ROLE_ID  ) 
		      END AUTH_NAME          
		     ,TO_CHAR(ROLE_ID) ROLE_ID
		     ,ROLE_LVL 
		     ,VALID_DT_FROM FROM_DT
		     ,VALID_DT_TO TO_DT
		     ,AUTH_CODE HIDDEN
   FROM SYS0054M SYS54M         
  WHERE 1 = 1
 <if test='authCode !=null and authCode != "" '>  
    AND AUTH_CODE = #{authCode} 
 </if> 
 <if test='roleId !=null and roleId != "" '>    
    AND ROLE_ID = #{roleId}
 </if>
    AND VALID_DT_FROM <![CDATA[ <= ]]> TO_CHAR(SYSDATE,'YYYYMMDD')
    AND VALID_DT_TO   <![CDATA[ >= ]]> TO_CHAR(SYSDATE,'YYYYMMDD')  
</select>

<select id="selectRoleAuthMappingList" parameterType="Map" resultType="egovMap">
   SELECT 
       TO_CHAR(ROLE_ID) ROLE_ID
      , SUBSTR(ROLE_PATH,3,LENGTH(ROLE_PATH)) ROLE_NAME
      , ROLE_LEV ROLE_LEV
      , PARENT_ROLE 
      , ROLE_NAME
      , L1 ROLE_1
      , L2 ROLE_2
      , L3 ROLE_3
      
  FROM
  (
    SELECT  LEVEL  STEP_LEVEL        
          , ROLE_ID
          , PARENT_ROLE
          , ROLE_CODE ROLE_NAME
          , ROLE_LEV
          , CASE WHEN ROLE_LEV = 1 THEN ROLE_ID 
                 WHEN ROLE_LEV = 2 THEN PARENT_ROLE
                 WHEN ROLE_LEV = 3 THEN CONNECT_BY_ROOT ROLE_ID ELSE NULL END L1
            
          , CASE WHEN ROLE_LEV = 2 THEN ROLE_ID
                 WHEN ROLE_LEV = 3 THEN PARENT_ROLE ELSE NULL END L2
            
          , CASE WHEN ROLE_LEV = 3 THEN ROLE_ID ELSE NULL END L3    
            
          , CONNECT_BY_ROOT ROLE_CODE ROOT_NAME
          , SYS_CONNECT_BY_PATH(ROLE_CODE,' > ') ROLE_PATH 
          , CONNECT_BY_ISCYCLE  ISCYCLE_YN 
          , CONNECT_BY_ISLEAF LAST_STEP_YN
     FROM SYS0044M
    START WITH PARENT_ROLE = 0   
    CONNECT BY NOCYCLE 
    PRIOR ROLE_ID = PARENT_ROLE   
)
  WHERE 1 = 1 
    <if test='roleId !=null and roleId != "" '>  
      AND UPPER(ROLE_ID) LIKE UPPER(#{roleId}) || '%'
    </if>  
</select>

<select id="selectRoleList" parameterType="Map" resultType="egovMap">
SELECT 
       TO_CHAR(ROLE_ID) ROLE_ID
      , SUBSTR(ROLE_PATH,3,LENGTH(ROLE_PATH)) ROLE_NAME
      , STEP_LEVEL
      , PARENT_ROLE 
      , ROLE_NAME
      , ROLE_LEV ROLE_LEV
      , L1 ROLE_1
      , L2 ROLE_2
      , L3 ROLE_3
      
  FROM
  (
    SELECT LEVEL  STEP_LEVEL        
           ,ROLE_ID
           ,PARENT_ROLE
           ,ROLE_CODE ROLE_NAME
           ,ROLE_LEV
           ,CASE WHEN ROLE_LEV = 1 THEN ROLE_ID 
                 WHEN ROLE_LEV = 2 THEN PARENT_ROLE
                 WHEN ROLE_LEV = 3 THEN CONNECT_BY_ROOT ROLE_ID ELSE NULL END L1
           
           , CASE WHEN ROLE_LEV = 2 THEN ROLE_ID
                  WHEN ROLE_LEV = 3 THEN PARENT_ROLE ELSE NULL END L2
           
           , CASE WHEN ROLE_LEV = 3 THEN ROLE_ID ELSE NULL END L3    

           , CONNECT_BY_ROOT ROLE_CODE ROOT_NAME
           , SYS_CONNECT_BY_PATH(ROLE_CODE,' > ') ROLE_PATH 
           , CONNECT_BY_ISCYCLE  ISCYCLE_YN 
           , CONNECT_BY_ISLEAF LAST_STEP_YN
     
    FROM SYS0044M
    START WITH PARENT_ROLE = 0   
    CONNECT BY NOCYCLE 
    PRIOR ROLE_ID = PARENT_ROLE   
)
  WHERE 1 = 1 
		<if test='roleId !=null and roleId != "" '>  
		  AND UPPER(ROLE_ID) LIKE UPPER(#{roleId}) || '%'
		</if>
		<if test='roleNm !=null and roleNm != "" '>
		  AND UPPER(ROLE_NAME) LIKE '%' || UPPER(#{roleNm})  || '%'
		</if>  
</select>
  
<select id="selectAuthList" parameterType="Map" resultType="egovMap">
    
WITH AUTH_ROLE
    AS
    (
        SELECT TO_CHAR(CODE) AUTH_CODE
              ,CODE_NAME  AUTH_NAME
              ,NULL ROLE_ID
              ,NULL LVL 
              
              ,NULL ROLE_ID1
              ,NULL LEVEL_NM1
              ,NULL ROLE_ID2
              ,NULL LEVEL_NM2
              ,NULL ROLE_ID3
              ,NULL LEVEL_NM3
              ,NULL RNK
         FROM SYS0013M  
        WHERE CODE_MASTER_ID = 313
     )
      SELECT AUTH_CODE
            ,AUTH_NAME
            ,ROLE_ID
            ,LVL
            ,ROLE_ID1
            ,LEVEL_NM1
            ,ROLE_ID2
            ,LEVEL_NM2
            ,ROLE_ID3
            ,LEVEL_NM3
            ,RNK
        FROM AUTH_ROLE
        
        UNION ALL
        
        SELECT AUTH_CODE
              ,AUTH_NAME AUTH_NAME              
              ,TO_CHAR(ROLE_ID) ROLE_ID
              ,ROLE_LVL LVL
              ,ROLE_ID1
              ,CASE WHEN ROLE_LVL = 1 THEN FN_GET_SPLIT_DATA(AUTH_NAME,1)     
                    WHEN ROLE_LVL = 2 THEN FN_GET_SPLIT_DATA(AUTH_NAME,1)    
                    WHEN ROLE_LVL = 3 THEN FN_GET_SPLIT_DATA(AUTH_NAME,1)  
                    ELSE '' 
               END LEVEL_NM1
              ,ROLE_ID2
              ,CASE WHEN ROLE_LVL = 2 THEN FN_GET_SPLIT_DATA(AUTH_NAME,1)  
                    WHEN ROLE_LVL = 3 THEN FN_GET_SPLIT_DATA(AUTH_NAME,2)  
                    ELSE '' 
               END LEVEL_NM2
              ,ROLE_ID3 
              ,CASE WHEN ROLE_LVL = 3 THEN FN_GET_SPLIT_DATA(AUTH_NAME,3)       
                    ELSE '' 
               END LEVEL_NM3
              ,(ROW_NUMBER() OVER(ORDER BY AUTH_CODE)) RNK
        FROM SYS0053M
       WHERE 1 = 1 
     <if test='authCode !=null and authCode != "" '>
         AND UPPER(AUTH_CODE) LIKE UPPER(#{authCode}) || '%'
     </if>
     <if test='authName !=null and authName != "" '>
         AND UPPER(AUTH_NAME) LIKE '%' || UPPER(#{authName}) || '%'
     </if>  
</select>
  
<insert id="insertAuth" parameterType="Map">
      INSERT INTO SYS0053M
          (                        
             AUTH_CODE
           , AUTH_NAME
           , ROLE_ID
           , ROLE_ID1
           , ROLE_ID2
           , ROLE_ID3
           , ROLE_LVL
           , CRT_USER_ID
           , CRT_DT
           , UPD_USER_ID
           , UPD_DT
          )
    VALUES
         (
           (SELECT (COUNT(1) +1) CNT FROM SYS0053M)
          ,#{authName}
          ,#{roleId}
          ,#{roleId1}          
          ,#{roleId2}
          ,#{roleId3}          
          ,#{lvl}
          ,#{crtUserId}
          ,SYSDATE
          ,#{updUserId}
          ,SYSDATE
         )
  </insert>
  
  <update id="updateAuth" parameterType="Map">
      UPDATE  SYS0053M
         SET  AUTH_NAME   = #{authName}  
            , ROLE_ID     = #{roleId}   
            , ROLE_ID1    = #{roleId1}  
            , ROLE_ID2    = #{roleId2}  
            , ROLE_ID3    = #{roleId3}  
            , ROLE_LVL    = #{lvl}     
            , UPD_USER_ID = #{updUserId}
            , UPD_DT      = SYSDATE     
       WHERE  AUTH_CODE   = UPPER(#{authCode}) 
  </update>
  
  <delete id="deleteAuth" parameterType="Map">
      DELETE SYS0053M  WHERE AUTH_CODE  = #{authCode}
  </delete>
     

</mapper>