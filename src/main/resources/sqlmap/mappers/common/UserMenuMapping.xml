<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.coway.trust.biz.common.impl.UserMenuMappingMapper">

<select id="selectUserList" parameterType="Map" resultType="egovMap">
	SELECT USR.USER_ID AS user_id ,
	           USR.USER_NAME AS user_name/* ,
	           USERROLE.ROLE_ID AS role_id ,
	           ROLE.ROLE_code AS role_name*/
	   FROM SYS0047M USR 
	           INNER JOIN SYS0038M STATUS 
	               ON STATUS.STUS_CODE_ID = USR.USER_STUS_ID
	           /*INNER JOIN SYS0045M USERROLE
	               ON USR.USER_ID = USERROLE.USER_ID
	           INNER JOIN SYS0044M ROLE
	               ON USERROLE.ROLE_ID = ROLE.ROLE_ID*/
	 WHERE 1=1
	     <![CDATA[
	     AND 1 = USR.USER_STUS_ID
	     AND 1 <> USR.USER_TYPE_ID
	     AND 2 <> USR.USER_TYPE_ID
	     AND 3 <> USR.USER_TYPE_ID
	     AND 1161 <> USR.USER_TYPE_ID
	     AND 1165 <> USR.USER_TYPE_ID
	     AND USR.USER_VAL_ID_TO >= TO_CHAR(SYSDATE, 'YYYY-MM-DD')
	     ]]>
	     <if test="userCode != null and userCode !=''">
	     AND (UPPER(USR.USER_ID) LIKE  UPPER(#{userCode}) || '%' OR 
                UPPER(USR.USER_NAME) LIKE '%' || UPPER(#{userCode}) || '%')
	     </if>
	  ORDER BY USER_ID
	  
</select>

<select id="selectUserMenuMappingList" parameterType="Map" resultType="egovMap">
	SELECT z.menu_lvl , 
		       z.menu_code , 
		       z.menu_name ,
		       z.pgm_code ,
		       z.pgm_name,       
		       z.pgm_trn_code,       
		       z.pgm_trn_name,       		       
		       #{userId}  AS user_id,		 
		       case when y.exist_yn = 'Y' THEN NULL ELSE y.valid_dt_from END as valid_dt_from,
               case when y.exist_yn = 'Y' THEN NULL ELSE y.valid_dt_to END as valid_dt_to,    
		       NVL(y.func_yn,'N') AS func_yn ,
               NVL(y.exist_yn,'N') AS exist_yn,
		       z.menu_code||z.pgm_trn_code as row_id /* PK, AUIGrid key row setting */           
		  FROM (SELECT a.menu_code ,                
			               a.menu_name ,
			               a.menu_lvl ,               
			               b.pgm_code ,
			               b.pgm_name ,
			               CASE WHEN b.pgm_code IS NULL 
			                    THEN 2268 
			                    ELSE b.pgm_trn_code END AS pgm_trn_code ,
			               b.pgm_trn_name ,
			               a.rn
		         FROM (SELECT e.menu_code ,
		                      e.menu_name ,
		                      e.menu_lvl ,
		                      e.pgm_code ,
		                      ROWNUM rn
		                 FROM SYS0051M e
		                START WITH e.upper_menu_code is null
		              CONNECT BY PRIOR e.menu_code = e.upper_menu_code
		                ORDER SIBLINGS BY e.menu_order) a , 
		              (SELECT d.pgm_code ,
		                      d.pgm_name ,
		                      d.pgm_trn_code ,
		                      d.pgm_trn_name
		                 FROM (SELECT b.pgm_code ,
		                              b.pgm_name ,
		                              c.pgm_trn_code,
		                              CASE WHEN c.pgm_trn_code = 2260 THEN 'VIEW'
		                                   WHEN c.pgm_trn_code = 2261 THEN 'CHNG'
		                                   WHEN c.pgm_trn_code = 2262 THEN 'PRT'
		                                   WHEN c.pgm_trn_code = 2263 THEN b.desc_user_dfn1                    
		                                   WHEN c.pgm_trn_code = 2264 THEN b.desc_user_dfn2
		                                   WHEN c.pgm_trn_code = 2265 THEN b.desc_user_dfn3
		                                   WHEN c.pgm_trn_code = 2266 THEN b.desc_user_dfn4
		                                   WHEN c.pgm_trn_code = 2267 THEN b.desc_user_dfn5 END as pgm_trn_name ,                            
		                              CASE WHEN c.pgm_trn_code = 2260 THEN b.func_view
		                                   WHEN c.pgm_trn_code = 2261 THEN b.func_chng
		                                   WHEN c.pgm_trn_code = 2262 THEN b.func_prt
		                                   WHEN c.pgm_trn_code = 2263 THEN b.func_user_dfn1                    
		                                   WHEN c.pgm_trn_code = 2264 THEN b.func_user_dfn2
		                                   WHEN c.pgm_trn_code = 2265 THEN b.func_user_dfn3
		                                   WHEN c.pgm_trn_code = 2266 THEN b.func_user_dfn4
		                                   WHEN c.pgm_trn_code = 2267 THEN b.func_user_dfn5 END as transaction_yn        
		                         FROM SYS0050M b , 
		                              (SELECT ROWNUM + 2259 as pgm_trn_code
		                                 FROM SYS0050M
		                                WHERE ROWNUM <![CDATA[<]]> 9) c ) d 
		                WHERE NVL(d.transaction_yn,'N') = 'Y') b
		            WHERE a.pgm_code = b.pgm_code(+) ) z,
		         (SELECT z.menu_code, 
		                     z.pgm_trn_code , 
		                     min(z.valid_dt_from) as valid_dt_from , 
		                     max(z.valid_dt_to) as valid_dt_to, 
		                     max(z.func_yn) as func_yn , 
		                     max(z.exist_yn) as exist_yn
            FROM (select a.menu_code ,
			                   a.pgm_trn_code ,
			                   '19001231' AS valid_dt_from,
			                   '29991231' AS valid_dt_to,
			                   'Y' as func_yn ,
			                   'Y' as exist_yn
				        FROM sys0056m a,
				             (
				                SELECT f.auth_code,
				                       g.role_id,
				                       f.role_lvl,
				                       g.user_id
				                FROM sys0053m f,
				                     (
				                        SELECT b.user_id,
				                               a.role_id,
				                               a.role_lev
				                        FROM sys0044m a,
				                             sys0045m b
				                        WHERE a.role_id = b.role_id (+)
				                            AND b.user_id (+) = #{userId}
				                        START WITH a.role_id = b.role_id
				                        CONNECT BY a.role_id = PRIOR a.parent_role
				                    ) g
				                WHERE f.role_id = g.role_id
				                UNION
				                SELECT c.auth_code,
				                       a.role_id,
				                       '0',
				                       b.user_id
				                FROM sys0053m a,
				                     (
				                        SELECT b.user_id,
				                               a.role_id,
				                               a.role_lev
				                        FROM sys0044m a,
				                                sys0045m b
				                        WHERE a.role_id = b.role_id (+)
				                            AND b.user_id (+) = #{userId}
				                            AND a.role_lev = 1
				                        START WITH a.role_id = b.role_id
				                        CONNECT BY a.role_id = PRIOR a.parent_role
				                    ) b,
				                     sys0054m c,
				                     sys0013m d
				                WHERE a.role_id = b.role_id 
				                    AND a.role_id = c.role_id (+)
				                    AND d.code_master_id(+) = 313
				                    AND c.auth_code = d.code(+)
				            ) b
				        WHERE a.auth_code = b.auth_code
				            AND a.func_yn = 'Y'
				        UNION
				        
				        select c.menu_code ,
				               c.pgm_trn_code ,
				               c.valid_dt_from,
				               c.valid_dt_to,
				               c.func_yn ,                              
				               'N' AS exist_yn
                      FROM SYS0057m c
                    WHERE c.user_id = #{userId}
          ) z
          group by menu_code, pgm_trn_code) y		        
		  WHERE z.menu_code = y.menu_code(+)
		    AND z.pgm_trn_code = y.pgm_trn_code(+)		    		   
		    <if test="menuCode != null and menuCode !=''">
              AND (UPPER(z.menu_code) LIKE  UPPER(#{menuCode}) || '%' OR 
                     UPPER(z.menu_name) LIKE '%' || UPPER(#{menuCode}) || '%')
         </if>
		  ORDER BY z.rn, z.pgm_trn_code	
</select>

<update id="updateUserMenuMapping" parameterType="Map">
MERGE INTO SYS0057M a
  USING (
        SELECT #{userId} AS user_id ,
	               #{menuCode} AS menu_code ,
	               #{pgmTrnCode} AS pgm_trn_code ,
	               #{funcYn} AS func_yn ,
	               REPLACE(#{validDtFrom},'/','') as valid_dt_from ,
	               REPLACE(#{validDtTo},'/','') as valid_dt_to ,	               
	               #{updUserId} AS upd_user_id ,               
	               #{crtUserId} AS crt_user_id
          FROM dual
  ) b
     ON ( a.user_id = b.user_id
    AND a.menu_code = b.menu_code
    AND a.pgm_trn_code = b.pgm_trn_code )
   WHEN MATCHED THEN
        UPDATE 
           SET a.func_yn = b.func_yn ,
               a.valid_dt_from = b.valid_dt_from ,
               a.valid_dt_to = b.valid_dt_to ,               
               a.upd_user_id = b.user_id ,
               a.upd_dt = SYSDATE      
        DELETE WHERE b.func_yn = 'N'       
   WHEN NOT MATCHED THEN
        INSERT
        (
            a.user_id,
            a.menu_code,
            a.pgm_trn_code,
            a.valid_dt_from,
            a.valid_dt_to,
            a.func_yn,
            a.crt_user_id,
            a.crt_dt,
            a.upd_user_id,
            a.upd_dt
        ) 
        VALUES 
        (
            b.user_id,
            b.menu_code,
            b.pgm_trn_code,
            b.valid_dt_from,
            b.valid_dt_to,
            b.func_yn,
            b.crt_user_id,
            SYSDATE,
            b.upd_user_id,
            SYSDATE
        )        
</update>
   
</mapper>