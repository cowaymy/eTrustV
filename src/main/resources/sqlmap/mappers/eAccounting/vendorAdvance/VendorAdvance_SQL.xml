<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.coway.trust.biz.eAccounting.vendorAdvance.impl.VendorAdvanceMapper">

    <select id="selectAdvanceList" parameterType="Map" resultType="egovMap">
        SELECT
            POST_DATE,
            CLM_NO,
            ADV_TYPE,
            PAYEE,
            COST_CENTER,
            COST_CENTER_NM,
            AMT,
            APPV_PRCSS_NO,
            APPV_DT,
            ADV_REFD_DT,
            APPV_PRCSS_STUS,
            CASE WHEN APPV_PRCSS_STUS = 'A' THEN 'Approved'
                 WHEN APPV_PRCSS_STUS = 'J' THEN 'Rejected'
                 WHEN APPV_PRCSS_STUS = 'R' THEN 'Submitted'
                 WHEN APPV_PRCSS_STUS = 'P' THEN 'Pending'
                 ELSE 'Draft'
            END AS APPV_PRCSS_STUS_DESC,
            REPAY_STUS SETTLEMENT_STUS,
            CASE WHEN REPAY_STUS = '1' THEN 'Not due'
                 WHEN REPAY_STUS = '2' THEN 'Due but not repaid yet'
                 WHEN REPAY_STUS = '3' THEN 'Repaid'
                 WHEN REPAY_STUS = '4' THEN 'Pending Approval'
                 WHEN REPAY_STUS = '5' THEN 'Draft'
                 WHEN REPAY_STUS = '99' THEN ''
            END AS SETTLEMENT_STUS_DESC
        FROM (
            SELECT
                A.CRT_DT POST_DATE,
                A.CLM_NO,
                A.ADV_TYPE,
                A.MEM_ACC_ID PAYEE,
                A.COST_CENTER,
                A.COST_CENTER_NM,
                A.TOT_AMT AMT,
                A.ADV_REFD_DT,
                B.APPV_PRCSS_NO,
                B.APPV_PRCSS_DT APPV_DT,
                /* B.REQST_DT RQST_DT, */
                NVL(B.APPV_PRCSS_STUS, 'T') APPV_PRCSS_STUS,
                CASE WHEN A.ADV_TYPE = '1' OR A.ADV_TYPE = '3' OR A.ADV_TYPE = '5' THEN (
                    CASE WHEN A.APPV_PRCSS_NO IS NOT NULL THEN (
                        <![CDATA[
                        CASE WHEN (B.APPV_PRCSS_STUS = 'A' AND C.CLM_NO IS NULL AND SYSDATE <= A.ADV_REFD_DT) OR
                                  /*(B.APPV_PRCSS_STUS = 'A' AND C.CLM_NO IS NOT NULL AND C.APPV_PRCSS_NO IS NULL AND SYSDATE <= A.ADV_REFD_DT) OR*/
                                  (B.APPV_PRCSS_STUS = 'A' AND C.CLM_NO IS NOT NULL AND D.APPV_PRCSS_STUS = 'J' AND SYSDATE <= A.ADV_REFD_DT)
                                  /*THEN 'Not due'*/
                                  THEN '1'
                             WHEN (B.APPV_PRCSS_STUS = 'A' AND C.CLM_NO IS NULL AND SYSDATE >= A.ADV_REFD_DT) OR
                                  /*(B.APPV_PRCSS_STUS = 'A' AND C.CLM_NO IS NOT NULL AND C.APPV_PRCSS_NO IS NULL AND SYSDATE >= A.ADV_REFD_DT) OR*/
                                  (B.APPV_PRCSS_STUS = 'A' AND C.CLM_NO IS NOT NULL AND D.APPV_PRCSS_STUS = 'J' AND SYSDATE >= A.ADV_REFD_DT)
                                  /*THEN 'Due but not repaid yet'*/
                                  THEN '2'
                             WHEN (B.APPV_PRCSS_STUS = 'A' AND D.APPV_PRCSS_STUS = 'A')
                                  /*THEN 'Repaid'*/
                                  THEN '3'
                             WHEN (B.APPV_PRCSS_STUS = 'A' AND D.APPV_PRCSS_STUS = 'R') OR
                                  (B.APPV_PRCSS_STUS = 'A' AND D.APPV_PRCSS_STUS = 'P')
                                  /*THEN 'Pending Approval'*/
                                  THEN '4'
                             WHEN (B.APPV_PRCSS_STUS = 'A' AND C.CLM_NO IS NOT NULL AND C.APPV_PRCSS_NO IS NULL AND SYSDATE <= A.ADV_REFD_DT) OR
                                  (B.APPV_PRCSS_STUS = 'A' AND C.CLM_NO IS NOT NULL AND C.APPV_PRCSS_NO IS NULL AND SYSDATE >= A.ADV_REFD_DT)
                                  /*THEN 'Draft'*/
                                  THEN '5'
                             WHEN B.APPV_PRCSS_STUS = 'R' OR B.APPV_PRCSS_STUS = 'P' OR B.APPV_PRCSS_STUS = 'J'
                                  THEN '99'
                        END
                        ]]>
                    ) END
                )
                ELSE '99'
                END as REPAY_STUS
            FROM FCM0027M A
            LEFT JOIN FCM0004M B
                ON A.APPV_PRCSS_NO = B.APPV_PRCSS_NO
            LEFT JOIN FCM0027M C
                ON A.ADV_REFD_NO = C.CLM_NO
            LEFT JOIN FCM0004M D
                ON C.APPV_PRCSS_NO = D.APPV_PRCSS_NO
            WHERE 1=1
            <if test="advType == null and advType != ''">
                AND A.ADV_TYPE in ('5', '6')
            </if>
            <if test="advType != null and advType != ''">
                AND A.ADV_TYPE IN
                <foreach item="item" collection="advType" index="index" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="listCostCenter != null and listCostCenter != ''">
                AND A.COST_CENTER = #{listCostCenter}
            </if>
            <if test="memAccCode != null and memAccCode != ''">
                AND A.MEM_ACC_ID = #{memAccCode}
            </if>
            <if test="reqStartDt != null and reqStartDt != ''">
                <![CDATA[
                    AND B.REQST_DT >= TO_DATE(#{reqStartDt}, 'DD/MM/YYYY')
                ]]>
            </if>
            <if test="reqEndDt != null and reqEndDt != ''">
                <![CDATA[
                    AND B.REQST_DT < TO_DATE(#{reqEndDt}, 'DD/MM/YYYY') + 1
                ]]>
            </if>
            <if test="clmNoStart != null and clmNoStart != ''">
                <![CDATA[
                    AND A.CLM_NO >= #{clmNoStart}
                ]]>
            </if>
            <if test="clmNoEnd != null and clmNoEnd != ''">
                <![CDATA[
                    AND A.CLM_NO <= #{clmNoEnd}
                ]]>
            </if>
            <if test="appStartDt != null and appStartDt != ''">
                <![CDATA[
                    AND B.APPV_PRCSS_DT >= TO_DATE(#{appStartDt}, 'DD/MM/YYYY')
                ]]>
            </if>
            <if test="appEndDt != null and appEndDt != ''">
                <![CDATA[
                    AND B.APPV_PRCSS_DT <= TO_DATE(#{appEndDt}, 'DD/MM/YYYY')
                ]]>
            </if>
            <if test="loginUserId != null and loginUserId != ''">
                AND A.CRT_USER_ID = #{loginUserId}
            </if>
        )
        WHERE 1 = 1
        <if test="refundStus != null and refundStus != ''">
            AND REPAY_STUS IN
            <foreach item="item" collection="refundStus" index="index" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="appvPrcssStus != null and appvPrcssStus != ''">
            AND APPV_PRCSS_STUS IN
            <foreach item="item" collection="appvPrcssStus" index="index" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        ORDER BY POST_DATE DESC
    </select>

    <select id="selectNextClmNo" parameterType="Map" resultType="String">
        SELECT
            <if test='clmType == "REQ"'>
                'R4' ||
            </if>
            <if test='clmType == "REF"'>
                'A3' ||
            </if>
            TO_CHAR (SYSDATE, 'yymm') ||
            MAX(CLM_NO) AS CLM_NO
        FROM (
            SELECT NVL (TO_CHAR (MAX (SUBSTR (CLM_NO, 7, 4) + 1), 'FM0000'), '0001') AS CLM_NO
            FROM FCM0027M
            WHERE SUBSTR (CLM_NO, 3, 4) = TO_CHAR (SYSDATE, 'yymm')
            <if test='clmType == "REQ"'>
                AND SUBSTR (CLM_NO, 1, 2) = 'R4'
            </if>
            <if test='clmType == "REF"'>
                AND SUBSTR (CLM_NO, 1, 2) = 'A3'
            </if>
        )
    </select>

    <select id="selectVendorAdvanceDetails" parameterType="String" resultType="egovMap">
        SELECT
            A.CLM_NO,
            A.ADV_TYPE,
            A.COST_CENTER,
            A.COST_CENTER_NM,
            A.MEM_ACC_ID,
            C.MEM_ACC_NAME,
            A.BANK_CODE,
            A.BANK_ACC_NO,
            A.GL_ACC_NO,
            CASE WHEN A.ADV_TYPE = 5 THEN A.TOT_AMT
                 WHEN A.ADV_TYPE = 6 THEN (SELECT TOT_AMT FROM FCM0027M WHERE ADV_REFD_NO = #{clmNo})
            END TOT_AMT,
            CASE WHEN A.ADV_TYPE = 6
                THEN (SELECT SUM(AMT) FROM FCM0028D FCM28 WHERE FCM28.CLM_NO = A.CLM_NO)
                ELSE 0
            END EXP_AMT,
            CASE WHEN A.ADV_TYPE = 6
                THEN (A.TOT_AMT - (SELECT SUM(AMT) FROM FCM0028D FCM28 WHERE FCM28.CLM_NO = A.CLM_NO))
                ELSE 0
            END BAL_AMT,
            A.ADV_REM REM,
            A.FILE_ATCH_GRP_ID,
            A.ADV_OCC,
            A.ADV_REFD_MODE,
            A.ADV_REFD_REF,
            A.APPV_PRCSS_NO,
            A.ADV_REFD_NO,
            TO_CHAR(A.ADV_REFD_DT, 'DD/MM/YYYY') ADV_REFD_DT,
            TO_CHAR(A.ADV_PRD_FR, 'DD/MM/YYYY') ADV_PRD_FR,
            TO_CHAR(A.ADV_PRD_TO, 'DD/MM/YYYY') ADV_PRD_TO,
            TO_CHAR(A.CRT_DT, 'DD/MM/YYYY') CRT_DT,
            A.CRT_USER_ID,
            B.USER_NAME
        FROM FCM0027M A
        JOIN SYS0047M B
            ON A.CRT_USER_ID = B.USER_ID
        LEFT JOIN FCM0006M C
            ON A.MEM_ACC_ID = C.MEM_ACC_ID
        WHERE A.CLM_NO = #{clmNo}
    </select>

    <select id="selectVendorAdvanceItems" parameterType="String" resultType="egovMap">
        SELECT
            CLAM_UN,
            CLM_SEQ,
            BGT_CODE BUDGET_CODE,
            BGT_NM BUDGET_CODE_NAME,
            GL_ACC_NO GL_ACC_CODE,
            GL_ACC_NM GL_ACC_CODE_NAME,
            INVC_DT,
            INVC_NO,
            SUPPLIER SUPPLIER_NAME,
            'OP (Purchase(0%):Out of scope)' TAX_CODE,
            INVC_CUR CURRENCY,
            AMT TOTAL_AMT,
            REM
        FROM FCM0028D
        WHERE CLM_NO = #{clmNo}
    </select>

    <select id="getRqstInfo" parameterType="Map" resultType="egovMap">
        SELECT
            B.MEM_CODE RQST_CODE,
            B.NAME RQST_NAME
        FROM SYS0047M A
        INNER JOIN ORG0001D B
            ON A.HR_CODE = B.MEM_CODE
        WHERE A.USER_ID = #{userId}
    </select>

    <insert id="insertAdvMst_FCM27M" parameterType="Map">
        INSERT INTO FCM0027M (
            CLM_NO,
            ADV_TYPE,
            COST_CENTER,
            COST_CENTER_NM,
            MEM_ACC_ID,
            BANK_CODE,
            BANK_ACC_NO,
            GL_ACC_NO,
            TOT_AMT,
            FILE_ATCH_GRP_ID,
            ADV_REM,
            <if test="advType == 5">
                ADV_OCC,
            </if>
            <if test="advType == 6">
                ADV_PRD_FR,
                ADV_PRD_TO,
                ADV_REFD_MODE,
                ADV_REFD_REF,
            </if>
            CRT_DT,
            CRT_USER_ID,
            UPD_DT,
            UPD_USER_ID
        ) VALUES (
            #{clmNo},
            #{advType},
            #{costCenterCode},
            <if test="costCenterName != null and costCenterName != '' ">
                #{costCenterName},
            </if>
            <if test="costCenterName == null or costCenterName == '' ">
                (SELECT COST_CENTER_TEXT FROM FCM0008M WHERE COST_CENTER = #{costCenterCode}),
            </if>
            #{memAccId},
            #{bankId},
            #{bankAccNo},
            #{glAccNo},
            #{amt},
            #{atchFileGrpId},
            <if test="advType == 5">
                #{advRem},
                #{advOccasion},
            </if>
            <if test="advType == 6">
                #{settlementRem},
                TO_DATE(#{eventStartDt}, 'DD/MM/YYYY'),
                TO_DATE(#{eventEndDt}, 'DD/MM/YYYY'),
                #{settlementMode},
                #{bankRef},
            </if>
            SYSDATE,
            #{userId},
            SYSDATE,
            #{userId}
        )
    </insert>

    <insert id="insertAdvDet_FCM28D" parameterType="Map">
        INSERT INTO FCM0028D (
            CLM_NO,
            CLM_SEQ,
            AMT,
            TAX_AMT,
            NET_AMT,
            INVC_CUR,
            <if test="advType == 6">
                INVC_NO,
                INVC_DT,
                EXP_TYPE,
                EXP_TYPE_NM,
                GL_ACC_NO,
                GL_ACC_NM,
                BGT_CODE,
                BGT_NM,
                SUPPLIER,
                TAX_CODE,
                CLAM_UN,
            </if>
            REM,
            CRT_DT,
            CRT_USER_ID,
            UPD_DT,
            UPD_USER_ID
        ) values (
            #{clmNo},
            #{clmSeq},
            #{amt},
            #{taxAmt},
            #{netAmt},
            #{currency},
            <if test="advType == 6">
                #{invcNo},
                TO_DATE(#{invcDt}, 'YYYY/MM/DD'),
                #{expType},
                #{expTypeNm},
                #{glAccCode},
                #{glAccCodeName},
                #{budgetCode},
                #{budgetCodeName},
                #{supplierName},
                'VB',
                #{clamUn},
            </if>
            #{rem},
            SYSDATE,
            #{userId},
            SYSDATE,
            #{userId}
        )
    </insert>

    <select id="selectNextClmSeq" parameterType="String" resultType="int">
	    SELECT
	       NVL(MAX(CLM_SEQ) + 1, 1) AS CLM_SEQ
	    FROM FCM0028D
	    WHERE CLM_NO = #{clmNo}
	</select>

    <update id="updateAdvanceReqInfo" parameterType="Map">
        UPDATE FCM0027M
        SET APPV_PRCSS_NO = #{appvPrcssNo}
        WHERE CLM_NO = #{clmNo}
    </update>

    <select id="getRefDtls" parameterType="Map" resultType="egovMap">
        SELECT
            A.ADV_TYPE,
            TO_CHAR(A.CRT_DT, 'DD/MM/YYYY') ENTRY_DT,
            A.COST_CENTER,
            A.COST_CENTER_NM,
            A.MEM_ACC_ID PAYEE_CODE,
            B.NAME PAYEE_NAME,
            A.TOT_AMT,
            E.NAME BANK_NAME,
            B.BANK_ACC_NO,
            D.NAME CRT_USER_NM
        FROM FCM0027M A
        INNER JOIN ORG0001D B
            ON A.MEM_ACC_ID = B.MEM_CODE
        INNER JOIN SYS0047M C
            ON A.CRT_USER_ID = C.USER_ID
        LEFT JOIN ORG0001D D
            ON C.HR_CODE = D.MEM_CODE
        LEFT JOIN SYS0004M E
            ON B.BANK = E.BANK_ID
        WHERE A.CLM_NO = #{claimNo}
    </select>

    <insert id="insertRefund" parameterType="Map">
        INSERT INTO FCM0027M (
            CLM_NO,
            ADV_TYPE,
            COST_CENTER,
            COST_CENTER_NM,
            MEM_ACC_ID,
            BANK_CODE,
            BANK_ACC_NO,
            GL_ACC_NO,
            TOT_AMT,
            ADV_REFD_DT,
            FILE_ATCH_GRP_ID,
            ADV_REM,
            CRT_DT,
            CRT_USER_ID,
            UPD_DT,
            UPD_USER_ID
        ) SELECT
            #{clmNo},
            #{refAdvType},
            COST_CENTER,
            COST_CENTER_NM,
            MEM_ACC_ID,
            BANK_CODE,
            BANK_ACC_NO,
            #{glAccNo},
            TOT_AMT,
            TO_DATE(#{trvAdvRepayDate}, 'DD/MM/YYYY'),
            #{refAtchFileGrpId},
            #{trvRepayRem},
            SYSDATE,
            #{userId},
            SYSDATE,
            #{userId}
        FROM FCM0027M
        WHERE CLM_NO = #{advReqClmNo}
    </insert>

    <insert id="insertAppvDetails" parameterType="Map">
        INSERT INTO FCM0015D (
            APPV_PRCSS_NO,
            APPV_ITM_SEQ,
            INVC_NO,
            INVC_DT,
            MEM_ACC_ID,
            PAY_DUE_DT,
            EXP_TYPE,
            EXP_TYPE_NAME,
            COST_CENTR,
            COST_CENTR_NAME,
            GL_ACC_CODE,
            GL_ACC_CODE_NAME,
            TAX_CODE,
            NET_AMT,
            APPV_AMT,
            EXP_DESC,
            ATCH_FILE_GRP_ID,
            CLAM_UN,
            CRT_DT,
            CRT_USER_ID,
            UPD_DT,
            UPD_USER_ID,
            BIL_PERIOD_F,
            BIL_PERIOD_T
        ) VALUES (
            #{appvPrcssNo},
            #{appvItmSeq},
            #{invcNo},
            NVL(TO_DATE(#{invcDt}, 'DD/MM/YYYY'), NULL),
            #{memAccId},
            SYSDATE,
            #{expType},
            #{expTypeNm},
            #{costCenter},
            (SELECT COST_CENTER_TEXT FROM FCM0008M WHERE COST_CENTER = #{costCenter}),
            #{glAccNo},
            #{glAccNm},
            'VB',
            #{amt},
            #{amt},
            #{expDesc},
            #{atchFileGrpId},
            #{clamUn},
            SYSDATE,
            #{userId},
            SYSDATE,
            #{userId},
            TO_DATE(#{billPeriodFr}, 'DD/MM/YYYY'),
            TO_DATE(#{billPeriodTo}, 'DD/MM/YYYY')
        )

    </insert>

    <update id="updateAdvReqRefd" parameterType="Map">
        UPDATE FCM0027M
        SET ADV_REFD_NO = #{clmNo},
            ADV_REFD_DT = SYSDATE
        WHERE CLM_NO = #{settlementAdvRefdNo}
    </update>

    <select id="getAdvType" parameterType="Map" resultType="egovMap">
        SELECT ADV_TYPE
        FROM FCM0027M
        WHERE APPV_PRCSS_NO = #{appvPrcssNo}
    </select>

    <select id="selectAppvInfoAndItems" parameterType="Map" resultType="egovMap">
        SELECT
            A.APPV_PRCSS_NO,
            A.APPV_PRCSS_STUS,
            A.APPV_REQ_KEY_NO CLM_NO,
            E.CODE_NAME CLM_TYPE,
            C.ADV_TYPE,
            CASE WHEN C.ADV_TYPE = '1' THEN 'Staff Travel Expenses Request'
                 WHEN C.ADV_TYPE = '2' THEN 'Staff Travel Expenses Repayment'
                 WHEN C.ADV_TYPE = '3' THEN 'Staff / Company Events Request'
                 WHEN C.ADV_TYPE = '4' THEN 'Staff / Company Events Repayment'
            END ADV_TYPE_DESC,
            TO_CHAR(A.REQST_DT, 'DD/MM/YYYY') REQST_DT,
            A.REQST_USER_ID,
            A.APPV_LINE_CNT,
            A.APPV_LINE_PRCSS_CNT,
            TO_CHAR(B.INVC_DT, 'DD/MM/YYYY') INVC_DT,
            B.INVC_NO,
            B.MEM_ACC_ID,
            D.MEM_ACC_NAME,
            B.COST_CENTR,
            B.COST_CENTR_NAME,
            F.NAME BANK,
            C.BANK_ACC_NO,
            B.PAY_DUE_DT,
            TO_CHAR(C.ADV_PRD_FR, 'DD/MM/YYYY') ADV_PRD_FR,
            TO_CHAR(C.ADV_PRD_TO, 'DD/MM/YYYY') ADV_PRD_TO,
            (C.ADV_PRD_TO - C.ADV_PRD_FR) + 1 DATEDIFF,
            C.ADV_LOC_FR,
            C.ADV_LOC_TO,
            B.EXP_DESC,
            TO_CHAR(C.ADV_REFD_DT, 'DD/MM/YYYY') ADV_REFD_DT,
            <if test="advType == 1">
                (SELECT EXP_TYPE FROM FCM0028D WHERE CLM_NO = C.CLM_NO AND EXP_TYPE = 'AD001') as ACC_EXP,
                (SELECT EXP_TYPE_NM FROM FCM0028D WHERE CLM_NO = C.CLM_NO AND EXP_TYPE = 'AD001') as ACC_NM,
                NVL((SELECT TO_CHAR(AMT, '999,999,999,999.99') FROM FCM0028D WHERE CLM_NO = C.CLM_NO AND EXP_TYPE = 'AD001'), TO_CHAR(0, '0.00')) as ACC_AMT,
                (SELECT EXP_TYPE FROM FCM0028D WHERE CLM_NO = C.CLM_NO AND EXP_TYPE = 'AD002') as MIL_EXP,
                (SELECT EXP_TYPE_NM FROM FCM0028D WHERE CLM_NO = C.CLM_NO AND EXP_TYPE = 'AD002') as MIL_NM,
                NVL((SELECT MILEAGE FROM FCM0028D WHERE CLM_NO = C.CLM_NO AND EXP_TYPE = 'AD002'), 0) as MIL_DIST,
                NVL((SELECT TO_CHAR(AMT, '999,999,999,999.99') FROM FCM0028D WHERE CLM_NO = C.CLM_NO AND EXP_TYPE = 'AD002'), TO_CHAR(0, '0.00')) as MIL_AMT,
                (SELECT EXP_TYPE FROM FCM0028D WHERE CLM_NO = C.CLM_NO AND EXP_TYPE = 'AD003') as TOLL_EXP,
                (SELECT EXP_TYPE_NM FROM FCM0028D WHERE CLM_NO = C.CLM_NO AND EXP_TYPE = 'AD003') as TOLL_NM,
                NVL((SELECT TO_CHAR(AMT, '999,999,999,999.99') FROM FCM0028D WHERE CLM_NO = C.CLM_NO AND EXP_TYPE = 'AD003'), TO_CHAR(0, '0.00')) as TOLL_AMT,
                (SELECT EXP_TYPE FROM FCM0028D WHERE CLM_NO = C.CLM_NO AND EXP_TYPE = 'AD004') as OTH_EXP,
                (SELECT EXP_TYPE_NM FROM FCM0028D WHERE CLM_NO = C.CLM_NO AND EXP_TYPE = 'AD004') as OTH_NM,
                (SELECT REM FROM FCM0028D WHERE CLM_NO = C.CLM_NO AND EXP_TYPE = 'AD004') as OTH_REM,
                NVL((SELECT TO_CHAR(AMT, '999,999,999,999.99') FROM FCM0028D WHERE CLM_NO = C.CLM_NO AND EXP_TYPE = 'AD004'), TO_CHAR(0, '0.00')) as OTH_AMT,
                TO_CHAR(
                    (NVL((SELECT AMT FROM FCM0028D WHERE CLM_NO = C.CLM_NO AND EXP_TYPE = 'AD001'), 0) + NVL((SELECT AMT FROM FCM0028D WHERE CLM_NO = C.CLM_NO AND EXP_TYPE = 'AD002'), 0) +
                    NVL((SELECT AMT FROM FCM0028D WHERE CLM_NO = C.CLM_NO AND EXP_TYPE = 'AD003'), 0) +  NVL((SELECT AMT FROM FCM0028D WHERE CLM_NO = C.CLM_NO AND EXP_TYPE = 'AD004'), 0)) , '999,999,999,999.99'
                ) AS CLM_AMT,
            </if>
            <if test="advType == 2">
                B.APPV_AMT REPAY_AMT,
                I.CLM_NO ADV_REFD_CLM_NO,
                TO_CHAR(I.ADV_PRD_FR, 'DD/MM/YYYY') REF_TRV_PRD_FR,
                TO_CHAR(I.ADV_PRD_TO, 'DD/MM/YYYY') REF_TRV_PRD_TO,
            </if>
            B.ATCH_FILE_GRP_ID,
            H.ATCH_FILE_ID,
            H.ATCH_FILE_NAME
        FROM FCM0004M A
        LEFT JOIN FCM0015D B
            ON A.APPV_PRCSS_NO = B.APPV_PRCSS_NO
        LEFT JOIN FCM0027M C
            ON A.APPV_PRCSS_NO = C.APPV_PRCSS_NO
        LEFT JOIN FCM0006M D
            ON B.MEM_ACC_ID = D.MEM_ACC_ID
        LEFT JOIN SYS0013M E
            ON SUBSTR(A.APPV_REQ_KEY_NO, 1, 2) = E.CODE
        LEFT JOIN SYS0004M F
            ON C.BANK_CODE = F.BANK_ID
        LEFT JOIN SYS0070M G
            ON B.ATCH_FILE_GRP_ID = G.ATCH_FILE_GRP_ID
        LEFT JOIN SYS0071D H
            ON G.ATCH_FILE_ID = H.ATCH_FILE_ID
        <if test="advType == 2">
            LEFT JOIN FCM0027M I
                ON A.APPV_REQ_KEY_NO = I.ADV_REFD_NO
        </if>
        WHERE A.APPV_PRCSS_NO = #{appvPrcssNo}
    </select>

    <select id="getAdvClmInfo" parameterType="Map" resultType="egovMap">
        SELECT
            A.CLM_NO,
            A.ADV_TYPE,
            CASE WHEN A.ADV_TYPE = '1' THEN 'Staff Travel Expenses Request'
                 WHEN A.ADV_TYPE = '2' THEN 'Staff Travel Expenses Repayment'
                 WHEN A.ADV_TYPE = '3' THEN 'Staff / Company Events Request'
                 WHEN A.ADV_TYPE = '4' THEN 'Staff / Company Events Repayment'
            END AS ADV_TYPE_DESC,
            A.COST_CENTER,
            A.COST_CENTER_NM,
            A.MEM_ACC_ID PAYEE,
            E.MEM_ACC_NAME PAYEE_NAME,
            A.BANK_CODE,
            F.NAME BANK_NAME,
            A.BANK_ACC_NO,
            A.TOT_AMT,
            TO_CHAR(A.ADV_PRD_FR, 'DD/MM/YYYY') ADV_PRD_FR,
            TO_CHAR(A.ADV_PRD_TO, 'DD/MM/YYYY') ADV_PRD_TO,
            A.ADV_LOC_FR,
            A.ADV_LOC_TO,
            TO_CHAR(A.ADV_REFD_DT, 'DD/MM/YYYY') ADV_REFD_DT,
            A.ADV_REM,
            TO_CHAR(A.CRT_DT, 'DD/MM/YYYY') ENTRY_DT,
            A.CRT_USER_ID,
            D.USER_NAME CRT_USER_NAME,
            <if test="advType == 1">
                (SELECT EXP_TYPE FROM FCM0028D WHERE CLM_NO = A.CLM_NO AND EXP_TYPE = 'AD001') as ACC_EXP,
                (SELECT EXP_TYPE_NM FROM FCM0028D WHERE CLM_NO = A.CLM_NO AND EXP_TYPE = 'AD001') as ACC_NM,
                NVL((SELECT AMT FROM FCM0028D WHERE CLM_NO = A.CLM_NO AND EXP_TYPE = 'AD001'), 0) as ACC_AMT,
                (SELECT EXP_TYPE FROM FCM0028D WHERE CLM_NO = A.CLM_NO AND EXP_TYPE = 'AD002') as MIL_EXP,
                (SELECT EXP_TYPE_NM FROM FCM0028D WHERE CLM_NO = A.CLM_NO AND EXP_TYPE = 'AD002') as MIL_NM,
                NVL((SELECT MILEAGE FROM FCM0028D WHERE CLM_NO = A.CLM_NO AND EXP_TYPE = 'AD002'), 0) as MIL_DIST,
                NVL((SELECT AMT FROM FCM0028D WHERE CLM_NO = A.CLM_NO AND EXP_TYPE = 'AD002'), 0) as MIL_AMT,
                (SELECT EXP_TYPE FROM FCM0028D WHERE CLM_NO = A.CLM_NO AND EXP_TYPE = 'AD003') as TOLL_EXP,
                (SELECT EXP_TYPE_NM FROM FCM0028D WHERE CLM_NO = A.CLM_NO AND EXP_TYPE = 'AD003') as TOLL_NM,
                NVL((SELECT AMT FROM FCM0028D WHERE CLM_NO = A.CLM_NO AND EXP_TYPE = 'AD003'), 0) as TOLL_AMT,
                (SELECT EXP_TYPE FROM FCM0028D WHERE CLM_NO = A.CLM_NO AND EXP_TYPE = 'AD004') as OTH_EXP,
                (SELECT EXP_TYPE_NM FROM FCM0028D WHERE CLM_NO = A.CLM_NO AND EXP_TYPE = 'AD004') as OTH_NM,
                (SELECT REM FROM FCM0028D WHERE CLM_NO = A.CLM_NO AND EXP_TYPE = 'AD004') as OTH_REM,
                NVL((SELECT AMT FROM FCM0028D WHERE CLM_NO = A.CLM_NO AND EXP_TYPE = 'AD004'), 0) as OTH_AMT,
            </if>
            <if test="advType == 2">
                (SELECT TO_CHAR(INVC_DT, 'DD/MM/YYYY') FROM FCM0028D WHERE CLM_NO = A.CLM_NO) INVC_DT,
                (SELECT INVC_NO FROM FCM0028D WHERE CLM_NO = A.CLM_NO) INVC_NO,
                (SELECT EXP_TYPE FROM FCM0028D WHERE CLM_NO = A.CLM_NO AND EXP_TYPE = 'AD101') as TRV_REF_EXP,
                (SELECT EXP_TYPE_NM FROM FCM0028D WHERE CLM_NO = A.CLM_NO AND EXP_TYPE = 'AD101') as REV_REF_NM,
                NVL((SELECT TO_CHAR(AMT, '999,999,999,999.99') FROM FCM0028D WHERE CLM_NO = A.CLM_NO AND EXP_TYPE = 'AD101'), TO_CHAR(0, '0.00')) as TRV_REF_AMT,
                TO_CHAR((SELECT ADV_PRD_FR FROM FCM0027M WHERE ADV_REFD_NO = A.CLM_NO), 'DD/MM/YYYY') ADV_REF_PRD_FR,
                TO_CHAR((SELECT ADV_PRD_TO FROM FCM0027M WHERE ADV_REFD_NO = A.CLM_NO), 'DD/MM/YYYY') ADV_REF_PRD_TO,
                (SELECT CLM_NO FROM FCM0027M WHERE ADV_REFD_NO = A.CLM_NO) ADV_REQ_CLM_NO,
            </if>
            A.FILE_ATCH_GRP_ID,
            C.ATCH_FILE_ID,
            C.ATCH_FILE_NAME
        FROM FCM0027M A
        LEFT JOIN SYS0070M B
            ON A.FILE_ATCH_GRP_ID = B.ATCH_FILE_GRP_ID
        LEFT JOIN SYS0071D C
            ON B.ATCH_FILE_ID = C.ATCH_FILE_ID
        LEFT JOIN SYS0047M D
            ON A.CRT_USER_ID = D.USER_ID
        LEFT JOIN FCM0006M E
            ON A.MEM_ACC_ID = E.MEM_ACC_ID
        LEFT JOIN SYS0004M F
            ON A.BANK_CODE = F.BANK_ID
        WHERE A.CLM_NO = #{clmNo}
    </select>

    <update id="editDraftRequestM" parameterType="Map">
        UPDATE FCM0027M
        SET
            COST_CENTER = #{costCenterCode},
            COST_CENTER_NM = #{costCenterName},
            MEM_ACC_ID = #{payeeCode},
            BANK_CODE = #{bankId},
            BANK_ACC_NO = #{bankAccNo},
            <if test="advType == 1">
                TOT_AMT = #{reqTotAmt},
                ADV_PRD_FR = TO_DATE(#{trvPeriodFr}, 'DD/MM/YYYY'),
                ADV_PRD_TO = TO_DATE(#{trvPeriodTo}, 'DD/MM/YYYY'),
                ADV_LOC_FR = #{locationFrom},
                ADV_LOC_TO = #{locationTo},
            </if>
            ADV_REM = #{trvReqRem},
            ADV_REFD_DT = TO_DATE(#{refdDate}, 'DD/MM/YYYY'),
            UPD_DT = SYSDATE
        WHERE CLM_NO = #{clmNo}
    </update>

    <update id="editDraftRequestD" parameterType="Map">
        MERGE INTO FCM0028D TRGT
        USING (
            SELECT #{clmNo} CLM_NO,
                   #{expType} EXP_TYPE
            FROM DUAL
        ) SRC
        ON (TRGT.CLM_NO = SRC.CLM_NO AND TRGT.EXP_TYPE = SRC.EXP_TYPE)
        <if test="advType == 1">
        WHEN MATCHED THEN
            UPDATE SET
                INVC_NO = #{invcNo},
                INVC_DT = TO_DATE(#{invcDt}, 'DD/MM/YYYY'),
                MILEAGE = #{mileage},
                AMT = #{dAmt},
                UPD_DT = SYSDATE
        WHEN NOT MATCHED THEN
            INSERT (
                CLM_NO,
                CLM_SEQ,
                INVC_NO,
                INVC_DT,
                EXP_TYPE,
                EXP_TYPE_NM,
                MILEAGE,
                AMT,
                CRT_DT,
                CRT_USER_ID,
                UPD_DT,
                UPD_USER_ID
            ) values (
                #{clmNo},
                (SELECT MAX(CLM_SEQ) + 1 FROM FCM0028D WHERE CLM_NO = #{clmNo}),
                #{invcNo},
                TO_DATE(#{invcDt}, 'DD/MM/YYYY'),
                #{expType},
                #{expTypeNm},
                #{mileage},
                #{dAmt},
                SYSDATE,
                #{userId},
                SYSDATE,
                #{userId}
            )
        </if>
        <if test="advType == 2">
        WHEN MATCHED THEN
            UPDATE SET
                INVC_NO = #{invcNo},
                INVC_DT = TO_DATE(#{invcDt}, 'DD/MM/YYYY'),
                UPD_DT = SYSDATE
        </if>
    </update>

    <update id="updateTotal" parameterType="Map">
        UPDATE FCM0027M
        SET TOT_AMT = (SELECT SUM(AMT) FROM FCM0028D WHERE CLM_NO = #{clmNo})
        WHERE CLM_NO = #{clmNo}
    </update>

    <!-- ******************************************************************************************** -->
    <insert id="insertApproveManagement" parameterType="Map">
       INSERT INTO FCM0004M (
            APPV_PRCSS_NO,
            APPV_REQ_KEY_NO,
            REQST_DT,
            REQST_USER_ID,
            APPV_PRCSS_STUS,
            APPV_LINE_CNT,
            APPV_LINE_PRCSS_CNT,
            APPV_PRCSS_DESC,
            CRT_DT,
            CRT_USER_ID,
            UPD_DT,
            UPD_USER_ID
        ) values (
            #{appvPrcssNo},
            #{clmNo},
            SYSDATE,
            #{userName},
            'R',
            #{appvLineCnt},
            0,
            #{appvPrcssDesc},
            SYSDATE,
            #{userId},
            SYSDATE,
            #{userId}
        )
    </insert>

    <insert id="insertApproveLineDetail" parameterType="Map">
        INSERT INTO FCM0005D (
            APPV_PRCSS_NO,
            APPV_LINE_SEQ,
            APPV_LINE_USER_ID,
            APPV_DT,
            APPV_STUS,
            CRT_DT,
            CRT_USER_ID,
            UPD_DT,
            UPD_USER_ID
        ) values (
            #{appvPrcssNo},
            #{approveNo},
            #{memCode},
            #{appvDt},
            <choose>
                <when test="approveNo == 1">
                    'R',
                </when>
                <otherwise>
                    'T',
                </otherwise>
            </choose>
            SYSDATE,
            #{userId},
            SYSDATE,
            #{userId}
        )
    </insert>

    <update id="insMissAppr" parameterType="Map">
        MERGE INTO FCM0005D A
        USING (
            SELECT
                APPV_PRCSS_NO,
                MAX(APPV_LINE_SEQ) APPV_LINE_SEQ,
                #{memCode} APPV_LINE_USER_ID
            FROM FCM0005D
            WHERE APPV_PRCSS_NO = #{appvPrcssNo}
            GROUP BY
                APPV_PRCSS_NO,
                #{memCode}
        ) SRC
        ON (A.APPV_PRCSS_NO = SRC.APPV_PRCSS_NO
            AND A.APPV_LINE_SEQ = SRC.APPV_LINE_SEQ
            AND A.APPV_LINE_USER_ID = SRC.APPV_LINE_USER_ID)
        WHEN NOT MATCHED THEN
        INSERT (
            APPV_PRCSS_NO,
            APPV_LINE_SEQ,
            APPV_LINE_USER_ID,
            APPV_STUS,
            CRT_DT,
            CRT_USER_ID,
            UPD_DT,
            UPD_USER_ID
        ) VALUES (
            SRC.APPV_PRCSS_NO,
            (TO_NUMBER(SRC.APPV_LINE_SEQ) + 1),
            #{memCode},
            'T',
            SYSDATE,
            #{userId},
            SYSDATE,
            #{userId}
        )
    </update>

    <insert id="insertNotification" parameterType="Map">
        INSERT INTO SYS0092M VALUES (
            SYS0092M_ID_SEQ.NEXTVAL,
            #{code},
            #{codeName},
            #{clmNo},
            #{appvStus},
            #{rejctResn},
            #{reqstUserId},
            '1',
            SYSDATE,
            #{userId},
            SYSDATE,
            #{userId}
        )
    </insert>

    <update id="updateAppvPrcssNo" parameterType="Map">
        UPDATE FCM0027M
        SET APPV_PRCSS_NO = #{appvPrcssNo},
            UPD_DT = SYSDATE,
            UPD_USER_ID = #{userId}
        WHERE CLM_NO = #{clmNo}
    </update>

    <select id="getAppvInfo" parameterType="String" resultType="egovMap">
        SELECT
            APPV_PRCSS_NO,
            APPV_REQ_KEY_NO CLM_NO,
            REQST_USER_ID,
            TO_CHAR(REQST_DT, 'DD/MM/YYYY') REQST_DT
        FROM FCM0004M
        WHERE APPV_PRCSS_NO = #{appvPrcssNo}
    </select>

    <delete id="deleteAdvDet_FCM28D" parameterType="Map">
        DELETE FROM FCM0028D
        WHERE CLM_NO = #{clmNo}
          AND CLM_SEQ = #{clmSeq}
    </delete>

    <update id="updateAdvMst_FCM27M" parameterType="Map">
        UPDATE FCM0027M
        SET TOT_AMT = #{totAmt},
            COST_CENTER = #{costCenterCode},
            <if test="costCenterName != null and costCenterName != '' ">
                COST_CENTER_NM = #{costCenterName},
            </if>
            <if test="costCenterName == null or costCenterName == '' ">
                COST_CENTER_NM = (SELECT COST_CENTER_TEXT FROM FCM0008M WHERE COST_CENTER = #{costCenterCode}),
            </if>
            MEM_ACC_ID = #{memAccId},
            BANK_CODE = #{bankId},
            BANK_ACC_NO = #{bankAccNo},
            <if test="advType == 5">
                ADV_REM = #{advRem},
            </if>
            <if test="advType == 6">
                ADV_REM = #{settlementRem},
                ADV_PRD_FR = TO_DATE(#{eventStartDt}, 'DD/MM/YYYY'),
                ADV_PRD_TO =TO_DATE(#{eventEndDt}, 'DD/MM/YYYY'),
                ADV_REFD_MODE = #{settlementMode},
                ADV_REFD_REF = #{bankRef},
            </if>
            UPD_DT = SYSDATE,
            UPD_USER_ID = #{userId}
        WHERE CLM_NO = #{clmNo}
    </update>

    <update id="updateAdvDet_FCM28D" parameterType="Map">
        UPDATE FCM0028D
        SET AMT = #{totAmt},
            NET_AMT = #{netAmt},
            <if test="advType == 6">
                INVC_NO = #{invcNo},
                INVC_DT = TO_DATE(#{invcDt}, 'YYYY/MM/DD'),
                EXP_TYPE = #{expType},
                EXP_TYPE_NAME = #{expTypeNm},
                GL_ACC_NO = #{glAccCode},
                GL_ACC_NM = #{glAccCodeName},
                BGT_CODE = #{budgetCode},
                BGT_NM = #{budgetCodeName},
                SUPPLIER = #{supplierName},
                INVC_CUR = #{currency},
            </if>
            UPD_DT = SYSDATE,
            UPD_USER_ID = #{userId}
        WHERE CLM_NO = #{clmNo}
          AND CLM_SEQ = #{clmSeq}
    </update>
</mapper>