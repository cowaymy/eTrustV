<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.coway.trust.biz.eAccounting.vendorMgmtEmro.VendorMgmtEmroMapper">

    <select id="selectSAPCountry" resultType="egovMap">

            SELECT SAP_CNTY_S_CODE CODE, SAP_CNT_NAME NAME
            FROM FCM0030C ORDER BY SAP_CNT_NAME

    </select>

        <select id="selectBank" resultType="egovMap">

            SELECT CODE CODE, NAME NAME
            FROM SYS0004M
            WHERE IS_SAP = 1
            ORDER BY CODE

    </select>

    <select id="selectVendorList" parameterType="Map" resultType="egovMap">

        SELECT RES.* FROM (
	        SELECT
	            X1.*,
	            CASE WHEN X2.APPV_PRCSS_STUS = 'R' THEN 'Request'
	                 WHEN X2.APPV_PRCSS_STUS = 'A' THEN 'Approved'
	                 WHEN X2.APPV_PRCSS_STUS = 'P' THEN 'Pending'
	                 WHEN X2.APPV_PRCSS_STUS = 'J' THEN 'Rejected'
	                 WHEN X2.APPV_PRCSS_STUS = 'T' THEN 'DRAFT'
	                 WHEN X1.FLG = 'R' THEN 'DRAFT'
	                 WHEN X1.FLG = 'M' THEN ''
	            END APPV_PRCSS_STUS,
	            NVL(X2.APPV_PRCSS_STUS, 'T') AS APPV_PRCSS_STUS_CODE,
	            TO_CHAR(X2.REQST_DT, 'DD/MM/YYYY') REQUEST_DT,
	            TO_CHAR(X2.APPV_PRCSS_DT, 'DD/MM/YYYY') APPV_PRCSS_DT,
	            CASE WHEN X2.REQST_USER_ID IS NOT NULL THEN X2.REQST_USER_ID || ' - ' || X3.USER_FULL_NAME
	                 ELSE ''
	            END REQUESTOR
	        FROM (
		        SELECT REQ_NO,
		                   KEY_IN_DT,
		                   VENDOR_GRP,
		                   VENDOR_TYPE,
		                   COST_CENTER,
		                   COST_CENTER_NAME,
		                   VENDOR_ACC_ID,
		                   VENDOR_NAME,
		                   VENDOR_REG_NO_NRIC,
		                   EMAIL,
		                   EMAIL2,
		                   FLG,
		                   APPV_PRCSS_NO,
		                   SYNC_EMRO
				FROM (
				    SELECT A.*,
				           RANK() OVER (PARTITION BY A.VENDOR_ACC_ID ORDER BY CASE WHEN A.REQ_NO IS NOT NULL AND A.REQ_NO IS NOT NULL THEN 1 ELSE 2 END, A.VENDOR_ACC_ID DESC) ROW_NUM
				    FROM (
				        SELECT  '' REQ_NO,
				                TO_CHAR(W.CRT_DATE, 'DD/MM/YYYY') KEY_IN_DT,
				                W.VENDOR_GRP VENDOR_GRP,
				                W.VENDOR_TYPE VENDOR_TYPE,
				                '' COST_CENTER,
				                '' COST_CENTER_NAME,
				                W.VENDOR_ACC_ID VENDOR_ACC_ID,
				                W.VENDOR_NAME VENDOR_NAME,
				                W.VENDOR_REG_NO_NRIC VENDOR_REG_NO_NRIC,
				                W.PAY_ADV_EMAIL1 EMAIL,
				                W.PAY_ADV_EMAIL2 EMAIL2,
				                'M' FLG,
				                '' APPV_PRCSS_NO,
				                W.SYNC_EMRO
				        FROM FCM0031D W

				        UNION

				        SELECT
				            C.VENDOR_REQ_NO REQ_NO,
				                TO_CHAR(C.CRT_DATE, 'DD/MM/YYYY') KEY_IN_DT,
				                C.VENDOR_GRP VENDOR_GRP,
				                C.VENDOR_TYPE VENDOR_TYPE,
				                C.COST_CENTER COST_CENTER,
				                C.COST_CENTER_NAME COST_CENTER_NAME,
				                C.VENDOR_ACC_ID VENDOR_ACC_ID,
				                C.VENDOR_NAME VENDOR_NAME,
				                C.VENDOR_REG_NO_NRIC VENDOR_REG_NO_NRIC,
				                C.PAY_ADV_EMAIL1 EMAIL,
				                C.PAY_ADV_EMAIL2 EMAIL2,
				                'R' AS FLG,
				                TO_CHAR(C.APPV_PRCSS_NO) APPV_PRCSS_NO,
				                C.SYNC_EMRO
				        FROM FCM0029D C
				        JOIN FCM0004M D
				            ON C.APPV_PRCSS_NO = D.APPV_PRCSS_NO
				            AND D.APPV_PRCSS_STUS = 'A'
				    ) A
				)AA
				WHERE ROW_NUM = 1
		    /* Vendor related where clause */

		    <if test="memAccId != null and memAccId != ''"> AND AA.VENDOR_ACC_ID = #{memAccId}</if>
		    <if test="regNo != null and regNo != ''"> AND AA.VENDOR_REG_NO_NRIC= #{regNo}</if>
		    <if test="costCenter != null and costCenter != ''"> AND AA.COST_CENTER =  #{costCenter}</if>
		    <if test="startDt != null and startDt != ''">
		        <![CDATA[
		            AND TO_DATE(AA.KEY_IN_DT, 'DD/MM/YYYY') >= TO_DATE(#{startDt}, 'DD/MM/YYYY')
		        ]]>
		    </if>
		    <if test="endDt != null and endDt != ''">
		        <![CDATA[
		            AND TO_DATE(AA.KEY_IN_DT, 'DD/MM/YYYY') < TO_DATE(#{endDt}, 'DD/MM/YYYY') + 1
		        ]]>
		    </if>
		    <if test="vendorReqNoFrom != null and vendorReqNoFrom != ''">
	             <![CDATA[
	                AND UPPER(AA.VENDOR_REQ_NO) >= UPPER(#{vendorReqNoFrom})
	             ]]>
	        </if>
	        <if test="vendorReqNoTo != null and vendorReqNoTo != ''">
	             <![CDATA[
	                AND UPPER(AA.VENDOR_REQ_NO) <= UPPER(#{vendorReqNoTo})
	             ]]>
	        </if>
	        <if test="vendorTypeCmb != null and vendorTypeCmb != ''">
                    AND AA.VENDOR_TYPE IN
			      <foreach item="item" collection="vendorTypeCmb" index="index"
			        open="(" separator="," close=")">
			        #{item}
			      </foreach>
            </if>
	        <if test="syncStatus != null and syncStatus != ''">
                    AND AA.SYNC_EMRO IN
			      <foreach item="item" collection="syncStatus" index="index"
			        open="(" separator="," close=")">
			        #{item}
			      </foreach>
            </if>

		) X1
		LEFT JOIN FCM0004M X2
		    ON X1.APPV_PRCSS_NO = X2.APPV_PRCSS_NO
		LEFT JOIN SYS0047M X3
		    ON X2.REQST_USER_ID = X3.USER_NAME
		WHERE 1 = 1
		/* Approval related where clause */
		    <if test="appStartDt != null and appStartDt != ''">
		        <![CDATA[
		            AND X2.APPV_PRCSS_DT >= TO_DATE(#{appStartDt}, 'DD/MM/YYYY')
		        ]]>
		    </if>
		    <if test="appEndDt != null and appEndDt != ''">
		        <![CDATA[
		            AND X2.APPV_PRCSS_DT < TO_DATE(#{appEndDt}, 'DD/MM/YYYY') + 1
		        ]]>
		    </if>
	) RES
	<if test="(appvPrcssStus != null and appvPrcssStus != '')">
                WHERE RES.APPV_PRCSS_STUS_CODE IN
                    <foreach item="item" collection="appvPrcssStus" index="index" open="(" separator="," close=")">
                                 #{item}
                    </foreach>
    </if>

    </select>

    <select id="selectVendorInfo" parameterType="String" resultType="egovMap">

         SELECT T1.VENDOR_REQ_NO
                   ,T1.VENDOR_ACC_ID
                   ,T1.VENDOR_GRP
                   ,T1.COST_CENTER
                   ,T1.COST_CENTER_NAME
                   ,T1.VENDOR_NAME
                   ,T1.VENDOR_REG_NO_NRIC
                   ,T1.PAY_ADV_EMAIL1
                   ,T1.PAY_ADV_EMAIL2
                   ,T1.ADD_HOUSE_LOT_NO
                   ,T1.ADD_STREET
                   ,T1.ADD_POSTAL_CODE
                   ,T1.ADD_CITY
                   ,T1.ADD_COUNTRY
                   ,T1.BANK_COUNTRY
                   ,T1.BANK
                   ,T1.BANK_ACC_HOLDER
                   ,T1.BANK_ACC_NO
                   ,T1.BANK_BRANCH
                   ,T1.SWIFT_CODE
                   ,T1.CONTACT_DESIGNATION
                   ,T1.CONTACT_NAME
                   ,T1.CONTACT_PHONE_NO
                   ,T1.CONTACT_EMAIL
                   ,T1.PAY_TERM
                   ,T1.PAY_TYPE
                   ,T1.PAY_OTH
                   ,T1.ATCH_FILE_GRP_ID
                   ,T1.APPV_PRCSS_NO
                   ,T1.REM
                   ,T1.UPD_DATE
                   ,T2.USER_NAME AS USER_NAME
                   ,T3.CODE_DESC AS VENDOR_TYPE
                   ,T1.SYNC_EMRO SYNC_EMRO
                   ,T4.USER_NAME EMRO_UPD_NAME
                   ,T1.EMRO_UPD_DATE EMRO_UPD_DATE
		FROM FCM0029D T1
		LEFT JOIN SYS0047M T2 ON T1.CRT_USER_ID = T2.USER_ID
		LEFT JOIN SYS0013M T3 ON T3.CODE = T1.VENDOR_TYPE AND T3.CODE_MASTER_ID = 612
		LEFT JOIN SYS0047M T4 ON T4.USER_ID = T1.EMRO_UPD_USER_ID
		WHERE T1.VENDOR_REQ_NO = #{reqNo}
    </select>

    <select id="selectVendorInfoMaster" parameterType="String" resultType="egovMap">

         SELECT T3.VENDOR_ACC_ID
                    , T3.VENDOR_GRP
                    , T3.VENDOR_NAME
                    , T3.VENDOR_REG_NO_NRIC
                    , T3.PAY_ADV_EMAIL1
                    , T3.PAY_ADV_EMAIL2
                    , T3.ADD_HOUSE_LOT_NO
                    , T3.ADD_STREET
                    , T3.ADD_POSTAL_CODE
                    , T3.ADD_CITY
                    , T3.ADD_COUNTRY
                    , T3.BANK_COUNTRY
                    , T3.BANK
                    , T3.BANK_ACC_HOLDER
                    , T3.BANK_ACC_NO
                    , T3.BANK_BRANCH
                    , T3.SWIFT_CODE
                    , T3.CONTACT_DESIGNATION
                    , T3.CONTACT_NAME
                    , T3.CONTACT_PHONE_NO
                    , T3.CONTACT_EMAIL
                    , T3.PAY_TERM
                    , T3.PAY_TYPE
                    , T3.PAY_OTH
                    , T3.REM
                    , T3.CRT_USER_ID
                    , T3.CRT_DATE
                    , T3.UPD_USER_ID
                    , T3.UPD_DATE
                    , T3.SYNC_EMRO
                    , NVL(T5.USER_NAME, '') AS USER_NAME
                    , T4.CODE_DESC AS VENDOR_TYPE
                    , T3.EMRO_UPD_DATE EMRO_UPD_DATE
                    , T5.USER_NAME AS EMRO_UPD_NAME
        FROM FCM0031D T3
        LEFT JOIN SYS0047M T2 ON T3.CRT_USER_ID = T2.USER_ID
        LEFT JOIN SYS0013M T4 ON T4.CODE = T3.VENDOR_TYPE AND T4.CODE_MASTER_ID = 612
        LEFT JOIN SYS0047M T5 ON T5.USER_ID = T3.EMRO_UPD_USER_ID
        WHERE T3.VENDOR_ACC_ID = #{vendorAccId}
    </select>

    <select id="selectAttachList" parameterType="String" resultType="egovMap">

         SELECT T1.ATCH_FILE_GRP_ID
                ,T1.ATCH_FILE_ID
                ,T2.ATCH_FILE_NAME
                ,T2.FILE_SUB_PATH
                ,T2.PHYSICL_FILE_NAME
                ,T2.FILE_EXTSN
                ,T2.FILE_SIZE
         FROM SYS0070M T1
         LEFT JOIN SYS0071D T2
         ON T1.ATCH_FILE_ID = T2.ATCH_FILE_ID
         WHERE T1.ATCH_FILE_GRP_ID = #{atchFileGrpId}
         ORDER BY T1.ATCH_FILE_ID
    </select>

    <select id="getAppvExcelInfo" resultType="egovMap">
        SELECT RES.* FROM (
            SELECT
            X1.*,
            CASE WHEN X2.APPV_PRCSS_STUS = 'R' THEN 'Request'
                 WHEN X2.APPV_PRCSS_STUS = 'A' THEN 'Approved'
                 WHEN X2.APPV_PRCSS_STUS = 'P' THEN 'Pending'
                 WHEN X2.APPV_PRCSS_STUS = 'J' THEN 'Rejected'
                 WHEN X2.APPV_PRCSS_STUS = 'T' THEN 'DRAFT'
                 WHEN X1.FLG = 'R' THEN 'DRAFT'
                 WHEN X1.FLG = 'M' THEN ''
            END APPV_PRCSS_STUS,
            NVL(X2.APPV_PRCSS_STUS, 'T') AS APPV_PRCSS_STUS_CODE,
            TO_CHAR(X2.REQST_DT, 'DD/MM/YYYY') REQUEST_DT,
            TO_CHAR(X2.APPV_PRCSS_DT, 'DD/MM/YYYY') APPV_PRCSS_DT,
            CASE WHEN X2.REQST_USER_ID IS NOT NULL THEN X2.REQST_USER_ID || ' - ' || X3.USER_FULL_NAME
                 ELSE ''
            END REQUESTOR
        FROM (
            SELECT
                NVL(B.VENDOR_REQ_NO, '') REQ_NO,
                TO_CHAR(B.CRT_DATE, 'DD/MM/YYYY') KEY_IN_DT,
                NVL(A.VENDOR_GRP, B.VENDOR_GRP) VENDOR_GRP,
                B.VENDOR_TYPE VENDOR_TYPE,
                B.COST_CENTER,
                B.COST_CENTER_NAME,
                NVL(A.VENDOR_ACC_ID, B.VENDOR_ACC_ID) VENDOR_ACC_ID,

                CASE WHEN B.VENDOR_REQ_NO IS NULL THEN NVL(A.VENDOR_NAME, B.VENDOR_NAME)
                        ELSE NVL(B.VENDOR_NAME, A.VENDOR_NAME)
                END VENDOR_NAME,
                NVL(A.VENDOR_REG_NO_NRIC, B.VENDOR_REG_NO_NRIC) VENDOR_REG_NO_NRIC,
                B.PAY_ADV_EMAIL1 EMAIL,
                B.PAY_ADV_EMAIL2 EMAIL2,
                CASE WHEN B.VENDOR_REQ_NO IS NULL THEN 'M'
                     ELSE 'R'
                END FLG,
                NVL(B.APPV_PRCSS_NO, '') APPV_PRCSS_NO
            FROM FCM0031D A
            FULL JOIN (
                SELECT B1.*
                FROM FCM0029D B1
                JOIN (
                    SELECT MAX(VENDOR_REQ_NO) REQ_NO
                    FROM FCM0029D
                    GROUP BY VENDOR_REQ_NO
                ) B2
                ON B1.VENDOR_REQ_NO = B2.REQ_NO
            ) B
                ON A.VENDOR_REG_NO_NRIC = B.VENDOR_REG_NO_NRIC AND A.VENDOR_ACC_ID = B.VENDOR_ACC_ID
            WHERE 1=1
            /* Vendor related where clause */

            <if test="memAccId != null and memAccId != ''"> AND (NVL(A.VENDOR_ACC_ID, B.VENDOR_ACC_ID)) = #{memAccId}</if>
            <if test="regNo != null and regNo != ''"> AND (NVL(A.VENDOR_REG_NO_NRIC, B.VENDOR_REG_NO_NRIC)) = #{regNo}</if>
            <if test="costCenter != null and costCenter != ''"> AND (NVL(B.COST_CENTER, '')) =  #{costCenter}</if>

            <if test="startDt != null and startDt != ''">
                <![CDATA[
                    AND B.CRT_DATE >= TO_DATE(#{startDt}, 'DD/MM/YYYY')
                ]]>
            </if>
            <if test="endDt != null and endDt != ''">
                <![CDATA[
                    AND B.CRT_DATE < TO_DATE(#{endDt}, 'DD/MM/YYYY') + 1
                ]]>
            </if>
            <if test="vendorReqNoFrom != null and vendorReqNoFrom != ''">
                 <![CDATA[
                    AND UPPER(B.VENDOR_REQ_NO) >= UPPER(#{vendorReqNoFrom})
                 ]]>
            </if>
            <if test="vendorReqNoTo != null and vendorReqNoTo != ''">
                 <![CDATA[
                    AND UPPER(B.VENDOR_REQ_NO) <= UPPER(#{vendorReqNoTo})
                 ]]>
            </if>
            <if test="vendorTypeCmb != null and vendorTypeCmb != ''">
                    AND B.VENDOR_TYPE IN
                  <foreach item="item" collection="vendorTypeCmb" index="index"
                    open="(" separator="," close=")">
                    #{item}
                  </foreach>
            </if>

        ) X1
        LEFT JOIN FCM0004M X2
            ON X1.APPV_PRCSS_NO = X2.APPV_PRCSS_NO
        LEFT JOIN SYS0047M X3
            ON X2.REQST_USER_ID = X3.USER_NAME
        WHERE 1 = 1
        /* Approval related where clause */
            <if test="appStartDt != null and appStartDt != ''">
                <![CDATA[
                    AND X2.APPV_PRCSS_DT >= TO_DATE(#{appStartDt}, 'DD/MM/YYYY')
                ]]>
            </if>
            <if test="appEndDt != null and appEndDt != ''">
                <![CDATA[
                    AND X2.APPV_PRCSS_DT < TO_DATE(#{appEndDt}, 'DD/MM/YYYY') + 1
                ]]>
            </if>
    ) RES
    <if test="(appvPrcssStus != null and appvPrcssStus != '' and countAppvPrcssStus == 5)">
                WHERE RES.APPV_PRCSS_STUS_CODE IN
                    <foreach item="item" collection="appvPrcssStus" index="index" open="(" separator="," close=")">
                                 #{item}
                    </foreach>
    </if>
    <if test="(appvPrcssStus != null and appvPrcssStus != '' and countAppvPrcssStus &lt; 5)">
                WHERE RES.APPV_PRCSS_STUS_CODE IN
                    <foreach item="item" collection="appvPrcssStus" index="index" open="(" separator="," close=")">
                                 #{item}
                    </foreach>
                AND RES.FLG = 'R'
    </if>

    </select>

    <update id="updateSyncEmro29D" parameterType="Map">

	    MERGE INTO FCM0029D A
	    USING (
	       SELECT
		       #{reqNo} VENDOR_REQ_NO
		       , #{syncEmro} SYNC_EMRO
		       , #{flg} FLAG
		       , #{vendorAccId} VENDOR_ACC_ID
		       , #{userId} USER_ID
           FROM DUAL
        ) B ON (A.VENDOR_REQ_NO = B.VENDOR_REQ_NO)
	    WHEN MATCHED THEN UPDATE SET A.SYNC_EMRO = B.SYNC_EMRO, A.EMRO_UPD_USER_ID = B.USER_ID, A.EMRO_UPD_DATE = SYSDATE

    </update>

    <update id="updateSyncEmro31D" parameterType="Map">

	    MERGE INTO FCM0031D A
	    USING (
	       SELECT
		       #{reqNo} VENDOR_REQ_NO
		       , #{syncEmro} SYNC_EMRO
		       , #{flg} FLAG
               , #{vendorAccId} VENDOR_ACC_ID
               , #{userId} USER_ID
           FROM DUAL
        ) B ON (A.VENDOR_ACC_ID = B.VENDOR_ACC_ID)
	    WHEN MATCHED THEN UPDATE SET A.SYNC_EMRO = B.SYNC_EMRO, A.EMRO_UPD_USER_ID = B.USER_ID, A.EMRO_UPD_DATE = SYSDATE

    </update>

    <select id="getProcurementEmail" resultType="egovMap">
        SELECT PARAM_VAL EMAIL FROM SYS0098M WHERE MODULE = 'E-ACCOUNTING' AND PARAM_CODE = 'PRO_EMAIL' AND DISB = 0
    </select>

    <insert id="insertVendorDiff" parameterType="Map">

        INSERT INTO FCM0029D_HIST (
        ID,
        TABLE_NM,
        VENDOR_REQ_NO,
        VENDOR_REG_NO_NRIC,
        FROM_VENDOR_NAME,
        FROM_BANK,
        FROM_BANK_ACC_NO,
        FROM_CONTACT_NAME,
        FROM_CONTACT_PHONE_NO,
        FROM_CONTACT_EMAIL,
        FROM_SYNC_EMRO,
        FROM_VENDOR_TYPE,
        FROM_EMRO_UPD_USER_ID,
        FROM_EMRO_UPD_DATE,
        TO_VENDOR_NAME,
        TO_BANK,
        TO_BANK_ACC_NO,
        TO_CONTACT_NAME,
        TO_CONTACT_PHONE_NO,
        TO_CONTACT_EMAIL,
        TO_SYNC_EMRO,
        TO_VENDOR_TYPE,
        TO_EMRO_UPD_USER_ID,
        TO_EMRO_UPD_DATE,
        UPD_DATE
        )
        SELECT GBSLCVD.FCM0029D_HIST_SEQ.NEXTVAL,
        TABLE_NM,
        VENDOR_REQ_NO,
        VENDOR_REG_NO_NRIC,
        FROM_VENDOR_NAME,
        FROM_BANK,
        FROM_BANK_ACC_NO,
        FROM_CONTACT_NAME,
        FROM_CONTACT_PHONE_NO,
        FROM_CONTACT_EMAIL,
        FROM_SYNC_EMRO,
        FROM_VENDOR_TYPE,
        FROM_EMRO_UPD_USER_ID,
        FROM_EMRO_UPD_DATE,
        TO_VENDOR_NAME,
        TO_BANK,
        TO_BANK_ACC_NO,
        TO_CONTACT_NAME,
        TO_CONTACT_PHONE_NO,
        TO_CONTACT_EMAIL,
        TO_SYNC_EMRO,
        TO_VENDOR_TYPE,
        TO_EMRO_UPD_USER_ID,
        TO_EMRO_UPD_DATE,
        SYSDATE
	        FROM (
	        SELECT RANK() OVER (PARTITION BY A.NEW_VENDOR_ACC_ID ORDER BY CASE WHEN A.OLD_VENDOR_REQ_NO IS NOT NULL AND A.OLD_VENDOR_REQ_NO IS NOT NULL THEN 1 ELSE 2 END, A.OLD_VENDOR_REQ_NO DESC) ROW_NUM,
	                        A.TABLE_NM, A.VENDOR_REQ_NO VENDOR_REQ_NO,
							A.VENDOR_REG_NO_NRIC VENDOR_REG_NO_NRIC,
							A.OLD_VENDOR_NAME FROM_VENDOR_NAME,
							A.OLD_BANK FROM_BANK,
							A.OLD_BANK_ACC_NO FROM_BANK_ACC_NO,
							A.OLD_CONTACT_NAME FROM_CONTACT_NAME,
							A.OLD_CONTACT_PHONE_NO FROM_CONTACT_PHONE_NO,
							A.OLD_CONTACT_EMAIL FROM_CONTACT_EMAIL,
							A.OLD_SYNC_EMRO FROM_SYNC_EMRO,
							A.OLD_VENDOR_TYPE FROM_VENDOR_TYPE,
							A.OLD_EMRO_UPD_USER_ID FROM_EMRO_UPD_USER_ID,
							A.OLD_EMRO_UPD_DATE FROM_EMRO_UPD_DATE,
							A.NEW_VENDOR_NAME TO_VENDOR_NAME,
							A.NEW_BANK TO_BANK,
							A.NEW_BANK_ACC_NO TO_BANK_ACC_NO,
							A.NEW_CONTACT_NAME TO_CONTACT_NAME,
							A.NEW_CONTACT_PHONE_NO TO_CONTACT_PHONE_NO,
							A.NEW_CONTACT_EMAIL TO_CONTACT_EMAIL,
							A.NEW_SYNC_EMRO TO_SYNC_EMRO,
							A.NEW_VENDOR_TYPE TO_VENDOR_TYPE,
							A.NEW_EMRO_UPD_USER_ID TO_EMRO_UPD_USER_ID,
							A.NEW_EMRO_UPD_DATE TO_EMRO_UPD_DATE,
							SYSDATE
							FROM
				(
				    SELECT 'FCM0029D' TABLE_NM, NW.VENDOR_REQ_NO VENDOR_REQ_NO, NW.VENDOR_REG_NO_NRIC VENDOR_REG_NO_NRIC, NW.VENDOR_ACC_ID NEW_VENDOR_ACC_ID,OD.VENDOR_ACC_ID OLD_VENDOR_ACC_ID,
				           NW.VENDOR_REQ_NO NEW_VENDOR_REQ_NO, OD.VENDOR_REQ_NO OLD_VENDOR_REQ_NO,
				           OD.VENDOR_NAME OLD_VENDOR_NAME , OD.BANK OLD_BANK, OD.BANK_ACC_NO OLD_BANK_ACC_NO, OD.CONTACT_NAME OLD_CONTACT_NAME, OD.CONTACT_PHONE_NO OLD_CONTACT_PHONE_NO,
				           OD.CONTACT_EMAIL OLD_CONTACT_EMAIL, OD.SYNC_EMRO OLD_SYNC_EMRO, OD.VENDOR_TYPE OLD_VENDOR_TYPE, OD.EMRO_UPD_USER_ID OLD_EMRO_UPD_USER_ID, OD.EMRO_UPD_DATE OLD_EMRO_UPD_DATE,

				           NW.VENDOR_NAME NEW_VENDOR_NAME , NW.BANK NEW_BANK, NW.BANK_ACC_NO NEW_BANK_ACC_NO, NW.CONTACT_NAME NEW_CONTACT_NAME, NW.CONTACT_PHONE_NO NEW_CONTACT_PHONE_NO,
				           NW.CONTACT_EMAIL NEW_CONTACT_EMAIL, NW.SYNC_EMRO NEW_SYNC_EMRO, NW.VENDOR_TYPE NEW_VENDOR_TYPE, NW.EMRO_UPD_USER_ID NEW_EMRO_UPD_USER_ID, NW.EMRO_UPD_DATE NEW_EMRO_UPD_DATE,
				           NW.EMRO_UPD_USER_ID, NW.EMRO_UPD_DATE, SYSDATE
				    FROM FCM0029D NW
				    LEFT JOIN FCM0004M APPVNW ON APPVNW.APPV_PRCSS_NO = NW.APPV_PRCSS_NO AND APPVNW.APPV_PRCSS_STUS = 'A'
				    LEFT JOIN FCM0029D OD ON NW.PREV_CLM_NO = OD.VENDOR_REQ_NO
				    LEFT JOIN FCM0004M APPVOD ON APPVOD.APPV_PRCSS_NO = OD.APPV_PRCSS_NO
				    WHERE 1 = 1
				    AND NW.PREV_CLM_NO IS NOT NULL
				    AND NW.VENDOR_REQ_NO = #{clmNo}

				    UNION

				    SELECT 'FCM0031D' TABLE_NM, NW.VENDOR_REQ_NO VENDOR_REQ_NO, NW.VENDOR_REG_NO_NRIC VENDOR_REG_NO_NRIC, NW.VENDOR_ACC_ID NEW_VENDOR_ACC_ID, OD.VENDOR_ACC_ID OLD_VENDOR_ACC_ID,
				           NW.VENDOR_REQ_NO NEW_VENDOR_REQ_NO, '' OLD_VENDOR_REQ_NO,
				           OD.VENDOR_NAME OLD_VENDOR_NAME , OD.BANK OLD_BANK, OD.BANK_ACC_NO OLD_BANK_ACC_NO, OD.CONTACT_NAME OLD_CONTACT_NAME, OD.CONTACT_PHONE_NO OLD_CONTACT_PHONE_NO,
				           OD.CONTACT_EMAIL OLD_CONTACT_EMAIL, OD.SYNC_EMRO OLD_SYNC_EMRO, OD.VENDOR_TYPE OLD_VENDOR_TYPE, OD.EMRO_UPD_USER_ID OLD_EMRO_UPD_USER_ID, OD.EMRO_UPD_DATE OLD_EMRO_UPD_DATE,

				           NW.VENDOR_NAME NEW_VENDOR_NAME , NW.BANK NEW_BANK, NW.BANK_ACC_NO NEW_BANK_ACC_NO, NW.CONTACT_NAME NEW_CONTACT_NAME, NW.CONTACT_PHONE_NO NEW_CONTACT_PHONE_NO,
				           NW.CONTACT_EMAIL NEW_CONTACT_EMAIL, NW.SYNC_EMRO NEW_SYNC_EMRO, NW.VENDOR_TYPE NEW_VENDOR_TYPE, NW.EMRO_UPD_USER_ID NEW_EMRO_UPD_USER_ID, NW.EMRO_UPD_DATE NEW_EMRO_UPD_DATE,
				           NW.EMRO_UPD_USER_ID, NW.EMRO_UPD_DATE, SYSDATE
				    FROM FCM0029D NW
				    LEFT JOIN FCM0004M APPVNW ON APPVNW.APPV_PRCSS_NO = NW.APPV_PRCSS_NO AND APPVNW.APPV_PRCSS_STUS = 'A'
				    LEFT JOIN FCM0031D OD ON NW.VENDOR_ACC_ID = OD.VENDOR_ACC_ID
				    WHERE 1 = 1
				    AND NW.VENDOR_ACC_ID IS NOT NULL
				    AND NW.VENDOR_REQ_NO = #{clmNo}
				    ) A
				)
            WHERE ROW_NUM = 1

    </insert>

    <select id="getEmailDiffContent" resultType="egovMap">
        SELECT FROM_VENDOR_NAME, FROM_BANK, FROM_BANK_ACC_NO, FROM_CONTACT_NAME, CASE WHEN FROM_CONTACT_PHONE_NO IS NULL THEN '' ELSE FROM_CONTACT_PHONE_NO END AS FROM_CONTACT_PHONE_NO, CASE WHEN FROM_CONTACT_EMAIL IS NULL THEN '' ELSE FROM_CONTACT_EMAIL END AS FROM_CONTACT_EMAIL,
                   TO_VENDOR_NAME, TO_BANK, TO_BANK_ACC_NO, TO_CONTACT_NAME, CASE WHEN TO_CONTACT_PHONE_NO IS NULL THEN '' ELSE TO_CONTACT_PHONE_NO END AS TO_CONTACT_PHONE_NO, CASE WHEN TO_CONTACT_EMAIL IS NULL THEN '' ELSE TO_CONTACT_EMAIL END AS TO_CONTACT_EMAIL
		FROM FCM0029D_HIST
		WHERE VENDOR_REQ_NO = #{clmNo}
    </select>
</mapper>