<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.coway.trust.biz.payment.reconciliation.service.impl.ReconciliationForPosMapper">
    
    <select id="selectPosKeyInList" parameterType="Map" resultType="egovMap">
        SELECT
            A.GROUP_SEQ,
            B.TR_NO AS TR_NO,
            B.OR_NO,
            G.CODE  AS BRNCH,
            TO_CHAR(C.PAY_ITM_REF_DT,'DD/MM/YYYY') AS PAY_ITM_REF_DT,
            A.PAY_ITM_MODE_ID,
            E.CODE AS PAY_ITM_MODE_NM,  
            NVL(SUM (A.PAY_ITM_AMT),0) AS TOT_AMT,
            NVL(MAX (C.PAY_ITM_BANK_CHRG_AMT),0) AS BANK_CHG_AMT,
            MAX (C.PAY_ITM_BANK_IN_SLIP_NO) AS PAY_ITM_BANK_IN_SLIP_NO,
            MAX (B.REF_DTL) AS REF_DTL,
            MAX (C.PAY_ITM_BANK_ACC_ID) AS PAY_ITM_BANK_ACC_ID,
            MAX (D.ACC_DESC) AS PAY_ITM_BANK_ACC_NM          
        FROM 
            PAY0252T A
            JOIN PAY0064D B ON A.PAY_ID = B.PAY_ID
            JOIN PAY0065D C ON A.PAY_ITM_ID = C.PAY_ITM_ID
            LEFT JOIN SYS0001M D ON C.PAY_ITM_BANK_ACC_ID = D.ACC_ID
            LEFT JOIN SYS0013M E ON A.PAY_ITM_MODE_ID = E.CODE_ID
            LEFT JOIN SYS0005M G ON B.BRNCH_ID = G.BRNCH_ID 
        WHERE  1=1 
            AND NVL(A.BANK_STATE_MAPPING_STUS_ID,0)    <![CDATA[   <> ]]>  4 
		    AND NVL(A.BANK_CHG_MAPPING_STUS_ID ,0)      <![CDATA[   <> ]]>  4 
		    AND  A.REV_STUS_ID   IS NULL
            AND  B.SALES_ORD_ID = 0 
            AND  B.TYPE_ID = 577  
            AND A.GROUP_SEQ IN (
                SELECT 
                    DISTINCT A.GROUP_SEQ
                FROM 
                    PAY0252T A
                    JOIN PAY0064D B ON A.PAY_ID = B.PAY_ID                    
                    JOIN PAY0065D C ON A.PAY_ITM_ID = C.PAY_ITM_ID
                WHERE
                    C.PAY_ITM_REF_DT <![CDATA[   >= ]]> TO_DATE(#{transDateFr},'DD/MM/YYYY')
                    AND C.PAY_ITM_REF_DT <![CDATA[   < ]]> TO_DATE(#{transDateTo},'DD/MM/YYYY') + 1
                    AND  B.SALES_ORD_ID = 0 
                    AND  B.TYPE_ID = 577  
                    <if test="bankAcc != null and bankAcc != '' ">
                        AND C.PAY_ITM_BANK_ACC_ID = #{bankAcc}
                    </if>
                    <if test="payType != null and payType != '' ">
                    AND C.PAY_ITM_MODE_ID = #{payType} 
                    </if>
                    <if test="vaAccount != null and vaAccount != '' ">  
                    AND B.VA_ACC_NO = #{vaAccount}       
                    </if>
                    <if test="branchId != null and branchId != '' ">  
                    AND B.BRNCH_ID = #{branchId}       
                    </if>
                    AND A.KEY_IN_SCRN = 'POS'
            )
        GROUP BY 
            A.GROUP_SEQ
            , B.TR_NO
	        , TO_CHAR(C.PAY_ITM_REF_DT,'DD/MM/YYYY')
	        , A.PAY_ITM_MODE_ID
	        , E.CODE
	        , G.CODE
	        , B.OR_NO
        
    </select>
    
    <select id="selectBankStateMatchList" parameterType="Map" resultType="egovMap">
        SELECT 
		    B.F_TRNSC_ID,
		    TO_CHAR(B.F_TRNSC_DT,'DD/MM/YYYY') AS F_TRNSC_DT,
		    B.F_TRNSC_REF_CHQ_NO,
		    B.F_TRNSC_REF1,
		    B.F_TRNSC_REM,
		    B.F_TRNSC_CRDIT_AMT,
		    B.F_TRNSC_REF4,
		    B.F_TRNSC_NEW_CHQ_NO,
		    B.F_TRNSC_REF_VA_NO,
		    A.F_BANK_JRNL_ACC_ID
        FROM 
            PAY0079D A 
            JOIN PAY0081D B ON A.F_BANK_JRNL_ID = B.F_BANK_JRNL_ID
        WHERE 
            A.TRNSC_DT <![CDATA[   >= ]]> TO_DATE(#{transDateFr},'DD/MM/YYYY')
            AND A.TRNSC_DT <![CDATA[   < ]]> TO_DATE(#{transDateTo},'DD/MM/YYYY') + 1
            <if test="payType != null and payType != '' ">
            AND B.F_TRNSC_REM = (CASE WHEN #{payType} = 105 THEN 'CSH'
                                                        WHEN #{payType} = 106 THEN 'CHQ'
                                                        WHEN #{payType} = 107 THEN 'CRC'
                                                        WHEN #{payType} = 108 THEN 'ONL' ELSE ' ' END)
            </if>
            <if test="bankAcc != null and bankAcc != '' ">                                                         
            AND A.F_BANK_JRNL_ACC_ID = #{bankAcc}
            </if>
            <if test="vaAccount != null and vaAccount != '' ">
            AND B.F_TRNSC_REF_VA_NO = #{vaAccount}
            </if>
            AND B.OTH_KEYIN_STUS_ID = 1
            AND B.OTH_KEYIN_BC_STUS_ID = 1
    </select>    
    
    
    <update id="mappingGroupPayment" parameterType="Map">
        UPDATE PAY0252T SET
            BANK_STATE_MAPPING_ID = #{fTrnscId},
            BANK_STATE_MAPPING_STUS_ID = 4,
            BANK_STATE_MAPPING_USER_ID = #{userId},
            BANK_STATE_MAPPING_DT = SYSDATE
        WHERE 1=1 
            AND  GROUP_SEQ  IN
	              <foreach item="item" collection="groupSeq" index="index" open="(" separator="," close=")">
	                        #{item}
	              </foreach>
    </update>    
    
    <update id="mappingBankStatement" parameterType="Map">
        UPDATE PAY0081D SET
            OTH_KEYIN_STUS_ID = 4,
            OTH_KEYIN_MAPPING_DT = SYSDATE,
            OTH_KEYIN_MAPPING_USER_ID = #{userId}
        WHERE
            F_TRNSC_ID = #{fTrnscId}
    </update>  
     
    
    <insert id="insertPosPaymentMatchIF" parameterType="EgovMap">
        INSERT INTO ITF0942M (
            IF_KEY,
			SEQ,
			IF_TYPE,
			TRAN_STATUS_CD,
			RGST_DT,
			RGST_TM,
			RGST_ID,
			PAY_DT,
			BANK_SEQ,
			BANK_ID,
			BANKAC,	
			DIFF_TYPE,
			DIFF_AMT
        ) VALUES (
            FN_CRT_IFKEY('942'),
            1,
            '942',
            '10',       
            TO_CHAR(SYSDATE,'YYYYMMDD'),
            TO_CHAR(SYSDATE,'HHMMSS'),  
            #{userId},     
            sysdate,
            (select   nvl(max(BANK_SEQ),0)+1    from    ITF0942M  where   to_char (PAY_DT,'yyyymmdd') = to_char(sysdate,'yyyymmdd')),
            #{fTrnscId},
            (select ACC_CODE    from SYS0001M where acc_id =#{accId} ) ,       
            #{diffType},
            NVL(#{variance},0)
        )            
            
    </insert>
            
    
</mapper>