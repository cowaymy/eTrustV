<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.coway.trust.biz.payment.payment.service.impl.AtDebtCreCrdMapper">
      
    <!--EnrollmentList(Master Grid) 리스트 조회  -->
    <select id="selectEnrollmentList" parameterType="Map" resultType="egovMap">
    <![CDATA[ 
        SELECT 
                enrlId, 
                crtDt, 
                crtUserId, 
                C1, 
                debtDtFrom, 
                createDate, 
                debtDtTo, 
                bankId, 
                code, 
                name 
	                FROM ( SELECT Project1.ENRL_ID enrlId  ,
	                Project1.CRT_DT crtDt  ,
	                Project1.CRT_USER_ID crtUserId  ,
	                Project1.C1 C1  ,
	                Project1.DEBT_DT_FROM debtDtFrom,
	                TO_CHAR(Project1.CRT_DT, 'DD-MM-YYYY HH:MI:SS AM') AS createDate,
	                Project1.DEBT_DT_TO debtDtTo  ,
	                Project1.BANK_ID bankId  ,
	                Project1.CODE code  ,
	                Project1.NAME name  
	            FROM ( SELECT Project1.ENRL_ID ENRL_ID  ,
	                Project1.BANK_ID BANK_ID  ,
	                Project1.DEBT_DT_FROM DEBT_DT_FROM  ,
	                Project1.CRT_USER_ID CRT_USER_ID  ,
	                Project1.CRT_DT CRT_DT  ,
	                Project1.DEBT_DT_TO DEBT_DT_TO  ,
	                Project1.CODE CODE  ,
	                Project1.NAME NAME  ,
	                Project1.C1 C1  ,
	                ROW_NUMBER() OVER ( ORDER BY Project1.ENRL_ID ASC  ) ROW_NUMBER  
	            FROM ( SELECT Extent1.ENRL_ID ENRL_ID  ,
	                       Extent1.BANK_ID BANK_ID  ,
	                       Extent1.DEBT_DT_FROM DEBT_DT_FROM  ,
	                       Extent1.CRT_USER_ID CRT_USER_ID  ,
	                       Extent1.CRT_DT CRT_DT  ,
	                       Extent1.DEBT_DT_TO DEBT_DT_TO  ,
	                       Extent2.CODE CODE  ,
	                       Extent2.NAME NAME  ,
	                       CASE 
	                            WHEN ( Extent3.USER_ID IS NOT NULL ) THEN Extent3.USER_NAME
	                       ELSE 'N' 
	                          END C1  
	                FROM PAY0056D Extent1
	                       JOIN SYS0004M Extent2   ON Extent2.BANK_ID = Extent1.BANK_ID
	                       LEFT JOIN SYS0047M Extent3   ON Extent3.USER_ID = Extent1.CRT_USER_ID
	                 WHERE  1=1
                 ]]>
                 <if test = "enrollID != ''">
                    AND Extent1.ENRL_ID = #{enrollID}
                     
                </if>
                <if test = "creator != ''">
                    AND ( (CASE 
                                      WHEN ( Extent3.USER_ID IS NOT NULL ) THEN Extent3.USER_NAME
                        ELSE 'N'
                           END) = #{creator} )
                </if>
                <if test = "cmbIssueBank != ''">
                    AND Extent1.BANK_ID = #{cmbIssueBank}
                </if>
                <if test="rdpCreateDateFr != '' and rdpCreateDateTo != '' ">
                    AND Extent1.CRT_DT  <![CDATA[   >= ]]> TO_DATE(TO_CHAR(TO_DATE(#{rdpCreateDateFr},'DD/MM/YYYY'),'YYYYMMDD') || '000000','yyyymmddhh24miss')
                    AND Extent1.CRT_DT  <![CDATA[  < ]]>  TO_DATE(TO_CHAR(TO_DATE(#{rdpCreateDateTo},'DD/MM/YYYY'),'YYYYMMDD') || '000000','yyyymmddhh24miss') + 1
                </if>
                 ) Project1 ) Project1
		 WHERE  Project1.ROW_NUMBER <![CDATA[> ]]>0
		  ORDER BY Project1.ENRL_ID ASC )
    </select>
            
    <select id="selectViewEnrollment" parameterType="Map" resultType="egovMap">
    <![CDATA[
       SELECT Limit1.ENRL_ID ENRL_ID  ,
       Limit1.CRT_DT CRT_DT  ,
       Limit1.CRT_USER_ID CRT_USER_ID  ,
       Limit1.C1 C1  ,
       Limit1.DEBT_DT_FROM DEBT_DT_FROM  ,
       Limit1.DEBT_DT_TO DEBT_DT_TO  ,
       Limit1.BANK_ID BANK_ID  ,
       Limit1.CODE CODE  ,
       Limit1.NAME NAME  
         FROM ( SELECT Extent1.ENRL_ID ENRL_ID  ,
                Extent1.BANK_ID BANK_ID  ,
                Extent1.DEBT_DT_FROM DEBT_DT_FROM  ,
                Extent1.CRT_USER_ID CRT_USER_ID  ,
                Extent1.CRT_DT CRT_DT  ,
                Extent1.DEBT_DT_TO DEBT_DT_TO  ,
                Extent2.CODE CODE  ,
                Extent2.NAME NAME  ,
                CASE 
                     WHEN ( Extent3.USER_ID IS NOT NULL ) THEN Extent3.USER_NAME
                ELSE 'N' 
                   END C1  
         FROM PAY0056D Extent1
                JOIN SYS0004M Extent2   ON Extent2.BANK_ID = Extent1.BANK_ID
                LEFT JOIN SYS0047M Extent3   ON Extent3.USER_ID = Extent1.CRT_USER_ID
          WHERE  Extent1.ENRL_ID = #{enrollId} AND ROWNUM <= 1 ) Limit1
          ]]>
    </select>
    
    <select id="selectViewEnrollmentList" parameterType="Map" resultType="egovMap">
    <![CDATA[
       SELECT 
	       Project1.ENRL_ITM_ID ENRL_ITM_ID  ,
	       Project1.ACC_NAME ACC_NAME  ,
	       Project1.ACC_NO ACC_NO  ,
	       Project1.ACC_NRIC ACC_NRIC  ,
	       Project1.APPV_DT APPV_DT  ,
	       Project1.BILL_AMT BILL_AMT  ,
	       Project1.CLM_AMT CLM_AMT  ,
	       Project1.ENRL_ID ENRL_ID  ,
	       Project1.LIMIT_AMT LIMIT_AMT  ,
	       Project1.SALES_ORD_ID SALES_ORD_ID  ,
	       Project1.SALES_ORD_NO SALES_ORD_NO  ,
	       Project1.SVC_CNTRCT_ID SVC_CNTRCT_ID  ,
	       Project1.C1 C1  
	        FROM ( SELECT Project1.ENRL_ITM_ID ENRL_ITM_ID  ,
	                Project1.ENRL_ID ENRL_ID  ,
	                Project1.SALES_ORD_ID SALES_ORD_ID  ,
	                Project1.ACC_NO ACC_NO  ,
	                Project1.ACC_NAME ACC_NAME  ,
	                Project1.ACC_NRIC ACC_NRIC  ,
	                Project1.LIMIT_AMT LIMIT_AMT  ,
	                Project1.BILL_AMT BILL_AMT  ,
	                Project1.CLM_AMT CLM_AMT  ,
	                Project1.APPV_DT APPV_DT  ,
	                Project1.SVC_CNTRCT_ID SVC_CNTRCT_ID  ,
	                Project1.SALES_ORD_NO SALES_ORD_NO  ,
	                Project1.C1 C1  ,
	                ROW_NUMBER() OVER ( ORDER BY Project1.ENRL_ITM_ID ASC  ) ROW_NUMBER  
	            FROM ( SELECT Extent1.ENRL_ITM_ID ENRL_ITM_ID  ,
	                       Extent1.ENRL_ID ENRL_ID  ,
	                       Extent1.SALES_ORD_ID SALES_ORD_ID  ,
	                       Extent1.ACC_NO ACC_NO  ,
	                       Extent1.ACC_NAME ACC_NAME  ,
	                       Extent1.ACC_NRIC ACC_NRIC  ,
	                       Extent1.LIMIT_AMT LIMIT_AMT  ,
	                       Extent1.BILL_AMT BILL_AMT  ,
	                       Extent1.CLM_AMT CLM_AMT  ,
	                       Extent1.APPV_DT APPV_DT  ,
	                       Extent1.SVC_CNTRCT_ID SVC_CNTRCT_ID  ,
	                       Extent2.SALES_ORD_NO SALES_ORD_NO  ,
	                       CASE 
	                            WHEN ( Extent3.SRV_CNTRCT_ID IS NOT NULL ) THEN Extent3.SRV_CNTRCT_REF_NO
	                       ELSE ''
	                          END C1  
	                FROM PAY0057D Extent1
	                       JOIN SAL0001D Extent2   ON Extent2.SALES_ORD_ID = Extent1.SALES_ORD_ID
	                       LEFT JOIN SAL0077D Extent3   ON Extent3.SRV_CNTRCT_ID = Extent1.SVC_CNTRCT_ID
	                 WHERE  ( 1 = Extent1.STUS_CODE_ID )
	                          AND ( Extent1.ENRL_ID = #{enrollId} ) ) Project1 ) Project1
        WHERE  Project1.ROW_NUMBER > 0
        ORDER BY Project1.ENRL_ITM_ID ASC
          ]]>
    </select>
    
    <resultMap id="enrollMap" type="egovMap"></resultMap>
    <select id="saveEnroll" parameterType="Map"  statementType="CALLABLE">
        {
        call  SP_INST_RSC_ENRL(#{cmbIssueBank2},TO_CHAR(TO_DATE(#{rdpCreateDateFr2},'DD/MM/YYYY'),'YYYYMMDD'), TO_CHAR(TO_DATE(#{rdpCreateDateTo2},'DD/MM/YYYY'),'YYYYMMDD'),'52386',#{p1, mode=OUT, jdbcType=CURSOR, javaType=ResultSet, resultMap=enrollMap})
        }
    </select>
    
    <select id="selectEnrollmentResultList" parameterType="Map" resultType="egovMap">
        SELECT Project1.ENROLLUPDATEID as enrollUpdateId ,
           TO_CHAR(Project1.CRT_DT, 'DD-MM-YYYY HH:MI:SS AM') as createDate,
           Project1.CRT_USER_ID as userId,
           Project1.C1 as creator,
           Project1.TOT_FAIL as totalFail,
           Project1.TOT_SUCCES as totalSuccess,
           Project1.TOT_UP_DT as totalUpdate,
           Project1.TYPE_ID as typeId,
           Project1.CODE_NAME as type  
        FROM ( SELECT Project1.ENROLLUPDATEID ENROLLUPDATEID  ,
                Project1.TYPE_ID TYPE_ID  ,
                Project1.CRT_DT CRT_DT  ,
                Project1.CRT_USER_ID CRT_USER_ID  ,
                Project1.TOT_UP_DT TOT_UP_DT  ,
                Project1.TOT_SUCCES TOT_SUCCES  ,
                Project1.TOT_FAIL TOT_FAIL  ,
                Project1.CODE_NAME CODE_NAME  ,
                Project1.C1 C1  ,
                ROW_NUMBER() OVER ( ORDER BY Project1.ENROLLUPDATEID ASC  ) ROW_NUMBER  
         FROM ( SELECT Extent1.ENRL_UPD_ID ENROLLUPDATEID  ,
                       Extent1.TYPE_ID TYPE_ID  ,
                       Extent1.CRT_DT CRT_DT  ,
                       Extent1.CRT_USER_ID CRT_USER_ID  ,
                       Extent1.TOT_UP_DT TOT_UP_DT  ,
                       Extent1.TOT_SUCCES TOT_SUCCES  ,
                       Extent1.TOT_FAIL TOT_FAIL  ,
                       Extent2.CODE_NAME CODE_NAME  ,
                       CASE 
                            WHEN ( Extent3.USER_ID IS NOT NULL ) THEN Extent3.USER_NAME
                       ELSE ' '
                          END C1  
                FROM PAY0058D Extent1
                       JOIN SYS0013M Extent2   ON Extent2.CODE_ID = Extent1.TYPE_ID
                       LEFT JOIN SYS0047M Extent3   ON Extent3.USER_ID = Extent1.CRT_USER_ID ) Project1 ) Project1
        WHERE  Project1.ROW_NUMBER > 0
        <if test="udtBatchId != '' ">
            AND Project1.ENROLLUPDATEID = #{udtBatchId}
        </if>
        <if test="creator != '' ">
            AND Project1.C1 = #{creator}
        </if>
        <if test="createDate1 != '' and createDate2 != '' ">
            AND Project1.CRT_DT &gt; TO_DATE(#{createDate1}, 'DD-MM-YYYY hhmiss') + 1
            AND Project1.CRT_DT &lt; TO_DATE(#{createDate2}, 'DD-MM-YYYY hhmiss')
        </if> 
        <if test="updateType != '' and updateType != null">
            AND Project1.TYPE_ID = #{updateType}
        </if>
        ORDER BY Project1.ENROLLUPDATEID ASC
    </select>
    
    <select id="selectEnrollmentInfo" parameterType="java.lang.Integer" resultType="egovMap">
        SELECT Limit1.ENRL_UPD_ID EnrollUpdateID  ,
       TO_CHAR(Limit1.CRT_DT, 'DD-MM-YYYY HH:MI:SS AM') Created  ,
       Limit1.CRT_USER_ID CreateUId  ,
       Limit1.C1 Creator ,
       Limit1.TOT_FAIL TotalFail ,
       Limit1.TOT_SUCCES TotalSuccess  ,
       Limit1.TOT_UP_DT TotalUpdate ,
       Limit1.TYPE_ID TypeID  ,
       Limit1.CODE_NAME CodeName 
  FROM ( SELECT Extent1.ENRL_UPD_ID ENRL_UPD_ID  ,
                Extent1.TYPE_ID TYPE_ID  ,
                Extent1.CRT_DT CRT_DT  ,
                Extent1.CRT_USER_ID CRT_USER_ID  ,
                Extent1.TOT_UP_DT TOT_UP_DT  ,
                Extent1.TOT_SUCCES TOT_SUCCES  ,
                Extent1.TOT_FAIL TOT_FAIL  ,
                Extent2.CODE_NAME CODE_NAME  ,
                CASE 
                     WHEN ( Extent3.USER_ID IS NOT NULL ) THEN Extent3.USER_NAME
                ELSE ' '
                   END C1  
         FROM PAY0058D Extent1
                JOIN SYS0013M Extent2   ON Extent2.CODE_ID = Extent1.TYPE_ID
                LEFT JOIN SYS0047M Extent3   ON Extent3.USER_ID = Extent1.CRT_USER_ID
          WHERE  Extent1.ENRL_UPD_ID = #{value} AND ROWNUM <![CDATA[ < ]]>= 1 ) Limit1
    </select>
    
    <select id="selectEnrollmentItem" parameterType="java.lang.Integer" resultType="egovMap">
        SELECT Project1.ENRL_UPD_DET_ID EnrollUpdateDetID  ,
       Project1.APP_TYPE_ID AppTypeID  ,
       Project1.CRT_DT Created  ,
       Project1.CRT_USER_ID Creator  ,
       Project1.ENRL_UPD_ID EnrollUpdateID  ,
       TO_CHAR(Project1.INPUT_DAY) InputDay  ,
       TO_CHAR(Project1.INPUT_MONTH) InputMonth  ,
       TO_CHAR(Project1.INPUT_YEAR) InputYear  ,
       TO_CHAR(Project1.INPUT_REJCT_CODE) InputRejectCode  ,
       Project1.REJCT_CODE_ID RejectCodeID  ,
       TO_CHAR(Project1.MSG) Message ,
       Project1.SALES_ORD_ID SalesOrderID,
       Project1.RESULT_DT ResultDate ,
       Project1.STUS_CODE_ID Status  ,
       TO_CHAR(Project1.ORD_NO) OrderNo ,
       Project1.NAME Name  
  FROM ( SELECT Project1.ENRL_UPD_DET_ID ENRL_UPD_DET_ID  ,
                Project1.ENRL_UPD_ID ENRL_UPD_ID  ,
                Project1.STUS_CODE_ID STUS_CODE_ID  ,
                Project1.ORD_NO ORD_NO  ,
                Project1.SALES_ORD_ID SALES_ORD_ID  ,
                Project1.APP_TYPE_ID APP_TYPE_ID  ,
                Project1.INPUT_MONTH INPUT_MONTH  ,
                Project1.INPUT_DAY INPUT_DAY  ,
                Project1.INPUT_YEAR INPUT_YEAR  ,
                Project1.RESULT_DT RESULT_DT  ,
                Project1.CRT_DT CRT_DT  ,
                Project1.CRT_USER_ID CRT_USER_ID  ,
                Project1.MSG MSG  ,
                Project1.INPUT_REJCT_CODE INPUT_REJCT_CODE  ,
                Project1.REJCT_CODE_ID REJCT_CODE_ID  ,
                Project1.NAME NAME  ,
                ROW_NUMBER() OVER ( ORDER BY Project1.ENRL_UPD_DET_ID ASC  ) ROW_NUMBER  
         FROM ( SELECT Extent1.ENRL_UPD_DET_ID ENRL_UPD_DET_ID  ,
                       Extent1.ENRL_UPD_ID ENRL_UPD_ID  ,
                       Extent1.STUS_CODE_ID STUS_CODE_ID  ,
                       Extent1.ORD_NO ORD_NO  ,
                       Extent1.SALES_ORD_ID SALES_ORD_ID  ,
                       Extent1.APP_TYPE_ID APP_TYPE_ID  ,
                       Extent1.INPUT_MONTH INPUT_MONTH  ,
                       Extent1.INPUT_DAY INPUT_DAY  ,
                       Extent1.INPUT_YEAR INPUT_YEAR  ,
                       Extent1.RESULT_DT RESULT_DT  ,
                       Extent1.CRT_DT CRT_DT  ,
                       Extent1.CRT_USER_ID CRT_USER_ID  ,
                       Extent1.MSG MSG  ,
                       Extent1.INPUT_REJCT_CODE INPUT_REJCT_CODE  ,
                       Extent1.REJCT_CODE_ID REJCT_CODE_ID  ,
                       Extent2.NAME NAME  
                FROM PAY0059D Extent1
                       JOIN SYS0038M Extent2   ON Extent2.STUS_CODE_ID = Extent1.STUS_CODE_ID
                 WHERE  Extent1.ENRL_UPD_ID = #{value} ) Project1 ) Project1
 WHERE  Project1.ROW_NUMBER <![CDATA[ > ]]> 0
  ORDER BY Project1.ENRL_UPD_DET_ID ASC
        
    </select>
    
    <update id="insertUpdateMaster" parameterType="EnrollmentUpdateMVO">
            INSERT INTO PAY0058D(
                ENRL_UPD_ID,
                TYPE_ID,
                CRT_DT,
                CRT_USER_ID,
                TOT_UP_DT,
                TOT_SUCCES,
                TOT_FAIL,
                ENRL_TYPE_ID
            )VALUES
            (
                #{enrollUpdateId},
                #{typeId},
                TO_DATE(#{created}, 'yyyymmddhh24miss'),
                #{creator},
                #{totalUpdate},
                #{totalSuccess},
                #{totalFail},
                #{enrollTypeId}
            )
    </update>
    
    <select id="getPAY0058DSEQ" resultType="int">
        SELECT PAY0058D_SEQ.NEXTVAL FROM DUAL
    </select>
    
    <update id="insertUpdateGrid" parameterType="EnrollmentUpdateDVO">
        <selectKey keyProperty="enrollUpdateDetId" resultType="int" order="BEFORE">
            SELECT PAY0059D_SEQ.NEXTVAL FROM DUAL
        </selectKey>
            INSERT INTO PAY0059D
            (
                ENRL_UPD_DET_ID,
                ENRL_UPD_ID, 
                STUS_CODE_ID, 
                ORD_NO, 
                SALES_ORD_ID, 
                APP_TYPE_ID, 
                INPUT_MONTH, 
                INPUT_DAY, 
                INPUT_YEAR, 
                RESULT_DT, 
                CRT_DT, 
                CRT_USER_ID, 
                MSG, 
                REJCT_CODE_ID, 
                SVC_CNTRCT_ID
            )
            VALUES(
                 #{enrollUpdateDetId},
                 #{enrollUpdateId},
                 #{statusCodeId},
                 #{orderNo},
                 #{salesOrderId},
                 #{appTypeId},
                 #{inputMonth},
                 #{inputDay},
                 #{inputYear},
                 #{resultDate},
                 TO_DATE(#{created}, 'yyyymmddhh24miss'),
                 #{creator},
                 #{message},
                 #{inputRejectCode},
                 #{serviceContractId}
            )
    </update>
    
    <update id="callEnrollProcedure" statementType="CALLABLE" parameterType="Map">
        {call SP_INST_RSC_ENRL_RESULT(#{enrollId},
                                                        #{enrollTypeId} )}
    </update>
    
    <select id="selectSuccessInfo" parameterType="java.lang.Integer" resultType="egovMap">
      SELECT Limit1.ENRL_UPD_ID ENRL_UPD_ID  ,
           Limit1.CRT_DT CRT_DT  ,
           Limit1.CRT_USER_ID CRT_USER_ID  ,
           Limit1.C1 C1  ,
           Limit1.TOT_FAIL TOT_FAIL  ,
           Limit1.TOT_SUCCES TOT_SUCCES  ,
           Limit1.TOT_UP_DT TOT_UP_DT  ,
           Limit1.TYPE_ID TYPE_ID  ,
           Limit1.CODE_NAME CODE_NAME  
      FROM ( SELECT Extent1.ENRL_UPD_ID ENRL_UPD_ID  ,
                    Extent1.TYPE_ID TYPE_ID  ,
                    Extent1.CRT_DT CRT_DT  ,
                    Extent1.CRT_USER_ID CRT_USER_ID  ,
                    Extent1.TOT_UP_DT TOT_UP_DT  ,
                    Extent1.TOT_SUCCES TOT_SUCCES  ,
                    Extent1.TOT_FAIL TOT_FAIL  ,
                    Extent2.CODE_NAME CODE_NAME  ,
                    CASE 
                         WHEN ( Extent3.USER_ID IS NOT NULL ) THEN Extent3.USER_NAME
                    ELSE ' '
                       END C1  
             FROM PAY0058D Extent1
                    JOIN SYS0013M Extent2   ON Extent2.CODE_ID = Extent1.TYPE_ID
                    LEFT JOIN SYS0047M Extent3   ON Extent3.USER_ID = Extent1.CRT_USER_ID
              WHERE  Extent1.ENRL_UPD_ID = #{value} AND ROWNUM <![CDATA[<]]>= 1 ) Limit1
    </select>
    
</mapper>