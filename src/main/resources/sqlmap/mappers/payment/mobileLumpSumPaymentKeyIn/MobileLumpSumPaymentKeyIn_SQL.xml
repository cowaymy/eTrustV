<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.coway.trust.biz.payment.mobileLumpSumPaymentKeyIn.service.impl.MobileLumpSumPaymentKeyInMapper">
	<select  id="getCustomerBillingInfoByInvoiceNo" parameterType="Map" resultType="egovMap">
		SELECT s0029d.NRIC,p0016d.ACC_BILL_CRT_DT,p0016d.ACC_BILL_GRP_ID FROM PAY0016D p0016d
		INNER JOIN SAL0001D s0001d
		ON s0001d.SALES_ORD_ID = p0016d.ACC_BILL_ORD_ID
		INNER JOIN SAL0029D s0029d
		ON s0001d.CUST_ID = s0029d.CUST_ID
		WHERE 1=1
		AND p0016d.ACC_BILL_REM = #{custCi}
		AND ROWNUM = 1
	</select>

	<select id="getCustomerInfo" parameterType="Map" resultType="egovMap">
		SELECT s0029d.CUST_ID,s0029d.NAME, s0029d.NRIC, s0029d.EMAIL,
		s0029d.TYPE_ID AS CUST_TYPE_ID, s0013m1.CODE AS CUST_TYPE_CODE, s0013m1.CODE_NAME AS CUST_TYPE_CODE_NAME,
		s0029d.CORP_TYPE_ID AS CUST_CORP_TYPE_ID, s0013m2.CODE AS CUST_CORP_TYPE_CODE, s0013m2.CODE_NAME AS CUST_CORP_TYPE_CODE_NAME
		FROM SAL0029D s0029d
		INNER JOIN SYS0013M s0013m1
		ON s0029d.TYPE_ID = s0013m1.CODE_ID
		INNER JOIN SYS0013M s0013m2
		ON s0029d.CORP_TYPE_ID = s0013m2.CODE_ID
		WHERE 1=1
		AND s0029d.NRIC = #{nric}
	</select>

	<select id="getCustomerOutstandingOrder" parameterType="Map" resultType="egovMap">
		SELECT * FROM (

<!-- 		RENTAL MEMBERSHIP(TOTAL) -->
		SELECT
		    C.SALES_ORD_ID ORD_ID,
		    C.SALES_ORD_NO ORD_NO,
		    A.SRV_LDGR_TYPE_ID ORD_PAYMENT_TYPE_ID,
		    F.CODE_NAME ORD_PAYMENT_TYPE_NAME,
		    'RENTAL MEMBERSHIP' PAY_TYPE,
		    ROUND(SUM(A.SRV_LDGR_AMT),2) OTSTND_AMT,
		    C.CUST_ID,
		    D.NRIC,
		    E.CODE_ID AS ORD_TYPE_ID,
		    E.CODE_NAME AS ORD_TYPE_NAME
		FROM PAY0023D A
		LEFT JOIN SAL0077D B ON B.SRV_CNTRCT_ID  = A.SRV_LDGR_CNTRCT_ID
		LEFT JOIN SAL0001D C ON C.SALES_ORD_ID = B.SRV_CNTRCT_ORD_ID
		LEFT JOIN SAL0029D D ON D.CUST_ID = C.CUST_ID
		LEFT JOIN SYS0013M E ON E.CODE_ID = C.APP_TYPE_ID
		LEFT JOIN SYS0013M F ON F.CODE_ID = A.SRV_LDGR_TYPE_ID
		WHERE 1=1
	        <if test='custId != null and custId != ""'>
		    AND D.CUST_ID = #{custId}
		    </if>
 			<if test='ordNoList != null and ordNoList != ""'>
	             AND C.SALES_ORD_NO IN
	             <foreach item="item" collection="ordNoList" index="index"
	               open="(" separator="," close=")">
	               #{item}
	             </foreach>
	       </if>
		GROUP BY
		    A.SRV_LDGR_CNTRCT_ID,
		    C.SALES_ORD_ID, C.SALES_ORD_NO,
		    A.SRV_LDGR_CRT_DT,
		    A.SRV_LDGR_TYPE_ID,'RENTAL MEMBERSHIP',0,
		    C.CUST_ID, D.NRIC, E.CODE_ID, E.CODE_NAME, F.CODE_NAME
		HAVING NVL(ROUND(SUM(A.SRV_LDGR_AMT),2), 0.00) > 0

		UNION

<!-- 		OUTRIGHT MEMBERSHIP(TOTAL)   -->
		 SELECT
		    B.SALES_ORD_ID ORD_ID,
		    B.SALES_ORD_NO ORD_NO,
		    0 ORD_PAYMENT_TYPE_ID,
		    '' ORD_PAYMENT_TYPE_NAME,
		    'OUTRIGHT MEMBERSHIP' PAY_TYPE,
		    NVL (ROUND(SUM (D.SRV_MEM_AMT),2), 0.00) OTSTND_AMT,
		    B.CUST_ID,
		    C.NRIC,
		    E.CODE_ID ORD_TYPE_ID,
		    E.CODE_NAME ORD_TYPE_NAME
		FROM SAL0095D A
		JOIN SAL0001D B ON B.SALES_ORD_ID = A.SRV_SALES_ORD_ID
		JOIN SAL0029D C ON C.CUST_ID = B.CUST_ID
		LEFT JOIN PAY0024D D ON D.SRV_MEM_ID = A.SRV_MEM_ID
		LEFT JOIN SYS0013M E ON E.CODE_ID = B.APP_TYPE_ID
		WHERE 1=1
	        <if test='custId != null and custId != ""'>
		        AND C.CUST_ID = #{custId}
		    </if>
		    <if test='ordNoList != null and ordNoList != ""'>
	             AND B.SALES_ORD_NO IN
	             <foreach item="item" collection="ordNoList" index="index"
	               open="(" separator="," close=")">
	               #{item}
	             </foreach>
	       </if>
		GROUP BY
		    A.SRV_MEM_ID,
		    A.SRV_MEM_NO,
		    B.SALES_ORD_ID,
		    B.SALES_ORD_NO,
		    0,0,
		    'OUTRIGHT MEMBERSHIP',
		    D.SRV_MEM_DT_TM,
		    B.CUST_ID,
		    C.NRIC, E.CODE_ID, E.CODE_NAME
		HAVING NVL(ROUND(SUM (D.SRV_MEM_AMT), 0), 0.00) > 0

		UNION

<!-- 		RENTAL OUTSTANDING(TOTAL) -->
		 SELECT
		     D.ORD_ID ORD_ID,
		     D.ORD_NO ORD_NO,
		     0 ORD_PAYMENT_TYPE_ID,
		     '' ORD_PAYMENT_TYPE_NAME,
		     'RENTAL PAYMENT' PAY_TYPE,
		     NVL(ROUND(SUM(E.RENT_AMT),2) , 0.00) OTSTND_AMT,
		     D.CUST_ID,
		     D.NRIC,
		     D.ORD_TYPE_ID,
		     D.ORD_TYPE_NAME
		FROM(
		    SELECT
		        A.SALES_ORD_ID ORD_ID,
		        A.SALES_ORD_NO ORD_NO,
		        A.APP_TYPE_ID TYPE_ID,
		        A.CUST_ID,
		        C.NRIC,
		        F.CODE_ID ORD_TYPE_ID,
		        F.CODE_NAME ORD_TYPE_NAME
		    FROM SAL0001D A
		    LEFT JOIN SAL0029D C ON C.CUST_ID = A.CUST_ID
		    LEFT JOIN SYS0013M F ON F.CODE_ID = A.APP_TYPE_ID
		    WHERE 1=1
		           <if test='custId != null and custId != ""'>
				        AND C.CUST_ID = #{custId}
				    </if>
				 <if test='ordNoList != null and ordNoList != ""'>
		             AND A.SALES_ORD_NO IN
		             <foreach item="item" collection="ordNoList" index="index"
		               open="(" separator="," close=")">
		               #{item}
		             </foreach>
	       		</if>
		           AND A.APP_TYPE_ID IN (66)
		)D
		JOIN PAY0022D E ON D.ORD_ID = E.RENT_SO_ID
		WHERE 1=1
		GROUP BY
		    D.ORD_ID, D.ORD_NO,
		    0,'','',0,
		    D.CUST_ID, D.NRIC,
		    D.ORD_TYPE_ID,
		    D.ORD_TYPE_NAME
		HAVING NVL(ROUND(SUM(E.RENT_AMT),2) , 0.00) > 0

		UNION

<!-- 		OUTRIGHT/OUTRIGHT PLUS OUTSTANDING(TOTAL) -->
		SELECT
		     D.ORD_ID ORD_ID,
		     D.ORD_NO ORD_NO,
		     0 ORD_PAYMENT_TYPE_ID,
		     '' ORD_PAYMENT_TYPE_NAME,
		     'OUTRIGHT PAYMENT' PAY_TYPE,
		     NVL(ROUND(SUM(E.TRADE_AMT),2) , 0.00) OTSTND_AMT,
		     D.CUST_ID,
		     D.NRIC,
		     D.ORD_TYPE_ID,
		     D.ORD_TYPE_NAME
		FROM(
		    SELECT
		        A.SALES_ORD_ID ORD_ID,
		        A.SALES_ORD_NO ORD_NO,
		        A.APP_TYPE_ID TYPE_ID,
		        A.CUST_ID,
		        C.NRIC,
		        F.CODE_ID ORD_TYPE_ID,
		        F.CODE_NAME ORD_TYPE_NAME
		    FROM SAL0001D A
		    LEFT JOIN SAL0029D C ON C.CUST_ID = A.CUST_ID
		    LEFT JOIN SYS0013M F ON F.CODE_ID = A.APP_TYPE_ID
		    WHERE 1=1
		           <if test='custId != null and custId != ""'>
				        AND C.CUST_ID = #{custId}
				    </if>
				    <if test='ordNoList != null and ordNoList != ""'>
		             AND A.SALES_ORD_NO IN
		             <foreach item="item" collection="ordNoList" index="index"
		               open="(" separator="," close=")">
		               #{item}
		             </foreach>
	       			</if>
		           AND A.APP_TYPE_ID IN (67, 1412)
		)D
		JOIN PAY0035D E ON D.ORD_ID = E.TRADE_SO_ID
		WHERE 1=1
		GROUP BY
		    D.ORD_ID, D.ORD_NO,
		    0,'','',0,
		    D.CUST_ID, D.NRIC,
		    D.ORD_TYPE_ID,
		    D.ORD_TYPE_NAME
		HAVING NVL(ROUND(SUM(E.TRADE_AMT),2) , 0.00) > 0

		UNION

<!-- 		INSTALLMENT OUTSTANDING(TOTAL) -->
		SELECT
		     D.ORD_ID ORD_ID,
		     D.ORD_NO ORD_NO,
		     0 ORD_PAYMENT_TYPE_ID,
		     '' ORD_PAYMENT_TYPE_NAME,
		     'INSTALLMENT PAYMENT' PAY_TYPE,
		     NVL(ROUND(SUM(E.INSTLMT_AMT),2) , 0.00) OTSTND_AMT,
		     D.CUST_ID,
		     D.NRIC,
		     D.ORD_TYPE_ID,
		     D.ORD_TYPE_NAME
		FROM(
		    SELECT
		        A.SALES_ORD_ID ORD_ID,
		        A.SALES_ORD_NO ORD_NO,
		        A.APP_TYPE_ID TYPE_ID,
		        A.CUST_ID,
		        C.NRIC,
		        F.CODE_ID ORD_TYPE_ID,
		        F.CODE_NAME ORD_TYPE_NAME
		    FROM SAL0001D A
		    LEFT JOIN SAL0029D C ON C.CUST_ID = A.CUST_ID
		    LEFT JOIN SYS0013M F ON F.CODE_ID = A.APP_TYPE_ID
		    WHERE 1=1
		           <if test='custId != null and custId != ""'>
				        AND C.CUST_ID = #{custId}
				    </if>
				    <if test='ordNoList != null and ordNoList != ""'>
		             AND A.SALES_ORD_NO IN
		             <foreach item="item" collection="ordNoList" index="index"
		               open="(" separator="," close=")">
		               #{item}
		             </foreach>
	       			</if>
		           AND A.APP_TYPE_ID IN (68)
		)D
		JOIN PAY0010D E ON D.ORD_ID = E.INSTLMT_SO_ID
		WHERE  1=1
		GROUP BY
		    D.ORD_ID, D.ORD_NO,
		    0,'','',0,
		    D.CUST_ID, D.NRIC,
		    D.ORD_TYPE_ID,
		    D.ORD_TYPE_NAME
		HAVING NVL(ROUND(SUM(E.INSTLMT_AMT),2) , 0.00) > 0

		UNION

		SELECT
		     D.ORD_ID ORD_ID,
		     D.ORD_NO ORD_NO,
		     0 ORD_PAYMENT_TYPE_ID,
		     '' ORD_PAYMENT_TYPE_NAME,
		     'AS PAYMENT' PAY_TYPE,
		     NVL(ROUND(SUM(E.AS_LG_AMT),2) , 0.00) OTSTND_AMT,
		     D.CUST_ID,
		     D.NRIC,
		     D.ORD_TYPE_ID,
		     D.ORD_TYPE_NAME
		FROM (
		 SELECT
		        A.SALES_ORD_ID ORD_ID,
		        A.SALES_ORD_NO ORD_NO,
		        A.APP_TYPE_ID TYPE_ID,
		        A.CUST_ID,
		        C.NRIC,
		        F.CODE_ID ORD_TYPE_ID,
		        F.CODE_NAME ORD_TYPE_NAME
		    FROM SAL0001D A
		    LEFT JOIN SAL0029D C ON C.CUST_ID = A.CUST_ID
		    LEFT JOIN SYS0013M F ON F.CODE_ID = A.APP_TYPE_ID
		    WHERE 1=1
		           <if test='custId != null and custId != ""'>
				        AND C.CUST_ID = #{custId}
				    </if>
				   <if test='ordNoList != null and ordNoList != ""'>
		             AND A.SALES_ORD_NO IN
		             <foreach item="item" collection="ordNoList" index="index"
		               open="(" separator="," close=")">
		               #{item}
		             </foreach>
	       			</if>
		) D
		JOIN PAY0006D E ON D.ORD_NO =  E.AS_SO_NO
		WHERE  1=1
		GROUP BY
		    D.ORD_ID, D.ORD_NO,
		    0,'','',0,
		    D.CUST_ID, D.NRIC,
		    D.ORD_TYPE_ID,
		    D.ORD_TYPE_NAME
		HAVING NVL(ROUND(SUM(E.AS_LG_AMT),2) , 0.00) > 0
		)
	</select>

	<select id="selectNextMobPayId" resultType="int">
        SELECT PAY0349M_MOB_PAY_ID_SEQ.NEXTVAL id FROM DUAL
    </select>

    <select id="selectNextMobPayGroupId" resultType="int">
        SELECT PAY0349M_MOB_PAY_GROUP_NO_SEQ.NEXTVAL atchFileId FROM DUAL
    </select>

    <select id="selectUser" parameterType="String" resultType="egovMap">
       	SELECT s0047m.USER_ID
       	FROM SYS0047M s0047m
       	WHERE USER_NAME = #{userName}
    </select>

    <insert id="insertPaymentMasterInfo" parameterType="Map">
		INSERT INTO PAY0349M
		(
		MOB_PAY_ID,
		MOB_PAY_GROUP_NO,
		PAY_STUS_ID,
		PAY_MODE,
		TOT_PAY_AMT,
		TOT_ORI_OUT_AMT,
		CUST_ID,
		SMS_1,
		SMS_2,
		EMAIL_1,
		EMAIL_2,
		SIGN_IMG,
		CRT_DT,
		CRT_BY
		)
		VALUES
		(
		PAY0349M_MOB_PAY_ID_SEQ.NEXTVAL,
		#{mobilePayGrpNo},
		1,
		#{paymentMethodId},
		#{totalPayableAmount},
		#{totalOriginalOutstandingAmount},
		#{custId},
		#{sms1},
		#{sms2},
		#{email1},
		#{email2},
		#{signData},
		SYSDATE,
		#{userId}
		)
	</insert>

	 <insert id="insertPaymentDetailInfo" parameterType="Map">
		INSERT INTO PAY0350D
		(
		MOB_PAY_DETAIL_ID,
		MOB_PAY_GROUP_NO,
		SALES_ORD_ID,
		SALES_ORD_NO,
		ORD_PAY_TYPE_ID,
		PAY_TYPE,
		PAY_AMT,
		ORI_OUT_AMT
		)
		VALUES
		(
		PAY0350D_MOB_PAY_DETAIL_ID_SEQ.NEXTVAL,
		#{mobilePayGrpNo},
		#{ordId},
		#{ordNo},
		#{ordPaymentTypeId},
		#{payType},
		#{inputOtstndAmt},
		#{otstndAmt}
		)
	</insert>

	<select id="getLumpSumEnrollmentList" parameterType="Map" resultType="egovMap">
		SELECT p0349m.MOB_PAY_GROUP_NO,TO_CHAR(p0349m.CRT_DT, 'DD/MM/YYYY HH12:mm:ss AM') AS CRT_DT,p0349m.PAY_STUS_ID,s0038m.NAME AS PAY_STUS_NAME, p0349m.PAY_MODE, s0013m.CODE_NAME AS PAY_MODE_NAME,
		p0349m.TOT_PAY_AMT,p0349m.TOT_ORI_OUT_AMT,p0349m.CRT_BY,s0047m1.USER_NAME AS CRT_USER_NAME,p0349m.UPD_BY,s0047m2.USER_NAME AS UPD_USER_NAME,
		p0350d.SALES_ORD_ID,p0350d.SALES_ORD_NO,p0350d.ORD_PAY_TYPE_ID,p0350d.PAY_TYPE,p0350d.PAY_AMT,p0350d.ORI_OUT_AMT,s0029d.NAME AS CUST_NAME
		FROM PAY0349M p0349m
		JOIN PAY0350D p0350d
		ON p0349m.MOB_PAY_GROUP_NO = p0350d.MOB_PAY_GROUP_NO
		JOIN SYS0038M s0038m
		ON p0349m.PAY_STUS_ID = STUS_CODE_ID
		LEFT JOIN SYS0013M s0013m
		ON  p0349m.PAY_MODE = s0013m.CODE_ID
		JOIN SYS0047M s0047m1
		ON p0349m.CRT_BY = s0047m1.USER_ID
		LEFT JOIN SYS0047M s0047m2
		on p0349m.UPD_BY = s0047m2.USER_ID
		LEFT JOIN SAL0029D s0029d
        on s0029d.CUST_ID = p0349m.CUST_ID
        LEFT JOIN SYS0005M s0005m
		ON s0047m1.USER_BRNCH_ID = s0005m.BRNCH_ID
        WHERE 1=1
        <if test='grpTicketNo != null and grpTicketNo != ""'>
        	AND p0349m.MOB_PAY_GRP_NO = TRIM(#{grpTicketNo})
	    </if>
	    <if test='requestStartDate != null and requestStartDate != null'>
			<if test='requestEndDate != "" and requestEndDate != ""'>
				<![CDATA[
					AND TO_DATE(TO_CHAR(p0349m.CRT_DT, 'DD/MM/YYYY'),'DD/MM/YYYY') >= TO_DATE(#{dateFrom},'DD/MM/YYYY') AND TO_DATE(p0349m.CRT_DT,'DD/MM/YYYY') <= TO_DATE(#{dateTo},'DD/MM/YYYY')
				]]>
			</if>
		</if>
        <if test='orderNo != null and orderNo != ""'>
        	AND p0349m.SALES_ORD_NO = TRIM(#{orderNo})
	    </if>
        <if test='ticketStatus != null and ticketStatus != ""'>
        	AND p0349m.PAY_STUS_ID = #{ticketStatus}
	    </if>
	    <if test="branchIdList != null and branchIdList != ''">
		      AND s0005m.BRNCH_ID in
		      <foreach item="item" collection="branchIdList" index="index"
		        open="(" separator="," close=")">
		        #{item}
		      </foreach>
		</if>
		<if test="cmbRegionList != null and cmbRegionList != ''">
		      AND s0005m.REGN_ID in
		      <foreach item="item" collection="cmbRegionList" index="index"
		        open="(" separator="," close=")">
		        #{item}
		      </foreach>
		</if>
	    <if test='payMode != null and payMode != ""'>

	    </if>
	    <if test='serialNo != null and serialNo != ""'>

	    </if>
	    <if test='memberCode != null and memberCode != ""'>
			AND s0047m1.USER_NAME = TRIM(#{memberCode})
	    </if>
	    <if test='apprvNo != null and apprvNo != ""'>

	    </if>
	    <if test='cardNoA != null and cardNoA != ""'>

	    </if>
	    <if test='cardNoB != null and cardNoB != ""'>

	    </if>
	    <if test='orgCode != null and orgCode != ""'>
			AND o0005d.LAST_ORG_CODE = TRIM(#{orgCode})
		</if>
		<if test='grpCode != null and grpCode != ""'>
			AND o0005d.LAST_GRP_CODE = TRIM(#{grpCode})
		</if>
		<if test='deptCode != null and deptCode != ""'>
			AND o0005d.LAST_DEPT_CODE = TRIM(#{deptCode})
		</if>
		ORDER BY p0349m.CRT_DT DESC,p0349m.MOB_PAY_GROUP_NO DESC
	</select>

	<select id="selectCashMatchingPayGroupList" parameterType="Map" resultType="egovMap">
		SELECT p0349m.MOB_PAY_GROUP_NO,p0349m.TOT_PAY_AMT,p0349m.PAY_MODE,s0013m1.CODE_NAME AS PAY_MODE_NAME,
        p0349m.PAY_STUS_ID,s0038m.NAME AS PAY_STUS_NAME , LISTAGG(p0350d.SALES_ORD_NO, ',') WITHIN GROUP (ORDER BY p0350d.SALES_ORD_NO) AS ORD_NO,p0349m.CRT_DT
        FROM PAY0349M p0349m
		JOIN PAY0350D p0350d
		ON p0349m.MOB_PAY_GROUP_NO = p0350d.MOB_PAY_GROUP_NO
        LEFT JOIN SYS0013M s0013m1
        ON s0013m1.CODE_ID = p0349m.PAY_MODE
        LEFT JOIN SYS0038M s0038m
        ON s0038m.STUS_CODE_ID = p0349m.PAY_STUS_ID
        GROUP BY p0349m.MOB_PAY_GROUP_NO, p0349m.TOT_PAY_AMT, p0349m.PAY_MODE, p0349m.PAY_STUS_ID, p0349m.CRT_DT,s0013m1.CODE_NAME,s0038m.NAME
        ORDER BY p0349m.CRT_DT DESC
	</select>
</mapper>