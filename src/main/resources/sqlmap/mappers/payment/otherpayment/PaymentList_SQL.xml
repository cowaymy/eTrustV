<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.coway.trust.biz.payment.otherpayment.service.impl.PaymentListMapper">

    <select id="selectGroupPaymentList" parameterType="Map" resultType="egovMap">
        SELECT
            GROUP_SEQ,
            APP_TYPE,
            PAY_ITM_MODE_ID,
            PAY_ITM_MODE_NM,
            CUST_ID,
            SALES_ORD_NO,
            OR_NO,
            BRNCH_ID,
            CRC_STATE_MAPPING_ID,
            CRC_STATE_MAPPING_DT,
            BANK_STATE_MAPPING_ID,
            BANK_STATE_MAPPING_DT,
            REV_STUS_ID,
            FT_STUS_ID,
            REV_STUS_NM,
            CASE WHEN REV_STUS_NM = 'Approved' THEN REV_DT ELSE NULL END AS REV_DT,
            PAY_ID,
            TOT_AMT,
            PAY_ITM_REF_DT
        FROM (
            SELECT
                GROUP_SEQ,
				APP_TYPE,
				PAY_ITM_MODE_ID,
				PAY_ITM_MODE_NM,
				CUST_ID,
				SALES_ORD_NO,
				OR_NO,
				BRNCH_ID,
				CRC_STATE_MAPPING_ID,
				CRC_STATE_MAPPING_DT,
				BANK_STATE_MAPPING_ID,
				BANK_STATE_MAPPING_DT,
				REV_STUS_ID,
				FT_STUS_ID,
				REV_STUS_NM,
				REV_DT,
				PAY_ID,
				TOT_AMT,
				PAY_ITM_REF_DT,
                ROW_NUMBER() OVER (PARTITION BY OR_NO ORDER BY CASE WHEN STUS = 6 THEN -1 ELSE STUS END DESC) R
            FROM (
		        SELECT
		            A.GROUP_SEQ,
		            (CASE
		                WHEN A.LDGR_TYPE = 1 THEN 'RENTAL'
		                WHEN A.LDGR_TYPE = 2 THEN 'OUT'
		                WHEN A.LDGR_TYPE = 3 THEN 'MEMBERSHIP'
		                WHEN A.LDGR_TYPE = 4 THEN 'AS'
		                WHEN A.LDGR_TYPE = 5 THEN 'OUT_MEM'
		                WHEN A.LDGR_TYPE = 0 THEN 'HP'
		                ELSE ' ' END
		            )  AS APP_TYPE,
		            MAX(D.PAY_ITM_MODE_ID) AS PAY_ITM_MODE_ID,
		            F.CODE_NAME AS PAY_ITM_MODE_NM,
		            (CASE WHEN E.SALES_ORD_NO IS NOT NULL THEN E.CUST_ID ELSE I.CUST_ID END) AS CUST_ID,
		            --(CASE WHEN E.SALES_ORD_NO IS NOT NULL THEN E.SALES_ORD_NO ELSE I.SALES_ORD_NO END) AS SALES_ORD_NO,
		            (CASE WHEN E.SALES_ORD_NO IS NOT NULL THEN E.SALES_ORD_NO
		            WHEN I.SALES_ORD_NO IS NOT NULL THEN I.SALES_ORD_NO ELSE I2.SRV_ORD_NO END) AS SALES_ORD_NO,
		            MAX(D.PAY_ITM_REF_DT) AS PAY_ITM_REF_DT,
		            C.OR_NO,
		            J.CODE AS BRNCH_ID,
		            A.CRC_STATE_MAPPING_ID,
		            A.CRC_STATE_MAPPING_DT,
		            A.BANK_STATE_MAPPING_ID,
		            A.BANK_STATE_MAPPING_DT,
		            NVL(A.REV_STUS_ID,0) AS REV_STUS_ID,
		            NVL(A.FT_STUS_ID,0) AS FT_STUS_ID,
		            CASE WHEN K.STUS = 999
		            THEN
		              'Refund'
		            ELSE
		              G.NAME
		            END AS REV_STUS_NM,
		            K.STUS,
		            K.DT AS REV_DT,
		            C.PAY_ID,
		            A.TOT_AMT
		        FROM
		            PAY0252T A
		            JOIN PAY0064D C ON A.PAY_ID = C.PAY_ID
		            JOIN PAY0065D D ON A.PAY_ITM_ID = D.PAY_ITM_ID
		            LEFT JOIN SAL0001D E ON C.SALES_ORD_ID = E.SALES_ORD_ID
		            JOIN SYS0013M F ON D.PAY_ITM_MODE_ID = F.CODE_ID
		            LEFT JOIN (
		                SELECT DISTINCT Z.PAY_ID ,DCF_STUS_ID STUS, DCF_APPV_DT DT FROM PAY0252T Z
		                JOIN PAY0258D X ON Z.GROUP_SEQ = X.GRP_SEQ
		                UNION
		                SELECT SRC_PAY_ID PAY_ID, FT_STUS_ID STUS, FT_APPV_DT DT FROM PAY0260D
		                UNION
		                SELECT PAY_ID, 999 STUS, A.UPD_DT DT FROM PAY0045D A JOIN PAY0064D B ON A.WOR_NO = B.OR_NO WHERE A.VALID_STUS_ID = 4
		            ) K ON C.PAY_ID = K.PAY_ID
		            LEFT JOIN SYS0038M G ON K.STUS = G.STUS_CODE_ID
		            LEFT JOIN PAY0007D H ON C.BILL_ID = H.BILL_ID
		            LEFT JOIN SAL0001D I ON H.BILL_SO_ID = I.SALES_ORD_ID
		            LEFT JOIN SAL0225D I2 ON H.BILL_SO_ID = I2.SRV_ORD_ID
		            LEFT JOIN SYS0005M J ON C.BRNCH_ID = J.BRNCH_ID
		        WHERE
		            A.GROUP_SEQ IN (
		                SELECT
		                    DISTINCT A.GROUP_SEQ
		                FROM
		                    PAY0252T A
		                    JOIN PAY0064D B ON A.PAY_ID = B.PAY_ID
		                    JOIN PAY0065D C ON A.PAY_ITM_ID = C.PAY_ITM_ID
		                    LEFT JOIN SAL0001D D ON B.SALES_ORD_ID = D.SALES_ORD_ID
		                    LEFT JOIN PAY0007D E ON B.BILL_ID = E.BILL_ID
		                    LEFT JOIN SAL0001D F ON E.BILL_SO_ID = F.SALES_ORD_ID

		                WHERE 1=1
		                    <if test="ordNo != '' ">
		                    AND (D.SALES_ORD_NO = #{ordNo})
		                    </if>
		                    <if test="tranDateFr != null and tranDateTo != null and tranDateFr != '' and tranDateTo != '' ">
		                    AND C.PAY_ITM_REF_DT <![CDATA[   >= ]]> TO_DATE(#{tranDateFr},'DD/MM/YYYY')
		                    AND C.PAY_ITM_REF_DT <![CDATA[   < ]]> TO_DATE(#{tranDateTo},'DD/MM/YYYY') + 1
		                    </if>
		                    <if test="payDtFr != null and payDtTo != null and payDtFr != '' and payDtTo != '' ">
		                    AND B.PAY_DATA <![CDATA[   >= ]]> TO_DATE(#{payDtFr},'DD/MM/YYYY')
		                    AND B.PAY_DATA <![CDATA[   < ]]> TO_DATE(#{payDtTo},'DD/MM/YYYY') + 1
		                    </if>
		                    <if test="orNo != null and orNo != '' ">
		                    AND B.OR_NO = #{orNo}
		                    </if>
		                     <if test="trxId != null and trxId != '' ">
		                            AND A.TRX_ID = #{trxId}
		                     </if>
		                    UNION
		                      SELECT
			                    DISTINCT A.GROUP_SEQ
			                FROM
			                    PAY0252T A
			                    JOIN PAY0064D B ON A.PAY_ID = B.PAY_ID
			                    JOIN PAY0065D C ON A.PAY_ITM_ID = C.PAY_ITM_ID
			                    LEFT JOIN SAL0001D D ON B.SALES_ORD_ID = D.SALES_ORD_ID
			                    LEFT JOIN PAY0007D E ON B.BILL_ID = E.BILL_ID
			                WHERE 1=1
			                    <if test="ordNo != '' ">
			                         AND E.BILL_SO_ID IN (SELECT F.SALES_ORD_ID FROM SAL0001D F WHERE  F.SALES_ORD_NO = #{ordNo} UNION
                                     SELECT F1.SRV_ORD_ID FROM SAL0225D F1 WHERE F1.SRV_ORD_NO  = #{ordNo})
			                    </if>
			                    <if test="tranDateFr != null and tranDateTo != null and tranDateFr != '' and tranDateTo != '' ">
			                    AND C.PAY_ITM_REF_DT <![CDATA[   >= ]]> TO_DATE(#{tranDateFr},'DD/MM/YYYY')
			                    AND C.PAY_ITM_REF_DT <![CDATA[   < ]]> TO_DATE(#{tranDateTo},'DD/MM/YYYY') + 1
			                    </if>
			                    <if test="payDtFr != null and payDtTo != null and payDtFr != '' and payDtTo != '' ">
			                    AND B.PAY_DATA <![CDATA[   >= ]]> TO_DATE(#{payDtFr},'DD/MM/YYYY')
			                    AND B.PAY_DATA <![CDATA[   < ]]> TO_DATE(#{payDtTo},'DD/MM/YYYY') + 1
			                    </if>
			                    <if test="orNo != null and orNo != '' ">
			                    AND B.OR_NO = #{orNo}
		                        </if>

		                        <if test="trxId != null and trxId != '' ">
		                            AND A.TRX_ID = #{trxId}
		                        </if>
		            )
		        GROUP BY
		            A.GROUP_SEQ,
		            A.LDGR_TYPE,
		            F.CODE_NAME,
		            E.SALES_ORD_NO,
		            E.CUST_ID,
		            I.CUST_ID,
		            I.SALES_ORD_NO,
		            I2.SRV_ORD_NO ,
		            C.OR_NO,
		            J.CODE,
		            A.CRC_STATE_MAPPING_ID,
		            A.CRC_STATE_MAPPING_DT,
		            A.BANK_STATE_MAPPING_ID,
		            A.BANK_STATE_MAPPING_DT,
		            A.REV_STUS_ID,
		            A.FT_STUS_ID,
		            G.NAME,
		            K.DT,
		            C.PAY_ID,
		            A.TOT_AMT,
		            K.STUS
		        ORDER BY A.GROUP_SEQ DESC, C.PAY_ID DESC
		    ) GRP
	    ) WHERE R = 1
    </select>

    <select id="selectPaymentListByGroupSeq" parameterType="Map" resultType="egovMap">
        SELECT
            A.GROUP_SEQ,
            (CASE
                WHEN A.LDGR_TYPE = 1 THEN 'RENTAL'
                WHEN A.LDGR_TYPE = 2 THEN 'OUT'
                WHEN A.LDGR_TYPE = 3 THEN 'MEMBERSHIP'
                WHEN A.LDGR_TYPE = 4 THEN 'AS'
                WHEN A.LDGR_TYPE = 5 THEN 'OUT_MEM'
                WHEN A.LDGR_TYPE = 0 THEN 'HP'
                ELSE ' ' END
            )  AS APP_TYPE,
            MAX(D.PAY_ITM_MODE_ID) AS PAY_ITM_MODE_ID,
            F.CODE_NAME AS PAY_ITM_MODE_NM,
            (CASE WHEN E.SALES_ORD_NO IS NOT NULL THEN E.CUST_ID ELSE I.CUST_ID END) AS CUST_ID,
            (CASE WHEN E.SALES_ORD_NO IS NOT NULL THEN E.SALES_ORD_NO ELSE I.SALES_ORD_NO END) AS SALES_ORD_NO,
            MAX(D.PAY_ITM_REF_DT) AS PAY_ITM_REF_DT,
            C.OR_NO,
            C.BRNCH_ID,
            A.CRC_STATE_MAPPING_ID,
            A.CRC_STATE_MAPPING_DT,
            A.BANK_STATE_MAPPING_ID,
            A.BANK_STATE_MAPPING_DT,
            NVL(A.REV_STUS_ID,0) AS REV_STUS_ID,
            G.NAME AS REV_STUS_NM,
            A.REV_DT,
            C.PAY_ID,
            A.TOT_AMT
        FROM
            PAY0252T A
            JOIN PAY0064D C ON A.PAY_ID = C.PAY_ID
            JOIN PAY0065D D ON A.PAY_ITM_ID = D.PAY_ITM_ID
            LEFT JOIN SAL0001D E ON C.SALES_ORD_ID = E.SALES_ORD_ID
            JOIN SYS0013M F ON D.PAY_ITM_MODE_ID = F.CODE_ID
            LEFT JOIN SYS0038M G ON A.REV_STUS_ID = G.STUS_CODE_ID
            LEFT JOIN PAY0007D H ON C.BILL_ID = H.BILL_ID
            LEFT JOIN SAL0001D I ON H.BILL_SO_ID = I.SALES_ORD_ID
        WHERE
            A.GROUP_SEQ = #{groupSeq}
            AND (A.REV_STUS_ID IS NULL OR A.REV_STUS_ID = 6)
         GROUP BY
            A.GROUP_SEQ,
            A.LDGR_TYPE,
            F.CODE_NAME,
            E.SALES_ORD_NO,
            E.CUST_ID,
            I.CUST_ID,
            I.SALES_ORD_NO,
            C.OR_NO,
            C.BRNCH_ID,
            A.CRC_STATE_MAPPING_ID,
            A.CRC_STATE_MAPPING_DT,
            A.BANK_STATE_MAPPING_ID,
            A.BANK_STATE_MAPPING_DT,
            A.REV_STUS_ID,
            G.NAME,
            A.REV_DT,
            C.PAY_ID,
            A.TOT_AMT
        ORDER BY A.GROUP_SEQ DESC, C.PAY_ID DESC

    </select>

    <select id="selectRequestDCFByGroupSeq" parameterType="Map" resultType="egovMap">
        SELECT
            A.GROUP_SEQ,
            (CASE
                WHEN A.LDGR_TYPE = 1 THEN 'RENTAL'
                WHEN A.LDGR_TYPE = 2 THEN 'OUT'
                WHEN A.LDGR_TYPE = 3 THEN 'MEMBERSHIP'
                WHEN A.LDGR_TYPE = 4 THEN 'AS'
                WHEN A.LDGR_TYPE = 5 THEN 'OUT_MEM'
                WHEN A.LDGR_TYPE = 0 THEN 'HP'
                ELSE ' ' END
            )  AS APP_TYPE,
            MAX(D.PAY_ITM_MODE_ID) AS PAY_ITM_MODE_ID,
            F.CODE_NAME AS PAY_ITM_MODE_NM,
            (CASE WHEN E.SALES_ORD_NO IS NOT NULL THEN E.CUST_ID ELSE I.CUST_ID END) AS CUST_ID,
            (CASE WHEN E.SALES_ORD_NO IS NOT NULL THEN E.SALES_ORD_NO ELSE I.SALES_ORD_NO END) AS SALES_ORD_NO,
            MAX(D.PAY_ITM_REF_DT) AS PAY_ITM_REF_DT,
            C.OR_NO,
            C.BRNCH_ID,
            A.CRC_STATE_MAPPING_ID,
            A.CRC_STATE_MAPPING_DT,
            A.BANK_STATE_MAPPING_ID,
            A.BANK_STATE_MAPPING_DT,
            NVL(A.REV_STUS_ID,0) AS REV_STUS_ID,
            G.NAME AS REV_STUS_NM,
            A.REV_DT,
            C.PAY_ID,
            A.TOT_AMT
        FROM
            PAY0252T A
            JOIN PAY0064D C ON A.PAY_ID = C.PAY_ID
            JOIN PAY0065D D ON A.PAY_ITM_ID = D.PAY_ITM_ID
            LEFT JOIN SAL0001D E ON C.SALES_ORD_ID = E.SALES_ORD_ID
            JOIN SYS0013M F ON D.PAY_ITM_MODE_ID = F.CODE_ID
            LEFT JOIN SYS0038M G ON A.REV_STUS_ID = G.STUS_CODE_ID
            LEFT JOIN PAY0007D H ON C.BILL_ID = H.BILL_ID
            LEFT JOIN SAL0001D I ON H.BILL_SO_ID = I.SALES_ORD_ID
        WHERE
            A.GROUP_SEQ = #{groupSeq}
            AND NVL(A.FT_STUS_ID, '0') <![CDATA[   <> ]]> '5'
        GROUP BY
            A.GROUP_SEQ,
            A.LDGR_TYPE,
            F.CODE_NAME,
            E.SALES_ORD_NO,
            E.CUST_ID,
            I.CUST_ID,
            I.SALES_ORD_NO,
            C.OR_NO,
            C.BRNCH_ID,
            A.CRC_STATE_MAPPING_ID,
            A.CRC_STATE_MAPPING_DT,
            A.BANK_STATE_MAPPING_ID,
            A.BANK_STATE_MAPPING_DT,
            A.REV_STUS_ID,
            G.NAME,
            A.REV_DT,
            C.PAY_ID,
            A.TOT_AMT
        ORDER BY A.GROUP_SEQ DESC, C.PAY_ID DESC

    </select>

    <select id="selectReqDcfInfo" parameterType="Map" resultType="egovMap">
        SELECT
            A.GRP_SEQ,
            A.DCF_RESN,
            B.CODE_NAME AS DCF_RESN_CODE,
            A.DCF_AMT,
            A.DCF_REM,
            A.DCF_STUS_ID,
            C.CODE AS DCF_STUS_CODE,
            A.DCF_CRT_USER_ID,
            D.USER_NAME AS DCF_CRT_USER_NM,
            TO_CHAR(A.DCF_CRT_DT,'DD/MM/YYYY') AS DCF_CRT_DT,
            A.DCF_APPV_REM
        FROM
            PAY0258D A
            JOIN SYS0013M B ON A.DCF_RESN = B.CODE_ID
            JOIN SYS0038M C ON A.DCF_STUS_ID = C.STUS_CODE_ID
            JOIN SYS0047M D ON A.DCF_CRT_USER_ID = D.USER_ID
        WHERE
            DCF_REQ_ID = #{reqNo}
    </select>

    <select id="invalidReverse" parameterType="Map" resultType="int">
        SELECT
            COUNT(*)
        FROM (
            SELECT DCF_REQ_ID FROM PAY0258D WHERE DCF_STUS_ID = 1 AND GRP_SEQ = #{groupSeq}
            UNION ALL
            SELECT FT_REQ_ID FROM PAY0260D WHERE FT_STUS_ID = 1 AND SRC_GRP_SEQ = #{groupSeq}
        )
    </select>

    <select id="invalidDCF" parameterType="Map" resultType="int">
        SELECT
		    COUNT(*)
		FROM PAY0064D A
		JOIN PAY0252T B ON A.PAY_ID = B.PAY_ID
		WHERE GROUP_SEQ = #{groupSeq}
		AND REGEXP_SUBSTR(OR_NO, '\D+') NOT IN (
		    SELECT CODE FROM SYS0094M WHERE IND = 'DCF_ALLOW'
		)
    </select>

     <insert id="requestDCF" parameterType="Map">
        <selectKey keyProperty="dcfReqId" resultType="int" order="BEFORE">
            SELECT PAY0258D_SEQ.NEXTVAL FROM DUAL
        </selectKey>
            INSERT INTO PAY0258D (
                DCF_REQ_ID,
				GRP_SEQ,
				DCF_RESN,
				DCF_AMT,
				DCF_REM,
				DCF_STUS_ID,
				DCF_CRT_USER_ID,
				DCF_CRT_DT
            ) VALUES (
                #{dcfReqId},
                #{groupSeq},
                #{reason},
                TO_NUMBER(#{totalAmt}),
                #{remark},
                1,
                #{userId},
                SYSDATE
            )
    </insert>

    <update id="updateGroupPaymentRevStatus" parameterType="Map">
        UPDATE PAY0252T SET REV_STUS_ID = #{revStusId} WHERE GROUP_SEQ = #{groupSeq} AND (REV_STUS_ID IS NULL OR REV_STUS_ID = 6)
    </update>

    <update id="rejectGroupPaymentRevStatus" parameterType="Map">
        UPDATE PAY0252T SET REV_STUS_ID = #{revStusId} WHERE GROUP_SEQ = #{groupSeq} AND REV_STUS_ID = 1
    </update>

    <select id="selectRequestDCFList" parameterType="Map" resultType="egovMap">
        SELECT
            A.DCF_REQ_ID,
            A.GRP_SEQ,
            A.DCF_RESN,
            C.CODE_NAME AS DCF_RESN_NM,
            A.DCF_STUS_ID,
            B.NAME AS DCF_STUS_NM,
            A.DCF_CRT_USER_ID,
            D.USER_NAME AS DCF_CRT_USER_NM,
            A.DCF_CRT_DT,
            NVL((CASE WHEN S1.SALES_ORD_NO IS NULL THEN S2.SALES_ORD_NO ELSE S1.SALES_ORD_NO END), '') SALES_ORD_NO,
            H.CODE || ' - ' || H.NAME REQST_BRNCH,
            I.USER_NAME AS DCF_APPV_USER_NM
        FROM PAY0258D A
        INNER JOIN PAY0252T E ON A.GRP_SEQ = E.GROUP_SEQ
        INNER JOIN PAY0064D F ON E.PAY_ID = F.PAY_ID
        LEFT JOIN SAL0001D S1 ON F.SALES_ORD_ID = S1.SALES_ORD_ID AND F.BILL_ID = 0
        LEFT JOIN PAY0007D G ON F.BILL_ID = G.BILL_ID AND F.BILL_ID <![CDATA[ <> ]]> 0
        LEFT JOIN SAL0001D S2 ON G.BILL_SO_ID = S2.SALES_ORD_ID
        LEFT JOIN SYS0038M B ON A.DCF_STUS_ID = B.STUS_CODE_ID
        LEFT JOIN SYS0013M C ON A.DCF_RESN = C.CODE_ID
        LEFT JOIN SYS0047M D ON A.DCF_CRT_USER_ID = D.USER_ID
        LEFT JOIN SYS0005M H ON D.USER_BRNCH_ID = H.BRNCH_ID
        LEFT JOIN SYS0047M I ON A.DCF_APPV_USER_ID = I.USER_ID
        WHERE 1=1
            <if test="reqDateFr != null and reqDateTo != null and reqDateFr != '' and reqDateTo != '' ">
                AND DCF_CRT_DT <![CDATA[   >= ]]> TO_DATE(#{reqDateFr},'DD/MM/YYYY')
                AND DCF_CRT_DT <![CDATA[   < ]]> TO_DATE(#{reqDateTo},'DD/MM/YYYY') + 1
            </if>
            <if test="status != null and status != '' ">
                AND DCF_STUS_ID = #{status}
            </if>
            <if test="reason != null and reason != '' ">
                AND DCF_RESN = #{reason}
            </if>
            <if test="reqNo != null and reqNo != '' ">
                AND DCF_REQ_ID = #{reqNo}
            </if>
            <if test="salesOrdNo != null and salesOrdNo != '' ">
                AND A.GRP_SEQ IN (
                    SELECT
                        DISTINCT A.GROUP_SEQ
                    FROM PAY0252T A
                    INNER JOIN PAY0064D B
                        ON A.PAY_ID = B.PAY_ID
                    LEFT JOIN SAL0001D S1
                        ON B.SALES_ORD_ID = S1.SALES_ORD_ID
                        AND B.BILL_ID = 0
                    LEFT JOIN PAY0007D C
                        ON B.BILL_ID = C.BILL_ID
                        AND B.BILL_ID <![CDATA[ <> ]]> 0
                    LEFT JOIN SAL0001D S2
                        ON C.BILL_SO_ID = S2.SALES_ORD_ID
                    WHERE (S1.SALES_ORD_NO IS NOT NULL OR S2.SALES_ORD_NO IS NOT NULL)
                    AND (S1.SALES_ORD_NO = #{salesOrdNo} OR S2.SALES_ORD_NO = #{salesOrdNo})
            )
            </if>
            <if test="branchId != null and branchId != '' ">
            AND H.BRNCH_ID = #{branchId}
            </if>
            <if test="userId != null and userId != '' ">
            AND A.DCF_CRT_USER_ID = #{userId}
            </if>
        ORDER BY A.DCF_REQ_ID

    </select>


    <update id="updateStatusDCF" parameterType="Map">
        UPDATE PAY0258D SET
            DCF_APPV_DT = SYSDATE,
            DCF_APPV_USER_ID = #{userId},
            DCF_APPV_REM = #{remark},
            DCF_STUS_ID = #{dcfStusId}
        WHERE
            DCF_REQ_ID = #{reqNo}
    </update>

    <select id="dcfDuplicates" parameterType="Map" resultType="int">
        SELECT COUNT(*) FROM PAY0064D WHERE MTCH_ID IN (SELECT PAY_ID FROM PAY0252T WHERE GROUP_SEQ = #{groupSeq} AND REV_STUS_ID = 1)
    </select>

   <resultMap id="resultDCFMap" type="egovMap" />
  <select id="approvalDCF" statementType="CALLABLE"
    parameterType="Map">
    {
    call SP_INST_PAYMENT_REVRS(#{reqNo},#{groupSeq},#{remark}, #{userId}, #{p1, mode=OUT, jdbcType=CURSOR,
    javaType=ResultSet,
    resultMap=resultDCFMap})
    }
  </select>


    <select id="selectFTOldData" parameterType="Map" resultType="egovMap">
        SELECT
            A.GROUP_SEQ,
            (CASE
                WHEN A.LDGR_TYPE = 1 THEN 'RENTAL'
                WHEN A.LDGR_TYPE = 2 THEN 'OUT'
                WHEN A.LDGR_TYPE = 3 THEN 'MEMBERSHIP'
                WHEN A.LDGR_TYPE = 4 THEN 'AS'
                WHEN A.LDGR_TYPE = 5 THEN 'OUT_MEM'
                WHEN A.LDGR_TYPE = 0 THEN 'HP'
                ELSE ' ' END
            )  AS APP_TYPE,
            (CASE WHEN E.SALES_ORD_NO IS NOT NULL THEN E.CUST_ID ELSE I.CUST_ID END) AS CUST_ID,
            (CASE WHEN E.SALES_ORD_NO IS NOT NULL THEN J.NAME ELSE K.NAME END) AS CUST_NM,
            (CASE WHEN E.SALES_ORD_NO IS NOT NULL THEN E.SALES_ORD_NO ELSE I.SALES_ORD_NO END) AS SALES_ORD_NO,
            C.OR_NO,
            A.TOT_AMT
        FROM
            PAY0252T A
            JOIN PAY0064D C ON A.PAY_ID = C.PAY_ID
            LEFT JOIN SAL0001D E ON C.SALES_ORD_ID = E.SALES_ORD_ID
            LEFT JOIN SYS0038M G ON A.REV_STUS_ID = G.STUS_CODE_ID
            LEFT JOIN PAY0007D H ON C.BILL_ID = H.BILL_ID
            LEFT JOIN SAL0001D I ON H.BILL_SO_ID = I.SALES_ORD_ID
            LEFT JOIN SAL0029D J ON E.CUST_ID = J.CUST_ID
            LEFT JOIN SAL0029D K ON I.CUST_ID = K.CUST_ID
        WHERE
            A.GROUP_SEQ = #{groupSeq}
            AND C.PAY_ID = #{payId}
            AND ROWNUM <![CDATA[   <= ]]> 1
        ORDER BY A.RSLT_SEQ DESC

    </select>

    <select id="invalidFT" parameterType="Map" resultType="int">
        SELECT
            COUNT(*)
        FROM PAY0064D
        WHERE PAY_ID = #{payId}
        AND REGEXP_SUBSTR(OR_NO, '\D+') NOT IN (
            SELECT CODE FROM SYS0094M WHERE IND = 'FT_ALLOW'
        )
    </select>

    <insert id="requestFT" parameterType="Map">
        <selectKey keyProperty="ftReqId" resultType="int" order="BEFORE">
            SELECT PAY0260D_FT_REQ_ID_SEQ.NEXTVAL FROM DUAL
        </selectKey>
            INSERT INTO PAY0260D (
                FT_REQ_ID,
				SRC_GRP_SEQ,
				SRC_AMT,
				SRC_ORD_NO,
				SRC_CUST_NAME,
				SRC_PAY_ID,
				FT_GRP_SEQ,
				FT_AMT,
				FT_ORD_NO,
				FT_CUST_NAME,
				FT_RESN,
				FT_REM,
				FT_STUS_ID,
				FT_CRT_USER_ID,
				FT_CRT_DT
            ) VALUES (
                #{ftReqId},
                #{groupSeq},
                TO_NUMBER(#{oldAmt}),
                #{oldOrdNo},
                #{oldCustNm},
                #{payId},
                #{seq},
                TO_NUMBER(#{newAmt}),
                #{newOrdNo},
                #{newCustNm},
                #{newReason},
                #{newRemark},
                1,
                #{userId},
                SYSDATE
            )
    </insert>

    <update id="updateGroupPaymentFTStatus" parameterType="Map">
        UPDATE PAY0252T SET FT_STUS_ID = #{ftStusId} WHERE GROUP_SEQ = #{groupSeq} AND PAY_ID = #{payId}
    </update>

    <select id="selectRequestFTList" parameterType="Map" resultType="egovMap">
        SELECT
             A.FT_REQ_ID,
		    A.FT_RESN,
		    C.CODE_NAME AS FT_RESN_NM,
		    A.FT_STUS_ID,
		    B.NAME AS FT_STUS_NM,
		    A.FT_CRT_USER_ID,
		    D.USER_NAME AS FT_CRT_USER_NM,
		    A.FT_CRT_DT,
		    A.SRC_GRP_SEQ AS GROUP_SEQ,
		    A.SRC_PAY_ID AS PAY_ID,
		    A.FT_GRP_SEQ AS FT_GRP_SEQ,
		    A.FT_ORD_NO AS FT_ORD_NO,
		    A.SRC_ORD_NO AS SRC_ORD_NO,
		    H.CODE  AS CODE,
		    I.USER_NAME AS  FT_APPV_USER
        FROM
            PAY0260D A
            LEFT JOIN SYS0038M B ON A.FT_STUS_ID = B.STUS_CODE_ID
            LEFT JOIN SYS0013M C ON A.FT_RESN = C.CODE_ID
            LEFT JOIN SYS0047M D ON A.FT_CRT_USER_ID = D.USER_ID
            LEFT JOIN SYS0005M H ON D.USER_BRNCH_ID   = H.BRNCH_ID
            LEFT JOIN SYS0047M I ON A.FT_APPV_USER_ID = I.USER_ID
        WHERE
            1=1
            <if test="reqDateFr != null and reqDateTo != null and reqDateFr != '' and reqDateTo != '' ">
                AND FT_CRT_DT <![CDATA[   >= ]]> TO_DATE(#{reqDateFr},'DD/MM/YYYY')
                AND FT_CRT_DT <![CDATA[   < ]]> TO_DATE(#{reqDateTo},'DD/MM/YYYY') + 1
            </if>
            <if test="status != null and status != '' ">
            AND FT_STUS_ID = #{status}
            </if>
            <if test="reason != null and reason != '' ">
            AND FT_RESN = #{reason}
            </if>
            <if test="reqNo != null and reqNo != '' ">
            AND FT_REQ_ID = #{reqNo}
            </if>

           <if test="ordNo != null and ordNo != '' ">
            AND A.SRC_ORD_NO = #{ordNo}
            </if>

            <if test="salesOrdNo2 != null and salesOrdNo2 != '' " >
            AND A.FT_ORD_NO = #{salesOrdNo2}
            </if>

                <if test="branchId != null and branchId != '' ">
            AND H.BRNCH_ID = #{branchId}
            </if>
            <if test="userId != null and userId != '' ">
            AND A.FT_CRT_USER_ID = #{userId}
            </if>


        ORDER BY A.FT_REQ_ID

    </select>

    <select id="selectReqFTInfo" parameterType="Map" resultType="egovMap">
        SELECT
            A.FT_REQ_ID,
            A.SRC_AMT,
			A.SRC_ORD_NO,
			A.SRC_CUST_NAME,
			A.FT_AMT,
			A.FT_ORD_NO,
			A.FT_CUST_NAME,
            A.FT_RESN,
            C.CODE_NAME AS FT_RESN_NM,
            A.FT_STUS_ID,
            B.NAME AS FT_STUS_NM,
            A.FT_CRT_USER_ID,
            D.USER_NAME AS FT_CRT_USER_NM,
            TO_CHAR(A.FT_CRT_DT,'DD/MM/YYYY') AS FT_CRT_DT,
            A.FT_REM,
            A.FT_APPV_REM,
            (SELECT OR_NO FROM PAY0064D WHERE PAY_ID = A.SRC_PAY_ID )SRC_OR_NO
        FROM
            PAY0260D A
            LEFT JOIN SYS0038M B ON A.FT_STUS_ID = B.STUS_CODE_ID
            LEFT JOIN SYS0013M C ON A.FT_RESN = C.CODE_ID
            LEFT JOIN SYS0047M D ON A.FT_CRT_USER_ID = D.USER_ID
        WHERE
            FT_REQ_ID = #{ftReqId}
    </select>

      <update id="updateStatusFT" parameterType="Map">
        UPDATE PAY0260D SET
            FT_APPV_DT = SYSDATE,
            FT_APPV_USER_ID = #{userId},
            FT_APPV_REM = #{appvRemark},
            FT_STUS_ID = #{ftStusId}
        WHERE
            FT_REQ_ID = #{ftReqId}
    </update>

    <select id="ftDuplicates" parameterType="Map" resultType="int">
        SELECT COUNT(*) FROM PAY0064D WHERE MTCH_ID = (
		    SELECT SRC_PAY_ID FROM PAY0260D WHERE FT_REQ_ID = #{ftReqId}
		)
    </select>

    <update id="approvalFT" statementType="CALLABLE" parameterType="Map">
        {call SP_INST_FUND_TRNSFR(#{ftReqId},#{appvRemark}, #{userId} )}
    </update>


</mapper>