<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.coway.trust.biz.payment.otherpayment.service.impl.PaymentListMapper">
    
    <select id="selectGroupPaymentList" parameterType="Map" resultType="egovMap">
        SELECT
            A.GROUP_SEQ,
            (CASE 
                WHEN A.LDGR_TYPE = 1 THEN 'RENTAL'
                WHEN A.LDGR_TYPE = 2 THEN 'OUT'
                WHEN A.LDGR_TYPE = 3 THEN 'MEMBERSHIP'
                WHEN A.LDGR_TYPE = 4 THEN 'AS'
                WHEN A.LDGR_TYPE = 5 THEN 'OUT_MEM'
                WHEN A.LDGR_TYPE = 0 THEN 'HP'
                ELSE ' ' END
            )  AS APP_TYPE,         
            MAX(D.PAY_ITM_MODE_ID) AS PAY_ITM_MODE_ID,
            F.CODE_NAME AS PAY_ITM_MODE_NM,
            (CASE WHEN E.SALES_ORD_NO IS NOT NULL THEN E.CUST_ID ELSE I.CUST_ID END) AS CUST_ID,                        
            (CASE WHEN E.SALES_ORD_NO IS NOT NULL THEN E.SALES_ORD_NO ELSE I.SALES_ORD_NO END) AS SALES_ORD_NO,            
            MAX(D.PAY_ITM_REF_DT) AS PAY_ITM_REF_DT,
            C.OR_NO,
            C.BRNCH_ID,
            A.CRC_STATE_MAPPING_ID,        
            A.CRC_STATE_MAPPING_DT,
            A.BANK_STATE_MAPPING_ID,
            A.BANK_STATE_MAPPING_DT,
            NVL(A.REV_STUS_ID,0) AS REV_STUS_ID,
            G.NAME AS REV_STUS_NM,
            A.REV_DT,
            C.PAY_ID,
            A.TOT_AMT
        FROM 
            PAY0252T A
            JOIN PAY0064D C ON A.PAY_ID = C.PAY_ID
            JOIN PAY0065D D ON A.PAY_ITM_ID = D.PAY_ITM_ID
            LEFT JOIN SAL0001D E ON C.SALES_ORD_ID = E.SALES_ORD_ID    
            JOIN SYS0013M F ON D.PAY_ITM_MODE_ID = F.CODE_ID
            LEFT JOIN SYS0038M G ON A.REV_STUS_ID = G.STUS_CODE_ID
            LEFT JOIN PAY0007D H ON C.BILL_ID = H.BILL_ID
            LEFT JOIN SAL0001D I ON H.BILL_SO_ID = I.SALES_ORD_ID         
        WHERE 
            A.GROUP_SEQ IN (
                SELECT 
                    DISTINCT A.GROUP_SEQ
                FROM 
                    PAY0252T A
                    JOIN PAY0064D B ON A.PAY_ID = B.PAY_ID                    
                    JOIN PAY0065D C ON A.PAY_ITM_ID = C.PAY_ITM_ID
                    LEFT JOIN SAL0001D D ON B.SALES_ORD_ID = D.SALES_ORD_ID                    
                    LEFT JOIN PAY0007D E ON B.BILL_ID = E.BILL_ID
                    LEFT JOIN SAL0001D F ON E.BILL_SO_ID = F.SALES_ORD_ID                
                WHERE 
                    (D.SALES_ORD_NO = #{ordNo} OR F.SALES_ORD_NO = #{ordNo}) 
                    <if test="tranDateFr != null and tranDateTo != null and tranDateFr != '' and tranDateTo != '' ">
                    AND C.PAY_ITM_REF_DT <![CDATA[   >= ]]> TO_DATE(#{tranDateFr},'DD/MM/YYYY') 
                    AND C.PAY_ITM_REF_DT <![CDATA[   < ]]> TO_DATE(#{tranDateTo},'DD/MM/YYYY') + 1
                    </if>
                    <if test="payDtFr != null and payDtTo != null and payDtFr != '' and payDtTo != '' ">
                    AND B.PAY_DATA <![CDATA[   >= ]]> TO_DATE(#{payDtFr},'DD/MM/YYYY') 
                    AND B.PAY_DATA <![CDATA[   < ]]> TO_DATE(#{payDtTo},'DD/MM/YYYY') + 1
                    </if>                    
            )
        GROUP BY 
            A.GROUP_SEQ,
            A.LDGR_TYPE,
            F.CODE_NAME,
            E.SALES_ORD_NO,
            E.CUST_ID,
            I.CUST_ID,                        
            I.SALES_ORD_NO,
            C.OR_NO,
            C.BRNCH_ID,
            A.CRC_STATE_MAPPING_ID,        
            A.CRC_STATE_MAPPING_DT,
            A.BANK_STATE_MAPPING_ID,
            A.BANK_STATE_MAPPING_DT,
            A.REV_STUS_ID,
            G.NAME,
            A.REV_DT,
            C.PAY_ID,
            A.TOT_AMT            
        ORDER BY A.GROUP_SEQ DESC, C.PAY_ID DESC
        
    </select>
    
    <select id="selectPaymentListByGroupSeq" parameterType="Map" resultType="egovMap">
        SELECT
            A.GROUP_SEQ,
            (CASE 
                WHEN A.LDGR_TYPE = 1 THEN 'RENTAL'
                WHEN A.LDGR_TYPE = 2 THEN 'OUT'
                WHEN A.LDGR_TYPE = 3 THEN 'MEMBERSHIP'
                WHEN A.LDGR_TYPE = 4 THEN 'AS'
                WHEN A.LDGR_TYPE = 5 THEN 'OUT_MEM'
                WHEN A.LDGR_TYPE = 0 THEN 'HP'
                ELSE ' ' END
            )  AS APP_TYPE,         
            MAX(D.PAY_ITM_MODE_ID) AS PAY_ITM_MODE_ID,
            F.CODE_NAME AS PAY_ITM_MODE_NM,
            (CASE WHEN E.SALES_ORD_NO IS NOT NULL THEN E.CUST_ID ELSE I.CUST_ID END) AS CUST_ID,                        
            (CASE WHEN E.SALES_ORD_NO IS NOT NULL THEN E.SALES_ORD_NO ELSE I.SALES_ORD_NO END) AS SALES_ORD_NO,            
            MAX(D.PAY_ITM_REF_DT) AS PAY_ITM_REF_DT,
            C.OR_NO,
            C.BRNCH_ID,
            A.CRC_STATE_MAPPING_ID,        
            A.CRC_STATE_MAPPING_DT,
            A.BANK_STATE_MAPPING_ID,
            A.BANK_STATE_MAPPING_DT,
            NVL(A.REV_STUS_ID,0) AS REV_STUS_ID,
            G.NAME AS REV_STUS_NM,
            A.REV_DT,
            C.PAY_ID,
            A.TOT_AMT
        FROM 
            PAY0252T A
            JOIN PAY0064D C ON A.PAY_ID = C.PAY_ID
            JOIN PAY0065D D ON A.PAY_ITM_ID = D.PAY_ITM_ID
            LEFT JOIN SAL0001D E ON C.SALES_ORD_ID = E.SALES_ORD_ID
            JOIN SYS0013M F ON D.PAY_ITM_MODE_ID = F.CODE_ID
            LEFT JOIN SYS0038M G ON A.REV_STUS_ID = G.STUS_CODE_ID
            LEFT JOIN PAY0007D H ON C.BILL_ID = H.BILL_ID
            LEFT JOIN SAL0001D I ON H.BILL_SO_ID = I.SALES_ORD_ID                 
        WHERE 
            A.GROUP_SEQ = #{groupSeq}
            AND A.REV_STUS_ID IS NULL
         GROUP BY 
            A.GROUP_SEQ,
            A.LDGR_TYPE,
            F.CODE_NAME,
            E.SALES_ORD_NO,
            E.CUST_ID,
            I.CUST_ID,                        
            I.SALES_ORD_NO,
            C.OR_NO,
            C.BRNCH_ID,
            A.CRC_STATE_MAPPING_ID,        
            A.CRC_STATE_MAPPING_DT,
            A.BANK_STATE_MAPPING_ID,
            A.BANK_STATE_MAPPING_DT,
            A.REV_STUS_ID,
            G.NAME,
            A.REV_DT,
            C.PAY_ID,
            A.TOT_AMT            
        ORDER BY A.GROUP_SEQ DESC, C.PAY_ID DESC
        
    </select>
    
    <select id="selectRequestDCFByGroupSeq" parameterType="Map" resultType="egovMap">
        SELECT
            A.GROUP_SEQ,
            (CASE 
                WHEN A.LDGR_TYPE = 1 THEN 'RENTAL'
                WHEN A.LDGR_TYPE = 2 THEN 'OUT'
                WHEN A.LDGR_TYPE = 3 THEN 'MEMBERSHIP'
                WHEN A.LDGR_TYPE = 4 THEN 'AS'
                WHEN A.LDGR_TYPE = 5 THEN 'OUT_MEM'
                WHEN A.LDGR_TYPE = 0 THEN 'HP'
                ELSE ' ' END
            )  AS APP_TYPE,         
            MAX(D.PAY_ITM_MODE_ID) AS PAY_ITM_MODE_ID,
            F.CODE_NAME AS PAY_ITM_MODE_NM,
            (CASE WHEN E.SALES_ORD_NO IS NOT NULL THEN E.CUST_ID ELSE I.CUST_ID END) AS CUST_ID,                        
            (CASE WHEN E.SALES_ORD_NO IS NOT NULL THEN E.SALES_ORD_NO ELSE I.SALES_ORD_NO END) AS SALES_ORD_NO,            
            MAX(D.PAY_ITM_REF_DT) AS PAY_ITM_REF_DT,
            C.OR_NO,
            C.BRNCH_ID,
            A.CRC_STATE_MAPPING_ID,        
            A.CRC_STATE_MAPPING_DT,
            A.BANK_STATE_MAPPING_ID,
            A.BANK_STATE_MAPPING_DT,
            NVL(A.REV_STUS_ID,0) AS REV_STUS_ID,
            G.NAME AS REV_STUS_NM,
            A.REV_DT,
            C.PAY_ID,
            A.TOT_AMT
        FROM 
            PAY0252T A
            JOIN PAY0064D C ON A.PAY_ID = C.PAY_ID
            JOIN PAY0065D D ON A.PAY_ITM_ID = D.PAY_ITM_ID
            LEFT JOIN SAL0001D E ON C.SALES_ORD_ID = E.SALES_ORD_ID
            JOIN SYS0013M F ON D.PAY_ITM_MODE_ID = F.CODE_ID
            LEFT JOIN SYS0038M G ON A.REV_STUS_ID = G.STUS_CODE_ID
            LEFT JOIN PAY0007D H ON C.BILL_ID = H.BILL_ID
            LEFT JOIN SAL0001D I ON H.BILL_SO_ID = I.SALES_ORD_ID                 
        WHERE 
            A.GROUP_SEQ = #{groupSeq}
            AND A.REV_STUS_ID = 1
        GROUP BY 
            A.GROUP_SEQ,
            A.LDGR_TYPE,
            F.CODE_NAME,
            E.SALES_ORD_NO,
            E.CUST_ID,
            I.CUST_ID,                        
            I.SALES_ORD_NO,
            C.OR_NO,
            C.BRNCH_ID,
            A.CRC_STATE_MAPPING_ID,        
            A.CRC_STATE_MAPPING_DT,
            A.BANK_STATE_MAPPING_ID,
            A.BANK_STATE_MAPPING_DT,
            A.REV_STUS_ID,
            G.NAME,
            A.REV_DT,
            C.PAY_ID,
            A.TOT_AMT 
        ORDER BY A.GROUP_SEQ DESC, C.PAY_ID DESC
        
    </select>
    
    <select id="selectReqDcfInfo" parameterType="Map" resultType="egovMap">
        SELECT  
            A.GRP_SEQ,
            A.DCF_RESN,    
            B.CODE_NAME AS DCF_RESN_CODE,
            A.DCF_AMT,
            A.DCF_REM,
            A.DCF_STUS_ID,
            C.CODE AS DCF_STUS_CODE,
            A.DCF_CRT_USER_ID,
            D.USER_NAME AS DCF_CRT_USER_NM, 
            TO_CHAR(A.DCF_CRT_DT,'DD/MM/YYYY') AS DCF_CRT_DT
        FROM 
            PAY0258D A
            JOIN SYS0013M B ON A.DCF_RESN = B.CODE_ID
            JOIN SYS0038M C ON A.DCF_STUS_ID = C.STUS_CODE_ID
            JOIN SYS0047M D ON A.DCF_CRT_USER_ID = D.USER_ID       
        WHERE 
            DCF_REQ_ID = #{reqNo}
    </select>
    
     <insert id="requestDCF" parameterType="Map">
        <selectKey keyProperty="dcfReqId" resultType="int" order="BEFORE">
            SELECT PAY0258D_SEQ.NEXTVAL FROM DUAL
        </selectKey>  
            INSERT INTO PAY0258D (
                DCF_REQ_ID,
				GRP_SEQ,
				DCF_RESN,
				DCF_AMT,
				DCF_REM,
				DCF_STUS_ID,
				DCF_CRT_USER_ID,
				DCF_CRT_DT
            ) VALUES (
                #{dcfReqId},
                #{groupSeq},
                #{reason},
                TO_NUMBER(#{totalAmt}),
                #{remark},
                1,
                #{userId},
                SYSDATE
            )
    </insert>
    
    <update id="updateGroupPaymentRevStatus" parameterType="Map">
        UPDATE PAY0252T SET REV_STUS_ID = #{revStusId} WHERE GROUP_SEQ = #{groupSeq} AND REV_STUS_ID IS NULL
    </update> 
    
    <update id="rejectGroupPaymentRevStatus" parameterType="Map">
        UPDATE PAY0252T SET REV_STUS_ID = #{revStusId} WHERE GROUP_SEQ = #{groupSeq} AND REV_STUS_ID = 1
    </update> 
    
    <select id="selectRequestDCFList" parameterType="Map" resultType="egovMap">
        SELECT  
            A.DCF_REQ_ID,
		    A.GRP_SEQ,
		    A.DCF_RESN,
		    C.CODE_NAME AS DCF_RESN_NM,    
		    A.DCF_STUS_ID,
		    B.NAME AS DCF_STUS_NM,
		    A.DCF_CRT_USER_ID,
		    D.USER_NAME AS DCF_CRT_USER_NM,
		    A.DCF_CRT_DT    
        FROM 
            PAY0258D A
            LEFT JOIN SYS0038M B ON A.DCF_STUS_ID = B.STUS_CODE_ID
            LEFT JOIN SYS0013M C ON A.DCF_RESN = C.CODE_ID
            LEFT JOIN SYS0047M D ON A.DCF_CRT_USER_ID = D.USER_ID
        WHERE
            1=1
            <if test="reqDateFr != null and reqDateTo != null and reqDateFr != '' and reqDateTo != '' ">
                AND DCF_CRT_DT <![CDATA[   >= ]]> TO_DATE(#{reqDateFr},'DD/MM/YYYY')
                AND DCF_CRT_DT <![CDATA[   < ]]> TO_DATE(#{reqDateTo},'DD/MM/YYYY') + 1
            </if>
            <if test="status != null and status != '' ">
            AND DCF_STUS_ID = #{status}
            </if>
            <if test="reason != null and reason != '' ">
            AND DCF_RESN = #{reason}
            </if>
            <if test="reqNo != null and reqNo != '' ">
            AND DCF_REQ_ID = #{reqNo}
            </if>  
        ORDER BY A.DCF_REQ_ID    
        
    </select>  
    
    
    <update id="updateStatusDCF" parameterType="Map">
        UPDATE PAY0258D SET
            DCF_APPV_DT = SYSDATE,
            DCF_APPV_USER_ID = #{userId},
            DCF_APPV_REM = #{remark},
            DCF_STUS_ID = #{dcfStusId}
        WHERE 
            DCF_REQ_ID = #{reqNo}
    </update>  
    
    <update id="approvalDCF" statementType="CALLABLE" parameterType="Map">
        {call SP_INST_PAYMENT_REVRS(#{reqNo},#{groupSeq},#{remark}, #{userId} )}
    </update>
    
    
    <select id="selectFTOldData" parameterType="Map" resultType="egovMap">
        SELECT
            A.GROUP_SEQ,
            (CASE 
                WHEN A.LDGR_TYPE = 1 THEN 'RENTAL'
                WHEN A.LDGR_TYPE = 2 THEN 'OUT'
                WHEN A.LDGR_TYPE = 3 THEN 'MEMBERSHIP'
                WHEN A.LDGR_TYPE = 4 THEN 'AS'
                WHEN A.LDGR_TYPE = 5 THEN 'OUT_MEM'
                WHEN A.LDGR_TYPE = 0 THEN 'HP'
                ELSE ' ' END
            )  AS APP_TYPE,   
            (CASE WHEN E.SALES_ORD_NO IS NOT NULL THEN E.CUST_ID ELSE I.CUST_ID END) AS CUST_ID,
            (CASE WHEN E.SALES_ORD_NO IS NOT NULL THEN J.NAME ELSE K.NAME END) AS CUST_NM,            
            (CASE WHEN E.SALES_ORD_NO IS NOT NULL THEN E.SALES_ORD_NO ELSE I.SALES_ORD_NO END) AS SALES_ORD_NO,            
            C.OR_NO,            
            A.TOT_AMT          
        FROM 
            PAY0252T A
            JOIN PAY0064D C ON A.PAY_ID = C.PAY_ID
            LEFT JOIN SAL0001D E ON C.SALES_ORD_ID = E.SALES_ORD_ID
            LEFT JOIN SYS0038M G ON A.REV_STUS_ID = G.STUS_CODE_ID
            LEFT JOIN PAY0007D H ON C.BILL_ID = H.BILL_ID
            LEFT JOIN SAL0001D I ON H.BILL_SO_ID = I.SALES_ORD_ID
            LEFT JOIN SAL0029D J ON E.CUST_ID = J.CUST_ID
            LEFT JOIN SAL0029D K ON I.CUST_ID = K.CUST_ID
        WHERE
            A.GROUP_SEQ = #{groupSeq} 
            AND C.PAY_ID = #{payId}
            AND ROWNUM <![CDATA[   <= ]]> 1
        ORDER BY A.RSLT_SEQ DESC
        
    </select>
    
    <insert id="requestFT" parameterType="Map">
        <selectKey keyProperty="ftReqId" resultType="int" order="BEFORE">
            SELECT PAY0260D_FT_REQ_ID_SEQ.NEXTVAL FROM DUAL
        </selectKey>
            INSERT INTO PAY0260D (
                FT_REQ_ID,
				SRC_GRP_SEQ,
				SRC_AMT,
				SRC_ORD_NO,
				SRC_CUST_NAME,
				SRC_PAY_ID,
				FT_GRP_SEQ,
				FT_AMT,
				FT_ORD_NO,
				FT_CUST_NAME,
				FT_RESN,
				FT_REM,
				FT_STUS_ID,
				FT_CRT_USER_ID,
				FT_CRT_DT
            ) VALUES (
                #{ftReqId},
                #{groupSeq},
                TO_NUMBER(#{oldAmt}),
                #{oldOrdNo},
                #{oldCustNm},  
                #{payId},              
                #{seq},
                TO_NUMBER(#{newAmt}),
                #{newOrdNo},
                #{newCustNm},
                #{newReason},
                #{newRemark},                
                1,
                #{userId},
                SYSDATE
            )
    </insert>
    
    <select id="selectRequestFTList" parameterType="Map" resultType="egovMap">
        SELECT  
            A.FT_REQ_ID,            
            A.FT_RESN,
            C.CODE_NAME AS FT_RESN_NM,    
            A.FT_STUS_ID,
            B.NAME AS FT_STUS_NM,
            A.FT_CRT_USER_ID,
            D.USER_NAME AS FT_CRT_USER_NM,
            A.FT_CRT_DT    
        FROM 
            PAY0260D A
            LEFT JOIN SYS0038M B ON A.FT_STUS_ID = B.STUS_CODE_ID
            LEFT JOIN SYS0013M C ON A.FT_RESN = C.CODE_ID
            LEFT JOIN SYS0047M D ON A.FT_CRT_USER_ID = D.USER_ID
        WHERE
            1=1
            <if test="reqDateFr != null and reqDateTo != null and reqDateFr != '' and reqDateTo != '' ">
                AND FT_CRT_DT <![CDATA[   >= ]]> TO_DATE(#{reqDateFr},'DD/MM/YYYY')
                AND FT_CRT_DT <![CDATA[   < ]]> TO_DATE(#{reqDateTo},'DD/MM/YYYY') + 1
            </if>
            <if test="status != null and status != '' ">
            AND FT_STUS_ID = #{status}
            </if>
            <if test="reason != null and reason != '' ">
            AND FT_RESN = #{reason}
            </if>
            <if test="reqNo != null and reqNo != '' ">
            AND FT_REQ_ID = #{reqNo}
            </if>  
        ORDER BY A.FT_REQ_ID    
        
    </select> 
    
    <select id="selectReqFTInfo" parameterType="Map" resultType="egovMap">
        SELECT  
            A.FT_REQ_ID,
            A.SRC_AMT,
			A.SRC_ORD_NO,
			A.SRC_CUST_NAME,
			A.FT_AMT,
			A.FT_ORD_NO,
			A.FT_CUST_NAME,            
            A.FT_RESN,
            C.CODE_NAME AS FT_RESN_NM,    
            A.FT_STUS_ID,
            B.NAME AS FT_STUS_NM,
            A.FT_CRT_USER_ID,
            D.USER_NAME AS FT_CRT_USER_NM,
            TO_CHAR(A.FT_CRT_DT,'DD/MM/YYYY') AS FT_CRT_DT, 
            A.FT_REM   
        FROM 
            PAY0260D A
            LEFT JOIN SYS0038M B ON A.FT_STUS_ID = B.STUS_CODE_ID
            LEFT JOIN SYS0013M C ON A.FT_RESN = C.CODE_ID
            LEFT JOIN SYS0047M D ON A.FT_CRT_USER_ID = D.USER_ID   
        WHERE 
            FT_REQ_ID = #{ftReqId}
    </select>
    
      <update id="updateStatusFT" parameterType="Map">
        UPDATE PAY0260D SET
            FT_APPV_DT = SYSDATE,
            FT_APPV_USER_ID = #{userId},
            FT_APPV_REM = #{appvRemark},
            FT_STUS_ID = #{ftStusId}
        WHERE 
            FT_REQ_ID = #{ftReqId}
    </update>  
    
    <update id="approvalFT" statementType="CALLABLE" parameterType="Map">
        {call SP_INST_FUND_TRNSFR(#{ftReqId},#{appvRemark}, #{userId} )}
    </update> 
    
    
</mapper>