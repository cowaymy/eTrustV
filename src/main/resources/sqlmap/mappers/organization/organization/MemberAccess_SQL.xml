<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
    namespace="com.coway.trust.biz.organization.organization.impl.MemberAccessMapper">

       <select id="selectPosition" parameterType="Map" resultType="egovMap">
        select b.mem_org_lvl as position_level , b.mem_org_desc as position_name
            from sys0013m a,
            ORG0012D b
        where a.code_id = b.mem_type_id
            and b.mem_type_id = #{memberType}
    </select>


    <select id="getOrgDtls" parameterType="Map" resultType="egovMap">
        SELECT
            C.MEM_LVL,
            C.DEPT_CODE LAST_DEPT_CODE,
            C.GRP_CODE LAST_GRP_CODE,
            C.ORG_CODE LAST_ORG_CODE
        FROM
            SYS0047M A
            LEFT JOIN ORG0001D B
                ON A.USER_NAME = B.MEM_CODE
            LEFT JOIN ORG1001V C
                ON B.MEM_ID = C.MEM_ID
        WHERE
            A.USER_ID = #{userId}
    </select>

    <select id="selectMemberAccessList" parameterType="Map" resultType="egovMap">
         <![CDATA[
                  WITH LAST_ACT AS (
                      SELECT
                        PV_YEAR || '/' || TO_CHAR(PV_MONTH, '00') LAST_ACT_DT, MEM_ID
                      FROM SAL0001D
                      WHERE PV_YEAR <> 0
                        AND PV_MONTH <> 0
                        AND STUS_CODE_ID = 4
                        ORDER BY PV_YEAR DESC, PV_MONTH DESC
                  ),
                  TEST_RESULT_TABLE AS (
                      SELECT
                        COURS_MEM_ID,
                        CASE COURS_TEST_RESULT
                             WHEN 'P' THEN 'Pass'
                             WHEN 'F' THEN 'Fail'
                             WHEN 'AB' THEN 'Absent'
                             ELSE '' END TEST_RESULT
                      FROM MSC0009D A
                      JOIN MSC0008d b on b.cours_id = a.cours_id
                      WHERE COURS_MEM_STUS_ID <>  8
                        AND b.cours_stus_id not in (3,8)
                      ORDER BY A.COURS_ITM_ID DESC
                  )
                  SELECT
                  Extent1.MEM_ID MemberID,
                  Extent1.MEM_CODE MemberCode,
                  Extent1.MEM_TYPE MemberType,
                  Extent1.NAME Name,
                  Extent1.NRIC NRIC,
                  Extent1.STUS Status,
                  TO_CHAR(Extent1.UPD_DT,'DD-MM-YYYY') Updated,
                  Extent2.CODE_NAME CodeName,
                  Extent3.NAME as status_name,
                  Extent1.brnch as brnch_id,
                  Extent5.ct_sub_grp,
                  extent1.TRAINEE_TYPE,
                  Extend6.MEM_ORG_DESC position_name,
                  ( SELECT TEST_RESULT FROM TEST_RESULT_TABLE WHERE COURS_MEM_ID = EXTENT1.MEM_ID AND ROWNUM <= 1 ) TEST_RESULT,
                  Extent9.USER_NAME as approved_by,
                  Extent10.CODE as branch,
                  TO_CHAR(Extent1.CRT_DT, 'DD-MM-YYYY') CRT_DT,
                  CASE WHEN (Extent1.AREA_ID IS NOT NULL OR Extent1.ADDR_DTL IS NOT NULL) THEN
                                    (Extent1.ADDR_DTL || ' ' ||
                                    CASE WHEN Extent1.STREET IS NOT NULL THEN Extent1.STREET || ', ' ELSE '' END ||
                                    CASE WHEN Extent11.AREA IS NOT NULL THEN Extent11.AREA || ', ' ELSE '' END ||
                                    CASE WHEN Extent11.POSTCODE IS NOT NULL THEN  Extent11.POSTCODE || ', ' ELSE '' END ||
                                    CASE WHEN Extent11.CITY IS NOT NULL THEN  Extent11.CITY || ', ' ELSE '' END ||
                                    CASE WHEN Extent11.STATE IS NOT NULL THEN  Extent11.STATE || ', ' ELSE '' END ||
                                    Extent11.COUNTRY)
                                ELSE Extent1.ADDR1 || ', ' || Extent1.ADDR2 || ', ' ||
                                    (CASE WHEN Extent1.ADDR3 IS NULL THEN '' ELSE Extent1.ADDR3 || ', ' END) ||
                                    (CASE WHEN Extent1.ADDR4 IS NULL THEN '' ELSE Extent1.ADDR4 || ', ' END) ||
                                    Extent1.POSTCODE || ' ' ||Extent15.AREA_NAME || ', ' || Extent14.NAME || ', ' || Extent13.NAME
                                END
                  AS ADDRESS,
                  Extent12.GRP_CODE,
                  Extent12.ORG_CODE,
                  Extent12.DEPT_CODE,
                  ( SELECT LAST_ACT_DT FROM LAST_ACT WHERE MEM_ID = EXTENT1.MEM_ID AND ROWNUM <= 1 ) LAST_ACT_DT,
                  /*vaccination information */
                  V.VACCINE_STATUS,
                  V.REASON_ID,
                  DECODE(Extent16.HP_CODE,NULL,'No','Yes') NEO_PRO_STATUS,
                  extent17.code_name HP_TYPE,
                  Extent1.ATCH_FILE_GRP_ID,
                  Extent1.UNIFORM_SIZE,
                  Extent1.MUSLIMAH_SCARFT,
                  Extent1.INNER_TYPE,
                  Extent1.EMRGCY_CNTC_NAME,
                  Extent1.EMRGCY_CNTC_NO,
                  Extent1.EMRGCY_CNTC_INIT,
                  Extent1.TRM_REJOIN,
                  Extent1.EMAIL
                  FROM ORG0001D Extent1
                    JOIN SYS0013M Extent2 ON Extent1.MEM_TYPE = Extent2.CODE_ID
                    JOIN SYS0038M Extent3 ON Extent1.STUS = Extent3.STUS_CODE_ID
                    LEFT JOIN ORG0005D Extent5 ON Extent5.MEM_ID = Extent1.MEM_ID
                    LEFT JOIN ORG0012D Extend6 ON Extend6.MEM_TYPE_ID = Extent1.MEM_TYPE and Extend6.MEM_ORG_LVL = Extent5.MEM_LVL
                    LEFT JOIN SYS0047M Extent9 ON Extent1.CRT_USER_ID = Extent9.USER_ID
                    LEFT JOIN SYS0005M Extent10 ON Extent1.BRNCH = Extent10.BRNCH_ID
                    LEFT JOIN SYS0064M Extent11 ON Extent1.AREA_ID = Extent11.AREA_ID
                    LEFT JOIN ORG1001V Extent12 ON Extent1.MEM_ID = Extent12.MEM_ID
                    LEFT JOIN SYS0015M Extent13 ON Extent1.COUNTRY = Extent13.CNTY_ID
                    LEFT JOIN SYS0035M Extent14 ON Extent1.STATE = Extent14.STATE_ID
                    LEFT JOIN SYS0039M Extent15 ON Extent1.STATE = Extent15.AREA_STATE_ID AND Extent1.AREA = Extent15.AREA_ID
                    LEFT JOIN ORG0040D V ON V.MEM_ID = Extent1.MEM_ID
                    /* Vaccination info */
                    LEFT JOIN ORG0011D Extent16 ON Extent1.MEM_CODE = Extent16.HP_CODE AND PV_YEAR = TO_CHAR(SYSDATE, 'YYYY') AND PV_MONTH = TO_CHAR(SYSDATE, 'MM') AND NVL(IS_NW,0)=0
                    LEFT JOIN SYS0013M Extent17 ON Extent1.rank = Extent17.code_id
            ]]>
          WHERE 1=1
          <if test="memTypeCom != null and memTypeCom != ''">
            AND Extent1.MEM_TYPE = #{memTypeCom}
          </if>
          <if test="code != null and code != ''">
            AND Extent1.MEM_CODE LIKE '%' || #{code} || '%'
          </if>
          <if test="name != null and name != ''">
            AND Extent1.NAME LIKE UPPER('%' || #{name} || '%')
          </if>
          <if test="icNum != null and icNum != ''">
            AND Extent1.NRIC LIKE '%' || #{icNum} || '%'
          </if>
          <if test="birth != null and birth != ''">
            AND Extent1.DOB = TO_DATE(#{birth}, 'DD/MM/YYYY')
          </if>
          <if test="nation != null and nation != ''">
            AND Extent1.NATION = #{nation}
          </if>
          <if test="race != null and race != ''">
            AND Extent1.RACE = #{race}
          </if>
          <if test="status != null and status != ''">
            <if test="status == 'Rejoin'">
              AND Extent1.STUS = 3 AND Extent1.TRM_REJOIN = 1
            </if>
            <if test="status != 'Rejoin'">
              AND Extent1.STUS = #{status}
            </if>
          </if>
          <if test="keyUser != null and keyUser != ''">
            AND Extent1.CRT_USER_ID = #{keyUser}
          </if>
          <if test="keyBranch != null and keyBranch != ''">
            AND TO_NUMBER(Extent1.BRNCH,99999.99) = #{keyBranch}
          </if>
          <if test="contact != null and contact != ''">
            AND ((Extent1.TEL_HUSE LIKE '%' || #{contact}|| '%' ) OR ( Extent1.TEL_OFFICE LIKE '%' || #{contact}|| '%' ) OR ( Extent1.TEL_MOBILE LIKE '%' || #{contact}|| '%' ) ) AND ( Extent1.TEL_MOBILE = #{contact} OR Extent1.TEL_HUSE = #{contact} OR Extent1.TEL_OFFICE = #{contact})
          </if>
          <if test="sponsor != null and sponsor != ''">
            AND UPPER(Extent1.SPONS_CODE) LIKE UPPER('%' || #{sponsor} || '%')
          </if>
          <if test="position != null and position != ''">
            AND Extent5.MEM_LVL= #{position}
          </if>
          <if test="orgCode != null and orgCode != '' ">
            AND EXTENT12.ORG_CODE = #{orgCode}
          </if>
          <if test="grpCode != null and grpCode != '' ">
            AND EXTENT12.GRP_CODE = #{grpCode}
          </if>
          <if test="deptCode != null and deptCode != '' ">
            AND EXTENT12.DEPT_CODE = #{deptCode}
          </if>
          <if test="sessionTypeID != 4 and sessionTypeID != 6">
            <choose>
              <when test="memberLevel == 1">
                AND extent12.ORG_CODE IN (SELECT B.DEPT_CODE FROM ORG0001D A, ORG0005D B WHERE A.MEM_ID = B.MEM_ID AND A.MEM_CODE = #{userName} )
              </when>
              <when test="memberLevel == 2">
                AND extent12.GRP_CODE IN (SELECT B.DEPT_CODE FROM ORG0001D A, ORG0005D B WHERE A.MEM_ID = B.MEM_ID AND A.MEM_CODE =#{userName} )
              </when>
              <when test="memberLevel == 3">
                AND extent12.DEPT_CODE IN (SELECT B.DEPT_CODE FROM ORG0001D A, ORG0005D B WHERE A.MEM_ID = B.MEM_ID AND A.MEM_CODE = #{userName} )
              </when>
              <when test="memberLevel == 4">
                <if test="code == null or code == ''">
                  AND UPPER(Extent1.MEM_CODE) = UPPER(#{userName})
                </if>
              </when>
            </choose>
          </if>
          ORDER BY Extent1.MEM_CODE ASC
        </select>


        <select id="selectMemberAccessListView" parameterType="String" resultType="egovMap">
        SELECT ORG1.NRIC,
            ORG1.TEL_MOBILE,
            ORG1.MEM_CODE,
            ORG1.FULL_NAME,
            EXTENT3.NAME,
            SYS47.USER_STUS_ID,
            <!-- SYS117.REMARK, -->
            ORG1.EMAIL,
            SYS47.USER_NAME
        FROM ORG0001D ORG1
        LEFT JOIN SYS0047M SYS47 ON SYS47.HR_CODE = ORG1.MEM_CODE
        JOIN SYS0038M EXTENT3 ON ORG1.STUS = EXTENT3.STUS_CODE_ID
        <!-- JOIN SYS0117M SYS117 ON SYS117.MEM_ID = ORG1.MEM_ID -->
        WHERE ORG1.MEM_CODE = #{memberCode}
        </select>

        <select id="checkExistRequest" parameterType="String" resultType="int">
            SELECT COUNT(*) AS REQS_CNT FROM SYS0117M WHERE MEM_ID = (SELECT MEM_ID FROM ORG0001D WHERE MEM_CODE = #{memCode})
        </select>

        <select id="getFinApprover" parameterType="Map" resultType="egovMap">
             SELECT MEM_CODE FROM ORG0001D WHERE MEM_CODE = 'P0002'
        </select>


        <select id="accessApprovalList" resultType="egovMap" parameterType="Map">
        SELECT A.*, B.NAME
        FROM (
            SELECT
                A.REQ_ID,
                A.MEM_CODE,
                D.CODE_ID,
                D.CODE_NAME AS REQUEST_CATEGORY,
                E.CODE_NAME AS CASE_CATEGORY,
                B.USER_NAME AS REQUESTOR,
                A.REQUEST_DT,
                A.REMARK,
                COUNT(CASE WHEN C.STUS_CODE_ID = 1 THEN 1 END) ACTIVE,
                COUNT(CASE WHEN C.STUS_CODE_ID = 5 THEN 1 END) APPROVE,
                COUNT(CASE WHEN C.STUS_CODE_ID = 6 THEN 1 END) REJECT,
                A.CRT_USER_ID
            FROM ORG0054D A
            JOIN SYS0047M B ON A.CRT_USER_ID = B.USER_ID
            JOIN ORG0055D C ON C.REQ_ID = A.REQ_ID
            JOIN SYS0013M D ON D.CODE_ID = A.REQUEST_CATEGORY
            JOIN SYS0013M E ON E.CODE_ID = A.CASE_CATEGORY
            GROUP BY A.REQ_ID, A.MEM_CODE, D.CODE_ID, D.CODE_NAME, E.CODE_NAME, B.USER_NAME, A.REQUEST_DT, A.REMARK, A.CRT_USER_ID
        ) A
        LEFT JOIN (
            SELECT REQ_ID, A.STUS_CODE_ID, B.NAME, B.MEM_ID,
            LAG(STUS_CODE_ID) OVER (PARTITION BY REQ_ID ORDER BY SEQ) PREV_STUS
            FROM
            ORG0055D A
            JOIN ORG0001D B ON A.MEM_ID = B.MEM_ID
        ) B ON A.REQ_ID = B.REQ_ID AND (PREV_STUS IS NULL OR PREV_STUS = 5) AND STUS_CODE_ID IN (1,6)
        WHERE 1=1
        <if test="type == 'list'">
           AND A.CRT_USER_ID = #{userId}
        </if>
        <if test="type == 'approval'">
           AND B.MEM_ID = #{curr}
           AND B.STUS_CODE_ID = 1
        </if>
        <if test="type == 'reset'">
           AND ACTIVE = 0 AND REJECT = 0
           AND TO_CHAR(SYSDATE,'YYYY/MM/DD') BETWEEN TO_CHAR(A.START_DT,'YYYY/MM/DD') AND TO_CHAR(A.END_DT,'YYYY/MM/DD')
           AND A.CRT_USER_ID = #{userId}
        </if>
        ORDER BY A.REQ_ID ASC
<!--        <if test="type == 'list'"> -->
<!--            FETCH FIRST 10 ROWS ONLY -->
<!--        </if> -->
     </select>

     <select id="checkExistMemCode" parameterType="Map" resultType="int">
	/* checkExistMemCode */
	SELECT COUNT(*) FROM
	    (SELECT A.MEM_CODE
	    FROM ORG0054D A
	    JOIN  ORG0055D B ON B.REQ_ID = A.REQ_ID
	    WHERE B.STUS_CODE_ID = 1) T
	WHERE T.MEM_CODE = #{memCode}
	</select>

	<select id="selectNextRequestID" resultType="String">
	/* selectNextRequestID */
	    SELECT    TO_CHAR (SYSDATE, 'yyyy')
	       || NVL (TO_CHAR (MAX (SUBSTR (REQ_ID, 5, 6) + 1), 'FM000000'), '000001') AS REQ_ID
	    FROM ORG0054D
	    WHERE SUBSTR (REQ_ID, 1, 4) = TO_CHAR (SYSDATE, 'yyyy')
	</select>

	<insert id="insertApproveMaster" parameterType="Map">
	/* insertApproveManagement */
	<!-- CMM0042C_ITEM_SEQ.nextval -->
	  INSERT INTO ORG0054D
       (
            REQ_ID
           ,MEM_CODE
           ,REQUEST_CATEGORY
           ,CASE_CATEGORY
           ,REMARK
           ,REQUEST_DT
           ,CRT_USER_ID
           ,CRT_DT
           ,UPD_USER_ID
           ,UPD_DT
        )
        values
        (
            #{requestID}
           ,#{memCode}
           ,#{requestCategory}
           ,#{caseCategory}
           ,#{remark1}
           ,TO_DATE(#{effectDt},'dd/mm/yyyy')
           ,(SELECT USER_ID FROM SYS0047M WHERE USER_NAME = #{userName})
           ,SYSDATE
           ,#{userId}
           ,SYSDATE
        )
	</insert>

	<insert id="insertApproveLineDetail" parameterType="Map">
	/* insertApproveLineDetail */
	<!-- CMM0042C_ITEM_SEQ.nextval -->
	   INSERT INTO ORG0055D
       (
            REQ_ID
           ,SEQ
           ,MEM_ID
           ,APPV_DT
           ,STUS_CODE_ID
           ,APPV_STUS
           ,CRT_DT
           ,CRT_USER_ID
           ,UPD_DT
           ,UPD_USER_ID
        )
        values
        (
            #{requestID}
           ,#{approveNo}
           ,(SELECT MEM_ID FROM ORG0001D WHERE MEM_CODE = #{memCode})
           ,#{appvDt}
           , 1
           <choose>
           <when test="approveNo == 1">
           ,'R'
           </when>
           <otherwise>
           ,'T'
           </otherwise>
           </choose>
           ,SYSDATE
           ,#{userId}
           ,SYSDATE
           ,#{userId}
        )
	</insert>

	<update id="updateApproval" parameterType="Map">
        UPDATE ORG0055D
        SET STUS_CODE_ID = #{stus},
              UPD_DT = SYSDATE,
              APPV_DT = SYSDATE,
              UPD_USER_ID = #{userId},
              APPV_STUS =
              <choose>
	           <when test="stus == 5">
	           'A'
	           </when>
	           <otherwise>
	           'J'
	           </otherwise>
	           </choose>
        WHERE REQ_ID = #{reqId}
     </update>

     <update id="updateAccess" parameterType="Map">
        UPDATE SYS0047M
        SET USER_STUS_ID =
        <choose>
               <when test="codeId == 7510">
               8
               </when>
               <otherwise>
               1
               </otherwise>
               </choose>
        WHERE HR_CODE = #{memCode}
     </update>

</mapper>