<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
    namespace="com.coway.trust.biz.organization.organization.impl.ComplianceCallLogMapper">

		<select id="selectComplianceLog" parameterType="Map" resultType="egovMap">
		<![CDATA[
		      SELECT Project1.CMPLNC_ID CMPLNC_ID  ,
			       Project1.CMPLNC_NO CMPLNC_NO  ,
			       Project1.MEM_ID MEM_ID  ,
			       Project1.MEM_CODE MEM_CODE  ,
			       Project1.MEM_TYPE MEM_TYPE  ,
			       Project1.CODE_NAME CODE_NAME  ,
			       Project1.CMPLNC_STUS_ID CMPLNC_STUS_ID  ,
			       Project1.NAME NAME  ,
			       Project1.C1 C1  
			  FROM ( SELECT Extent1.CMPLNC_ID CMPLNC_ID  ,
			                Extent1.CMPLNC_NO CMPLNC_NO  ,
			                Extent1.MEM_ID MEM_ID  ,
			                Extent1.CMPLNC_STUS_ID CMPLNC_STUS_ID  ,
			                Extent3.MEM_CODE MEM_CODE  ,
			                Extent3.MEM_TYPE MEM_TYPE  ,
			                Extent4.CODE_NAME CODE_NAME  ,
			                Extent5.NAME NAME  ,
			                Extent2.CMPLNC_RCIV_DT C1  
			         FROM MSC0005D Extent1
			                JOIN MSC0007D Extent2   ON ( Extent2.CMPLNC_ID = Extent1.CMPLNC_ID )
			                AND ( Extent2.CMPLNC_RCIV_DT IS NOT NULL )
			                LEFT JOIN ORG0001D Extent3   ON Extent3.MEM_ID = Extent1.MEM_ID
			                LEFT JOIN SYS0013M Extent4   ON Extent4.CODE_ID = Extent3.MEM_TYPE
			                LEFT JOIN SYS0038M Extent5   ON Extent5.STUS_CODE_ID = Extent1.CMPLNC_STUS_ID
			          WHERE  1=1
			          ]]>
			          <if test="caseNo != null and caseNo != ''">
                           AND  UPPER(Extent1.CMPLNC_NO) =  UPPER(#{caseNo})
                      </if>
                      <if test="caseStatusList != null and caseStatusList != '' ">
                             AND  Extent1.CMPLNC_STUS_ID IN
                            <foreach item="item" collection="caseStatusList" index="index" open="(" separator="," close=")">
                            #{item}
                            </foreach>
                      </if>
                      <if test="memCode != null and memCode != ''">
                           AND  UPPER(Extent3.MEM_CODE) =  UPPER(#{memCode})
                      </if>
                      <if test="memType != null and memType != ''">
                           AND  Extent3.MEM_TYPE =  #{memType}
                      </if>
                      <if test="recevDt != null and recevDt != ''">
                           AND  Extent2.CMPLNC_RCIV_DT =  to_date(#{recevDt},'DD/MM/YYYY')
                      </if>
                      <![CDATA[
			        ) Project1
			  ORDER BY Project1.CMPLNC_ID ASC
			   ]]>
		</select>
		
		<select id="getMemberDetail" parameterType="Map" resultType="egovMap">
		<![CDATA[
		      SELECT Limit1.MEM_ID MEM_ID  ,
				       Limit1.ORG_CODE ORG_CODE  ,
				       CASE 
				            WHEN ( Limit1.MEMBERID1 IS NOT NULL ) THEN Limit1.MEMBERCODE1
				       ELSE ''
				          END C1  ,
				       CASE 
				            WHEN ( Limit1.MEMBERID1 IS NOT NULL ) THEN Limit1.NAME1
				       ELSE ''
				          END C2  ,
				       CASE 
				            WHEN ( Limit1.TELMOBILE1 IS NOT NULL ) THEN Limit1.TELMOBILE1
				       ELSE ''
				          END C3  ,
				       Limit1.GRP_CODE GRP_CODE  ,
				       CASE 
				            WHEN ( Limit1.MEMBERID2 IS NOT NULL ) THEN Limit1.MEMBERCODE2
				       ELSE ''
				          END C4  ,
				       CASE 
				            WHEN ( Limit1.MEMBERID2 IS NOT NULL ) THEN Limit1.NAME2
				       ELSE ''
				          END C5  ,
				       CASE 
				            WHEN ( Limit1.MEMBERID2 IS NOT NULL ) THEN Limit1.TELMOBILE2
				       ELSE ''
				          END C6  ,
				       Limit1.DEPT_CODE DEPT_CODE  ,
				       CASE 
				            WHEN ( Limit1.MEMBERID3 IS NOT NULL ) THEN Limit1.MEMBERCODE3
				       ELSE ''
				          END C7  ,
				       CASE 
				            WHEN ( Limit1.MEMBERID3 IS NOT NULL ) THEN Limit1.NAME3
				       ELSE ''
				          END C8  ,
				       CASE 
				            WHEN ( Limit1.TELMOBILE3 IS NOT NULL ) THEN Limit1.TELMOBILE3
				       ELSE ''
				          END C9  ,
				       Limit1.MEM_CODE MEM_CODE  ,
				       Limit1.NAME NAME  ,
				       Limit1.TEL_MOBILE TEL_MOBILE  ,
				       Limit1.TEL_HUSE TEL_HUSE  ,
				       Limit1.NRIC NRIC  ,
				       Limit1.TEL_OFFICE TEL_OFFICE  ,
				       Limit1.MEM_TYPE MEM_TYPE  
				  FROM ( SELECT Extent1.DEPT_CODE DEPT_CODE  ,
				                Extent1.GRP_CODE GRP_CODE  ,
				                Extent1.ORG_CODE ORG_CODE  ,
				                Extent2.MEM_ID MEM_ID  ,
				                Extent2.MEM_CODE MEM_CODE  ,
				                Extent2.MEM_TYPE MEM_TYPE  ,
				                Extent2.NAME NAME  ,
				                Extent2.NRIC NRIC  ,
				                Extent2.TEL_OFFICE TEL_OFFICE  ,
				                Extent2.TEL_HUSE TEL_HUSE  ,
				                Extent2.TEL_MOBILE TEL_MOBILE  ,
				                Extent3.MEM_ID MEMBERID1  ,
				                Extent3.MEM_CODE MEMBERCODE1  ,
				                Extent3.NAME NAME1  ,
				                Extent3.TEL_MOBILE TELMOBILE1  ,
				                Extent4.MEM_ID MEMBERID2  ,
				                Extent4.MEM_CODE MEMBERCODE2  ,
				                Extent4.NAME NAME2  ,
				                Extent4.TEL_MOBILE TELMOBILE2  ,
				                Extent5.MEM_ID MEMBERID3  ,
				                Extent5.MEM_CODE MEMBERCODE3  ,
				                Extent5.NAME NAME3  ,
				                Extent5.TEL_MOBILE TELMOBILE3  
				         FROM ( SELECT vMemberOrg.MEM_ID MEM_ID  ,
				                       vMemberOrg.MEM_CODE MEM_CODE  ,
				                       vMemberOrg.MEM_LVL MEM_LVL  ,
				                       vMemberOrg.DEPT_CODE DEPT_CODE  ,
				                       vMemberOrg.GRP_CODE GRP_CODE  ,
				                       vMemberOrg.ORG_CODE ORG_CODE  ,
				                       vMemberOrg.TOP_ORG_CODE TOP_ORG_CODE  ,
				                       vMemberOrg.MEM_UP_ID MEM_UP_ID  ,
				                       vMemberOrg.LVL3_UP_ID LVL3_UP_ID  ,
				                       vMemberOrg.LVL2_UP_ID LVL2_UP_ID  ,
				                       vMemberOrg.LVL1_UP_ID LVL1_UP_ID  ,
				                       vMemberOrg.LVL0_UP_ID LVL0_UP_ID  
				                FROM ORG1001V vMemberOrg ) Extent1
				                JOIN ORG0001D Extent2   ON Extent2.MEM_ID = Extent1.MEM_ID
				                LEFT JOIN ORG0001D Extent3   ON Extent3.MEM_ID = Extent1.LVL1_UP_ID
				                LEFT JOIN ORG0001D Extent4   ON Extent4.MEM_ID = Extent1.LVL2_UP_ID
				                LEFT JOIN ORG0001D Extent5   ON Extent5.MEM_ID = Extent1.LVL3_UP_ID
				          WHERE  Extent1.MEM_CODE = #{memberCode} AND ROWNUM <= 1 ) Limit1 
		         ]]>
		</select>
		<insert id="insertCom" parameterType="Map">
		INSERT INTO MSC0005D (
		   CMPLNC_ID
         , CMPLNC_NO
         , MEM_ID
         , CMPLNC_STUS_ID
         , CMPLNC_REM
         , CMPLNC_CRT_DT
         , CMPLNC_CRT_USER_ID
         , CMPLNC_UPD_DT
         , CMPLNC_UPD_USER_ID
          )
         VALUES (
          MSC0005D_CMPLNC_ID_SEQ.NEXTVAL
         , #{complianceNo}
         , #{memberId}
         , #{complianceStatusId}
         , NULL
         , sysdate
         , #{complianceCreateBy}
         , sysdate
         , #{complianceUpdateBy}
         )
  </insert>
    <insert id="insertComSub" parameterType="Map">   
		  INSERT INTO MSC0007D (
		    CMPLNC_ITM_ID
		  , CMPLNC_ID
		  , CMPLNC_SO_ID
		  , CMPLNC_STUS_ID
		  , CMPLNC_ACTN_ID
		  , CMPLNC_FOLW_UP_ID
		  , CMPLNC_RCIV_DT
		  , CMPLNC_CLOS_DT
		  , CMPLNC_REM
		  , CMPLNC_CASE_CTGRY
		  , CMPLNC_DOC_TYPE
		  , CMPLNC_FINDING
		  , CMPLNC_COLCT_AMT
		  , CMPLNC_FINAL_ACTN
		  , CMPLNC_HAS_ATTACH
		  , CMPLNC_ATTACH_FILE_NAME
		  , CMPLNC_CRT_DT
		  , CMPLNC_CRT_USER_ID
		   )
		  VALUES ( 
		    MSC0007D_CMPLNC_ITM_ID_SEQ.NEXTVAL
		  , #{complianceId}
		  , #{complianceSOID}
		  , #{complianceStatusId}
		  , #{complianceActionId}
		  , #{complianceFollowUpId}
		  , #{complianceReceivedDate}
		  , #{complianceClosedDate}
		  , #{complianceRemark}
		  , #{complianceCaseCategory}
		  , #{complianceDocType}
		  , #{complianceFinding}
		  , #{complianceCollectAmt}
		  , #{complianceFinalAction}
		  , #{complianceHasAttachment}
		  , #{complianceAttachmentFilename}
		  , sysdate
		  , #{complianceCreateBy}
		   )
    </insert>
    <select id="selectCheckOrder" parameterType="Map" resultType="egovMap">
    <![CDATA[
        SELECT Limit1.CMPLNC_NO CMPLNC_NO  
		  FROM ( SELECT Extent3.CMPLNC_NO CMPLNC_NO  
		         FROM SAL0001D Extent1
		                JOIN MSC0006D Extent2   ON Extent2.CMPLNC_SO_ID = Extent1.SALES_ORD_ID
		                JOIN MSC0005D Extent3   ON Extent3.CMPLNC_ID = Extent2.CMPLNC_ID
		          WHERE  ( 8 <> Extent2.CMPLNC_STUS_ID )
		                   AND ( Extent1.SALES_ORD_NO = #{orderNo} ) AND ROWNUM <= 1 ) Limit1
		   ]]>
    </select>
    <select id="selectComplianceOrderDetail" parameterType="Map" resultType="egovMap">
    <![CDATA[
       SELECT Limit1.SALES_ORD_ID SALES_ORD_ID  ,
			       Limit1.SALES_ORD_NO SALES_ORD_NO  ,
			      Limit1.SALES_DT C1  ,
			       Limit1.CODE_NAME CODE_NAME  ,
			       Limit1.STK_DESC STK_DESC  ,
			       Limit1.NAME NAME  ,
			       Limit1.NAME1 NAME1  ,
			       Limit1.NRIC NRIC  ,
			       Limit1.MEM_ID MEM_ID  
			  FROM ( SELECT Extent1.SALES_ORD_ID SALES_ORD_ID  ,
			                Extent1.SALES_ORD_NO SALES_ORD_NO  ,
			                Extent1.SALES_DT SALES_DT  ,
			                Extent1.MEM_ID MEM_ID  ,
			                Extent3.STK_DESC STK_DESC  ,
			                Extent4.CODE_NAME CODE_NAME  ,
			                Extent5.NAME NAME  ,
			                Extent6.NAME NAME1  ,
			                Extent6.NRIC NRIC  
			         FROM SAL0001D Extent1
			                JOIN SAL0002D Extent2   ON Extent2.SALES_ORD_ID = Extent1.SALES_ORD_ID
			                JOIN SYS0026M Extent3   ON Extent3.STK_ID = Extent2.ITM_STK_ID
			                JOIN SYS0013M Extent4   ON Extent4.CODE_ID = Extent1.APP_TYPE_ID
			                JOIN SYS0038M Extent5   ON Extent5.STUS_CODE_ID = Extent1.STUS_CODE_ID
			                JOIN SAL0029D Extent6   ON Extent6.CUST_ID = Extent1.CUST_ID
			          WHERE  Extent1.SALES_ORD_NO = #{orderNo} AND ROWNUM <= 1 ) Limit1

    ]]>
    </select>
    <select id="selectComplianceId" parameterType="Map" resultType="Integer">
            SELECT MAX(CMPLNC_ID) FROM MSC0005D
    </select>
    
    <insert id="insertComplianceOrder" parameterType="Map">
    INSERT INTO MSC0006D (
        CMPLNC_ITM_ID
	  , CMPLNC_ID
	  , CMPLNC_SO_ID
	  , CMPLNC_STUS_ID
	  , CMPLNC_REM
	   )
	  VALUES (
	  MSC0006D_CMPLNC_ITM_ID_SEQ.NEXTVAL
	   , #{complianceId}
	   , #{complianceSOID}
	   , #{complianceStatusId}
	   , #{complianceRemark}
	    )
	  </insert>
    
</mapper>