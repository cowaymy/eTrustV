<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.coway.trust.biz.commission.report.impl.CommissionReportMapper">

<!-- 	<resultMap id="EgovMap" type="EgovMap">
		<result property="cdDs" column="cdDs" jdbcType="CLOB" javaType="java.lang.String" />
		<result property="orgDs" column="orgds" jdbcType="CLOB" javaType="java.lang.String" />
	</resultMap> -->

	<!-- searchOrganization Gruop List -->
	<select id="selectMemberCount" parameterType="Map" resultType="integer">
	   <![CDATA[
		SELECT
		  COUNT(*) cnt
		FROM ORG0001D
		WHERE 1=1	
		 ]]>
		<if test="salesPersonCd != null and salesPersonCd != ''">
			AND MEM_CODE = #{salesPersonCd}		
		</if>
		<if test="memType != null and memType != ''">
	      AND MEM_TYPE = #{memType}   
	    </if>
		
	</select>
	
	<select id="commissionGroupType" resultType="EgovMap">
        SELECT
            T2.CODE_ID AS cdId,
            T2.CODE AS cd,
            T2.CODE_NAME AS cdNm
        FROM SYS0012M T1
        JOIN SYS0013M T2
        ON T1.CODE_MASTER_ID = T2.CODE_MASTER_ID
        WHERE T2.CODE_ID IN (1,2)
        ORDER BY T2.CODE
   </select>
   
   <select id="commSHIMemberSearch" parameterType="Map" resultType="Map">
        SELECT 
            sub.MEM_ID AS MEM_ID, 
            sub.MEM_UP_ID AS MEM_UP_ID, 
            sub.MEM_LVL AS MEM_LVL, 
            sub.DEPT_CODE AS DEPT_CODE, 
            sub.ORG_STUS_CODE_ID AS ORG_STUS_CODE_ID, 
            sub.HIST_MONTH AS HIST_MONTH, 
            sub.HIST_YEAR AS HIST_YEAR, 
            sub.CRT_DT AS CRT_DT, 
            sub.CRT_USER_ID AS CRT_USER_ID, 
            sub.PR_CODE AS PR_CODE, 
            sub.PR_MEM_ID AS PR_MEM_ID, 
            sub.GRAND_PR_CODE AS GRAND_PR_CODE, 
            sub.GRAND_PR_MEM_ID AS GRAND_PR_MEM_ID, 
            sub.LAST_DEPT_CODE AS LAST_DEPT_CODE, 
            sub.LAST_GRP_CODE AS LAST_GRP_CODE, 
            sub.LAST_ORG_CODE AS LAST_ORG_CODE
        FROM ( SELECT
            t2.MEM_ID AS MEM_ID, 
            t2.MEM_UP_ID AS MEM_UP_ID, 
            t2.MEM_LVL AS MEM_LVL, 
            t2.DEPT_CODE AS DEPT_CODE, 
            t2.ORG_STUS_CODE_ID AS ORG_STUS_CODE_ID, 
            t2.HIST_MONTH AS HIST_MONTH, 
            t2.HIST_YEAR AS HIST_YEAR, 
            t2.CRT_DT AS CRT_DT, 
            t2.CRT_USER_ID AS CRT_USER_ID, 
            t2.PR_CODE AS PR_CODE, 
            t2.PR_MEM_ID AS PR_MEM_ID, 
            t2.GRAND_PR_CODE AS GRAND_PR_CODE, 
            t2.GRAND_PR_MEM_ID AS GRAND_PR_MEM_ID, 
            t2.LAST_DEPT_CODE AS LAST_DEPT_CODE, 
            t2.LAST_GRP_CODE AS LAST_GRP_CODE, 
            t2.LAST_ORG_CODE AS LAST_ORG_CODE
            FROM  ORG0001D  t1 JOIN ORG0006D  t2 
              ON t2.MEM_ID = t1.MEM_ID
                  AND t2.HIST_MONTH = #{pvMonth}
                  AND t2.HIST_YEAR = #{pvYear}
            WHERE t1.MEM_CODE =#{memCode}
              AND t1.MEM_TYPE = #{typeCode}
        )   sub
    </select>
    
    <resultMap id="commSHIIndexMap" type="egovMap" />   
    <select id="commSHIIndexCall" parameterType="Map"  statementType="CALLABLE" resultType="EgovMap">
        {
        call  SP_SPC_RGENRAW_SHI_IDX(#{memCode},#{pvMonth},#{pvYear},#{level},#{typeCode},#{teamCode},#{cv_1,mode=OUT,jdbcType=CURSOR, javaType=ResultSet, resultMap=commSHIIndexMap})
        }
    </select>
    
    <resultMap id="commSHIDetailMap" type="egovMap" />   
    <select id="commSHIIndexDetailsCall" parameterType="Map"  statementType="CALLABLE" resultType="EgovMap">
        {
        call  SP_SPC_RGENRAW_SHI_IDX_DTL(#{memberCd},#{pvMonth},#{pvYear},#{cv_1,mode=OUT,jdbcType=CURSOR, javaType=ResultSet, resultMap=commSHIDetailMap})
        }
    </select>
    
    <!-- searchOrganization Gruop List -->
    <select id="selectOrgGrList" parameterType="Map" resultType="EgovMap">
       <![CDATA[
        SELECT
        T2.CODE_MASTER_ID AS mstId ,
        T1.CODE_MASTER_NAME AS mstNm,
        T2.CODE_ID AS cdId,
        T2.CODE AS cd,
        T2.CODE_NAME AS cdNm,
        T2.CODE_DESC AS cdDs
        FROM SYS0012M T1
        JOIN SYS0013M T2
        ON T1.CODE_MASTER_ID = T2.CODE_MASTER_ID
        WHERE 1=1
         ]]>
        <if test="mstId != null and mstId != ''">
            AND T1.CODE_MASTER_ID = #{mstId}
            AND T2.CODE_ID IN (1,2,3)
        </if>
         <![CDATA[
        ORDER BY T2.CODE
         ]]>
    </select>

    <!-- search Organization List -->
    <select id="selectOrgList" parameterType="Map" resultType="EgovMap">
    <![CDATA[
        SELECT
            T2.CODE_MASTER_ID AS mstId ,
            T1.CODE_MASTER_NAME AS mstNm,
            T2.CODE_ID AS cdId,
            T2.CODE AS cd,
            T2.CODE_NAME AS cdNm,
            T2.CODE_DESC AS cdDs
        FROM SYS0012M T1
        JOIN SYS0013M T2
            ON T1.CODE_MASTER_ID = T2.CODE_MASTER_ID
        WHERE 1=1
         ]]>
        <if test="mstId != null and mstId != ''">
            AND T1.CODE_MASTER_ID = #{mstId}
        </if>
           <![CDATA[   
        ORDER BY T2.CODE_ID
         ]]>
    </select>
    
    <!-- searchOrganization Gruop Code All List -->
    <select id="selectOrgCdListAll" parameterType="Map" resultType="EgovMap">
  <![CDATA[
    SELECT
    ORG_SEQ,
    ORG_CD ,
    ORG_NM 
    FROM CMM0041C
    WHERE 1=1
     ]]>
        <if test="orgGrCombo != null and orgGrCombo != ''">
            AND ORG_GR_CD = #{orgGrCombo}
        </if>    
        <if test="searchDt != null and searchDt != ''">
            AND #{searchDt} between START_YEARMONTH and END_YEARMONTH
        </if>    
    <![CDATA[
    GROUP BY ORG_SEQ,ORG_CD, ORG_NM
    ORDER BY ORG_NM 
     ]]>
    </select>
  
    
    <select id="selectCodyRawData" parameterType="Map" resultType="EgovMap">
      <![CDATA[   
        SELECT 
			DISTINCT t5.MEM_CODE as MEM_CODE , 
			t5.NAME as MEM_NAME , 
			(case when t0.EMPLY_LEV=4 then 'CD'
			    when t0.EMPLY_LEV=3 then 'CM'
			    when t0.EMPLY_LEV=2 then 'SCM'
			    else 'GCM' 
			    end) AS RANK ,
			t5.NRIC as NRIC ,
			t0.EMPLY_STUS_CODE STUS,
			
			T1.A_CRD_SUM_POINT ,
			T1.A_HAPPYCALL_RATE,
			T1.A_HAPPYCALL_MARK,
			T1.A_HS_RATE,
			T1.A_HS_MARK,
			T1.A_RC_RATE,
			T1.A_RC_MARK,
			T1.A_NS_RATE,
			T1.A_NS_MARK,       
			T1.A_GROUP_SALES_PRODUCT ,
			T1.A_GROUP_SALES_PRODUCT_MARK ,
			T1.A_BS_PRODUCTIVITY_MARK ,
			T1.A_DROP_RATE,
			T1.A_DROP_MARK,
			
			T1.A_PER_AMT,
			T1.A_SALES_AMT,
			T1.A_BONUS_AMT,
			T1.A_COLLECT_AMT,
			T1.A_MEMBERSHIP_AMT,
			T1.A_PE_AMT,
			T1.A_PE_MARK,
			T1.A_HEALTHY_FAMILY_AMT,
			T1.A_NEWCODY_AMT,
			T1.A_MONTHLY_ALLOWANCE,
			T1.A_INTRODUCTION_FEES,
			T1.A_MOBILE_PHONE,
			T1.A_STAFF_PURCHASE,
			T1.A_TELEPHONE_DEDUCT,
			T1.A_INCENTIVE,
			T1.A_ADJ,
			T1.A_SHI_AMT,
			T1.A_RENTALMEMBERSHIP_AMT,
			T1.A_SHI_RENTALMEMBERSHIP_AMT,
			T1.A_TASK_ID,
			T1.A_OUTPLS_AMT,
			T1.A_CODY_REGISTRATION_FEES,
			T1.A_AMOUNT,
			T1.A_POS_DEDUCTION,
			
			--T2.S_MEM_CODE , 
            --T2.S_MEM_NAME , 
            --T2.S_RANK ,
            --T2.S_NRIC ,
            
			T2.S_CRD_SUM_POINT ,
			T2.S_HAPPYCALL_RATE,
			T2.S_HAPPYCALL_MARK,
			T2.S_HS_RATE,
			T2.S_HS_MARK,
			T2.S_RC_RATE,
			T2.S_RC_MARK,
			T2.S_NS_RATE,
			T2.S_NS_MARK,       
			T2.S_GROUP_SALES_PRODUCT ,
			T2.S_GROUP_SALES_PRODUCT_MARK ,
			T2.S_BS_PRODUCTIVITY_MARK ,
			T2.S_DROP_RATE,
			T2.S_DROP_MARK,
			
			T2.S_PER_AMT,
			T2.S_SALES_AMT,
			T2.S_BONUS_AMT,
			T2.S_COLLECT_AMT,
			T2.S_MEMBERSHIP_AMT,
			T2.S_PE_AMT,
			T2.S_PE_MARK,
			T2.S_HEALTHY_FAMILY_AMT,
			T2.S_NEWCODY_AMT,
			T2.S_MONTHLY_ALLOWANCE,
			T2.S_INTRODUCTION_FEES,
			T2.S_MOBILE_PHONE,
			T2.S_STAFF_PURCHASE,
			T2.S_TELEPHONE_DEDUCT,
			T2.S_INCENTIVE,
			T2.S_ADJ,
			T2.S_SHI_AMT,
			T2.S_RENTALMEMBERSHIP_AMT,
			T2.S_SHI_RENTALMEMBERSHIP_AMT,
			T2.S_OUTPLS_AMT,
			T2.S_CODY_REGISTRATION_FEES,
			T2.S_AMOUNT,
			T2.S_POS_DEDUCTION
		FROM CMM0006T T0 JOIN ORG0001D T5 
            ON T0.EMPLY_ID=T5.MEM_ID 
                 AND T0.EMPLY_TYPE_ID=T5.MEM_TYPE
                 AND T0.EMPLY_TYPE_ID=2
		  LEFT JOIN (
				SELECT 
					DISTINCT t2.MEM_CODE as A_MEM_CODE , 
					t2.NAME as A_MEM_NAME , 
					--(case when t1.EMPLY_LEV=4 then 'CD'
					--    when t1.EMPLY_LEV=3 then 'CM'
					--    when t1.EMPLY_LEV=2 then 'SCM'
					--    else 'GCM' 
					--    end) AS A_RANK ,
					--t2.NRIC as A_NRIC ,
					t0.task_id,
					
					(case when t1.EMPLY_LEV=4 then t4.v1
					    else 0 end) as A_Crd_Sum_point ,
					t4.v2 A_HappyCall_Rate,
					t4.v3 A_HappyCall_mark,
					t4.v4 A_HS_Rate,
					t4.v5 A_HS_mark,
					t4.v6 A_RC_Rate,
					t4.v7 A_RC_mark,
					t4.v8 A_NS_Rate,
					t4.v9 A_NS_MARK,      
					(case when t1.EMPLY_LEV>4 then t4.v10
					    else 0 end) as A_Group_Sales_Product ,
					(case when t1.EMPLY_LEV>4 then t4.v11
					    else 0 end) as A_Group_Sales_Product_mark ,
					(case when t1.EMPLY_LEV=2 or  t1.EMPLY_LEV=3 then t4.v30
					    else 0 end) as A_BS_Productivity_Mark ,
					(case when t1.EMPLY_LEV>4 then t4.v12
					    else 0 end) as A_Drop_Rate,
					(case when t1.EMPLY_LEV>4 then t4.v13
					    else 0 end) as A_Drop_mark,
				 --   (t4.v3+t4.v5+t4.v7+t4.v9-t4.v13) A_PE_MARK,  update 20180116
				  (case when t1.EMPLY_LEV= 1 then (t4.v3+t4.v5+t4.v7+t4.v9+t4.v11-t4.v13)
				           when t1.EMPLY_LEV= 4 then  (t4.v3+t4.v5+t4.v7+t4.v9-t4.v13)
				           when t1.EMPLY_LEV= 2 or t1.EMPLY_LEV= 3 then (t4.v3+t4.v5+t4.v7+t4.v9+t4.v11+t4.v30-t4.v13)
              else 0 end)  A_PE_MARK ,
					t0.R1 as A_PER_AMT,
					(t0.R2 + t0.R3+t0.R18 + t0.R19 + t0.R21 + t0.R22) as A_SALES_AMT,
					t0.R4 as A_BONUS_AMT,
					t0.R6 as A_COLLECT_AMT,
					t0.R13 as A_MEMBERSHIP_AMT,
					t0.R7 as A_PE_AMT,
					t0.R8 as A_Healthy_Family_AMT,
					(case when t1.EMPLY_LEV=4 then t0.r10
					    else 0 end) as A_NEWCODY_AMT,
					(case when t1.EMPLY_LEV>4 then t0.r10
					    else 0 end) as A_Monthly_Allowance,
					t0.R11 as A_INTRODUCTION_FEES,
					t0.R24 as A_Mobile_Phone,
					t0.R27 as A_STAFF_PURCHASE,
					t0.R26 as A_TELEPHONE_DEDUCT,
					(t0.R28 + t0.R5) as A_INCENTIVE,
					t0.R99 as A_ADJ,
					t0.R29 as A_SHI_AMT,
					t0.R34 as A_RENTALMEMBERSHIP_AMT,
					t0.R35 as A_SHI_RENTALMEMBERSHIP_AMT,
					t0.R54 as A_POS_DEDUCTION,
					t0.TASK_ID as A_TASK_ID,
					t1.EMPLY_BIZ_TYPE_ID,
					(TRUNC(t0.R39,2)+TRUNC(t0.R40,2)+TRUNC(t0.R41,2)+TRUNC(t0.R42,2)) as A_OUTPLS_AMT,
					NVL(FN_GET_CMM_RULE('CDN-I19',t1.WORKING_MONTH),'0') as A_CODY_REGISTRATION_FEES,
					(CASE 
                             WHEN t0.TASK_ID < 12 THEN 
                               (t0.R1 + t0.R2 + t0.R3 + t0.R4 + t0.R5 + t0.R6 + t0.R7 + t0.R8 + t0.R10 + 
                               t0.R11 + t0.R13 + t0.R18 + t0.R19 + t0.R20 + t0.R21 + t0.R22 + t0.R23 + 
                               t0.R24 + t0.R25 + NVL(t0.R26, 0) + NVL(t0.R27, 0) + NVL(t0.R28, 0) + t0.R99)
                             ELSE 
                               (t0.R1 + t0.R2 + t0.R3 + t0.R4 + t0.R5 + t0.R6 + t0.R7 + t0.R8 + 
                               t0.R10 + t0.R11 + t0.R13 + t0.R18 + t0.R19 + t0.R20 + t0.R21 + t0.R22 + t0.R23 + 
                               t0.R24 + t0.R25 + NVL(t0.R26, 0) + NVL(t0.R27, 0) + NVL(t0.R28, 0) + NVL(t0.R29, 0) + t0.R99 + t0.R34 + t0.R35- NVL(t0.R54,0))
                       END) A_AMOUNT  
	        ]]>
				from CMM0029D t0 join CMM0006T t1 
				        on t0.EMPLY_ID  = t1.EMPLY_ID  
				            AND T1.COMM_TASK_ID=#{taskId}
				            <if test="bizType != null and bizType != ''">
				            AND t1.EMPLY_BIZ_TYPE_ID = #{bizType}
				            </if>
				    left join CMM0028D t4 on t1.EMPLY_ID = t4.EMPLY_ID AND t0.TASK_ID=t4.TASK_ID
				    join ORG0001D t2 on t2.MEM_ID = t1.EMPLY_ID
				    left join CMM0038T t3 on t3.F_MEM_ID =  t1.EMPLY_ID 
        <![CDATA[       
				where t1.EMPLY_TYPE_CODE = 'CD' 
				    and t3.F_MEM_ID is null 
				    --and (t0.R1+t0.R2+t0.R3+t0.R4+t0.R5+t0.R6+t0.R7+t0.R8+t0.R9+t0.R10+t0.R11+t0.R12+t0.R13+t0.R14+t0.R15
				    --    +t0.R16+t0.R17+t0.R18+t0.R19+t0.R20+t0.R21 +t0.R22+t0.R23+t0.R24+t0.R25+t0.R34)>0
	        ) T1 ON T0.COMM_TASK_ID=T1.TASK_ID AND T0.EMPLY_CODE=T1.A_MEM_CODE
        ]]>
		<![CDATA[   	        
            LEFT JOIN(
			        select 
		                DISTINCT t2.MEM_CODE as S_MEM_CODE , 
                        t2.NAME as S_MEM_NAME , 
                        --(case when t1.EMPLY_LEV=4 then 'CD'
                        --    when t1.EMPLY_LEV=3 then 'CM'
                        --    when t1.EMPLY_LEV=2 then 'SCM'
                        --    else 'GCM' 
                        --    end) AS S_RANK ,
                        --t2.NRIC as S_NRIC ,
                        T0.TASK_ID,
                        
                        (case when t1.EMPLY_LEV=4 then t4.v1
                            else 0 end) as S_Crd_Sum_point ,
                        t4.v2 S_HappyCall_Rate,
                        t4.v3 S_HappyCall_mark,
                        t4.v4 S_HS_Rate,
                        t4.v5 S_HS_mark,
                        t4.v6 S_RC_Rate,
                        t4.v7 S_RC_mark,
                        t4.v8 S_NS_Rate,
                        t4.v9 S_NS_MARK,       
                        (case when t1.EMPLY_LEV>4 then t4.v10
                            else 0 end) as S_Group_Sales_Product ,
                        (case when t1.EMPLY_LEV>4 then t4.v11
                            else 0 end) as S_Group_Sales_Product_mark ,
                        (case when t1.EMPLY_LEV=2 or  t1.EMPLY_LEV=3 then t4.v30
                            else 0 end) as S_BS_Productivity_Mark ,
                        (case when t1.EMPLY_LEV>4 then t4.v12
                            else 0 end) as S_Drop_Rate,
                        (case when t1.EMPLY_LEV>4 then t4.v13
                            else 0 end) as S_Drop_mark,
                       -- (t4.v3+t4.v5+t4.v7+t4.v9-t4.v13) S_PE_MARK,
                        (case when t1.EMPLY_LEV= 1 then (t4.v3+t4.v5+t4.v7+t4.v9+t4.v11-t4.v13)
                   when t1.EMPLY_LEV= 4 then  (t4.v3+t4.v5+t4.v7+t4.v9-t4.v13)
                   when t1.EMPLY_LEV= 2 or t1.EMPLY_LEV= 3 then (t4.v3+t4.v5+t4.v7+t4.v9+t4.v11+t4.v30-t4.v13)
              else 0 end)  S_PE_MARK ,
                        t0.R1 as S_PER_AMT,
                        (t0.R2 + t0.R3+t0.R18 + t0.R19 + t0.R21 + t0.R22) as S_SALES_AMT,
                        t0.R4 as S_BONUS_AMT,
                        t0.R6 as S_COLLECT_AMT,
                        t0.R13 as S_MEMBERSHIP_AMT,
                        t0.R7 as S_PE_AMT,
                        t0.R8 as S_Healthy_Family_AMT,
                        (case when t1.EMPLY_LEV=4 then t0.r10
                            else 0 end) as S_NEWCODY_AMT,
                        (case when t1.EMPLY_LEV>4 then t0.r10
                            else 0 end) as S_Monthly_Allowance,
                        t0.R11 as S_INTRODUCTION_FEES,
                        t0.R24 as S_Mobile_Phone,
                        t0.R27 as S_STAFF_PURCHASE,
                        t0.R26 as S_TELEPHONE_DEDUCT,
                        (t0.R28 + t0.R5) as S_INCENTIVE,
                        t0.R99 as S_ADJ,
                        t0.R29 as S_SHI_AMT,
                        t0.R34 as S_RENTALMEMBERSHIP_AMT,
                        t0.R35 as S_SHI_RENTALMEMBERSHIP_AMT,
                        t0.R54 as S_POS_DEDUCTION,
                        t0.TASK_ID as S_TASK_ID,
                        t1.EMPLY_BIZ_TYPE_ID,
                        (TRUNC(t0.R39,2)+TRUNC(t0.R40,2)+TRUNC(t0.R41,2)+TRUNC(t0.R42,2)) as S_OUTPLS_AMT,
                        NVL(FN_GET_CMM_RULE_S('CDN-I19',t1.WORKING_MONTH),'0') as S_CODY_REGISTRATION_FEES,
                        (CASE 
				             WHEN t0.TASK_ID < 12 THEN 
				               (t0.R1 + t0.R2 + t0.R3 + t0.R4 + t0.R5 + t0.R6 + t0.R7 + t0.R8 + t0.R10 + 
				               t0.R11 + t0.R13 + t0.R18 + t0.R19 + t0.R20 + t0.R21 + t0.R22 + t0.R23 + 
				               t0.R24 + t0.R25 + NVL(t0.R26, 0) + NVL(t0.R27, 0) + NVL(t0.R28, 0) + t0.R99)
				             ELSE 
				               (t0.R1 + t0.R2 + t0.R3 + t0.R4 + t0.R5 + t0.R6 + t0.R7 + t0.R8 + 
				               t0.R10 + t0.R11 + t0.R13 + t0.R18 + t0.R19 + t0.R20 + t0.R21 + t0.R22 + t0.R23 + 
				               t0.R24 + t0.R25 + NVL(t0.R26, 0) + NVL(t0.R27, 0) + NVL(t0.R28, 0) + NVL(t0.R29, 0) + t0.R99 + t0.R34 + t0.R35- NVL(t0.R54,0))
				       END) S_AMOUNT  
		        ]]>
		            from CMM0029T t0 join CMM0006T t1 
		                  on t0.EMPLY_ID  = t1.EMPLY_ID  
		                      AND T1.COMM_TASK_ID=#{taskId}
		                      <if test="bizType != null and bizType != ''">
		                      AND t1.EMPLY_BIZ_TYPE_ID = #{bizType}
                              </if>
		                left join CMM0028T t4 on t1.EMPLY_ID = t4.EMPLY_ID  AND t0.TASK_ID=t4.TASK_ID
		                join ORG0001D t2 on t2.MEM_ID = t1.EMPLY_ID
		                left join CMM0038T t3 on t3.F_MEM_ID =  t1.EMPLY_ID 
	        <![CDATA[       
		            where t1.EMPLY_TYPE_CODE = 'CD' 
		                and t3.F_MEM_ID is null 
		                --and (t0.R1+t0.R2+t0.R3+t0.R4+t0.R5+t0.R6+t0.R7+t0.R8+t0.R9+t0.R10+t0.R11+t0.R12+t0.R13+t0.R14+t0.R15
		                --    +t0.R16+t0.R17+t0.R18+t0.R19+t0.R20+t0.R21 +t0.R22+t0.R23+t0.R24+t0.R25+t0.R34)>0
		                ) t2 ON T0.COMM_TASK_ID=T2.TASK_ID AND T0.EMPLY_CODE=T2.S_MEM_CODE
			WHERE t0.EMPLY_TYPE_ID= 2
			     AND t0.COMM_TASK_ID=#{taskId}
	        ]]>
			     <![CDATA[  AND t0.EMPLY_STUS_ID<>3 ]]>
			         AND t0.EMPLY_LEV = #{level}
			     <if test="bizType != null and bizType != ''">
                    AND t0.EMPLY_BIZ_TYPE_ID = #{bizType}
                </if>
			    <if test="memCode != null and memCode != ''">
	                AND T0.EMPLY_CODE LIKE '%'||#{memCode}||'%'
	            </if>
  </select>
  <select id="selectCMRawData" parameterType="Map" resultType="EgovMap">
      <![CDATA[   
        SELECT 
            t5.MEM_CODE as MEM_CODE , 
            t5.NAME as MEM_NAME , 
            (case when t0.EMPLY_LEV=4 then 'CD'
                        when t0.EMPLY_LEV=3 then 'CM'
                        when t0.EMPLY_LEV=2 then 'SCM'
                        else 'GCM'  end) AS RANK ,
            t5.NRIC as NRIC ,
            t0.EMPLY_STUS_CODE STUS,
            T6.LAST_DEPT_CODE,
            T6.LAST_GRP_CODE,
            T6.LAST_ORG_CODE, 
            
            t1.A_HAPPYCALL_RATE,
            t1.A_HAPPYCALL_MARK,
            t1.A_BS_RATE,
            t1.A_BS_MARK,
            t1.A_RC_RATE,
            t1.A_RC_MARK,
            t1.A_REJOIN_MARK,
            t1.A_REJOIN_RATE,
            t1.A_GROUP_SALES_PRODUCT,
            t1.A_GROUP_SALES_PRODUCT_MARK,
            t1.A_DROP_RATE,
            t1.A_DROP_MARK,
            t1.A_BS_PRODUCTIVITY_MARK,
            t1.A_BS_PRODUCTIVITY_RATE,
            
            t1.A_BASIC_SALARY,
            t1.A_SALES_AMT,
            t1.A_BONUS_AMT,
            t1.A_COLLECT_AMT,
            t1.A_MEMBERSHIP_AMT,
            t1.A_HP_AMT,
            t1.A_TRANSPORT_AMT,
            t1.A_MONTHLY_ALLOWANCE,
            t1.A_MOBILE_PHONE,
            t1.A_INTRODUCTION_FEES,
            t1.A_STAFF_PURCHASE,
            t1.A_TELEPHONE_DEDUCT,
            t1.A_INCENTIVE,
            t1.A_ADJ,
            t1.A_SHI_AMT,
            t1.A_RENTALMEMBERSHIP_AMT,
            t1.A_OUTPLS_AMT, 
            t1.A_AMOUNT,
            T1.A_POS_DEDUCTION,
            T1.A_PE_MARK,
            
            --t2.S_MEM_CODE , 
            --t2.S_MEM_NAME , 
            --t2.S_RANK ,
            --t2.S_NRIC ,
            
            t2.S_HAPPYCALL_RATE,
            t2.S_HAPPYCALL_MARK,
            t2.S_BS_RATE,
            t2.S_BS_MARK,
            t2.S_RC_RATE,
            t2.S_RC_MARK,
            t2.S_REJOIN_MARK,
            t2.S_REJOIN_RATE,
            t2.S_GROUP_SALES_PRODUCT,
            t2.S_GROUP_SALES_PRODUCT_MARK,
            t2.S_DROP_RATE,
            t2.S_DROP_MARK,
            t2.S_BS_PRODUCTIVITY_MARK,
            t2.S_BS_PRODUCTIVITY_RATE,
            
            t2.S_BASIC_SALARY,
            t2.S_SALES_AMT,
            t2.S_BONUS_AMT,
            t2.S_COLLECT_AMT,
            t2.S_MEMBERSHIP_AMT,
            t2.S_HP_AMT,
            t2.S_TRANSPORT_AMT,
            t2.S_MONTHLY_ALLOWANCE,
            t2.S_MOBILE_PHONE,
            t2.S_INTRODUCTION_FEES,
            t2.S_STAFF_PURCHASE,
            t2.S_TELEPHONE_DEDUCT,
            t2.S_INCENTIVE,
            t2.S_ADJ,
            t2.S_SHI_AMT,
            t2.S_RENTALMEMBERSHIP_AMT,
            t2.S_OUTPLS_AMT,
            t2.S_AMOUNT,
            T2.S_POS_DEDUCTION,
            T2.S_PE_MARK
        FROM CMM0006T T0 JOIN ORG0001D T5 
		        ON T0.EMPLY_ID=T5.MEM_ID 
		             AND T0.EMPLY_TYPE_ID=T5.MEM_TYPE
		             AND T0.EMPLY_TYPE_ID=2
            LEFT OUTER JOIN ORG0006D T6
                ON  T0.EMPLY_ID=T6.MEM_ID
                AND T6.HIST_YEAR=#{pvYear}
                AND T6.HIST_MONTH=#{pvMonth}
            LEFT JOIN(
                SELECT 
                        T0.TASK_ID,
	                    t2.MEM_CODE as A_MEM_CODE , 
	                    t2.NAME as A_MEM_NAME ,
	                    
	                    t4.v2 A_HAPPYCALL_RATE,
	                    t4.v3 A_HAPPYCALL_MARK,
	                    t4.v4 A_BS_RATE,
	                    t4.v5 A_BS_MARK,
	                    t4.v6 A_RC_RATE,
	                    t4.v7 A_RC_MARK,
	                    t4.v9 A_REJOIN_MARK,
	                    t4.v10 A_GROUP_SALES_PRODUCT,
	                    t4.v11 A_GROUP_SALES_PRODUCT_MARK,
	                    t4.v12 A_DROP_RATE,
	                    t4.v13 A_DROP_MARK,
	                    t4.v30 A_BS_PRODUCTIVITY_MARK,
	                  --  (t4.v3+t4.v5+t4.v7+t4.v9-t4.v13) A_PE_MARK,
	                   (case when t1.EMPLY_LEV= 1 then (t4.v3+t4.v5+t4.v7+t4.v9+t4.v11-t4.v13)
                   when t1.EMPLY_LEV= 4 then  (t4.v3+t4.v5+t4.v7+t4.v9-t4.v13)
                   when t1.EMPLY_LEV= 2 or  t1.EMPLY_LEV= 3 then (t4.v3+t4.v5+t4.v7+t4.v9+t4.v11+t4.v30-t4.v13)
              else 0 end)  A_PE_MARK ,
	                    t4.v31 A_REJOIN_RATE,
	                    t4.v29 A_BS_PRODUCTIVITY_RATE,
	                    
	                    (t0.R20 + t0.R1) as A_BASIC_SALARY,
	                    (t0.R2 + t0.R3 +t0.R18 + t0.R19 + t0.R21+ t0.R22) as A_SALES_AMT,
	                    t0.R4 as A_BONUS_AMT,
	                    t0.R6 as A_COLLECT_AMT,
	                    t0.R13 as A_MEMBERSHIP_AMT,
	                    0 as A_HP_AMT,
	                    0 as A_TRANSPORT_AMT,
	                    t0.R23 as A_MONTHLY_ALLOWANCE,
	                    t0.R24 as A_MOBILE_PHONE,
	                    0 as A_INTRODUCTION_FEES,
	                    0 as A_STAFF_PURCHASE,
	                    0 as A_TELEPHONE_DEDUCT,
	                    t0.R28 as A_INCENTIVE,
	                    t0.R99 as A_ADJ,
	                    t0.R29 as A_SHI_AMT,
	                    t0.R34 as A_RENTALMEMBERSHIP_AMT,
	                    t0.R54 as A_POS_DEDUCTION,
	                    (TRUNC(t0.R39,2)+TRUNC(t0.R40,2)+TRUNC(t0.R41,2)+TRUNC(t0.R42,2)) as A_OUTPLS_AMT,
	                    (CASE 
                             WHEN t0.TASK_ID < 12 THEN 
                               (t0.R1 + t0.R2 + t0.R3 + t0.R4 + t0.R5 + t0.R6 + t0.R7 + t0.R8 + t0.R10 + 
                               t0.R11 + t0.R13 + t0.R18 + t0.R19 + t0.R20 + t0.R21 + t0.R22 + t0.R23 + 
                               t0.R24 + t0.R25 + NVL(t0.R26, 0) + NVL(t0.R27, 0) + NVL(t0.R28, 0) + t0.R99)
                             ELSE 
                               (t0.R1 + t0.R2 + t0.R3 + t0.R4 + t0.R5 + t0.R6 + t0.R7 + t0.R8 + 
                               t0.R10 + t0.R11 + t0.R13 + t0.R18 + t0.R19 + t0.R20 + t0.R21 + t0.R22 + t0.R23 + 
                               t0.R24 + t0.R25 + NVL(t0.R26, 0) + NVL(t0.R27, 0) + NVL(t0.R28, 0) + NVL(t0.R29, 0) + t0.R99 + t0.R34 + t0.R35- NVL(t0.R54,0))
                       END) A_AMOUNT  
        ]]>
                FROM CMM0029D t0 
                    join CMM0006T t1 on t0.EMPLY_ID  = t1.EMPLY_ID  and t1.COMM_TASK_ID=t0.TASK_ID and t0.task_id=#{taskId}
                    left join CMM0028D t4 on t1.EMPLY_ID = t4.EMPLY_ID  AND t0.TASK_ID=t4.TASK_ID
                    join ORG0001D t2 on t2.MEM_ID = t1.EMPLY_ID
                    left join CMM0038T t3 on t3.F_MEM_ID =  t1.EMPLY_ID 
        <![CDATA[
                WHERE t3.F_MEM_ID is null 
                    --and (t0.R1+t0.R2+t0.R3+t0.R4+t0.R5+t0.R6+t0.R7+t0.R8+t0.R9+t0.R10+t0.R11+t0.R12+t0.R13+t0.R14+t0.R15
	                --   +t0.R16+t0.R17+t0.R18+t0.R19+t0.R20+t0.R21 +t0.R22+t0.R23+t0.R24+t0.R25+t0.R34)>0
        ]]> ) t1 ON T0.COMM_TASK_ID= T1.TASK_ID AND T0.EMPLY_CODE=T1.A_MEM_CODE
        <![CDATA[   
                LEFT JOIN(SELECT  
                        T0.TASK_ID,
	                    t2.MEM_CODE as S_MEM_CODE , 
                        t2.NAME as S_MEM_NAME , 
                        --(case when t1.EMPLY_LEV=4 then 'CD'
                        --            when t1.EMPLY_LEV=3 then 'CM'
                        --            when t1.EMPLY_LEV=2 then 'SCM'
                        --            else 'GCM'  end) AS S_RANK ,
                        --t2.NRIC as S_NRIC ,
                        
                        t4.v2 S_HAPPYCALL_RATE,
                        t4.v3 S_HAPPYCALL_MARK,
                        t4.v4 S_BS_RATE,
                        t4.v5 S_BS_MARK,
                        t4.v6 S_RC_RATE,
                        t4.v7 S_RC_MARK,
                        t4.v9 S_REJOIN_MARK,
                        t4.v10 S_GROUP_SALES_PRODUCT,
                        t4.v11 S_GROUP_SALES_PRODUCT_MARK,
                        t4.v12 S_DROP_RATE,
                        t4.v13 S_DROP_MARK,
                        t4.v30 S_BS_PRODUCTIVITY_MARK,
                       -- (t4.v3+t4.v5+t4.v7+t4.v9-t4.v13) S_PE_MARK,
                         (case when t1.EMPLY_LEV= 1 then (t4.v3+t4.v5+t4.v7+t4.v9+t4.v11-t4.v13)
                   when t1.EMPLY_LEV= 4 then  (t4.v3+t4.v5+t4.v7+t4.v9-t4.v13)
                   when t1.EMPLY_LEV= 2 or t1.EMPLY_LEV= 3 then (t4.v3+t4.v5+t4.v7+t4.v9+t4.v11+t4.v30-t4.v13)
              else 0 end)  S_PE_MARK ,
                        t4.v31 S_REJOIN_RATE,
                        t4.v29 S_BS_PRODUCTIVITY_RATE,
                        
                        (t0.R20 + t0.R1) as S_BASIC_SALARY,
                        (t0.R2 + t0.R3 +t0.R18 + t0.R19 + t0.R21+ t0.R22) as S_SALES_AMT,
                        t0.R4 as S_BONUS_AMT,
                        t0.R6 as S_COLLECT_AMT,
                        t0.R13 as S_MEMBERSHIP_AMT,
                        0 as S_HP_AMT,
                        0 as S_TRANSPORT_AMT,
                        t0.R23 as S_MONTHLY_ALLOWANCE,
                        t0.R24 as S_MOBILE_PHONE,
                        0 as S_INTRODUCTION_FEES,
                        0 as S_STAFF_PURCHASE,
                        0 as S_TELEPHONE_DEDUCT,
                        t0.R28 as S_INCENTIVE,
                        t0.R99 as S_ADJ,
                        t0.R29 as S_SHI_AMT,
                        t0.R34 as S_RENTALMEMBERSHIP_AMT,
                        t0.R54 as S_POS_DEDUCTION,
                        (TRUNC(t0.R39,2)+TRUNC(t0.R40,2)+TRUNC(t0.R41,2)+TRUNC(t0.R42,2)) as S_OUTPLS_AMT,
                        (CASE 
                             WHEN t0.TASK_ID < 12 THEN 
                               (t0.R1 + t0.R2 + t0.R3 + t0.R4 + t0.R5 + t0.R6 + t0.R7 + t0.R8 + t0.R10 + 
                               t0.R11 + t0.R13 + t0.R18 + t0.R19 + t0.R20 + t0.R21 + t0.R22 + t0.R23 + 
                               t0.R24 + t0.R25 + NVL(t0.R26, 0) + NVL(t0.R27, 0) + NVL(t0.R28, 0) + t0.R99)
                             ELSE 
                               (t0.R1 + t0.R2 + t0.R3 + t0.R4 + t0.R5 + t0.R6 + t0.R7 + t0.R8 + 
                               t0.R10 + t0.R11 + t0.R13 + t0.R18 + t0.R19 + t0.R20 + t0.R21 + t0.R22 + t0.R23 + 
                               t0.R24 + t0.R25 + NVL(t0.R26, 0) + NVL(t0.R27, 0) + NVL(t0.R28, 0) + NVL(t0.R29, 0) + t0.R99 + t0.R34 + t0.R35- NVL(t0.R54,0))
                       END) S_AMOUNT  
        ]]>
                FROM CMM0029T t0 
                    join CMM0006T t1 on t0.EMPLY_ID  = t1.EMPLY_ID  and t1.COMM_TASK_ID=t0.TASK_ID and t0.task_id=#{taskId}
                    left join CMM0028T t4 on t1.EMPLY_ID = t4.EMPLY_ID  AND t0.TASK_ID=t4.TASK_ID
                    join ORG0001D t2 on t2.MEM_ID = t1.EMPLY_ID
                    left join CMM0038T t3 on t3.F_MEM_ID =  t1.EMPLY_ID 
        <![CDATA[
                WHERE t3.F_MEM_ID is null 
                    --and (t0.R1+t0.R2+t0.R3+t0.R4+t0.R5+t0.R6+t0.R7+t0.R8+t0.R9+t0.R10+t0.R11+t0.R12+t0.R13+t0.R14+t0.R15
                    --    +t0.R16+t0.R17+t0.R18+t0.R19+t0.R20+t0.R21 +t0.R22+t0.R23+t0.R24+t0.R25+t0.R34)>0
        ]]>) t2 ON T0.COMM_TASK_ID= T2.TASK_ID AND T0.EMPLY_CODE=T2.S_MEM_CODE
        
        WHERE t0.COMM_TASK_ID = #{taskId}
                AND t0.EMPLY_TYPE_ID=2
                <![CDATA[ AND t0.EMPLY_STUS_ID<>3  ]]>
                AND t0.EMPLY_LEV = #{level}
            <if test="memCode != null and memCode != ''">
                AND t0.EMPLY_CODE LIKE '%'||#{memCode}||'%'
            </if>
    </select>
  
    <select id="selectHPRawData" parameterType="Map" resultType="EgovMap">
    <![CDATA[
		SELECT 
			t5.MEM_CODE as M_CODE , 
            t5.NAME as MEMBER_NAME , 
            (case when t0.EMPLY_LEV=4 then 'HP'
                when t0.EMPLY_LEV=3 then 'HM'
                when t0.EMPLY_LEV=2 then 'SM'
                when t0.EMPLY_LEV=1 then 'GM'
                else 'SGM' end) AS RANK ,
            t5.NRIC as NRIC ,
			
			t1.A_PI,
			t1.A_PA,
			t1.A_SGM_AMT,
			t1.A_MGR_AMT,
			t1.A_OUTINS_AMT,
			t1.A_BONUS,
			t1.A_RENMGR_AMT,
			t1.A_RENTAL_AMT,
			t1.A_OUTPLS_AMT,
			t1.A_MEMBERSHIP_AMT,
			t1.A_TBB_AMT,
			t1.A_ADJUST_AMT,
			t1.A_INCENTIVE,
			t1.A_SHI_AMT,
			t1.A_RENTALMEMBERSHIP_AMT,
			t1.A_RENTALMEMBERSHIP_SHI_AMT,
			t1.A_WS_AWARD,
			t1.A_MEETING_ALLOWANCES,
			t1.A_AMOUNT,
			
			t2.S_PI,
			t2.S_PA,
			t2.S_SGM_AMT,
			t2.S_MGR_AMT,
			t2.S_OUTINS_AMT,
			t2.S_BONUS,
			t2.S_RENMGR_AMT,
			t2.S_RENTAL_AMT,
			t2.S_OUTPLS_AMT,
			t2.S_MEMBERSHIP_AMT,
			t2.S_TBB_AMT,
			t2.S_ADJUST_AMT,
			t2.S_INCENTIVE,
			t2.S_SHI_AMT,
			t2.S_RENTALMEMBERSHIP_AMT,
			t2.S_RENTALMEMBERSHIP_SHI_AMT,
			t2.S_WS_AWARD,
			t2.S_MEETING_ALLOWANCES,
			t2.S_AMOUNT
		FROM CMM0006T T0 JOIN ORG0001D T5 
			ON T0.EMPLY_ID=T5.MEM_ID 
			 AND T0.EMPLY_TYPE_ID=T5.MEM_TYPE
			 AND T0.EMPLY_TYPE_ID=1
			LEFT JOIN (
                select 
			        t2.MEM_CODE as A_M_CODE , 
			        t2.NAME as A_MEMBER_NAME , 
			        
			        (case when EMPLY_LEV=3 or EMPLY_LEV=2 then t0.R20
			        else t0.R1 end) as A_PI,
			        t0.R5 as A_PA,
			        (case when EMPLY_LEV = 0 then t0.R21 + t0.R33
			            else 0 end) as A_SGM_AMT,
			        (case when EMPLY_LEV = 0 then 0
			             else t0.R21 end) as A_MGR_AMT,
			        TRUNC(t0.R2,2)  as A_OUTINS_AMT,
			        t0.R4 as A_BONUS,
			        ((t0.R18 + t0.R19 + t0.R22) - (t0.R40 + t0.R41 + t0.R42) ) as A_RENMGR_AMT,
			        (TRUNC(t0.R3,2) -  TRUNC(t0.R39,2))  as A_RENTAL_AMT,                                    
			        (TRUNC(t0.R39,2)+TRUNC(t0.R40,2)+TRUNC(t0.R41,2)+TRUNC(t0.R42,2)) as A_OUTPLS_AMT, 
			        t0.R13 as A_MEMBERSHIP_AMT,
			        t0.R25 AS A_TBB_AMT,         
			        t0.R99 as A_ADJUST_AMT,
			        t0.R28 as A_INCENTIVE,
			        t0.R29 as A_SHI_AMT,
			        t0.R34 as A_RENTALMEMBERSHIP_AMT,
			        t0.R35 as A_RENTALMEMBERSHIP_SHI_AMT,
			        (case when EMPLY_LEV = 0 then 0
	                  else t0.R50 end) as A_WS_AWARD,
	                t0.R52 as A_MEETING_ALLOWANCES,
			        t0.TASK_ID,
			        (CASE 
			             WHEN t0.TASK_ID < 12 THEN 
			               (t0.R1 + t0.R2 + t0.R3 + t0.R4 + t0.R5 + t0.R6 + t0.R7 + t0.R8 + t0.R10 
			                + t0.R11 + t0.R13 + t0.R18 + t0.R19 + t0.R20 + t0.R21 + t0.R22 + t0.R23 
			                + t0.R24 + t0.R25 + NVL(t0.R26, 0) + NVL(t0.R27, 0) + NVL(t0.R28, 0) + t0.R99)
			             ELSE (t0.R1 + t0.R2 + t0.R3 + t0.R4 + t0.R5 + t0.R6 + t0.R7 + t0.R8 
			                   + t0.R10 + t0.R11 + t0.R13 + t0.R18 + t0.R19 + t0.R20 + t0.R21 
			                   + t0.R22 + t0.R23 + t0.R24 + t0.R25 + NVL(t0.R26, 0) + NVL(t0.R27, 0) 
			                   + NVL(t0.R28, 0) + NVL(t0.R29, 0) + t0.R99 + t0.R34 + t0.R35+NVL(t0.R52, 0))
			       END) A_AMOUNT
                from CMM0029D t0 join CMM0006T t1 
		            on t0.EMPLY_ID  = t1.EMPLY_ID 
		                and t1.COMM_TASK_ID=t0.TASK_ID
    ]]>
		                AND t1.EMPLY_LEV = #{level}
		                <if test="empType != null and empType != ''">
		                AND T1.EMPLY_LEV_RANK = #{empType}
		                </if>
    <![CDATA[
		            join ORG0001D t2 
		                on t2.MEM_ID = t1.EMPLY_ID 
		            left join CMM0038T t3 
		                on t3.F_MEM_ID =  t1.EMPLY_ID 
		    where t1.EMPLY_TYPE_CODE in ('HP','ST') 
			     --and (t0.R1+t0.R2+t0.R3+t0.R4+t0.R5+t0.R6+t0.R7+t0.R8+t0.R9+t0.R10+t0.R11+t0.R12+t0.R13+t0.R14+t0.R15
	             --   +t0.R16+t0.R17+t0.R18+t0.R19+t0.R20+t0.R21 +t0.R22+t0.R23+t0.R24+t0.R25+t0.R34)>0 
		         and t3.F_MEM_ID is null 
		         and t1.EMPLY_STUS_ID<>3) t1 on t0.comm_task_id=t1.task_id and t0.emply_code = t1.A_M_CODE
		    left join (
		      select 
		        t2.MEM_CODE as S_M_CODE , 
                t2.NAME as S_MEMBER_NAME , 
                
                (case when EMPLY_LEV=3 or EMPLY_LEV=2 then t0.R20
                else t0.R1 end) as S_PI,
                t0.R5 as S_PA,
                (case when EMPLY_LEV = 0 then t0.R21 + t0.R33
                    else 0 end) as S_SGM_AMT,
                (case when EMPLY_LEV = 0 then 0
                     else t0.R21 end) as S_MGR_AMT,
                TRUNC(t0.R2,2)  as S_OUTINS_AMT,
                t0.R4 as S_BONUS,
                ((t0.R18 + t0.R19 + t0.R22) - (t0.R40 + t0.R41 + t0.R42) ) as S_RENMGR_AMT,
                (TRUNC(t0.R3,2) -  TRUNC(t0.R39,2))  as S_RENTAL_AMT,                                    
                (TRUNC(t0.R39,2)+TRUNC(t0.R40,2)+TRUNC(t0.R41,2)+TRUNC(t0.R42,2)) as S_OUTPLS_AMT, 
                t0.R13 as S_MEMBERSHIP_AMT,
                t0.R25 AS S_TBB_AMT,         
                t0.R99 as S_ADJUST_AMT,
                t0.R28 as S_INCENTIVE,
                t0.R29 as S_SHI_AMT,
                t0.R34 as S_RENTALMEMBERSHIP_AMT,
                t0.R35 as S_RENTALMEMBERSHIP_SHI_AMT,
                (case when EMPLY_LEV = 0 then 0
                  else t0.R50 end) as S_WS_AWARD,
                t0.R52 as S_MEETING_ALLOWANCES,
                t0.TASK_ID,
                (CASE 
		             WHEN t0.TASK_ID < 12 THEN 
		               (t0.R1 + t0.R2 + t0.R3 + t0.R4 + t0.R5 + t0.R6 + t0.R7 + t0.R8 + t0.R10 
		                + t0.R11 + t0.R13 + t0.R18 + t0.R19 + t0.R20 + t0.R21 + t0.R22 + t0.R23 
		                + t0.R24 + t0.R25 + NVL(t0.R26, 0) + NVL(t0.R27, 0) + NVL(t0.R28, 0) + t0.R99)
		             ELSE (t0.R1 + t0.R2 + t0.R3 + t0.R4 + t0.R5 + t0.R6 + t0.R7 + t0.R8 
		                   + t0.R10 + t0.R11 + t0.R13 + t0.R18 + t0.R19 + t0.R20 + t0.R21 
		                   + t0.R22 + t0.R23 + t0.R24 + t0.R25 + NVL(t0.R26, 0) + NVL(t0.R27, 0) 
		                   + NVL(t0.R28, 0) + NVL(t0.R29, 0) + t0.R99 + t0.R34 + t0.R35+NVL(t0.R52, 0))
		       END) S_AMOUNT
		    from CMM0029T t0 join CMM0006T t1 
		            on t0.EMPLY_ID  = t1.EMPLY_ID 
		                and t1.COMM_TASK_ID=t0.TASK_ID
    ]]>
		                AND t1.EMPLY_LEV = #{level}
		                <if test="empType != null and empType != ''">
		                AND T1.EMPLY_LEV_RANK = #{empType}
		                </if>
    <![CDATA[
		            join ORG0001D t2 
		                on t2.MEM_ID = t1.EMPLY_ID 
		            left join CMM0038T t3 
		                on t3.F_MEM_ID =  t1.EMPLY_ID 
		    where t1.EMPLY_TYPE_CODE in ('HP','ST') 
		         -- and (t0.R1+t0.R2+t0.R3+t0.R4+t0.R5+t0.R6+t0.R7+t0.R8+t0.R9+t0.R10+t0.R11+t0.R12+t0.R13+t0.R14+t0.R15
                 --   +t0.R16+t0.R17+t0.R18+t0.R19+t0.R20+t0.R21 +t0.R22+t0.R23+t0.R24+t0.R25+t0.R34)>0
		         and t3.F_MEM_ID is null 
		         and t1.EMPLY_STUS_ID<>3)t2
            ON t0.comm_task_id=t2.task_id and t0.emply_code = t2.S_M_CODE
		WHERE T0.EMPLY_STUS_ID<>3
    ]]>
		    AND T0.COMM_TASK_ID=#{taskId}
            AND T0.EMPLY_LEV = #{level}
            <if test="empType != null and empType != ''">
             AND T0.EMPLY_LEV_RANK = #{empType}
            </if>
		    <if test="memCode != null and memCode != ''">
		    AND T0.emply_code LIKE '%'||#{memCode}||'%'
		    </if>
    </select>
    
    <select id="selectCTRawData" parameterType="Map" resultType="EgovMap">
		SELECT 
            t0.COMM_TASK_ID as TASK_ID ,  
            t0.EMPLY_CODE as M_CODE ,
            t3.NAME as CT_NAME ,
            t3.NRIC as NRIC ,
            t3.JOIN_DT as JOIN_DATE,
            t0.WORKING_MONTH  as SERVICE_MONTHS,
            (case when t0.EMPLY_LEV = 4 then 'CT'
                when t0.EMPLY_LEV = 3 then 'CTL'
                when t0.EMPLY_LEV = 2 then 'CTM'
                end) as CT_RANK ,
            t1.STATUS  as  STATUS,
            t4.CODE as BRNCH ,
		      
		    t1.AS_COUNT AS A_AS_COUNT, 
		    t1.AS_SUM_CP AS A_AS_SUM_CP, 
		    t1.BS_COUNT AS A_BS_COUNT, 
		    t1.BS_SUM_CP AS A_BS_SUM_CP, 
		    t1.INS_COUNT AS A_INS_COUNT, 
		    t1.INS_SUM_CP AS A_INS_SUM_CP,
		    t1.PR_COUNT AS A_PR_COUNT,     
		    t1.PR_SUM_CP AS A_PR_SUM_CP,  
		    t1.TOTAL_POINT AS A_TOTAL_POINT,   
		    t1.PRO_PERCENT AS A_PRO_PERCENT,
		    t1.PER_PERCENT AS A_PER_PERCENT, 
		    t1.PRO_FACTOR_30 AS A_PRO_FACTOR_30,
		    t1.PER_FACTOR_70 AS A_PER_FACTOR_70, 
		    t1.SUM_FACTOR AS A_SUM_FACTOR,  
		    t1.GROSS_COMM AS A_GROSS_COMM,
		    t1.RENTAL_COMM AS A_RENTAL_COMM,
		    t1.SRV_MEM_COMM AS A_SRV_MEM_COMM,
		    t1.BASIC_AND_ALLOWANCE AS A_BASIC_AND_ALLOWANCE,
		    t1.PERFORMANCE_INCENTIVE AS A_PERFORMANCE_INCENTIVE,
		    t1.ADJUSTMENT AS A_ADJUSTMENT,  
		    t1.CFF_REWARD AS A_CFF_REWARD,  
		    t1.SENIORITY AS A_SENIORITY,    
		    t1.GRAND_TOTAL AS A_GRAND_TOTAL,
		    
		    t2.AS_COUNT AS S_AS_COUNT, 
		    t2.AS_SUM_CP AS S_AS_SUM_CP, 
		    t2.BS_COUNT AS S_BS_COUNT, 
		    t2.BS_SUM_CP AS S_BS_SUM_CP, 
		    t2.INS_COUNT AS S_INS_COUNT, 
		    t2.INS_SUM_CP AS S_INS_SUM_CP,
		    t2.PR_COUNT AS S_PR_COUNT,     
		    t2.PR_SUM_CP AS S_PR_SUM_CP,  
		    t2.TOTAL_POINT AS S_TOTAL_POINT,   
		    t2.PRO_PERCENT AS S_PRO_PERCENT,
		    t2.PER_PERCENT AS S_PER_PERCENT, 
		    t2.PRO_FACTOR_30 AS S_PRO_FACTOR_30,
		    t2.PER_FACTOR_70 AS S_PER_FACTOR_70, 
		    t2.SUM_FACTOR AS S_SUM_FACTOR,  
		    t2.GROSS_COMM AS S_GROSS_COMM,
		    t2.RENTAL_COMM AS S_RENTAL_COMM,
		    t2.SRV_MEM_COMM AS S_SRV_MEM_COMM,
		    t2.BASIC_AND_ALLOWANCE AS S_BASIC_AND_ALLOWANCE,
		    t2.PERFORMANCE_INCENTIVE AS S_PERFORMANCE_INCENTIVE,
		    t2.ADJUSTMENT AS S_ADJUSTMENT,  
		    t2.CFF_REWARD AS S_CFF_REWARD,  
		    t2.SENIORITY AS S_SENIORITY,    
		    t2.GRAND_TOTAL AS S_GRAND_TOTAL
		FROM CMM0006T T0 JOIN ORG0001D T3
	            ON T0.EMPLY_ID=T3.MEM_ID 
		             AND T0.EMPLY_TYPE_ID=T3.MEM_TYPE
             JOIN SYS0005M t4 on t4.BRNCH_ID = t3.BRNCH 
		    LEFT JOIN(
		        SELECT t1.COMM_TASK_ID as TASK_ID ,  
		            t1.EMPLY_CODE as M_CODE ,
		            t2.NAME as CT_NAME ,
		            t2.NRIC as NRIC ,
		            t2.JOIN_DT as JOIN_DATE,
		            t1.WORKING_MONTH  as SERVICE_MONTHS,
		            t1.EMPLY_LEV as CT_RANK ,
		            t3.NAME  as  STATUS,
		            t6.CODE as BRNCH ,
		            
		            t4.V1 as AS_COUNT ,
		            t4.V2 as AS_SUM_CP ,
		            t4.V3 as BS_COUNT ,
		            t4.V4 as BS_SUM_CP ,
		            t4.V5 as INS_COUNT ,
		            t4.V6 as INS_SUM_CP ,
		            t4.V7 as PR_COUNT ,
		            t4.V8 as PR_SUM_CP , 
		            t4.V9 as TOTAL_POINT ,
		            t4.V10 as PRO_PERCENT ,
		            t4.V11 as PER_PERCENT  ,
		            t4.V12 as PRO_FACTOR_30 ,
		            t4.V13 as PER_FACTOR_70  ,    
		            t4.V14 as SUM_FACTOR  ,
		            t5.R1 as  GROSS_COMM,
		            t5.R2 as  RENTAL_COMM,
		            t5.R3 as  SRV_MEM_COMM,
		            t5.R4 as  BASIC_AND_ALLOWANCE,
		            t5.R5 as  PERFORMANCE_INCENTIVE,
		            t5.R6 as  ADJUSTMENT,
		            t5.R7 as  CFF_REWARD,
		            t5.R8 as  SENIORITY,
		            t5.R1 + t5.R2 + t5.R3 +t5.R4 +t5.R5 +t5.R6 +t5.R7 +t5.R8 as GRAND_TOTAL        
		        FROM CMM0006T t1
		            join ORG0001D t2 on t2.MEM_ID = t1.EMPLY_ID
		            join SYS0038M t3 on t2.STUS = t3.STUS_CODE_ID
		            left join CMM0028D t4 on t4.TASK_ID = t1.COMM_TASK_ID and  t1.EMPLY_ID  =  t4.EMPLY_ID
		            join CMM0029D t5 on t5.TASK_ID = t1.COMM_TASK_ID and  t1.EMPLY_ID  =  t5.EMPLY_ID
		            join SYS0005M t6 on t6.BRNCH_ID = t2.BRNCH 
		        WHERE t1.EMPLY_TYPE_CODE = 'CT'
		          AND t1.COMM_TASK_ID =#{taskId}
		          --AND (t5.R1 + t5.R2 + t5.R3 +t5.R4 +t5.R5 +t5.R6 +t5.R7 +t5.R8) > 0
		    ) t1 ON t0.EMPLY_CODE= T1.M_CODE AND  T1.TASK_ID=T0.COMM_TASK_ID AND T1.BRNCH =T4.CODE
		    
		    LEFT JOIN (
		        SELECT t1.COMM_TASK_ID as TASK_ID ,  
		            t1.EMPLY_CODE as M_CODE ,
		            t2.NAME as CT_NAME ,
		            t2.NRIC as NRIC ,
		            t2.JOIN_DT as JOIN_DATE,
		            t1.WORKING_MONTH  as SERVICE_MONTHS,
		            t1.EMPLY_LEV as CT_RANK ,
		            t3.NAME  as  STATUS,
		            t6.CODE as BRNCH ,
		            
		            t4.V1 as AS_COUNT ,
		            t4.V2 as AS_SUM_CP ,
		            t4.V3 as BS_COUNT ,
		            t4.V4 as BS_SUM_CP ,
		            t4.V5 as INS_COUNT ,
		            t4.V6 as INS_SUM_CP ,
		            t4.V7 as PR_COUNT ,
		            t4.V8 as PR_SUM_CP , 
		            t4.V9 as TOTAL_POINT ,
		            t4.V10 as PRO_PERCENT ,
		            t4.V11 as PER_PERCENT  ,
		            t4.V12 as PRO_FACTOR_30 ,
		            t4.V13 as PER_FACTOR_70  ,    
		            t4.V14 as SUM_FACTOR  ,
		            t5.R1 as  GROSS_COMM,
		            t5.R2 as  RENTAL_COMM,
		            t5.R3 as  SRV_MEM_COMM,
		            t5.R4 as  BASIC_AND_ALLOWANCE,
		            t5.R5 as  PERFORMANCE_INCENTIVE,
		            t5.R6 as  ADJUSTMENT,
		            t5.R7 as  CFF_REWARD,
		            t5.R8 as  SENIORITY,
		            t5.R1 + t5.R2 + t5.R3 +t5.R4 +t5.R5 +t5.R6 +t5.R7 +t5.R8 as GRAND_TOTAL       
		        FROM CMM0006T t1
		            join ORG0001D t2 on t2.MEM_ID = t1.EMPLY_ID
		            join SYS0038M t3 on t2.STUS = t3.STUS_CODE_ID
		            left join CMM0028T t4 on t4.TASK_ID = t1.COMM_TASK_ID and  t1.EMPLY_ID  =  t4.EMPLY_ID
		            join CMM0029T t5 on t5.TASK_ID = t1.COMM_TASK_ID and  t1.EMPLY_ID  =  t5.EMPLY_ID
		            join SYS0005M t6 on t6.BRNCH_ID = t2.BRNCH 
		         WHERE t1.EMPLY_TYPE_CODE = 'CT'
		          AND t1.COMM_TASK_ID =#{taskId}
		          --AND (t5.R1 + t5.R2 + t5.R3 +t5.R4 +t5.R5 +t5.R6 +t5.R7 +t5.R8) > 0
		    ) t2 ON t0.EMPLY_CODE= T2.M_CODE AND  T2.TASK_ID=T0.COMM_TASK_ID AND T2.BRNCH =T4.CODE
		
		WHERE t0.COMM_TASK_ID = #{taskId}
		      AND T0.EMPLY_TYPE_ID=3
		      AND t0.EMPLY_LEV=#{level}
		      <![CDATA[  AND t0.EMPLY_STUS_ID<>3 ]]>
		    <if test =" memCode != null and memCode != '' ">
		      AND t0.EMPLY_CODE LIKE '%'||#{memCode}||'%'
		    </if>
		    <if test =" level == 4 and orgCombo == 'CTE' ">
		          AND t4.CODE IN ('DSC-12' , 'DSC-14' , 'DSC-17', 'DSC-18' ,'DSC-19' )
		          AND t0.WORKING_MONTH >= 3
		    </if>
		    <if test =" level == 4 and orgCombo == 'CTR' ">
                  AND t4.CODE NOT IN ('DSC-12' , 'DSC-14' , 'DSC-17', 'DSC-18' ,'DSC-19' )
                  AND t0.WORKING_MONTH >= 3
            </if>
            <if test =" level == 4 and orgCombo == 'CTN' ">
                  AND t0.WORKING_MONTH = 2
            </if>
    </select>
</mapper>