<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.coway.trust.biz.services.as.impl.ASManagementListMapper">


    <select id="selectASManagementList" parameterType="Map" resultType="egovMap">
    <![CDATA[
           SELECT 
			D.CODE, C.AS_NO, C.AS_REQST_DT, J.CODE, F.AS_RESULT_NO, H.NAME, B.SALES_ORD_NO, I.CODE APP_TYPE, A.NAME, A.NRIC
			FROM SAL0029D A 
			INNER JOIN SAL0001D B ON B.CUST_ID = A.CUST_ID
			INNER JOIN SVC0001D C ON C.AS_SO_ID = B.SALES_ORD_ID
			INNER JOIN SVC0004D F ON F.AS_ENTRY_ID = C.AS_ID
			INNER JOIN SVC0004D G ON G.AS_RESULT_ID = F.AS_RESULT_ID
			INNER JOIN SYS0038M C ON C.STUS_CODE_ID = F.AS_RESULT_STUS_ID
			INNER JOIN SYS0038M J ON J.STUS_CODE_ID = C.AS_STUS_ID
			INNER JOIN SYS0013M D ON D.CODE_ID = C.AS_TYPE_ID
			INNER JOIN ORG0001D H ON H.MEM_ID = G.AS_CT_ID
			INNER JOIN SYS0013M I ON I.CODE_ID = B.APP_TYPE_ID
			WHERE 1=1
			 ]]> 
			<if test="asNum != null and asNum != '' ">
			  AND  C.AS_NO = #{asNum}
			 </if>
             <if test="asTypeList != null and asTypeList != '' ">
                     AND C.AS_TYPE_ID IN
                  <foreach item="item" collection="asTypeList" index="index" open="(" separator="," close=")">
                  #{item}
                  </foreach>
              </if>
                
                <if test="asStatusList != null and asStatusList != '' ">
                   AND C.AS_STUS_ID IN
                 <foreach item="item" collection="asStatusList" index="index" open="(" separator="," close=")">
                 #{item}
                 </foreach>
              </if>
			 <if test="resultNum != null and resultNum != '' ">
               AND F.AS_RESULT_NO = #{resultNum}
             </if>
			  <if test="orderNum != null and orderNum != '' ">
               AND B.SALES_ORD_NO =#{orderNum}
             </if>
			  <if test="custName != null and custName != '' ">
               AND A.NAME = #{custName}
             </if>
			  <if test="nricNum != null and nricNum != '' ">
              AND A.NRIC = #{nricNum}
             </if>
             
             <if test="createStrDate != '' and createEndDate == '' ">
              <![CDATA[ AND C.AS_REQST_DT  >= TO_DATE(#{createStrDate}, 'DD/MM/YYYY') ]]>
              </if>
              <if test="createEndDate != '' and createStrDate == '' ">
                       <![CDATA[  AND  C.AS_REQST_DT   <=  TO_DATE(#{createEndDate}, 'DD/MM/YYYY') ]]>
              </if>
              <if test="createStrDate != '' and createEndDate != '' ">
                <![CDATA[  AND C.AS_REQST_DT    between TO_DATE(#{createStrDate},  'DD/MM/YYYY') and  TO_DATE(#{createEndDate}, 'DD/MM/YYYY') ]]>
                 </if>
    </select>
    <select id="selectOrderBasicInfo" parameterType="Map" resultType="egovMap">
    <![CDATA[
            SELECT Extent1.ORD_ID ORD_ID  ,
		       Extent1.ORD_NO ORD_NO  ,
		       Extent1.RENTAL_STUS RENTAL_STUS  ,
		       Extent1.ORD_STUS_ID ORD_STUS_ID  ,
		       Extent1.ORD_STUS_CODE ORD_STUS_CODE  ,
		       Extent1.ORD_STUS_NAME ORD_STUS_NAME  ,
		       Extent1.ORD_DT ORD_DT  ,
		       Extent1.INSTLMT_PRIOD INSTLMT_PRIOD  ,
		       Extent1.ORD_AMT ORD_AMT  ,
		       Extent1.ORD_MTH_RENTAL ORD_MTH_RENTAL  ,
		       Extent1.ORD_PV ORD_PV  ,
		       Extent1.ORD_PV_MONTH ORD_PV_MONTH  ,
		       Extent1.ORD_PV_YEAR ORD_PV_YEAR  ,
		       Extent1.ORD_REF_NO ORD_REF_NO  ,
		       Extent1.ORD_PO_NO ORD_PO_NO  ,
		       Extent1.ORD_DEPT_CODE ORD_DEPT_CODE  ,
		       Extent1.ORD_GRP_CODE ORD_GRP_CODE  ,
		       Extent1.ORD_ORG_CODE ORD_ORG_CODE  ,
		       Extent1.ORD_CRT_USER_ID ORD_CRT_USER_ID  ,
		       Extent1.ORD_CRT_DT ORD_CRT_DT  ,
		       Extent1.APP_TYPE_ID APP_TYPE_ID  ,
		       Extent1.APP_TYPE_CODE APP_TYPE_CODE  ,
		       Extent1.APP_TYPE_DESC APP_TYPE_DESC  ,
		       Extent1.STOCK_ID STOCK_ID  ,
		       Extent1.STOCK_CODE STOCK_CODE  ,
		       Extent1.STOCK_DESC STOCK_DESC  ,
		       Extent1.CUST_ID CUST_ID  ,
		       Extent1.CUST_TYPE CUST_TYPE  ,
		       Extent1.CUST_NAME CUST_NAME  ,
		       Extent1.CUST_NRIC CUST_NRIC  ,
		       Extent1.CUST_DOB CUST_DOB  ,
		       Extent1.CUST_NATION CUST_NATION  ,
		       Extent1.CUST_GENDER CUST_GENDER  ,
		       Extent1.CUST_RACE CUST_RACE  ,
		       Extent1.CUST_EMAIL CUST_EMAIL  ,
		       Extent1.CUST_VA_NO CUST_VA_NO  ,
		       Extent1.CUST_PASSPORT_EXPR CUST_PASSPORT_EXPR  ,
		       Extent1.CUST_VISA_EXPR CUST_VISA_EXPR  ,
		       Extent1.ORD_PROMO_ID ORD_PROMO_ID  ,
		       Extent1.ORD_PROMO_CODE ORD_PROMO_CODE  ,
		       Extent1.ORD_PROMO_DESC ORD_PROMO_DESC  ,
		       Extent1.ORD_MEM_ID ORD_MEM_ID  ,
		       Extent1.ORD_MEM_CODE ORD_MEM_CODE  ,
		       Extent1.ORD_MEM_NAME ORD_MEM_NAME  ,
		       Extent1.ORD_MEM_NRIC ORD_MEM_NRIC  ,
		       Extent1.ORD_MEM_TYPE_ID ORD_MEM_TYPE_ID  ,
		       Extent1.ORD_MEM_TYPE_CODE ORD_MEM_TYPE_CODE  ,
		       Extent1.ORD_MEM_TYPE_NAME ORD_MEM_TYPE_NAME  ,
		       Extent1.COOL_OFF_PRIOD COOL_OFF_PRIOD  ,
		       Extent1.KEYIN_BRNCH_ID KEYIN_BRNCH_ID  ,
		       Extent1.KEYIN_BRNCH_CODE KEYIN_BRNCH_CODE  ,
		       Extent1.KEYIN_BRNCH_NAME KEYIN_BRNCH_NAME  ,
		       Extent1.ORD_REM ORD_REM  ,
		       Extent1.RENT_CHK_ID RENT_CHK_ID  ,
		       Extent1.ORD_HM_ID ORD_HM_ID  ,
		       Extent1.ORD_SM_ID ORD_SM_ID  ,
		       Extent1.ORD_GM_ID ORD_GM_ID  ,
		       Extent1.ORD_ADDR_ID ORD_ADDR_ID  ,
		       Extent1.ORD_CNTC_ID ORD_CNTC_ID  ,
		       Extent1.ORD_PROMO_RELATED_NO ORD_PROMO_RELATED_NO  ,
		       Extent1.UPD_DT UPD_DT  ,
		       Extent1.UPD_USER_ID UPD_USER_ID  ,
		       Extent1.JOM_PAY_REF JOM_PAY_REF  ,
		       Extent1.STK_CTGRY_ID STK_CTGRY_ID  ,
		       Extent1.STK_CTGRY_NAME STK_CTGRY_NAME  ,
		       Extent1.CUST_TYPE_ID CUST_TYPE_ID  ,
		       Extent1.CUST_BILL_ID CUST_BILL_ID  ,
		       Extent1.OBLIGT_YEAR OBLIGT_YEAR  
		  FROM ( SELECT vOrderBasicInfo.ORD_ID ORD_ID  ,
		                vOrderBasicInfo.ORD_NO ORD_NO  ,
		                vOrderBasicInfo.RENTAL_STUS RENTAL_STUS  ,
		                vOrderBasicInfo.ORD_STUS_ID ORD_STUS_ID  ,
		                vOrderBasicInfo.ORD_STUS_CODE ORD_STUS_CODE  ,
		                vOrderBasicInfo.ORD_STUS_NAME ORD_STUS_NAME  ,
		                vOrderBasicInfo.ORD_DT ORD_DT  ,
		                vOrderBasicInfo.INSTLMT_PRIOD INSTLMT_PRIOD  ,
		                vOrderBasicInfo.ORD_AMT ORD_AMT  ,
		                vOrderBasicInfo.ORD_MTH_RENTAL ORD_MTH_RENTAL  ,
		                vOrderBasicInfo.ORD_PV ORD_PV  ,
		                vOrderBasicInfo.ORD_PV_MONTH ORD_PV_MONTH  ,
		                vOrderBasicInfo.ORD_PV_YEAR ORD_PV_YEAR  ,
		                vOrderBasicInfo.ORD_REF_NO ORD_REF_NO  ,
		                vOrderBasicInfo.ORD_PO_NO ORD_PO_NO  ,
		                vOrderBasicInfo.ORD_DEPT_CODE ORD_DEPT_CODE  ,
		                vOrderBasicInfo.ORD_GRP_CODE ORD_GRP_CODE  ,
		                vOrderBasicInfo.ORD_ORG_CODE ORD_ORG_CODE  ,
		                vOrderBasicInfo.ORD_CRT_USER_ID ORD_CRT_USER_ID  ,
		                vOrderBasicInfo.ORD_CRT_DT ORD_CRT_DT  ,
		                vOrderBasicInfo.APP_TYPE_ID APP_TYPE_ID  ,
		                vOrderBasicInfo.APP_TYPE_CODE APP_TYPE_CODE  ,
		                vOrderBasicInfo.APP_TYPE_DESC APP_TYPE_DESC  ,
		                vOrderBasicInfo.STOCK_ID STOCK_ID  ,
		                vOrderBasicInfo.STOCK_CODE STOCK_CODE  ,
		                vOrderBasicInfo.STOCK_DESC STOCK_DESC  ,
		                vOrderBasicInfo.CUST_ID CUST_ID  ,
		                vOrderBasicInfo.CUST_TYPE CUST_TYPE  ,
		                vOrderBasicInfo.CUST_NAME CUST_NAME  ,
		                vOrderBasicInfo.CUST_NRIC CUST_NRIC  ,
		                vOrderBasicInfo.CUST_DOB CUST_DOB  ,
		                vOrderBasicInfo.CUST_NATION CUST_NATION  ,
		                vOrderBasicInfo.CUST_GENDER CUST_GENDER  ,
		                vOrderBasicInfo.CUST_RACE CUST_RACE  ,
		                vOrderBasicInfo.CUST_EMAIL CUST_EMAIL  ,
		                vOrderBasicInfo.CUST_VA_NO CUST_VA_NO  ,
		                vOrderBasicInfo.CUST_PASSPORT_EXPR CUST_PASSPORT_EXPR  ,
		                vOrderBasicInfo.CUST_VISA_EXPR CUST_VISA_EXPR  ,
		                vOrderBasicInfo.ORD_PROMO_ID ORD_PROMO_ID  ,
		                vOrderBasicInfo.ORD_PROMO_CODE ORD_PROMO_CODE  ,
		                vOrderBasicInfo.ORD_PROMO_DESC ORD_PROMO_DESC  ,
		                vOrderBasicInfo.ORD_MEM_ID ORD_MEM_ID  ,
		                vOrderBasicInfo.ORD_MEM_CODE ORD_MEM_CODE  ,
		                vOrderBasicInfo.ORD_MEM_NAME ORD_MEM_NAME  ,
		                vOrderBasicInfo.ORD_MEM_NRIC ORD_MEM_NRIC  ,
		                vOrderBasicInfo.ORD_MEM_TYPE_ID ORD_MEM_TYPE_ID  ,
		                vOrderBasicInfo.ORD_MEM_TYPE_CODE ORD_MEM_TYPE_CODE  ,
		                vOrderBasicInfo.ORD_MEM_TYPE_NAME ORD_MEM_TYPE_NAME  ,
		                vOrderBasicInfo.COOL_OFF_PRIOD COOL_OFF_PRIOD  ,
		                vOrderBasicInfo.KEYIN_BRNCH_ID KEYIN_BRNCH_ID  ,
		                vOrderBasicInfo.KEYIN_BRNCH_CODE KEYIN_BRNCH_CODE  ,
		                vOrderBasicInfo.KEYIN_BRNCH_NAME KEYIN_BRNCH_NAME  ,
		                vOrderBasicInfo.ORD_REM ORD_REM  ,
		                vOrderBasicInfo.RENT_CHK_ID RENT_CHK_ID  ,
		                vOrderBasicInfo.ORD_HM_ID ORD_HM_ID  ,
		                vOrderBasicInfo.ORD_SM_ID ORD_SM_ID  ,
		                vOrderBasicInfo.ORD_GM_ID ORD_GM_ID  ,
		                vOrderBasicInfo.ORD_ADDR_ID ORD_ADDR_ID  ,
		                vOrderBasicInfo.ORD_CNTC_ID ORD_CNTC_ID  ,
		                vOrderBasicInfo.ORD_PROMO_RELATED_NO ORD_PROMO_RELATED_NO  ,
		                vOrderBasicInfo.UPD_DT UPD_DT  ,
		                vOrderBasicInfo.UPD_USER_ID UPD_USER_ID  ,
		                vOrderBasicInfo.JOM_PAY_REF JOM_PAY_REF  ,
		                vOrderBasicInfo.STK_CTGRY_ID STK_CTGRY_ID  ,
		                vOrderBasicInfo.STK_CTGRY_NAME STK_CTGRY_NAME  ,
		                vOrderBasicInfo.CUST_TYPE_ID CUST_TYPE_ID  ,
		                vOrderBasicInfo.CUST_BILL_ID CUST_BILL_ID  ,
		                vOrderBasicInfo.OBLIGT_YEAR OBLIGT_YEAR  
		         FROM SAL1006V vOrderBasicInfo ) Extent1
		 WHERE  ( Extent1.ORD_NO = #{orderNo} )
		          AND ( Extent1.ORD_STUS_ID = 4 ) AND ROWNUM <= 1
             ]]>
    </select>
    
    
       <select id="getASHistoryList" parameterType="Map" resultType="egovMap">    
	                SELECT S.C1   ,
						       S.AS_NO   ,
						       S.AS_REQST_DT   ,
						       S.CODE   ,
						       S.C2   ,
						       S.AS_SETL_DT   ,
						       S.C3   ,
						       S.C4   ,
						       S.C5   ,
						       S.C6   ,
						       S.C7   
						  FROM ( SELECT DISTINCT Extent1.AS_NO AS_NO  ,
						                         Extent1.AS_REQST_DT AS_REQST_DT  ,
						                         Extent2.CODE CODE  ,
						                         1 C1  ,
						                         CASE 
						                              WHEN ( Extent3.AS_RESULT_ID IS NOT NULL ) THEN Extent3.AS_RESULT_NO
						                         ELSE '-'
						                            END C2  ,
						                         CASE 
						                              WHEN ( Extent4.RESN_ID IS NOT NULL ) THEN Extent4.RESN_DESC
						                         ELSE '-'
						                            END C3  ,
						                         CASE 
						                              WHEN ( Extent5.RESN_ID IS NOT NULL ) THEN Extent5.RESN_DESC
						                         ELSE '-'
						                            END C4  ,
						                         CASE 
						                              WHEN ( Extent6.MEM_ID IS NOT NULL ) THEN Extent6.MEM_CODE
						                         ELSE '-'
						                            END C5  ,
						                         CASE 
						                              WHEN ( Extent7.RESN_ID IS NOT NULL ) THEN Extent7.RESN_DESC
						                         ELSE '-'
						                            END C6  ,
						                         CASE 
						                              WHEN ( Extent3.AS_RESULT_ID IS NOT NULL ) THEN Extent3.AS_TOT_AMT
						                         ELSE UTILS.CONVERT_TO_FLOAT(0,53)
						                            END C7  ,
						                         Extent3.AS_SETL_DT AS_SETL_DT  
						         FROM SVC0001D Extent1
						                JOIN SYS0038M Extent2   ON Extent1.AS_STUS_ID = Extent2.STUS_CODE_ID
						                LEFT JOIN SVC0004D Extent3   ON ( Extent1.AS_ID = Extent3.AS_ENTRY_ID )
						                AND ( 1 = Extent3.AS_RESULT_IS_CURR )
						                AND ( 457 = Extent3.AS_RESULT_TYPE_ID )
						                LEFT JOIN SYS0032M Extent4   ON Extent1.AS_MALFUNC_ID = Extent4.RESN_ID
						                LEFT JOIN SYS0032M Extent5   ON Extent1.AS_MALFUNC_RESN_ID = Extent5.RESN_ID
						                LEFT JOIN ORG0001D Extent6   ON Extent3.AS_CT_ID = Extent6.MEM_ID
						                LEFT JOIN SYS0032M Extent7   ON Extent3.AS_SLUTN_RESN_ID = Extent7.RESN_ID
						          WHERE  Extent1.AS_SO_ID = #{SALES_ORD_ID} ) S
	                
    </select>
    
    
       <select id="getBSHistoryList" parameterType="Map" resultType="egovMap">
        <![CDATA[
        
                SELECT S.E_MONTH   ,
					       S.E_NO   ,
					       S.E_YEAR   ,
					       S.CODE   ,
					       S.CODE1   ,
					       S.NO1   ,
					       S.C1   ,
					       S.CODE2   ,
					       S.CODE3   ,
					       S.MEM_CODE  ,
					       S.E_MONTH||'-'|| S.E_YEAR  EDATE
					  FROM ( SELECT E.NO E_NO  ,
					                E.MONTH E_MONTH  ,
					                E.YEAR E_YEAR  ,
					                E2.CODE CODE  ,
					                E3.CODE CODE1  ,
					                E4.MEM_CODE MEM_CODE  ,
					                E5.SETL_DT C1  ,
					                E5.NO NO1  ,
					                E6.CODE CODE2  ,
					                E7.CODE CODE3  
					         FROM SVC0008D E
					                JOIN SYS0013M E2   ON E.TYPE_ID = E2.CODE_ID
					                JOIN SYS0038M E3   ON E.STUS_CODE_ID = E3.STUS_CODE_ID
					                JOIN ORG0001D E4   ON E.CODY_ID = E4.MEM_ID
					                LEFT JOIN SVC0006D E5   ON ( E.SCHDUL_ID = E5.SCHDUL_ID )
					                AND ( 1 = E5.RESULT_IS_CURR )
					                LEFT JOIN SYS0032M E6   ON E5.REN_COLCT_ID = E6.RESN_ID
					                LEFT JOIN SYS0032M E7   ON E5.FAIL_RESN_ID = E7.RESN_ID
					          WHERE  E.SALES_ORD_ID = #{SALES_ORD_ID} ) S
					  ORDER BY  S.E_NO DESC              
           ]]>
    </select>
    
    
    
     <select id="getBrnchId" parameterType="Map" resultType="egovMap">
                                
                    select codeId ,codeName
                    from(
                            SELECT  
                                SYS0005M.BRNCH_ID  code_Id,
                                CODE ||'-'||SYS0005M.NAME  code_Name
                            FROM SYS0005M 
                            where SYS0005M.STUS_ID =1
                            AND SYS0005M.TYPE_ID   IN (40,43)
                             ORDER BY  SYS0005M.BRNCH_ID  ASC
                     )ORDER BY  codeName  ASC
     
     </select>
     
     
     
     
     
     <select id="getResnCode" parameterType="Map" resultType="egovMap">
                     SELECT S.C1   ,
                                   S.RESN_ID   ,
                                   S.CODE    code_Id ,
                                   S.RESN_DESC code_Name   
                              FROM ( SELECT DISTINCT E5.RESN_ID   ,
                                                     E5.CODE   ,
                                                     E5.RESN_DESC   ,
                                                     1 C1  
                                     FROM SYS0032M Extent1
                                            JOIN SYS0033M Extent2   ON Extent1.RESN_ID = Extent2.RESN_ID
                                            JOIN SYS0033M Extent3   ON ( Extent2.RESN_GRP_ID = Extent3.RESN_PARENT_GRP_ID )
                                            AND ( ( 1 = Extent3.RESN_STUS_ID )
                                            OR ( ( 1 IS NULL )
                                            AND ( Extent3.RESN_STUS_ID IS NULL ) ) )
                                            JOIN SYS0033M Extent4   ON ( Extent3.RESN_GRP_ID = Extent4.RESN_PARENT_GRP_ID )
                                            AND ( ( 1 = Extent4.RESN_STUS_ID )
                                            OR ( ( 1 IS NULL )
                                            AND ( Extent4.RESN_STUS_ID IS NULL ) ) )
                                            JOIN SYS0032M E5   ON Extent4.RESN_ID = E5.RESN_ID
                                      WHERE  ( 340 = Extent1.RESN_TYPE_ID )
                                               AND ( 1 = Extent1.STUS_CODE_ID )
                                               AND ( 0 = (CASE 
                                                               WHEN ( Extent2.RESN_PARENT_GRP_ID IS NOT NULL ) THEN Extent2.RESN_PARENT_GRP_ID
                                             ELSE 0
                                                END) )
                                               AND ( Extent3.RESN_ID = #{RESN_ID} ) ) S

     
     </select>
     
     
     <select id="getResnDetail" parameterType="Map" resultType="egovMap">
	                 SELECT S.C1   ,
							       S.RESN_ID   ,
							       S.CODE    code_Id ,
							       S.RESN_DESC code_Name   
							  FROM ( SELECT DISTINCT E5.RESN_ID   ,
							                         E5.CODE   ,
							                         E5.RESN_DESC   ,
							                         1 C1  
							         FROM SYS0032M Extent1
							                JOIN SYS0033M Extent2   ON Extent1.RESN_ID = Extent2.RESN_ID
							                JOIN SYS0033M Extent3   ON ( Extent2.RESN_GRP_ID = Extent3.RESN_PARENT_GRP_ID )
							                AND ( ( 1 = Extent3.RESN_STUS_ID )
							                OR ( ( 1 IS NULL )
							                AND ( Extent3.RESN_STUS_ID IS NULL ) ) )
							                JOIN SYS0033M Extent4   ON ( Extent3.RESN_GRP_ID = Extent4.RESN_PARENT_GRP_ID )
							                AND ( ( 1 = Extent4.RESN_STUS_ID )
							                OR ( ( 1 IS NULL )
							                AND ( Extent4.RESN_STUS_ID IS NULL ) ) )
							                JOIN SYS0032M E5   ON Extent4.RESN_ID = E5.RESN_ID
							          WHERE  ( 340 = Extent1.RESN_TYPE_ID )
							                   AND ( 1 = Extent1.STUS_CODE_ID )
							                   AND ( 0 = (CASE 
							                                   WHEN ( Extent2.RESN_PARENT_GRP_ID IS NOT NULL ) THEN Extent2.RESN_PARENT_GRP_ID
							                 ELSE 0
							                    END) )
							                   AND ( Extent3.RESN_ID = #{RESN_ID} ) ) S

     
     </select>
</mapper>