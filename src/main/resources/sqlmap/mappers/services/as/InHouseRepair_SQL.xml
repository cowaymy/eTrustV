<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.coway.trust.biz.services.as.impl.InHouseRepairMapper">

<select id="selInhouseList" parameterType="Map" resultType="egovMap">
  WITH as_Entry as ( SELECT tKy
                          , AS_ID
                          , AS_NO
                          , AS_MEM_ID
                          , AS_STUS_ID
                          , AS_SO_ID
                          , AS_RESULT_NO
                          , AS_ENTRY_ID
                          , AS_CT_ID
                          , AS_BRNCH_ID
                          , CODE
                          , AS_DF_DESC
                          , STK_CODE
                          , STK_DESC
                          , MEM_CODE
                          , SALES_ORD_NO
                          , SALES_ORD_ID
                          , CUST_ID
                          , AS_STUS
                          , REF_REQST
                          , IN_HUSE_REPAIR_PRODUCT_CODE
                          , IN_HUSE_REPAIR_PRODUCT_DESC
                          , IN_HUSE_REPAIR_SERIAL_NO
                          , AS_APPNT_DT
                          , SERIAL_NO
                          , RK
                    FROM (SELECT 1 tKy
                                 , A.AS_ID
                                 , A.AS_NO
                                 , A.AS_MEM_ID
                                 , A.AS_STUS_ID
                                 , B.AS_SO_ID
                                 , B.AS_RESULT_NO
                                 , B.AS_ENTRY_ID
                                 , B.AS_CT_ID
                                 , B.AS_BRNCH_ID
                                 , F.CODE
                                 , E.CODE AS AS_DF_DESC
                                 , G.STK_CODE
                                 , G.STK_DESC
                                 , H.MEM_CODE
                                 , C.SALES_ORD_NO
                                 , C.SALES_ORD_ID
                                 , C.CUST_ID
                                 , DECODE (A.AS_STUS_ID, '1', 'ACT', '4', 'COM','21','FAI','10','CAN') AS AS_STUS
                                 , A.REF_REQST
                                 , B.IN_HUSE_REPAIR_PRODUCT_CODE
                                 , I.STK_DESC IN_HUSE_REPAIR_PRODUCT_DESC
                                 , B.IN_HUSE_REPAIR_SERIAL_NO
                                 , A.AS_APPNT_DT
                                 , S47D.SERIAL_NO
                                 , RANK() OVER (PARTITION BY A.AS_SO_ID ORDER BY B.AS_RESULT_ID DESC) AS RK
                          FROM SVC0001D A,
                               SVC0004D B,
                               SAL0001D C,
                               SAL0002D D,
                               SYS0026M G,
                               SYS0032M E,
                               SYS0005M F,
                               ORG0001D H,
                               SYS0026M I,
                               (SELECT sales_ord_id, install_entry_id FROM SAL0046D WHERE INSTALL_ENTRY_ID = (SELECT MAX(INSTALL_ENTRY_ID) FROM SAL0046D WHERE SALES_ORD_ID = (SELECT SALES_ORD_ID FROM SAL0001D WHERE SALES_ORD_NO = #{ordNo}))) S46D,
                               SAL0047D S47D
                          WHERE 1 = 1
                            AND A.AS_ID = B.AS_ENTRY_ID
                            AND A.AS_SO_ID = C.SALES_ORD_ID
                            AND C.SALES_ORD_ID = D.SALES_ORD_ID
                            AND C.SALES_ORD_ID = D.SALES_ORD_ID
                            AND D.ITM_STK_ID = G.STK_ID
                            AND B.IN_HUSE_REPAIR_PRODUCT_CODE = i.STK_CODE (+)
                            AND B.AS_DEFECT_TYPE_ID(+) = E.RESN_ID
                            AND A.AS_BRNCH_ID = F.BRNCH_ID(+)
                            AND B.AS_CT_ID = H.MEM_ID
                            AND C.SALES_ORD_ID = S46D.SALES_ORD_ID
                            AND S46D.INSTALL_ENTRY_ID = S47D.ENTRY_ID(+)
                            AND B.AS_SLUTN_RESN_ID = '454'
                            AND TO_CHAR(A.AS_CRT_DT,'YYYY') >= 2018
                            <if test="ordNo != null and ordNo  != '' " >
                              AND  C.SALES_ORD_NO = #{ordNo}
                            </if>
                        ) WHERE RK =1
  ) , in_Entry AS ( SELECT 1 tKy
                         , A.AS_ID
                         , A.AS_NO
                         , A.AS_MEM_ID
                         , A.AS_STUS_ID
                         , B.AS_SO_ID
                         , B.AS_RESULT_NO
                         , B.AS_RESULT_ID
                         , B.AS_ENTRY_ID
                         , B.AS_CT_ID
                         , B.AS_BRNCH_ID
                         , B.IN_HUSE_REPAIR_PROMIS_DT
                         , B.APPNT_DT
                         , F.CODE
                         , E.CODE AS AS_DF_DESC
                         , G.STK_CODE
                         , G.STK_DESC
                         , H.MEM_CODE
                         , A.AS_CRT_DT
                         , CASE WHEN ( B.AS_RESULT_STUS_ID  ='4' )
                                  THEN  TO_CHAR( B.AS_RESULT_UPD_DT,'dd/mm/yyyy')
                                ELSE ''
                           END AS AS_COM_DT
                         , DECODE (A.AS_STUS_ID, '1', 'ACT', '4', 'COM', '21', 'FAI', '10', 'CAN') AS IN_AS_STUS
                         , A.REF_REQST
                        FROM SVC0001D A,
                             SVC0004D B,
                             SAL0001D C,
                             SAL0002D D,
                             SYS0026M G,
                             SYS0032M E,
                             SYS0005M F,
                             ORG0001D H
                        WHERE A.AS_ID = B.AS_ENTRY_ID
                          AND A.AS_SO_ID = C.SALES_ORD_ID
                          AND C.SALES_ORD_ID = D.SALES_ORD_ID
                          AND C.SALES_ORD_ID = D.SALES_ORD_ID
                          AND D.ITM_STK_ID = G.STK_ID
                          AND B.AS_DEFECT_TYPE_ID(+) = E.RESN_ID
                          AND A.AS_BRNCH_ID = F.BRNCH_ID(+)
                          AND B.AS_CT_ID = H.MEM_ID
                          AND A.AS_TYPE_ID = '2713'
  ), on_Entry AS ( SELECT tKy
                        , AS_NO
                        , IN_HUSE_REPAIR_SERIAL_NO
                        , AS_STUS
                        , REF_REQST
                        , MEM_CODE
                        , ON_COM_DT
                        , RK ,STK_DESC
                FROM( SELECT 1 tKy
                           , A.AS_NO
                           , (SELECT STK_DESC FROM SYS0026M X WHERE X.STK_CODE = B.IN_HUSE_REPAIR_PRODUCT_CODE) STK_DESC
                           , B.IN_HUSE_REPAIR_SERIAL_NO
                           , DECODE (A.AS_STUS_ID,  '1',  'ACT','4','COM', '21','FAI', '10',  'CAN')  AS AS_STUS
                           , A.REF_REQST
                           , C.MEM_CODE
                           , CASE WHEN ( B.AS_RESULT_STUS_ID  ='4' )
                               THEN TO_CHAR( B.AS_RESULT_UPD_DT,'dd/mm/yyyy')
                               ELSE ''
                             END AS ON_COM_DT
                           , RANK() OVER (PARTITION BY A.AS_SO_ID ORDER BY B.AS_RESULT_ID DESC) AS RK
                      FROM SVC0001D A,
                           SVC0004D B,
                           ORG0001D C
                      WHERE 1 = 1
                        AND A.AS_ID = B.AS_ENTRY_ID(+)
                        AND A.AS_MEM_ID = C.MEM_ID
                        AND REF_REQST IN ( SELECT TO_CHAR(AS_RESULT_ID)
                                           FROM SVC0001D A,
                                                SVC0004D B
                                           WHERE A.AS_ID =B.AS_ENTRY_ID
                                            AND  REF_REQST IN ( SELECT TO_CHAR(A.AS_ID)
                                                                FROM SVC0001D A,
                                                                     SVC0004D B,
                                                                     SAL0001D C,
                                                                     SAL0002D D,
                                                                     SYS0026M G,
                                                                     SYS0032M E,
                                                                     SYS0005M F,
                                                                     ORG0001D H
                                                                WHERE 1 = 1
                                                                  AND A.AS_ID = B.AS_ENTRY_ID
                                                                  AND A.AS_SO_ID = C.SALES_ORD_ID
                                                                  AND C.SALES_ORD_ID = D.SALES_ORD_ID
                                                                  AND C.SALES_ORD_ID = D.SALES_ORD_ID
                                                                  AND D.ITM_STK_ID = G.STK_ID
                                                                  AND B.AS_DEFECT_TYPE_ID(+) = E.RESN_ID
                                                                  AND A.AS_BRNCH_ID = F.BRNCH_ID(+)
                                                                  AND B.AS_CT_ID = H.MEM_ID
                                                                  AND B.AS_SLUTN_RESN_ID IN('454' ,'452')
                                                                  <if test="ordNo != null and ordNo  != '' " >
                                                                    AND  C.SALES_ORD_NO = #{ordNo}
                                                                  </if>
                                                                  AND TO_CHAR(A.AS_CRT_DT,'YYYY') >= 2018
                                                                )
                                         )
                    ) WHERE RK = 1
  ) SELECT as_Entry.AS_ID
         , as_Entry.AS_NO
         , as_Entry.CUST_ID
         , as_Entry.AS_MEM_ID
         , as_Entry.AS_STUS_ID
         , as_Entry.AS_STUS
         , as_Entry.AS_SO_ID
         , as_Entry.AS_RESULT_NO
         , as_Entry.AS_ENTRY_ID
         , as_Entry.AS_CT_ID
         , as_Entry.MEM_CODE
         , as_Entry.AS_BRNCH_ID
         , as_Entry.CODE AS_BRNCH_DESC
         , as_Entry.AS_DF_DESC
         , as_Entry.STK_CODE
         , as_Entry.STK_DESC
         , as_Entry.SALES_ORD_NO
         , as_Entry.SALES_ORD_ID
         , as_Entry.IN_HUSE_REPAIR_PRODUCT_CODE
         , as_Entry.IN_HUSE_REPAIR_PRODUCT_DESC
         , as_Entry.IN_HUSE_REPAIR_SERIAL_NO
         , NVL(TO_CHAR(as_Entry.AS_APPNT_DT, 'dd/mm/yyyy'), '') AS_APPNT_DT
         , as_Entry.SERIAL_NO
         , (SELECT NAME||'('||CUST_ID||')' FROM  SAL0029D WHERE CUST_ID = as_Entry.CUST_ID) CUST_NAME
         , in_Entry.AS_ID AS IN_AS_ID
         , in_Entry.AS_NO AS IN_AS_NO
         , in_Entry.AS_MEM_ID AS IN_AS_MEM_ID
         , in_Entry.AS_STUS_ID AS IN_AS_STUS_ID
         , in_Entry.AS_SO_ID AS IN_AS_SO_ID
         , in_Entry.AS_RESULT_NO AS IN_AS_RESULT_NO
         , in_Entry.AS_RESULT_ID AS IN_AS_RESULT_ID
         , in_Entry.AS_ENTRY_ID AS IN_AS_ENTRY_ID
         , in_Entry.AS_CT_ID AS IN_AS_CT_ID
         , in_Entry.MEM_CODE AS IN_MEM_CODE
         , in_Entry.AS_BRNCH_ID AS IN_AS_BRNCH_ID
         , in_Entry.CODE AS IN_AS_BRNCH_DESC
         , in_Entry.AS_DF_DESC AS IN_AS_DF_DESC
         , in_Entry.STK_CODE AS IN_STK_CODE
         , in_Entry.STK_DESC AS IN_STK_DESC
         , NVL(TO_CHAR(in_Entry.IN_HUSE_REPAIR_PROMIS_DT, 'dd/mm/yyyy'), '') IN_HUSE_REPAIR_PROMIS_DT
         , NVL(TO_CHAR(in_Entry.APPNT_DT, 'dd/mm/yyyy'), '') IN_APPNT_DT
         , NVL(TO_CHAR(in_Entry.AS_CRT_DT, 'dd/mm/yyyy'), '') IN_AS_CRT_DT
         , in_Entry.AS_COM_DT IN_AS_COM_DT
         , in_Entry.IN_AS_STUS
         , on_Entry.AS_NO AS ON_AS_NO
         , on_Entry.STK_DESC AS ON_STK_DESC
         , on_Entry.IN_HUSE_REPAIR_SERIAL_NO AS ON_IN_HUSE_REPAIR_SERIAL_NO
         , on_Entry.AS_STUS AS  ON_AS_STUS
         , on_Entry.MEM_CODE AS ON_MEM_CODE
         , on_Entry.ON_COM_DT AS ON_COM_DT
    FROM  as_Entry ,
          in_Entry ,
          on_Entry
    WHERE 1=1
      AND as_Entry.tKy = in_Entry.tKy(+)
      AND in_Entry.tKy = on_Entry.tKy(+)
      AND TO_CHAR(as_Entry.AS_ID)  = in_Entry.REF_REQST(+)
      AND TO_CHAR(in_Entry.AS_RESULT_ID) = on_Entry.REF_REQST(+)

      <if test="openServiceNo != null and openServiceNo  != '' " >
        AND as_Entry.AS_NO = #{openServiceNo}
      </if>
      <if test="openCt != null and openCt  != '' " >
        AND UPPER(as_Entry.MEM_CODE) =UPPER(#{openCt})
      </if>
      <if test="custProduct != null and custProduct  != '' " >
        AND as_Entry.STK_CODE =#{custProduct}
      </if>
      <if test="ordNo != null and ordNo  != '' " >
        AND as_Entry.SALES_ORD_NO = #{ordNo}
      </if>
      <if test="ihrServiceNo != null and ihrServiceNo  != '' " >
        AND in_Entry.AS_NO = #{ihrServiceNo}
      </if>
      <if test="rctCode != null and rctCode  != '' " >
        AND UPPER(in_Entry.MEM_CODE) = UPPER(#{rctCode})
      </if>
      <if test="loanProduct != null and loanProduct  != '' " >
        AND UPPER(as_Entry.IN_HUSE_REPAIR_PRODUCT_CODE) = UPPER(#{loanProduct})
      </if>
      <if test="custId != null and custId  != '' " >
        AND as_Entry.CUST_ID = #{custId}
      </if>
      <if test="closeCtCode != null and closeCtCode  != '' " >
        AND UPPER(on_Entry.MEM_CODE) = UPPER(#{closeCtCode})
      </if>
      <if test="branchDSC != null and branchDSC  != '' " >
        AND as_Entry.AS_BRNCH_ID = #{branchDSC}
      </if>
      <if test="promisedDate != null and promisedDate  != '' " >
        AND TO_CHAR(as_Entry.AS_APPNT_DT,'dd/mm/yyyy') = TO_CHAR(to_date( #{promisedDate} ,'dd/mm/yyyy') ,'dd/mm/yyyy')
      </if>
      <if test="custSerialNo != null and custSerialNo  != '' " >
        AND as_Entry.SERIAL_NO = #{custSerialNo}
      </if>
      <if test="loanSerialNo != null and loanSerialNo  != '' " >
        AND as_Entry.IN_HUSE_REPAIR_SERIAL_NO = #{loanSerialNo}
      </if>
      <if test="ihrStatus != null and ihrStatus  != '' " >
        AND in_Entry.AS_STUS_ID = #{ihrStatus}
      </if>
      <if test="closeStatus != null and closeStatus  != '' " >
        AND on_Entry.AS_STUS = #{closeStatus}
      </if>

 </select>

  <select id="selInhouseList_BACKUP" parameterType="Map" resultType="egovMap">
    SELECT as_Entry.AS_ID,
           as_Entry.AS_NO,
           as_Entry.CUST_ID,
           as_Entry.AS_MEM_ID,
           as_Entry.AS_STUS_ID,
           DECODE (as_Entry.AS_STUS_ID, '1', 'ACT', '4', 'COM', '21', 'FAI', '10', 'CAN') AS AS_STUS,
           as_Entry.AS_SO_ID,
           as_Entry.AS_RESULT_NO,
           as_Entry.AS_ENTRY_ID,
           as_Entry.AS_CT_ID,
           as_Entry.MEM_CODE,
           as_Entry.AS_BRNCH_ID,
           as_Entry.CODE AS_BRNCH_DESC,
           as_Entry.AS_DF_DESC,
           as_Entry.STK_CODE,
           as_Entry.STK_DESC,
           as_Entry.SALES_ORD_NO,
           as_Entry.SALES_ORD_ID,
           In_Entry.AS_ID AS IN_AS_ID,
           In_Entry.AS_NO AS IN_AS_NO,
           In_Entry.AS_MEM_ID AS IN_AS_MEM_ID,
           In_Entry.AS_STUS_ID AS IN_AS_STUS_ID,
           DECODE (In_Entry.AS_STUS_ID, '1', 'ACT', '4', 'COM', '21', 'FAI', '10', 'CAN') AS IN_AS_STUS,
           In_Entry.AS_SO_ID AS IN_AS_SO_ID,
           In_Entry.AS_RESULT_NO AS IN_AS_RESULT_NO,
           In_Entry.AS_RESULT_ID AS IN_AS_RESULT_ID,
           In_Entry.AS_ENTRY_ID AS IN_AS_ENTRY_ID,
           In_Entry.AS_CT_ID AS IN_AS_CT_ID,
           In_Entry.MEM_CODE AS IN_MEM_CODE,
           In_Entry.AS_BRNCH_ID AS IN_AS_BRNCH_ID,
           In_Entry.CODE AS IN_AS_BRNCH_DESC,
           In_Entry.AS_DF_DESC AS IN_AS_DF_DESC,
           In_Entry.STK_CODE AS IN_STK_CODE,
           In_Entry.STK_DESC AS IN_STK_DESC,
           In_Entry.IN_HUSE_REPAIR_PROMIS_DT,
           In_Entry.APPNT_DT   AS IN_APPNT_DT,
           In_Entry.AS_CRT_DT  AS IN_AS_CRT_DT,
           In_Entry.AS_COM_DT  AS IN_AS_COM_DT,
           On_Entry.AS_NO      AS ON_AS_NO,
           On_Entry.STK_DESC   AS ON_STK_DESC,
           On_Entry.IN_HUSE_REPAIR_SERIAL_NO   AS ON_IN_HUSE_REPAIR_SERIAL_NO,
           On_Entry.AS_STUS   AS  ON_AS_STUS
    FROM (SELECT 1 tKy,
                 A.AS_ID,
                 A.AS_NO,
                 A.AS_MEM_ID,
                 A.AS_STUS_ID,
                 B.AS_SO_ID,
                 B.AS_RESULT_NO,
                 B.AS_ENTRY_ID,
                 B.AS_CT_ID,
                 B.AS_BRNCH_ID,
                 F.CODE,
                 E.CODE AS AS_DF_DESC,
                 G.STK_CODE,
                 G.STK_DESC,
                 H.MEM_CODE,
                 C.SALES_ORD_NO,
                 C.SALES_ORD_ID,
                 C.CUST_ID
          FROM SVC0001D A,
               SVC0004D B,
               SAL0001D C,
               SAL0002D D,
               SYS0026M G,
               SYS0032M E,
               SYS0005M F,
               ORG0001D H
          WHERE 1 = 1
            AND A.AS_ID = B.AS_ENTRY_ID
            AND A.AS_SO_ID = C.SALES_ORD_ID
            AND C.SALES_ORD_ID = D.SALES_ORD_ID
            AND C.SALES_ORD_ID = D.SALES_ORD_ID
            AND D.ITM_STK_ID = G.STK_ID
            AND B.AS_DEFECT_TYPE_ID(+) = E.RESN_ID
            AND A.AS_BRNCH_ID = F.BRNCH_ID(+)
            AND B.AS_CT_ID = H.MEM_ID
            AND B.AS_SLUTN_RESN_ID = '454'
            AND A.AS_NO = #{asNo}
    ) as_Entry,
    (SELECT 1 tKy,
            A.AS_ID,
            A.AS_NO,
            A.AS_MEM_ID,
            A.AS_STUS_ID,
            B.AS_SO_ID,
            B.AS_RESULT_NO,
            B.AS_RESULT_ID,
            B.AS_ENTRY_ID,
            B.AS_CT_ID,
            B.AS_BRNCH_ID,
            B.IN_HUSE_REPAIR_PROMIS_DT,
            B.APPNT_DT,
            F.CODE,
            E.CODE AS AS_DF_DESC,
            G.STK_CODE,
            G.STK_DESC,
            H.MEM_CODE,
            A.AS_CRT_DT,
            CASE WHEN ( B.AS_RESULT_STUS_ID  ='4' )
                 THEN TO_CHAR( B.AS_RESULT_UPD_DT,'dd/mm/yyyy')
                 ELSE '-'
            END AS AS_COM_DT
     FROM SVC0001D A,
          SVC0004D B,
          SAL0001D C,
          SAL0002D D,
          SYS0026M G,
          SYS0032M E,
          SYS0005M F,
          ORG0001D H
     WHERE A.AS_ID = B.AS_ENTRY_ID
       AND A.AS_SO_ID = C.SALES_ORD_ID
       AND C.SALES_ORD_ID = D.SALES_ORD_ID
       AND C.SALES_ORD_ID = D.SALES_ORD_ID
       AND D.ITM_STK_ID = G.STK_ID
       AND B.AS_DEFECT_TYPE_ID(+) = E.RESN_ID
       AND A.AS_BRNCH_ID = F.BRNCH_ID
       AND B.AS_CT_ID = H.MEM_ID
       AND A.REF_REQST IN (SELECT AS_ID
                           FROM SVC0001D A,
                                SVC0004D B
                           WHERE AS_NO = #{asNo}
                             AND A.AS_ID = B.AS_ENTRY_ID)
                             AND A.AS_TYPE_ID = '2713'
    ) In_Entry,
    (SELECT 1 tKy,
            A.AS_NO,
            (SELECT STK_DESC FROM SYS0026M X WHERE X.STK_CODE= B.IN_HUSE_REPAIR_PRODUCT_CODE ) STK_DESC ,
            B.IN_HUSE_REPAIR_SERIAL_NO,
            DECODE (A.AS_STUS_ID, '1','ACT', '4','COM', '21','FAI', '10', 'CAN') AS AS_STUS
     FROM SVC0001D  A,
          SVC0004D B
     WHERE 1=1
       AND REF_REQST IN (SELECT AS_RESULT_ID
                         FROM SVC0001D A,
                              SVC0004D B
                         WHERE A.AS_ID =B.AS_ENTRY_ID
                          AND REF_REQST IN ( SELECT AS_ID
                                            FROM SVC0001D
                                            WHERE AS_NO = #{asNo} )
                         )
       AND A.AS_ID =B.AS_ENTRY_ID
    ) On_Entry
    WHERE 1=1
      AND as_Entry.tKy = In_Entry.tKy(+)
      AND In_Entry.tKy = On_Entry.tKy(+)
  </select>

  <select id="selInhouseDetailList" parameterType="Map" resultType="egovMap">
    SELECT C.CUST_ID,
           C.SALES_ORD_NO,
           S.AS_ID,
           S.AS_NO,
           S.AS_SO_ID,
           S.AS_MEM_ID,
           S.AS_MEM_GRP,
           S.AS_REQST_DT,
           S.AS_REQST_TM,
           S.AS_APPNT_DT,
           S.AS_APPNT_TM,
           S.AS_BRNCH_ID,
           S.AS_MALFUNC_ID,
           S.AS_MALFUNC_RESN_ID,
           S.AS_REM_REQSTER,
           S.AS_REM_REQSTER_CNTC,
           S.AS_CALLLOG_ID,
           S.AS_STUS_ID,
           S.AS_SMS,
           S.AS_CRT_USER_ID,
           S.AS_CRT_DT,
           S.AS_UPD_USER_ID,
           S.AS_UPD_DT,
           S.AS_ENTRY_IS_SYNCH,
           S.AS_ENTRY_IS_EDIT,
           S.AS_TYPE_ID,
           S.AS_REQSTER_TYPE_ID,
           S.AS_IS_BS_WITHIN_30DAYS,
           S.AS_ALLOW_COMM,
           S.AS_PREV_MEM_ID,
           S.AS_REM_ADD_CNTC,
           S.AS_REM_REQSTER_CNTC_SMS,
           S.AS_REM_ADD_CNTC_SMS,
           S.AS_SESION_CODE,
           S.CALL_MEM,
           S.REF_REQST,
           S.PREV_COMP_SVC,
           S.NEXT_COMP_SVC,
           S.SIGN_DT_TIME,
           S.COMP_DT_SEQ,
           S.DISTANCE,
           S.FIRST,
           S.LAST,
           S.HOME,
           S.AS_MOBILE_REQST_ID,
           B.AS_RESULT_ID,
           B.AS_RESULT_NO,
           B.AS_ENTRY_ID,
           B.AS_SO_ID,
           B.AS_CT_ID,
           B.AS_SETL_DT,
           B.AS_SETL_TM,
           B.AS_RESULT_STUS_ID,
           B.AS_FAIL_RESN_ID,
           B.AS_REN_COLCT_ID,
           B.AS_CMMS,
           B.AS_BRNCH_ID,
           B.AS_WH_ID,
           B.AS_RESULT_REM,
           B.AS_RESULT_CRT_DT,
           B.AS_RESULT_CRT_USER_ID,
           B.AS_MALFUNC_ID,
           B.AS_MALFUNC_RESN_ID,
           B.AS_DEFECT_TYPE_ID,
           B.AS_DEFECT_GRP_ID,
           B.AS_DEFECT_ID,
           B.AS_DEFECT_PART_GRP_ID,
           B.AS_DEFECT_PART_ID,
           B.AS_DEFECT_DTL_RESN_ID,
           B.AS_SLUTN_RESN_ID,
           B.AS_WORKMNSH,
           B.AS_FILTER_AMT,
           B.AS_ACSRS_AMT,
           B.AS_TOT_AMT,
           B.AS_RESULT_IS_SYNCH,
           B.AS_RCALL,
           B.AS_RESULT_STOCK_USE,
           B.AS_RESULT_TYPE_ID,
           B.AS_RESULT_IS_CURR,
           B.AS_RESULT_MTCH_ID,
           B.AS_RESULT_NO_ERR,
           B.AS_RESULT_UPD_DT,
           B.AS_RESULT_UPD_USER_ID,
           B.AS_ENTRY_POINT,
           B.AS_WORKMNSH_TAX_CODE_ID,
           B.AS_WORKMNSH_TXS,
           B.AS_RESULT_MOBILE_ID,
           B.APPNT_DT,
           B.APPNT_TM,
           B.IN_HUSE_REPAIR_REM,
           B.IN_HUSE_REPAIR_REPLACE_YN,
           B.IN_HUSE_REPAIR_PROMIS_DT,
           B.IN_HUSE_REPAIR_GRP_CODE,
           B.IN_HUSE_REPAIR_PRODUCT_CODE,
           B.IN_HUSE_REPAIR_SERIAL_NO,
           B.RESULT_CUST_NAME,
           B.RESULT_MOBILE_NO,
           B.RESULT_REP_EMAIL_NO,
           B.RESULT_ACEPT_NAME,
           B.SGN_DT, B.TRNSC_ID
    FROM SVC0001D S ,
         SVC0004D B ,
         SAL0001D C
    WHERE S.AS_ID =  B.AS_ENTRY_ID(+)
      AND S.AS_SO_ID = C.SALES_ORD_ID
      AND S.AS_ID = #{AS_ID}
  </select>

  <resultMap id="callasLogClobMap" type="egovMap">
    <result property="callRem" column="CALL_REM" jdbcType="CLOB" javaType="string"/>
  </resultMap>

  <select id="getCallLog" parameterType="Map" resultMap="callasLogClobMap">
    SELECT S.CALL_RESULT_ID ,
           S.CALL_REM ,
           S.CALL_CRT_DT ,
           S.C2
    FROM ( SELECT E.CALL_RESULT_ID ,
                  E.CALL_REM ,
                  E.CALL_CRT_DT ,
                  CASE WHEN ( Extent4.USER_ID IS NOT NULL )
                         THEN Extent4.USER_NAME
                         ELSE '-'
                  END C2
                  FROM SVC0001D D
                  JOIN CCR0006D C ON ( D.AS_CALLLOG_ID = C.CALL_ENTRY_ID )
                                 AND ( #{TYPE_ID} = C.TYPE_ID )
                                 AND ( D.AS_ID = C.DOC_ID )
                  JOIN CCR0007D E   ON C.CALL_ENTRY_ID = E.CALL_ENTRY_ID
                  LEFT JOIN SYS0047M Extent4   ON E.CALL_CRT_USER_ID = Extent4.USER_ID
                  WHERE  D.AS_ID = #{AS_ID}
    ) S
  </select>

  <!-- <select id="getProductMasters" parameterType="Map" resultType="egovMap">
    SELECT A.CODE_ID AS CODE_ID
         , A.CODE_NAME AS CODE_NAME
    FROM SYS0013M A
    WHERE (CODE_ID IN (SELECT DISTINCT STK_CTGRY_ID
                       FROM SYS0026M B
                       WHERE B.STUS_CODE_ID = 1) )
      AND A.DISAB = 0
    ORDER BY A.CODE_ID
  </select>  -->

  <select id="getProductMasters" parameterType="Map" resultType="egovMap">
    SELECT A.CODE AS CODE_ID
         , A.CODE_NAME AS CODE_NAME
    FROM SYS0094M A
    WHERE A.IND = 'INH_PRDGRP'
      AND A.DISB = 0
    ORDER BY A.CODE
  </select>

  <select id="getProductDetails" parameterType="Map" resultType="egovMap">
    SELECT STK.STK_ID AS STOCK_ID
          ,STK.STK_CODE AS CODE_ID
          ,STK.STK_DESC AS CODE_NAME
          ,STK.STK_CTGRY_ID AS STOCK_CATEGORY_ID
    FROM SYS0026M STK
    WHERE STK.STK_TYPE_ID = 61
      AND STK.STUS_CODE_ID = 1
      AND STK.STK_CTGRY_ID  =#{STK_CTGRY_ID}
    ORDER BY STK.STK_CTGRY_ID, STK.STK_ID
  </select>

  <select id="isAbStck" parameterType="Map" resultType="egovMap">
    <![CDATA[
      SELECT COUNT(PARTS_SERIAL_NO )  AS IS_STK
      FROM( SELECT L56.LOC_ID,
                   L56.STK_CODE PARTS_CODE,
                   L56.STK_DESC,
                   L56.STK_TYPE_ID PARTS_TYPE,
                   L56.STK_CTGRY_ID,
                   QTY STOCK_QTY,
                   WH_LOC_DESC,
                   L63.SERIAL_NO PARTS_SERIAL_NO,
                   T1.REF_DOC_NO SERVICE_NO,
                   QTY - NVL (L75.BOOKING_QTY, 0) STOCK_QTY,
                   S26.STK_ID PARTS_ID,
                   (SELECT WH_LOC_ID
                    FROM SYS0028M
                    WHERE   WH_LOC_CODE = S28.RDC_CODE) RDC_CODE
            FROM LOG0056M L56,
                 SYS0028M S28,
                 LOG0063D L63,
                 SYS0026M S26,
                 (SELECT L61.SERIAL_NO,
                         L61.DELVRY_NO,
                         L47.REQST_NO,
                         L47.REF_DOC_NO
                  FROM LOG0061D L61,
                       LOG0055D L55,
                       LOG0047M L47
                  WHERE L61.DELVRY_NO = L55.DELVRY_NO
                    AND L55.REQST_NO = L47.REQST_NO) T1,
                 (SELECT L75.LOC_ID,
                         L75.ITM_CODE,
                         SUM (REQST_QTY) - SUM (NVL (MOV_QTY, 0)) AS BOOKING_QTY
                  FROM LOG0075M L75
                  WHERE NVL (L75.FINAL_CMPLT, 'N') <> 'Y'
                    AND L75.REQST_NO IN (SELECT REQST_NO
                                         FROM LOG0047M
                                         WHERE NVL (REQST_DEL, 'N') <> 'Y')
                  GROUP BY L75.LOC_ID, L75.ITM_CODE) L75
             WHERE 1 = 1
               AND L63.SERIAL_NO = T1.SERIAL_NO(+)
               AND L56.STK_CODE = L63.MATNR(+)
               AND L56.LOC_ID = L63.LOC_ID(+)
               AND L56.STK_CODE = L75.ITM_CODE(+)
               AND L56.LOC_ID = L75.LOC_ID(+)
               AND L56.STK_CODE = S26.STK_CODE(+)
               AND L56.LOC_ID = S28.WH_LOC_ID
               AND S28.WH_LOC_ID = (SELECT WH_LOC_ID
                                    FROM SYS0028M
                                    WHERE UPPER( WH_LOC_CODE) = UPPER(#{CT_CODE}))
            GROUP BY L56.LOC_ID,
                     L56.STK_CODE,
                      L56.STK_DESC,
                     L56.STK_TYPE_ID,
                     L56.STK_CTGRY_ID,
                     QTY,
                     WH_LOC_DESC,
                     L63.SERIAL_NO,
                     T1.REF_DOC_NO,
                     QTY - NVL (L75.BOOKING_QTY, 0),
                     S26.STK_ID,
                     S28.RDC_CODE
            )S
            WHERE 1=1
            AND UPPER(S.PARTS_SERIAL_NO) = UPPER(#{PARTS_SERIAL_NO})
    ]]>
   </select>

  <select id="getASRulstSVC0004DInfo" parameterType="Map" resultType="egovMap">
    SELECT S.AS_RESULT_ID ,
           S.AS_RESULT_NO ,
           S.AS_RESULT_STUS_ID ,
           S.CODE ,
           TO_CHAR(AS_SETL_DT,'dd/mm/yyyy') AS_SETL_DT ,
           S.AS_SETL_TM ,
           CASE WHEN ( S.AS_FAIL_RESN_ID IS NOT NULL )
                  THEN S.AS_FAIL_RESN_ID
                  ELSE 0
           END C2 ,
           CASE WHEN ( S.RESN_ID IS NOT NULL )
                  THEN S.CODE1
                  ELSE ' '
           END C3 ,
           CASE WHEN ( S.RESN_ID IS NOT NULL )
                  THEN S.RESN_DESC
                  ELSE ' '
           END C4 ,
           S.AS_BRNCH_ID AS_BRNCH_ID ,
           CASE WHEN ( S.BRNCH_ID IS NOT NULL )
                  THEN S.CODE2
                  ELSE ' '
           END C5 ,
           CASE WHEN ( S.BRNCH_ID IS NOT NULL )
                  THEN S.NAME
                  ELSE ' '
           END C6 ,
           S.AS_MALFUNC_ID AS_MALFUNC_ID ,
           CASE WHEN ( S.REASONID1 IS NOT NULL )
                  THEN S.CODE3
                  ELSE ' '
           END C7 ,
           CASE WHEN ( S.REASONID1 IS NOT NULL )
                  THEN S.REASONDESC1
                  ELSE ' '
           END C8 ,
           S.AS_MALFUNC_RESN_ID AS_MALFUNC_RESN_ID ,
           CASE WHEN ( S.REASONID2 IS NOT NULL )
                  THEN S.CODE4
                  ELSE ' '
           END C9 ,
           CASE WHEN ( S.REASONID2 IS NOT NULL )
                  THEN S.REASONDESC2
                  ELSE ' '
           END C10 ,
           CASE WHEN ( S.AS_CT_ID IS NOT NULL )
                  THEN S.AS_CT_ID
                  ELSE 0
           END C11 ,
           CASE WHEN ( S.MEM_ID IS NOT NULL )
                  THEN S.MEM_CODE
                  ELSE ' '
           END C12 ,
           CASE WHEN ( S.MEM_ID IS NOT NULL )
                  THEN S.NAME1
                  ELSE ' '
           END C13 ,
           S.AS_WH_ID AS_WH_ID ,
           CASE WHEN ( S.WH_LOC_ID IS NOT NULL )
                  THEN S.WH_LOC_CODE
                  ELSE ' '
           END C14 ,
           CASE WHEN ( S.WH_LOC_ID IS NOT NULL )
                  THEN S.WH_LOC_DESC
                  ELSE ' '
           END C15 ,
           S.AS_RESULT_REM AS_RESULT_REM ,
           S.AS_DEFECT_TYPE_ID AS_DEFECT_TYPE_ID ,
           CASE WHEN ( S.REASONID3 IS NOT NULL )
                  THEN S.CODE5
                  ELSE ' '
           END C16 ,
           CASE WHEN ( S.REASONID3 IS NOT NULL )
                  THEN S.REASONDESC3
                  ELSE ' '
           END C17 ,
           S.AS_DEFECT_ID AS_DEFECT_ID ,
           CASE WHEN ( S.REASONID4 IS NOT NULL )
                THEN S.CODE6
                ELSE ' '
           END C18 ,
           CASE WHEN ( S.REASONID4 IS NOT NULL )
                  THEN S.REASONDESC4
                  ELSE ' '
           END C19 ,
           S.AS_DEFECT_PART_ID
           AS_DEFECT_PART_ID ,
           CASE WHEN ( S.REASONID5 IS NOT NULL )
                  THEN S.CODE7
                  ELSE ' '
           END C20 ,
           CASE WHEN ( S.REASONID5 IS NOT NULL )
                  THEN S.REASONDESC5
                  ELSE ' '
           END C21 ,
           S.AS_DEFECT_DTL_RESN_ID
           AS_DEFECT_DTL_RESN_ID ,
           CASE WHEN ( S.REASONID6 IS NOT NULL )
                  THEN S.CODE8
                  ELSE ' '
           END C22 ,
           CASE WHEN ( S.REASONID6 IS NOT NULL )
                  THEN S.REASONDESC6
                  ELSE ' '
           END C23 ,
           CASE WHEN ( S.AS_SLUTN_RESN_ID IS NOT NULL )
                  THEN S.AS_SLUTN_RESN_ID
                  ELSE 0
           END C24 ,
           CASE WHEN ( S.REASONID7 IS NOT NULL )
                THEN S.CODE9
                ELSE ' '
           END C25 ,
           CASE WHEN ( S.REASONID7 IS NOT NULL )
                  THEN S.REASONDESC7
                  ELSE ' '
           END C26 ,
           S.AS_TOT_AMT ,
           CASE WHEN ( S.AS_CMMS IS NOT NULL )
                  THEN S.AS_CMMS
                  ELSE UTILS.CONVERT_TO_NUMBER(0,1,0)
           END C27 ,
           S.AS_WORKMNSH AS_WORKMNSH ,
           S.AS_FILTER_AMT AS_FILTER_AMT ,
           S.AS_RESULT_CRT_USER_ID
           AS_RESULT_CRT_USER_ID ,
           CASE WHEN ( S.USER_ID IS NOT NULL )
                  THEN S.USER_NAME
                  ELSE ' '
           END C28 ,
           TO_CHAR(S.AS_RESULT_CRT_DT,'dd/mm/yyyy') AS_RESULT_CRT_DT ,
           S.IN_HUSE_REPAIR_REM,
           S.IN_HUSE_REPAIR_REPLACE_YN,
           TO_CHAR(S.IN_HUSE_REPAIR_PROMIS_DT,'dd/mm/yyyy')
           IN_HUSE_REPAIR_PROMIS_DT ,
           S.IN_HUSE_REPAIR_GRP_CODE,
           S.IN_HUSE_REPAIR_PRODUCT_CODE,
           S.IN_HUSE_REPAIR_SERIAL_NO,
           TO_CHAR((SELECT AS_APPNT_DT FROM SVC0001D X WHERE X.AS_ID =S.AS_ENTRY_ID ), 'dd/mm/yyyy') APPNT_DT,
           CASE WHEN ( S.AS_RESULT_STUS_ID ='4' )
                  THEN TO_CHAR(S.AS_RESULT_UPD_DT,'dd/mm/yyyy')
                  ELSE '-'
           END AS AS_RESULT_DT
    FROM ( SELECT E.AS_RESULT_ID AS_RESULT_ID ,
                  E.AS_RESULT_NO
                  AS_RESULT_NO ,
                  E.AS_ENTRY_ID ,
                  E.AS_CT_ID AS_CT_ID ,
                  E.AS_SETL_DT
                  AS_SETL_DT ,
                  E.AS_SETL_TM AS_SETL_TM ,
                  E.AS_RESULT_STUS_ID
                  AS_RESULT_STUS_ID ,
                  E.AS_FAIL_RESN_ID AS_FAIL_RESN_ID ,
                  E.AS_CMMS
                  AS_CMMS ,
                  E.AS_BRNCH_ID AS_BRNCH_ID ,
                  E.AS_WH_ID AS_WH_ID ,
                  E.AS_RESULT_REM AS_RESULT_REM ,
                  E.AS_RESULT_CRT_DT AS_RESULT_CRT_DT ,
                  E.AS_RESULT_CRT_USER_ID AS_RESULT_CRT_USER_ID ,
                  E.AS_MALFUNC_ID
                  AS_MALFUNC_ID ,
                  E.AS_MALFUNC_RESN_ID AS_MALFUNC_RESN_ID ,
                  E.AS_DEFECT_TYPE_ID AS_DEFECT_TYPE_ID ,
                  E.AS_DEFECT_ID AS_DEFECT_ID ,
                  E.AS_DEFECT_PART_ID AS_DEFECT_PART_ID ,
                  E.AS_DEFECT_DTL_RESN_ID
                  AS_DEFECT_DTL_RESN_ID ,
                  E.AS_SLUTN_RESN_ID AS_SLUTN_RESN_ID ,
                  E.AS_WORKMNSH AS_WORKMNSH ,
                  E.AS_FILTER_AMT AS_FILTER_AMT ,
                  E.AS_TOT_AMT AS_TOT_AMT ,
                  Extent2.CODE CODE ,
                  Extent3.RESN_ID RESN_ID ,
                  Extent3.CODE CODE1 ,
                  Extent3.RESN_DESC RESN_DESC ,
                  Extent4.BRNCH_ID
                  BRNCH_ID ,
                  Extent4.CODE CODE2 ,
                  Extent4.NAME NAME ,
                  Extent5.RESN_ID
                  REASONID1 ,
                  Extent5.CODE CODE3 ,
                  Extent5.RESN_DESC REASONDESC1 ,
                  Extent6.RESN_ID REASONID2 ,
                  Extent6.CODE CODE4 ,
                  Extent6.RESN_DESC
                  REASONDESC2 ,
                  Extent7.MEM_ID MEM_ID ,
                  Extent7.MEM_CODE MEM_CODE ,
                  Extent7.NAME NAME1 ,
                  Extent8.WH_LOC_ID WH_LOC_ID ,
                  Extent8.WH_LOC_CODE WH_LOC_CODE ,
                  Extent8.WH_LOC_DESC WH_LOC_DESC ,
                  Extent9.RESN_ID REASONID3 ,
                  Extent9.CODE CODE5 ,
                  Extent9.RESN_DESC
                  REASONDESC3 ,
                  E0.RESN_ID REASONID4 ,
                  E0.CODE CODE6 ,
                  E0.RESN_DESC
                  REASONDESC4 ,
                  E1.RESN_ID REASONID5 ,
                  E1.CODE CODE7 ,
                  E1.RESN_DESC
                  REASONDESC5 ,
                  E2.RESN_ID REASONID6 ,
                  E2.CODE CODE8 ,
                  E2.RESN_DESC
                  REASONDESC6 ,
                  E3.RESN_ID REASONID7 ,
                  E3.CODE CODE9 ,
                  E3.RESN_DESC
                  REASONDESC7 ,
                  E4.USER_ID USER_ID ,
                  E4.USER_NAME USER_NAME ,
                  E.IN_HUSE_REPAIR_REM,
                  E.IN_HUSE_REPAIR_REPLACE_YN,
                  E.IN_HUSE_REPAIR_PROMIS_DT,
                  E.IN_HUSE_REPAIR_GRP_CODE,
                  E.IN_HUSE_REPAIR_PRODUCT_CODE,
                  E.IN_HUSE_REPAIR_SERIAL_NO,
                  E.APPNT_DT,
                  E.AS_RESULT_UPD_DT
    FROM SVC0004D E JOIN SYS0038M Extent2 ON Extent2.STUS_CODE_ID = E.AS_RESULT_STUS_ID
    LEFT JOIN SYS0032M Extent3 ON Extent3.RESN_ID = E.AS_FAIL_RESN_ID
    LEFT JOIN SYS0005M Extent4 ON Extent4.BRNCH_ID = E.AS_BRNCH_ID
    LEFT JOIN SYS0032M Extent5 ON Extent5.RESN_ID = E.AS_MALFUNC_ID
    LEFT JOIN SYS0032M Extent6 ON Extent6.RESN_ID = E.AS_MALFUNC_RESN_ID
    LEFT JOIN ORG0001D Extent7 ON Extent7.MEM_ID = E.AS_CT_ID
    LEFT JOIN SYS0028M Extent8 ON Extent8.WH_LOC_ID = E.AS_WH_ID
    LEFT JOIN SYS0032M Extent9 ON Extent9.RESN_ID = E.AS_DEFECT_TYPE_ID
    LEFT JOIN SYS0032M E0 ON E0.RESN_ID = E.AS_DEFECT_ID
    LEFT JOIN SYS0032M E1 ON E1.RESN_ID = E.AS_DEFECT_PART_ID
    LEFT JOIN SYS0032M E2 ON E2.RESN_ID = E.AS_DEFECT_DTL_RESN_ID
    LEFT JOIN SYS0032M E3 ON E3.RESN_ID = E.AS_SLUTN_RESN_ID
    LEFT JOIN SYS0047M E4 ON E4.USER_ID = E.AS_RESULT_CRT_USER_ID
    WHERE E.AS_RESULT_ID = NVL( #{REF_REQST} , (SELECT AS_RESULT_ID
                                                FROM SVC0004D
                                                WHERE AS_RESULT_NO = #{AS_RESULT_NO}) )
    AND ROWNUM <![CDATA[<= ]]> 1
  ) S
  </select>
</mapper>