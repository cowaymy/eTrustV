<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
    <mapper
     namespace="com.coway.trust.biz.services.installation.impl.InstallationResultListMapper">
    
    
    <select id="selectApplicationType" parameterType="Map" resultType="egovMap">
    <![CDATA[
       SELECT Project1.CODE_ID CODE_ID  ,
	       Project1.CODE_MASTER_ID CODE_MASTER_ID  ,
	       Project1.CODE CODE  ,
	       Project1.CODE_NAME CODE_NAME  ,
	       Project1.CODE_DESC CODE_DESC  ,
	       Project1.DISAB DISAB  ,
	       Project1.CRT_DT CRT_DT  ,
	       Project1.CRT_USER_ID CRT_USER_ID  ,
	       Project1.UPD_DT UPD_DT  ,
	       Project1.UPD_USER_ID UPD_USER_ID  ,
	       Project1.OLD_CODE_ID OLD_CODE_ID  
	  FROM ( SELECT Extent1.CODE_ID CODE_ID  ,
	                Extent1.CODE_MASTER_ID CODE_MASTER_ID  ,
	                Extent1.CODE CODE  ,
	                Extent1.CODE_NAME CODE_NAME  ,
	                Extent1.CODE_DESC CODE_DESC  ,
	                Extent1.DISAB DISAB  ,
	                Extent1.CRT_DT CRT_DT  ,
	                Extent1.CRT_USER_ID CRT_USER_ID  ,
	                Extent1.UPD_DT UPD_DT  ,
	                Extent1.UPD_USER_ID UPD_USER_ID  ,
	                Extent1.OLD_CODE_ID OLD_CODE_ID  
	         FROM SYS0013M Extent1
	          WHERE  Extent1.CODE_MASTER_ID = 10 ) Project1
	  ORDER BY Project1.CODE_ID ASC
          ]]>
    </select>
    
    <select id="selectInstallStatus" parameterType="Map" resultType="egovMap">
    <![CDATA[
       SELECT Extent1.STUS_CODE_ID CODE_ID  ,
	       Extent1.CODE CODE  ,
	       Extent1.NAME CODE_NAME  
	  FROM SYS0038M Extent1
	 WHERE  Extent1.STUS_CODE_ID IN ( 1,4,21 )
          ]]>
    </select>
    <select id="installationResultList" parameterType="Map" resultType="egovMap">
        <![CDATA[
		SELECT * 
		  FROM ( SELECT Project1.INSTALL_ENTRY_ID INSTALL_ENTRY_ID  ,
		                Project1.C1 C1  ,
		                Project1.C2 C2  ,
		                Project1.INSTALL_ENTRY_NO INSTALL_ENTRY_NO  ,
		                Project1.SALES_ORD_ID SALES_ORD_ID  ,
		                Project1.SALES_ORD_NO SALES_ORD_NO  ,
		                Project1.REF_NO REF_NO  ,
		                Project1.CUST_PO_NO CUST_PO_NO  ,
		                Project1.SALES_DT SALES_DT  ,
		                Project1.C3 C3  ,
		                Project1.STK_DESC STK_DESC  ,
		                Project1.CODE_ID CODE_ID  ,
		                Project1.CODE_NAME CODE_NAME  ,
		                Project1.CALL_ENTRY_ID CALL_ENTRY_ID  ,
		                Project1.CODEID1 CODEID1  ,
		                Project1.CODE1 CODE  ,
		                Project1.STUS_CODE_ID STUS_CODE_ID  ,
		                Project1.CODE CODE1  ,
		                Project1.BRNCH_ID BRNCH_ID  ,
		                Project1.CUST_ID CUST_ID  ,
		                Project1.NAME NAME  ,
		                Project1.NRIC NRIC  ,
		                Project1.C4 C4  ,
		                Project1.C5 C5  ,
		                Project1.C6 C6  
		  FROM ( SELECT Project1.INSTALL_ENTRY_ID INSTALL_ENTRY_ID  ,
		                Project1.INSTALL_ENTRY_NO INSTALL_ENTRY_NO  ,
		                Project1.CALL_ENTRY_ID CALL_ENTRY_ID  ,
		                Project1.SALES_ORD_ID SALES_ORD_ID  ,
		                Project1.SALES_ORD_NO SALES_ORD_NO  ,
		                Project1.REF_NO REF_NO  ,
		                Project1.SALES_DT SALES_DT  ,
		                Project1.CUST_PO_NO CUST_PO_NO  ,
		                Project1.CODE_ID CODE_ID  ,
		                Project1.CODE_NAME CODE_NAME  ,
		                Project1.STK_DESC STK_DESC  ,
		                Project1.CUST_ID CUST_ID  ,
		                Project1.NAME NAME  ,
		                Project1.NRIC NRIC  ,
		                Project1.BRNCH_ID BRNCH_ID  ,
		                Project1.STUS_CODE_ID STUS_CODE_ID  ,
		                Project1.CODE CODE  ,
		                Project1.CODEID1 CODEID1  ,
		                Project1.CODE1 CODE1  ,
		                Project1.C1 C1  ,
		                Project1.C2 C2  ,
		                Project1.C3 C3  ,
		                Project1.C4 C4  ,
		                Project1.C5 C5  ,
		                Project1.C6 C6  ,
		                ROW_NUMBER() OVER ( ORDER BY Project1.INSTALL_ENTRY_ID ASC  ) ROW_NUMBER  
		         FROM ( SELECT Extent1.INSTALL_ENTRY_ID INSTALL_ENTRY_ID  ,
		                       Extent1.INSTALL_ENTRY_NO INSTALL_ENTRY_NO  ,
		                       Extent1.CALL_ENTRY_ID CALL_ENTRY_ID  ,
		                       Extent2.SALES_ORD_ID SALES_ORD_ID  ,
		                       Extent2.SALES_ORD_NO SALES_ORD_NO  ,
		                       Extent2.REF_NO REF_NO  ,
		                       Extent2.SALES_DT SALES_DT  ,
		                       Extent2.CUST_PO_NO CUST_PO_NO  ,
		                       Extent3.CODE_ID CODE_ID  ,
		                       Extent3.CODE_NAME CODE_NAME  ,
		                       Extent5.STK_DESC STK_DESC  ,
		                       Extent6.CUST_ID CUST_ID  ,
		                       Extent6.NAME NAME  ,
		                       Extent6.NRIC NRIC  ,
		                       Extent7.BRNCH_ID BRNCH_ID  ,
		                       Extent8.STUS_CODE_ID STUS_CODE_ID  ,
		                       Extent8.CODE CODE  ,
		                       Extent11.CODE_ID CODEID1  ,
		                       Extent11.CODE CODE1  ,
		                       CASE 
		                            WHEN ( Extent10.DOC_ID IS NOT NULL ) THEN Extent10.DOC_ID
		                       ELSE 0
		                          END C1  ,
		                       CASE 
		                            WHEN ( Extent12.MEM_ID IS NOT NULL ) THEN Extent12.MEM_CODE
		                       ELSE ''
		                          END C2  ,
		                       TO_CHAR(Extent1.INSTALL_DT,'DD-MM-YYYY')  C3  ,
		                       CASE 
		                            WHEN ( Extent9.SIRIM_NO IS NOT NULL ) THEN Extent9.SIRIM_NO
		                       ELSE ''
		                          END C4  ,
		                       CASE 
		                            WHEN ( Extent9.SERIAL_NO IS NOT NULL ) THEN Extent9.SERIAL_NO
		                       ELSE ''
		                          END C5  ,
		                       CASE 
		                          WHEN ( Extent9.INSTALL_DT IS NOT NULL ) THEN Extent9.INSTALL_DT
		                       ELSE to_date('1900-01-01','yyyy-mm-dd')
		                          END C6  
		                FROM SAL0046D Extent1
		                       JOIN SAL0001D Extent2   ON Extent2.SALES_ORD_ID = Extent1.SALES_ORD_ID
		                       JOIN SYS0013M Extent3   ON Extent3.CODE_ID = Extent2.APP_TYPE_ID
		                       JOIN SAL0002D Extent4   ON Extent4.SALES_ORD_ID = Extent2.SALES_ORD_ID
		                       JOIN SYS0026M Extent5   ON Extent5.STK_ID = Extent4.ITM_STK_ID
		                       JOIN SAL0029D Extent6   ON Extent6.CUST_ID = Extent2.CUST_ID
		                       JOIN SAL0045D Extent7   ON Extent7.SALES_ORD_ID = Extent2.SALES_ORD_ID
		                       JOIN SYS0038M Extent8   ON Extent8.STUS_CODE_ID = Extent1.STUS_CODE_ID
		                       LEFT JOIN SAL0047D Extent9   ON Extent9.ENTRY_ID = Extent1.INSTALL_ENTRY_ID
		                       LEFT JOIN CCR0006D Extent10   ON Extent10.CALL_ENTRY_ID = Extent1.CALL_ENTRY_ID
		                       LEFT JOIN SYS0013M Extent11   ON Extent11.CODE_ID = Extent10.TYPE_ID
		                       LEFT JOIN ORG0001D Extent12   ON Extent12.MEM_ID = Extent1.CT_ID
		                 WHERE  1=1 
		                 ]]>
		                 <if test="installStatusList != null and installStatusList != '' ">
                            and Extent8.STUS_CODE_ID IN
                            <foreach item="item" collection="installStatusList" index="index" open="(" separator="," close=")">
		                    #{item}
		                    </foreach>
		                 </if>
		                 <if test="typeList != null and typeList != '' ">
                            AND Extent11.CODE_ID IN 
                            <foreach item="item" collection="typeList" index="index" open="(" separator="," close=")">
                            #{item}
                            </foreach>
                         </if>
                         <if test="appTypeList != null and appTypeList != '' ">
                            AND Extent3.CODE_ID IN 
                            <foreach item="item" collection="appTypeList" index="index" open="(" separator="," close=")">
                            #{item}
                            </foreach>
                         </if>
                         <if test="installNo != null and installNo != ''">
                           AND ( (TO_NUMBER(INSTR(UPPER(Extent1.INSTALL_ENTRY_NO), UPPER(LTRIM(RTRIM(#{installNo})))),99999)) > 0 )  
                         </if>
                         <if test="orderNo != null and orderNo != ''">
                         AND ( (TO_NUMBER(INSTR(UPPER(Extent2.SALES_ORD_NO), UPPER(LTRIM(RTRIM(#{orderNo})))),99999)) > 0 )
                         </if>
                         <if test="orderRefNo != null and orderRefNo != ''">
                         AND Extent2.REF_NO = #{orderRefNo}
                         </if>
                          <if test="poNo != null and poNo != ''">
                         AND ( (TO_NUMBER(INSTR(UPPER(Extent2.CUST_PO_NO), UPPER(LTRIM(RTRIM(#{poNo})))),99999)) > 0 )
                         </if>
                         <if test="ctCode != null and ctCode != ''">
                         AND ((CASE WHEN (Extent12.MEM_ID IS NOT NULL) THEN Extent12.MEM_CODE ELSE '' END) = #{ctCode})
                         </if>
                         <if test="dscCode != null and dscCode != ''">
                        AND Extent7.BRNCH_ID = #{dscCode}
                         </if>
                         <if test="customerId != null and customerId != ''">
                         AND Extent6.CUST_ID = #{customerId}
                         </if>
                         <if test="customerName != null and customerName != ''">
                         and ( (TO_NUMBER(INSTR(LTRIM(RTRIM(UPPER(Extent6.NAME))), UPPER(LTRIM(RTRIM(#{customerName})))),99999)) > 0 )
                         </if>
                          <if test="customerIc != null and customerIc != ''">
                         AND ( (TO_NUMBER(INSTR(LTRIM(RTRIM(UPPER(Extent6.NRIC))), UPPER(LTRIM(RTRIM(#{customerIc})))),99999)) > 0 ) 
                         </if>
                         <if test="sirimNo != null and sirimNo != ''">
                         AND Extent9.SIRIM_NO = #{sirimNo}
                        <!--  AND ( (TO_NUMBER(INSTR(LTRIM(RTRIM(UPPER(CASE  WHEN ( Extent9.SIRIM_NO IS NOT NULL ) THEN Extent9.SIRIM_NO
							ELSE ''
						   END))), UPPER(LTRIM(RTRIM(#{sirimNo})))),99999)) > 0 )  )-->    
                         </if>
                         <if test="serialNo != null and serialNo != ''">
                         AND Extent9.SERIAL_NO = #{serialNo}
                         <!-- AND ( (TO_NUMBER(INSTR(LTRIM(RTRIM(UPPER(CASE WHEN ( Extent9.SERIAL_NO IS NOT NULL ) THEN Extent9.SERIAL_NO
						ELSE ''
						   END))), UPPER(LTRIM(RTRIM(#{serialNo}))),99999)) > 0 ) ) -->
                         </if>
                         <if test="instalStrlDate != '' and installEndDate == '' ">
                            <![CDATA[ AND  Extent9.INSTALL_DT  >= TO_DATE(#{instalStrlDate}, 'DD/MM/YYYY') ]]>
                         </if>
                          <if test="installEndDate != '' and instalStrlDate == '' ">
                            <![CDATA[  AND Extent9.INSTALL_DT <=  TO_DATE(#{installEndDate}, 'DD/MM/YYYY') ]]>
                         </if>
                          <if test="instalStrlDate != '' and installEndDate != '' ">
                            <![CDATA[  AND Extent9.INSTALL_DT  between TO_DATE(#{instalStrlDate}, 'DD/MM/YYYY') and  TO_DATE(#{installEndDate}, 'DD/MM/YYYY') ]]>
                         </if>
                         <if test="startDate != '' and endDate == '' ">
                            <![CDATA[ AND  Extent1.INSTALL_DT  >= TO_DATE(#{startDate}, 'DD/MM/YYYY') ]]>
                         </if>
                          <if test="endDate != '' and startDate == '' ">
                            <![CDATA[  AND Extent1.INSTALL_DT <=  TO_DATE(#{endDate}, 'DD/MM/YYYY') ]]>
                         </if>
                          <if test="startDate != '' and endDate != '' ">
                            <![CDATA[  AND Extent1.INSTALL_DT  between TO_DATE(#{startDate}, 'DD/MM/YYYY') and  TO_DATE(#{endDate}, 'DD/MM/YYYY') ]]>
                         </if>
                         <if test="orderDate != null and orderDate != ''">
                         AND Extent2.SALES_DT = TO_DATE(#{orderDate},'DD/MM/YYYY')
                         </if>
                         <![CDATA[
		                          ) Project1
		                  ) Project1
		   WHERE  Project1.ROW_NUMBER > 0
		  ORDER BY Project1.INSTALL_ENTRY_ID ASC )
      ]]>
    </select>
    <select id="installationResultList2" parameterType="Map" resultType="egovMap">
    <![CDATA[
	    SELECT * 
			  FROM ( SELECT Project1.INSTALL_ENTRY_ID INSTALL_ENTRY_ID  ,
			                Project1.C1 C1  ,
			                Project1.C2 C2  ,
			                Project1.INSTALL_ENTRY_NO INSTALL_ENTRY_NO  ,
			                Project1.SALES_ORD_ID SALES_ORD_ID  ,
			                Project1.SALES_ORD_NO SALES_ORD_NO  ,
			                Project1.REF_NO REF_NO  ,
			                Project1.CUST_PO_NO CUST_PO_NO  ,
			                Project1.SALES_DT SALES_DT  ,
			                Project1.C3 C3  ,
			                Project1.STK_DESC STK_DESC  ,
			                Project1.CODE_ID CODE_ID  ,
			                Project1.CODE_NAME CODE_NAME  ,
			                Project1.CALL_ENTRY_ID CALL_ENTRY_ID  ,
			                Project1.CODEID1 CODEID1  ,
			                Project1.CODE1 CODE  ,
			                Project1.STUS_CODE_ID STUS_CODE_ID  ,
			                Project1.CODE CODE1  ,
			                Project1.BRNCH_ID BRNCH_ID  ,
			                Project1.CUST_ID CUST_ID  ,
			                Project1.NAME NAME  ,
			                Project1.NRIC NRIC  ,
			                Project1.C4 C4  ,
			                Project1.C5 C5  ,
			                Project1.C6 C6  
			  FROM ( SELECT Project1.INSTALL_ENTRY_ID INSTALL_ENTRY_ID  ,
			                Project1.INSTALL_ENTRY_NO INSTALL_ENTRY_NO  ,
			                Project1.CALL_ENTRY_ID CALL_ENTRY_ID  ,
			                Project1.SALES_ORD_ID SALES_ORD_ID  ,
			                Project1.SALES_ORD_NO SALES_ORD_NO  ,
			                Project1.REF_NO REF_NO  ,
			                Project1.SALES_DT SALES_DT  ,
			                Project1.CUST_PO_NO CUST_PO_NO  ,
			                Project1.CODE_ID CODE_ID  ,
			                Project1.CODE_NAME CODE_NAME  ,
			                Project1.STK_DESC STK_DESC  ,
			                Project1.CUST_ID CUST_ID  ,
			                Project1.NAME NAME  ,
			                Project1.NRIC NRIC  ,
			                Project1.BRNCH_ID BRNCH_ID  ,
			                Project1.STUS_CODE_ID STUS_CODE_ID  ,
			                Project1.CODE CODE  ,
			                Project1.CODEID1 CODEID1  ,
			                Project1.CODE1 CODE1  ,
			                Project1.C1 C1  ,
			                Project1.C2 C2  ,
			                Project1.C3 C3  ,
			                Project1.C4 C4  ,
			                Project1.C5 C5  ,
			                Project1.C6 C6  ,
			                ROW_NUMBER() OVER ( ORDER BY Project1.INSTALL_ENTRY_ID ASC  ) ROW_NUMBER  
			         FROM ( SELECT Filter1.INSTALL_ENTRY_ID INSTALL_ENTRY_ID  ,
			                       Filter1.INSTALL_ENTRY_NO INSTALL_ENTRY_NO  ,
			                       Filter1.CALLENTRYID1 CALL_ENTRY_ID  ,
			                       Filter1.SALESORDERID1 SALES_ORD_ID  ,
			                       Filter1.SALES_ORD_NO SALES_ORD_NO  ,
			                       Filter1.REF_NO REF_NO  ,
			                       Filter1.SALES_DT SALES_DT  ,
			                       Filter1.CUST_PO_NO CUST_PO_NO  ,
			                       Filter1.CODEID2 CODE_ID  ,
			                       Filter1.CODENAME1 CODE_NAME  ,
			                       Filter1.STK_DESC STK_DESC  ,
			                       Filter1.CUSTOMERID1 CUST_ID  ,
			                       Filter1.NAME1 NAME  ,
			                       Filter1.NRIC NRIC  ,
			                       Filter1.BRANCHID1 BRNCH_ID  ,
			                       Filter1.STATUSCODEID1 STUS_CODE_ID  ,
			                       Filter1.CODE2 CODE  ,
			                       Filter1.CODEID3 CODEID1  ,
			                       Filter1.CODE3 CODE1  ,
			                       CASE 
			                            WHEN ( Filter1.DOC_ID IS NOT NULL ) THEN Filter1.DOC_ID
			                       ELSE 0
			                          END C1  ,
			                       CASE 
			                            WHEN ( Extent12.MEM_ID IS NOT NULL ) THEN Extent12.MEM_CODE
			                       ELSE ''
			                          END C2  ,
			                      Filter1.INSTALLDATE1 C3  ,
			                       CASE 
			                            WHEN ( Filter1.SIRIM_NO IS NOT NULL ) THEN Filter1.SIRIM_NO
			                       ELSE ''
			                          END C4  ,
			                       CASE 
			                            WHEN ( Filter1.SERIAL_NO IS NOT NULL ) THEN Filter1.SERIAL_NO
			                       ELSE ''
			                          END C5  ,
			                       CASE 
			                                                       WHEN ( Filter1.INSTALLDATE2 IS NOT NULL ) THEN Filter1.INSTALLDATE2
			                       ELSE to_date('1900-01-01','yyyy-mm-dd')
			                          END C6  
			                FROM ( SELECT Extent1.INSTALL_ENTRY_ID INSTALL_ENTRY_ID  ,
			                              Extent1.INSTALL_ENTRY_NO INSTALL_ENTRY_NO  ,
			                              Extent1.CT_ID CTID1  ,
			                              Extent1.INSTALL_DT INSTALLDATE1  ,
			                              Extent1.CALL_ENTRY_ID CALLENTRYID1  ,
			                              Extent2.SALES_ORD_ID SALESORDERID1  ,
			                              Extent2.SALES_ORD_NO SALES_ORD_NO  ,
			                              Extent2.REF_NO REF_NO  ,
			                              Extent2.SALES_DT SALES_DT  ,
			                              Extent2.CUST_PO_NO CUST_PO_NO  ,
			                              Extent3.CODE_ID CODEID2  ,
			                              Extent3.CODE_NAME CODENAME1  ,
			                              Extent5.STK_DESC STK_DESC  ,
			                              Extent6.CUST_ID CUSTOMERID1  ,
			                              Extent6.NAME NAME1  ,
			                              Extent6.NRIC NRIC  ,
			                              Extent7.BRNCH_ID BRANCHID1  ,
			                              Extent8.STUS_CODE_ID STATUSCODEID1  ,
			                              Extent8.CODE CODE2  ,
			                              Extent9.INSTALL_DT INSTALLDATE2  ,
			                              Extent9.SIRIM_NO SIRIM_NO  ,
			                              Extent9.SERIAL_NO SERIAL_NO  ,
			                              Extent10.DOC_ID DOC_ID  ,
			                              Extent11.CODE_ID CODEID3  ,
			                              Extent11.CODE CODE3  
			                       FROM SAL0046D Extent1
			                              JOIN SAL0001D Extent2   ON Extent2.SALES_ORD_ID = Extent1.SALES_ORD_ID
			                              JOIN SYS0013M Extent3   ON Extent3.CODE_ID = Extent2.APP_TYPE_ID
			                              JOIN SAL0002D Extent4   ON Extent4.SALES_ORD_ID = Extent2.SALES_ORD_ID
			                              JOIN SYS0026M Extent5   ON Extent5.STK_ID = Extent4.ITM_STK_ID
			                              JOIN SAL0029D Extent6   ON Extent6.CUST_ID = Extent2.CUST_ID
			                              JOIN SAL0045D Extent7   ON Extent7.SALES_ORD_ID = Extent2.SALES_ORD_ID
			                              JOIN SYS0038M Extent8   ON Extent8.STUS_CODE_ID = Extent1.STUS_CODE_ID
			                              LEFT JOIN SAL0047D Extent9   ON Extent9.ENTRY_ID = Extent1.INSTALL_ENTRY_ID
			                              LEFT JOIN CCR0006D Extent10   ON Extent10.CALL_ENTRY_ID = Extent1.CALL_ENTRY_ID
			                              LEFT JOIN SYS0013M Extent11   ON Extent11.CODE_ID = Extent10.TYPE_ID
			                        WHERE  1 = Extent8.STUS_CODE_ID ) Filter1
	                       LEFT JOIN ORG0001D Extent12   ON Extent12.MEM_ID = Filter1.CTID1
	                       WHERE 1=1
                          ]]>
                          <if test="dscCode != null and dscCode != ''">
                         AND Filter1.BRANCHID1 = #{dscCode}
                         </if>
                          <if test="customerName != null and customerName != ''">
                         and ( (TO_NUMBER(INSTR(LTRIM(RTRIM(UPPER(Filter1.NAME1))), UPPER(LTRIM(RTRIM(#{customerName})))),99999)) > 0 )
                         </if>
                          <if test="customerIc != null and customerIc != ''">
                         AND ( (TO_NUMBER(INSTR(LTRIM(RTRIM(UPPER(Filter1.NRIC))), UPPER(LTRIM(RTRIM(#{customerIc})))),99999)) > 0 ) 
                         </if>
                         <if test="sirimNo != null and sirimNo != ''">
                         AND Filter1.SIRIM_NO = #{sirimNo}
                        <!--  AND ( (TO_NUMBER(INSTR(LTRIM(RTRIM(UPPER(CASE  WHEN ( Extent9.SIRIM_NO IS NOT NULL ) THEN Extent9.SIRIM_NO
                            ELSE ''
                           END))), UPPER(LTRIM(RTRIM(#{sirimNo})))),99999)) > 0 )  )-->    
                         </if>
                         <if test="serialNo != null and serialNo != ''">
                         AND Filter1.SERIAL_NO = #{serialNo}
                         <!-- AND ( (TO_NUMBER(INSTR(LTRIM(RTRIM(UPPER(CASE WHEN ( Extent9.SERIAL_NO IS NOT NULL ) THEN Extent9.SERIAL_NO
                        ELSE ''
                           END))), UPPER(LTRIM(RTRIM(#{serialNo}))),99999)) > 0 ) ) -->
                         </if>
                         <![CDATA[
                                  ) Project1
                          ) Project1
           WHERE  Project1.ROW_NUMBER > 0
          ORDER BY Project1.INSTALL_ENTRY_ID ASC )
      ]]>
    </select>
    <select id="getInstallResultByInstallEntryID" parameterType="Map" resultType="egovMap">
        SELECT Extent1.INSTALL_ENTRY_ID INSTALL_ENTRY_ID  ,
	       Extent1.INSTALL_ENTRY_NO INSTALL_ENTRY_NO  ,
	       Extent3.SALES_ORD_ID SALES_ORD_ID  ,
	       Extent3.SALES_ORD_NO SALES_ORD_NO  ,
	       Extent3.REF_NO REF_NO  ,
	       Extent3.CUST_PO_NO CUST_PO_NO  ,
	       Extent3.SALES_DT SALES_DT  ,
	       Extent1.INSTALL_DT C1  ,
	       Extent1.INSTALL_STK_ID INSTALL_STK_ID  ,
	       Extent9.STK_CODE STK_CODE  ,
	       Extent9.STK_DESC STK_DESC  ,
	       Extent10.NAME NAME  ,
	       Extent8.CODE_ID CODE_ID  ,
	       Extent8.CODE_NAME CODE_NAME  ,
	       Extent7.CODE_ID CODEID1  ,
	       Extent7.CODE CODE  ,
	       Extent7.CODE_NAME CODENAME1  ,
	       Extent13.STUS_CODE_ID STUS_CODE_ID  ,
	       Extent13.CODE CODE1  ,
	       Extent13.NAME NAME1  ,
	       Extent14.BRNCH_ID BRNCH_ID  ,
	       Extent10.CUST_ID CUST_ID  ,
	       Extent10.NRIC NRIC  ,
	       CASE 
	            WHEN ( Extent3.CUST_ADD_ID IS NOT NULL ) THEN Extent3.CUST_ADD_ID
	       ELSE 0
	          END C2  ,
	       Extent3.CUST_CNT_ID CUST_CNT_ID  ,
	       Extent2.SIRIM_NO SIRIM_NO  ,
	       Extent2.SERIAL_NO SERIAL_NO  ,
	       Extent11.USER_NAME USER_NAME  ,
	       Extent9.IS_SIRIM IS_SIRIM  ,
	       Extent9.STK_GRAD STK_GRAD  ,
	       Extent2.CRT_DT C3  ,
	       Extent9.STK_CTGRY_ID STK_CTGRY_ID  ,
	       Extent2.DOC_REF_NO1 DOC_REF_NO1  ,
	       Extent2.DOC_REF_NO2 DOC_REF_NO2  ,
	       Extent2.ALLOW_COMM ALLOW_COMM  ,
	       Extent2.IS_TRADE_IN IS_TRADE_IN  ,
	       Extent2.REQUIRE_SMS REQUIRE_SMS  ,
	       CASE 
	            WHEN ( Extent12.USER_ID IS NOT NULL ) THEN Extent12.USER_NAME
	       ELSE ' '
	          END C4  ,
	       Extent2.CRT_DT C5  ,
	       CASE 
	            WHEN ( Extent2.RESULT_ID IS NOT NULL ) THEN Extent2.CT_ID
	       ELSE 0
	          END C6  ,
	       Extent15.MEM_CODE MEM_CODE  ,
	       Extent15.NAME NAME2  ,
	       Extent16.WH_LOC_ID WH_LOC_ID  ,
	       Extent4.DOC_ID DOC_ID  ,
	       Extent2.INSTALL_DT INSTALL_DT  ,
	       Extent2.NEXT_CALL_DT NEXT_CALL_DT  ,
	       Extent2.REM REM  ,
	       CASE 
	            WHEN ( Extent3.CUST_BILL_ID IS NOT NULL ) THEN Extent3.CUST_BILL_ID
	       ELSE 0
	          END C7  ,
	       Extent6.CODE_NAME CODENAME2  
	  FROM SAL0046D Extent1
	         LEFT JOIN SAL0047D Extent2   ON Extent1.INSTALL_ENTRY_ID = Extent2.ENTRY_ID
	         JOIN SAL0001D Extent3   ON Extent1.SALES_ORD_ID = Extent3.SALES_ORD_ID
	         LEFT JOIN CCR0006D Extent4   ON Extent1.CALL_ENTRY_ID = Extent4.CALL_ENTRY_ID
	         LEFT JOIN SAL0074D Extent5   ON Extent3.SALES_ORD_ID = Extent5.SALES_ORD_ID
	         LEFT JOIN SYS0013M Extent6   ON Extent5.MODE_ID = Extent6.CODE_ID
	         LEFT JOIN SYS0013M Extent7   ON Extent4.TYPE_ID = Extent7.CODE_ID
	         LEFT JOIN SYS0013M Extent8   ON Extent3.APP_TYPE_ID = Extent8.CODE_ID
	         LEFT JOIN SYS0026M Extent9   ON Extent1.INSTALL_STK_ID = Extent9.STK_ID
	         LEFT JOIN SAL0029D Extent10   ON Extent3.CUST_ID = Extent10.CUST_ID
	         LEFT JOIN SYS0047M  Extent11   ON Extent3.UPD_USER_ID = Extent11.USER_ID
	         LEFT JOIN SYS0047M  Extent12   ON Extent2.CRT_USER_ID = Extent12.USER_ID
	         LEFT JOIN SYS0038M Extent13   ON Extent1.STUS_CODE_ID = Extent13.STUS_CODE_ID
	         JOIN SAL0045D Extent14   ON Extent3.SALES_ORD_ID = Extent14.SALES_ORD_ID
	         LEFT JOIN ORG0001D Extent15   ON Extent2.CT_ID = Extent15.MEM_ID
	         LEFT JOIN SYS0028M Extent16   ON ( Extent15.MEM_CODE = Extent16.WH_LOC_CODE )
	         OR ( ( Extent15.MEM_CODE IS NULL )
	         AND ( Extent16.WH_LOC_CODE IS NULL ) )
    WHERE  Extent1.INSTALL_ENTRY_ID = #{installEntryId}

    </select>
    <select id="getOrderInfo" parameterType="Map" resultType="egovMap">
	    SELECT Extent1.INSTALL_ENTRY_ID INSTALL_ENTRY_ID  ,
	       Extent3.SALES_ORD_NO SALES_ORD_NO  ,
	       Extent3.REF_NO REF_NO  ,
	       Extent3.SALES_DT SALES_DT  ,
	       Extent3.UPD_DT UPD_DT  ,
	       Extent3.UPD_USER_ID UPD_USER_ID  ,
	       Extent7.CODE_ID CODE_ID  ,
	       Extent7.CODE_NAME CODE_NAME  ,
	       Extent8.STK_CTGRY_ID STK_CTGRY_ID  ,
	       Extent9.CODE_NAME CODENAME1  ,
	       Extent8.STK_ID STK_ID  ,
	       Extent8.STK_CODE STK_CODE  ,
	       Extent8.STK_DESC STK_DESC  ,
	       Extent5.CUST_ID CUST_ID  ,
	       Extent5.NAME NAME  ,
	       Extent5.NRIC NRIC  ,
	       CASE 
	            WHEN ( Extent3.REM IS NOT NULL ) THEN Extent3.REM
	       ELSE ''
	          END C1  ,
	       CASE 
	            WHEN ( Extent3.PROMO_ID IS NOT NULL ) THEN Extent3.PROMO_ID
	       ELSE 0
	          END C2  ,
	       CASE 
	            WHEN ( Extent11.PROMO_CODE IS NOT NULL ) THEN Extent11.PROMO_CODE
	       ELSE ''
	          END C3  ,
	       CASE 
	            WHEN ( Extent11.PROMO_DESC IS NOT NULL ) THEN Extent11.PROMO_DESC
	       ELSE ''
	          END C4  ,
	       CASE 
	            WHEN ( Extent3.TOT_AMT IS NOT NULL ) THEN Extent3.TOT_AMT
	       ELSE 0
	          END C5  ,
	       CASE 
	            WHEN ( Extent3.TOT_PV IS NOT NULL ) THEN Extent3.TOT_PV
	       ELSE 0
	          END C6  ,
	       CASE 
	            WHEN ( Extent3.MTH_RENT_AMT IS NOT NULL ) THEN Extent3.MTH_RENT_AMT
	       ELSE 0
	          END C7  ,
	       CASE 
	            WHEN ( Extent3.DEF_RENT_AMT IS NOT NULL ) THEN Extent3.DEF_RENT_AMT
	       ELSE 0
	          END C8  ,
	       CASE 
	            WHEN ( Extent12.STUS_CODE_ID IS NOT NULL ) THEN Extent12.STUS_CODE_ID
	       ELSE 0
	          END C9  ,
	       CASE 
	            WHEN ( Extent12.NAME IS NOT NULL ) THEN Extent12.NAME
	       ELSE ''
	          END C10  ,
	       Extent6.MEM_ID MEM_ID  ,
	       Extent6.MEM_CODE MEM_CODE  ,
	       Extent6.MEM_TYPE MEM_TYPE  ,
	       Extent6.NAME NAME1  ,
	       Extent6.FULL_NAME FULL_NAME  ,
	       Extent6.PASSWD PASSWD  ,
	       Extent6.NRIC NRIC1  ,
	       Extent6.DOB DOB  ,
	       Extent6.GENDER GENDER  ,
	       Extent6.RACE RACE  ,
	       Extent6.MARTL MARTL  ,
	     <!--   Extent6.NATION NATION  ,
	       Extent6.AREAL AREAL  ,
	       Extent6.POST_CODE POST_CODE  ,
	       Extent6.STATE STATE  ,
	       Extent6.CNTY CNTY  , -->
	       Extent6.TEL_OFFICE TEL_OFFICE  ,
	       Extent6.TEL_HUSE TEL_HUSE  ,
	       Extent6.TEL_MOBILE TEL_MOBILE  ,
	       Extent6.EMAIL EMAIL  ,
	       Extent6.SPUSE_CODE SPUSE_CODE  ,
	       Extent6.SPOUSE_NAME SPOUSE_NAME  ,
	       Extent6.SPOUSE_NRIC SPOUSE_NRIC  ,
	       Extent6.SPOUSE_OCPAT SPOUSE_OCPAT  ,
	       Extent6.SPOUSE_TEL_CNTC SPOUSE_TEL_CNTC  ,
	       Extent6.SPOUSE_DOB SPOUSE_DOB  ,
	       Extent6.EDC_LEV EDC_LEV  ,
	       Extent6.LANG LANG  ,
	       Extent6.BANK BANK  ,
	       Extent6.BANK_ACC_NO BANK_ACC_NO  ,
	       Extent6.SPONS_CODE SPONS_CODE  ,
	       Extent6.JOIN_DT JOIN_DT  ,
	       Extent6.RESIGN_DT RESIGN_DT  ,
	       Extent6.TRM_DT TRM_DT  ,
	       Extent6.RENEW_DT RENEW_DT  ,
	       Extent6.AGRMNT_NO AGRMNT_NO  ,
	       Extent6.BRNCH BRNCH  ,
	       Extent6.STUS STUS  ,
	       Extent6.SYNC_CHK SYNC_CHK  ,
	       Extent6.RANK RANK  ,
	       Extent6.TRNSPRT TRNSPRT  ,
	       Extent6.PROMO_DT PROMO_DT  ,
	       Extent6.TR_NO TR_NO  ,
	       Extent6.CRT_DT CRT_DT  ,
	       Extent6.CRT_USER_ID CRT_USER_ID  ,
	       Extent6.UPD_DT UPDATED1  ,
	       Extent6.UPD_USER_ID UPDATOR1  ,
	       Extent6.MEM_IS_OUT_SRC MEM_IS_OUT_SRC  ,
	       Extent6.APLICNT_ID APLICNT_ID  ,
	       Extent6.BIZ_TYPE BIZ_TYPE  ,
	       Extent6.HSPTLZ HSPTLZ  ,
	       Extent10.MEM_ID MEMBERID1  ,
	       Extent10.MEM_UP_ID MEM_UP_ID  ,
	       Extent10.MEM_LVL MEM_LVL  ,
	       Extent10.DEPT_CODE DEPT_CODE  ,
	       Extent10.ORG_UPD_USER_ID ORG_UPD_USER_ID  ,
	       Extent10.ORG_UPD_DT ORG_UPD_DT  ,
	       Extent10.PREV_DEPT_CODE PREV_DEPT_CODE  ,
	       Extent10.PREV_GRP_CODE PREV_GRP_CODE  ,
	       Extent10.PREV_MEM_ID_ID PREV_MEM_ID_ID  ,
	       Extent10.PREV_MEM_LVL PREV_MEM_LVL  ,
	       Extent10.ORG_STUS_CODE_ID ORG_STUS_CODE_ID  ,
	       Extent10.PR_CODE PR_CODE  ,
	       Extent10.PR_MEM_ID PR_MEM_ID  ,
	       Extent10.GRAND_PR_CODE GRAND_PR_CODE  ,
	       Extent10.GRAND_PR_MEM_ID GRAND_PR_MEM_ID  ,
	       Extent10.LAST_DEPT_CODE LAST_DEPT_CODE  ,
	       Extent10.LAST_GRP_CODE LAST_GRP_CODE  ,
	       Extent10.LAST_ORG_CODE LAST_ORG_CODE  ,
	       Extent10.LAST_TOP_ORG_CODE LAST_TOP_ORG_CODE  ,
	       Extent10.BRNCH_ID BRNCH_ID  ,
	       Extent4.ITM_PRC_ID ITM_PRC_ID  
	  FROM SAL0046D Extent1
	         JOIN CCR0006D Extent2   ON Extent1.CALL_ENTRY_ID = Extent2.CALL_ENTRY_ID
	         JOIN SAL0001D Extent3   ON Extent1.SALES_ORD_ID = Extent3.SALES_ORD_ID
	         JOIN SAL0002D Extent4   ON Extent3.SALES_ORD_ID = Extent4.SALES_ORD_ID
	         JOIN SAL0029D Extent5   ON Extent3.CUST_ID = Extent5.CUST_ID
	         JOIN ORG0001D Extent6   ON Extent3.MEM_ID = Extent6.MEM_ID
	         JOIN SYS0013M Extent7   ON Extent3.APP_TYPE_ID = Extent7.CODE_ID
	         JOIN SYS0026M Extent8   ON Extent1.INSTALL_STK_ID = Extent8.STK_ID
	         LEFT JOIN SYS0013M Extent9   ON Extent8.STK_CTGRY_ID = Extent9.CODE_ID
	         LEFT JOIN ORG0005D Extent10   ON Extent6.MEM_ID = Extent10.MEM_ID
	         LEFT JOIN SAL0017D Extent11   ON Extent3.PROMO_ID = Extent11.PROMO_ID
	         LEFT JOIN SYS0038M Extent12   ON Extent1.STUS_CODE_ID = Extent12.STUS_CODE_ID
	 WHERE  Extent1.INSTALL_ENTRY_ID = #{installEntryId}
    </select>
    
     <select id="getcustomerInfo" parameterType="Object" resultType="egovMap">
	     SELECT Extent1.CUST_ID CUST_ID  ,
	       CASE 
	            WHEN ( 964 = Extent1.TYPE_ID ) THEN TO_NUMBER(0)
	       ELSE TO_NUMBER(1)
	          END C1  ,
	       Extent1.NAME NAME  ,
	       Extent1.NRIC NRIC  ,
	       Extent1.NATION NATION  ,
	       Extent3.NAME NAME1  ,
	       Extent1.DOB DOB  ,
	       Extent1.EMAIL EMAIL  ,
	       Extent1.GENDER GENDER  ,
	       Extent1.RACE_ID RACE_ID  ,
	       Extent1.TYPE_ID TYPE_ID  ,
	       Extent2.CODE_NAME CODE_NAME  ,
	       Extent1.STUS_CODE_ID STUS_CODE_ID  ,
	       Extent1.UPD_USER_ID UPD_USER_ID  ,
	       Extent1.UPD_DT UPD_DT  ,
	       Extent1.REN_GRP REN_GRP  ,
	       Extent1.PST_TERMS PST_TERMS  ,
	       Extent1.ID_OLD ID_OLD  ,
	       Extent1.CRT_USER_ID CRT_USER_ID  ,
	       Extent1.CRT_DT CRT_DT  ,
	       CASE 
	            WHEN ( 966 = Extent1.TYPE_ID ) THEN TO_NUMBER(1)
	       ELSE TO_NUMBER(0)
	          END C2  
	  FROM SAL0029D Extent1
	         LEFT JOIN SYS0013M Extent2   ON TO_NUMBER(Extent1.RACE_ID,99999) = Extent2.CODE_ID
	         LEFT JOIN SYS0015M Extent3   ON TO_NUMBER(Extent1.NATION,99999) = Extent3.CNTY_ID
	 WHERE  ( Extent1.CUST_ID = #{custId} )
	          AND (TO_NUMBER(Extent1.STUS_CODE_ID,99999) = 1 )
        
     </select>
     <select id="getCustomerAddressInfo" parameterType="Map" resultType="egovMap">
		     SELECT Filter1.CUST_ADD_ID CUST_ADD_ID  ,
		       Filter1.ADD1 ADD1  ,
		       Filter1.ADD2 ADD2  ,
		       Filter1.ADD3 ADD3  ,
		       Filter1.ADD1 + Filter1.ADD2 + Filter1.ADD3 C1  ,
		       Filter1.COUNTRYID1 CNTY_ID  ,
		       Filter1.NAME1 NAME  ,
		       Filter1.STATEID1 STATE_ID  ,
		       Filter1.NAME2 NAME1  ,
		       Filter1.AREAID1 AREA_ID  ,
		       Filter1.AREA_NAME AREA_NAME  ,
		       Filter1.POSTCODEID1 POST_CODE_ID  ,
		       Filter1.POSTCODE1 POST_CODE  ,
		       Filter1.NRIC NRIC  ,
		       Filter1.TEL TEL  ,
		       Filter1.FAX FAX  ,
		       Filter1.ADD4 ADD4  ,
		       Filter1.STATUSCODEID1 STUS_CODE_ID  ,
		       Extent6.NAME NAME2  ,
		       Filter1.REM REM  ,
		       Filter1.UPDATOR1 UPD_USER_ID  ,
		       Filter1.UPDATED1 UPD_DT  ,
		       Filter1.ID_OLD ID_OLD  ,
		       Filter1.SO_ID SO_ID  ,
		       Filter1.IDCM IDCM  ,
		       Filter1.CREATOR1 CRT_USER_ID  ,
		       Filter1.CREATED1 CRT_DT  
		  FROM ( SELECT Extent1.CUST_ADD_ID CUST_ADD_ID  ,
		                Extent1.CUST_ID CUST_ID  ,
		                Extent1.NRIC NRIC  ,
		                Extent1.TEL TEL  ,
		                Extent1.FAX FAX  ,
		                Extent1.ADD1 ADD1  ,
		                Extent1.ADD2 ADD2  ,
		                Extent1.ADD3 ADD3  ,
		                Extent1.ADD4 ADD4  ,
		                Extent1.POST_CODE_ID POSTCODEID1  ,
		                Extent1.AREA_ID AREAID1  ,
		                Extent1.STATE_ID STATEID1  ,
		                Extent1.CNTY_ID COUNTRYID1  ,
		                Extent1.STUS_CODE_ID STATUSCODEID1  ,
		                Extent1.REM REM  ,
		                Extent1.UPD_USER_ID UPDATOR1  ,
		                Extent1.UPD_DT UPDATED1  ,
		                Extent1.ID_OLD ID_OLD  ,
		                Extent1.SO_ID SO_ID  ,
		                Extent1.IDCM IDCM  ,
		                Extent1.CRT_USER_ID CREATOR1  ,
		                Extent1.CRT_DT CREATED1  ,
		                Extent2.NAME NAME1  ,
		                Extent3.NAME NAME2  ,
		                Extent4.AREA_NAME AREA_NAME  ,
		                Extent5.POST_CODE POSTCODE1  
		         FROM SAL0023D Extent1
		                JOIN SYS0015M Extent2   ON Extent1.CNTY_ID = Extent2.CNTY_ID
		                LEFT JOIN SYS0035M Extent3   ON Extent1.STATE_ID = Extent3.STATE_ID
		                LEFT JOIN SYS0039M Extent4   ON Extent1.AREA_ID = Extent4.AREA_ID
		                LEFT JOIN SYS0030C Extent5   ON Extent1.POST_CODE_ID = Extent5.POST_CODE_ID
		                LEFT JOIN SYS0064M Extent7   ON Extent1.AREA_ID = Extent7.AREA_ID
		          WHERE  9 = UTILS.CONVERT_TO_NUMBER(Extent1.STUS_CODE_ID,10,0) ) Filter1
		         LEFT JOIN SYS0038M Extent6   ON ( Filter1.STATUSCODEID1 = TO_NUMBER(Extent6.STUS_CODE_ID,99999) )
		         OR ( ( Filter1.STATUSCODEID1 IS NULL )
		         AND ( TO_NUMBER(Extent6.STUS_CODE_ID,99999) IS NULL ) )
		 WHERE  Filter1.CUST_ID = #{custId}
     </select>
     <select id="getCustomerContractInfo" parameterType="Map" resultType="egovMap">
		     SELECT Project1.CUST_CNTC_ID CUST_CNTC_ID  ,
		       Project1.CUST_INITIAL CUST_INITIAL  ,
		       Project1.CODE_NAME CODE_NAME  ,
		       Project1.NAME NAME  ,
		       Project1.DOB DOB  ,
		       Project1.GENDER GENDER  ,
		       Project1.RACE_ID RACE_ID  ,
		       Project1.CODENAME1 CODENAME1  ,
		       Project1.TEL_M1 TEL_M1  ,
		       Project1.TEL_M2 TEL_M2  ,
		       Project1.TEL_O TEL_O  ,
		       Project1.TEL_R TEL_R  ,
		       Project1.TELF TELF  ,
		       Project1.NRIC NRIC  ,
		       Project1.POS POS  ,
		       Project1.EMAIL EMAIL  ,
		       Project1.DEPT DEPT  ,
		       Project1.STUS_CODE_ID STUS_CODE_ID  ,
		       Project1.UPD_USER_ID UPD_USER_ID  ,
		       Project1.UPD_DT UPD_DT  ,
		       Project1.ID_OLD ID_OLD  ,
		       Project1.DCM DCM  ,
		       Project1.CRT_USER_ID CRT_USER_ID  ,
		       Project1.CRT_DT CRT_DT  
		  FROM ( SELECT Filter1.CUST_CNTC_ID CUST_CNTC_ID  ,
		                Filter1.NAME NAME  ,
		                Filter1.CUST_INITIAL CUST_INITIAL  ,
		                Filter1.NRIC NRIC  ,
		                Filter1.POS POS  ,
		                Filter1.TEL_M1 TEL_M1  ,
		                Filter1.TEL_M2 TEL_M2  ,
		                Filter1.TEL_O TEL_O  ,
		                Filter1.TEL_R TEL_R  ,
		                Filter1.TELF TELF  ,
		                Filter1.DOB DOB  ,
		                Filter1.GENDER GENDER  ,
		                Filter1.RACE_ID RACE_ID  ,
		                Filter1.EMAIL EMAIL  ,
		                Filter1.STUS_CODE_ID STUS_CODE_ID  ,
		                Filter1.UPDATED1 UPD_DT  ,
		                Filter1.UPDATOR1 UPD_USER_ID  ,
		                Filter1.ID_OLD ID_OLD  ,
		                Filter1.DEPT DEPT  ,
		                Filter1.DCM DCM  ,
		                Filter1.CREATED1 CRT_DT  ,
		                Filter1.CREATOR1 CRT_USER_ID  ,
		                Filter1.CODE_NAME CODE_NAME  ,
		                Extent3.CODE_NAME CODENAME1  
		         FROM ( SELECT Extent1.CUST_CNTC_ID CUST_CNTC_ID  ,
		                       Extent1.CUST_ID CUST_ID  ,
		                       Extent1.NAME NAME  ,
		                       Extent1.CUST_INITIAL CUST_INITIAL  ,
		                       Extent1.NRIC NRIC  ,
		                       Extent1.POS POS  ,
		                       Extent1.TEL_M1 TEL_M1  ,
		                       Extent1.TEL_M2 TEL_M2  ,
		                       Extent1.TEL_O TEL_O  ,
		                       Extent1.TEL_R TEL_R  ,
		                       Extent1.TELF TELF  ,
		                       Extent1.DOB DOB  ,
		                       Extent1.GENDER GENDER  ,
		                       Extent1.RACE_ID RACE_ID  ,
		                       Extent1.EMAIL EMAIL  ,
		                       Extent1.STUS_CODE_ID STUS_CODE_ID  ,
		                       Extent1.UPD_DT UPDATED1  ,
		                       Extent1.UPD_USER_ID UPDATOR1  ,
		                       Extent1.ID_OLD ID_OLD  ,
		                       Extent1.DEPT DEPT  ,
		                       Extent1.DCM DCM  ,
		                       Extent1.CRT_DT CREATED1  ,
		                       Extent1.CRT_USER_ID CREATOR1  ,
		                       Extent2.CODE_NAME CODE_NAME  
		                FROM SAL0027D Extent1
		                       LEFT JOIN SYS0013M Extent2   ON Extent1.CUST_INITIAL = Extent2.CODE_ID
		                 WHERE  ( 9 = UTILS.CONVERT_TO_NUMBER(Extent1.STUS_CODE_ID,10,0) )
		                          OR ( 1 = UTILS.CONVERT_TO_NUMBER(Extent1.STUS_CODE_ID,10,0) ) ) Filter1
		                LEFT JOIN SYS0013M Extent3   ON UTILS.CONVERT_TO_NUMBER(Filter1.RACE_ID,10,0) = Extent3.CODE_ID
		          WHERE  Filter1.CUST_ID = #{custId} ) Project1
		  ORDER BY Project1.STUS_CODE_ID DESC
     </select>
     
     <select id="getInstallationBySalesOrderID" parameterType="Map" resultType="egovMap">
         SELECT Extent1.INSTALL_ID INSTALL_ID  ,
		       Extent1.SALES_ORD_ID SALES_ORD_ID  ,
		       Extent1.ADD_ID ADD_ID  ,
		       Extent1.CNT_ID CNT_ID  ,
		       Extent1.PRE_CALL_DT PRE_CALL_DT  ,
		       Extent1.PRE_DT PRE_DT  ,
		       Extent1.PRE_TM PRE_TM  ,
		       Extent1.ACT_DT ACT_DT  ,
		       Extent1.ACT_TM ACT_TM  ,
		       Extent1.STUS_CODE_ID STUS_CODE_ID  ,
		       Extent1.INSTCT INSTCT  ,
		       Extent1.UPD_DT UPD_DT  ,
		       Extent1.UPD_USER_ID UPD_USER_ID  ,
		       Extent1.BRNCH_ID BRNCH_ID  ,
		       Extent1.EDIT_TYPE_ID EDIT_TYPE_ID  ,
		       Extent1.IS_TRADE_IN IS_TRADE_IN  ,
		       Extent1.VRIFY_REM VRIFY_REM  
		  FROM SAL0045D Extent1
		 WHERE  Extent1.SALES_ORD_ID = #{salesOrdId}
     </select>
     <select id="getInstallContactByContactID" parameterType="Map" resultType="egovMap">
		     SELECT Extent1.CUST_CNTC_ID CUST_CNTC_ID  ,
		       Extent1.CUST_INITIAL CUST_INITIAL  ,
		       Extent2.CODE_NAME CODE_NAME  ,
		       Extent1.NAME NAME  ,
		       Extent1.DOB DOB  ,
		       Extent1.GENDER GENDER  ,
		       Extent1.RACE_ID RACE_ID  ,
		       Extent3.CODE_NAME CODENAME1  ,
		       Extent1.TEL_M1 TEL_M1  ,
		       Extent1.TEL_M2 TEL_M2  ,
		       Extent1.TEL_O TEL_O  ,
		       Extent1.TEL_R TEL_R  ,
		       Extent1.TELF TELF  ,
		       Extent1.NRIC NRIC  ,
		       Extent1.POS POS  ,
		       Extent1.EMAIL EMAIL  ,
		       Extent1.DEPT DEPT  ,
		       Extent1.STUS_CODE_ID STUS_CODE_ID  ,
		       Extent1.UPD_USER_ID UPD_USER_ID  ,
		       Extent1.UPD_DT UPD_DT  ,
		       Extent1.ID_OLD ID_OLD  ,
		       Extent1.DCM DCM  ,
		       Extent1.CRT_USER_ID CRT_USER_ID  ,
		       Extent1.CRT_DT CRT_DT  
		  FROM SAL0027D Extent1
		         LEFT JOIN SYS0013M Extent2   ON Extent1.CUST_INITIAL = Extent2.CODE_ID
		         LEFT JOIN SYS0013M Extent3   ON UTILS.CONVERT_TO_NUMBER(Extent1.RACE_ID,10,0) = Extent3.CODE_ID
		   WHERE  Extent1.CUST_CNTC_ID = #{cntId}
        </select>
        <select id="getSalesOrderMBySalesOrderID" parameterType="Map" resultType="egovMap">
		 SELECT Extent1.SALES_ORD_ID SALES_ORD_ID  ,
		       Extent1.SALES_ORD_NO SALES_ORD_NO  ,
		       Extent1.REF_NO REF_NO  ,
		       Extent1.SALES_DT SALES_DT  ,
		       Extent1.CUST_ID CUST_ID  ,
		       Extent1.CUST_CNT_ID CUST_CNT_ID  ,
		       Extent1.CUST_ADD_ID CUST_ADD_ID  ,
		       Extent1.MEM_ID MEM_ID  ,
		       Extent1.BRNCH_ID BRNCH_ID  ,
		       Extent1.APP_TYPE_ID APP_TYPE_ID  ,
		       Extent1.DSCNT_AMT DSCNT_AMT  ,
		       Extent1.TAX_AMT TAX_AMT  ,
		       Extent1.TOT_AMT TOT_AMT  ,
		       Extent1.PROMO_ID PROMO_ID  ,
		       Extent1.BINDING_NO BINDING_NO  ,
		       Extent1.CC_PROMO_ID CC_PROMO_ID  ,
		       Extent1.TOT_PV TOT_PV  ,
		       Extent1.REM REM  ,
		       Extent1.PV_MONTH PV_MONTH  ,
		       Extent1.PV_YEAR PV_YEAR  ,
		       Extent1.STUS_CODE_ID STUS_CODE_ID  ,
		       Extent1.UPD_DT UPD_DT  ,
		       Extent1.UPD_USER_ID UPD_USER_ID  ,
		       Extent1.SYNC_CHK SYNC_CHK  ,
		       Extent1.CUST_PO_NO CUST_PO_NO  ,
		       Extent1.REN_CHK_ID REN_CHK_ID  ,
		       Extent1.INST_PRIOD INST_PRIOD  ,
		       Extent1.DO_NO DO_NO  ,
		       Extent1.DEPT_CODE DEPT_CODE  ,
		       Extent1.GRP_CODE GRP_CODE  ,
		       Extent1.ORG_CODE ORG_CODE  ,
		       Extent1.SALES_ORD_ID_OLD SALES_ORD_ID_OLD  ,
		       Extent1.EDIT_TYPE_ID EDIT_TYPE_ID  ,
		       Extent1.CUST_BILL_ID CUST_BILL_ID  ,
		       Extent1.MTH_RENT_AMT MTH_RENT_AMT  ,
		       Extent1.LOK LOK  ,
		       Extent1.AEON_STUS_ID AEON_STUS_ID  ,
		       Extent1.COMM_DT COMM_DT  ,
		       Extent1.CRT_USER_ID CRT_USER_ID  ,
		       Extent1.CRT_DT CRT_DT  ,
		       Extent1.PAY_COM_DT PAY_COM_DT  ,
		       Extent1.DEF_RENT_AMT DEF_RENT_AMT  ,
		       Extent1.REF_DOC_ID REF_DOC_ID  ,
		       Extent1.RENT_PROMO_ID RENT_PROMO_ID  ,
		       Extent2.MEM_CODE MEM_CODE  ,
		       CASE 
		            WHEN ( Extent1.CNVR_SCHEME_ID IS NULL ) THEN 0
		       ELSE Extent1.CNVR_SCHEME_ID
		          END C1  
		  FROM SAL0001D Extent1
		         LEFT JOIN ORG0001D Extent2   ON Extent1.MEM_ID = Extent2.MEM_ID
		 WHERE  Extent1.SALES_ORD_ID = #{salesOrdId}
		 </select>
		  <select id="getMemberFullDetailsByMemberIDCode" parameterType="Map" resultType="egovMap">
		  <![CDATA[
					 SELECT Limit1.MEM_ID MEM_ID  ,
			       --Limit1.ADDR1 ADDR1  ,
			      -- Limit1.ADDR2 ADDR2  ,
			      -- Limit1.ADDR3 ADDR3  ,
			      -- Limit1.C1 C1  ,
			       Limit1.C2 C2  ,
			       Limit1.C3 C3  ,
			       Limit1.C4 C4  ,
			       Limit1.C5 C5  ,
			      -- Limit1.C6 C6  ,
			       Limit1.C7 C7  ,
			       Limit1.C8 C8  ,
			       Limit1.C9 C9  ,
			       Limit1.EMAIL EMAIL  ,
			       Limit1.GENDER GENDER  ,
			       Limit1.C10 C10  ,
			       Limit1.C11 C11  ,
			       Limit1.C12 C12  ,
			       Limit1.C13 C13  ,
			       Limit1.C14 C14  ,
			       Limit1.C15 C15  ,
			       Limit1.C16 C16  ,
			       Limit1.C17 C17  ,
			       Limit1.C18 C18  ,
			       Limit1.C19 C19  ,
			       Limit1.C20 C20  ,
			       Limit1.C21 C21  ,
			       Limit1.C22 C22  ,
			       Limit1.C23 C23  ,
			       Limit1.C24 C24  ,
			       Limit1.C25 C25  ,
			       Limit1.C26 C26  ,
			       Limit1.C27 C27  ,
			       Limit1.C28 C28  ,
			       Limit1.BANK BANK  ,
			       Limit1.BANK_ACC_NO BANK_ACC_NO  ,
			       Limit1.C29 C29  ,
			       Limit1.C30 C30  ,
			       Limit1.C31 C31  ,
			       Limit1.C32 C32  ,
			       Limit1.NAME1 NAME  ,
			       Limit1.MEM_CODE MEM_CODE  ,
			       Limit1.NAME NAME1  ,
			       Limit1.NRIC NRIC  ,
			       Limit1.MEM_TYPE MEM_TYPE  ,
			       Limit1.CODE_NAME CODE_NAME  ,
			       Limit1.C33 C33  ,
			       Limit1.C34 C34  ,
			       Limit1.C35 C35  ,
			       Limit1.C36 C36  ,
			       Limit1.C37 C37  ,
			       Limit1.C38 C38  ,
			       Limit1.C39 C39  ,
			       Limit1.C40 C40  ,
			       Limit1.C41 C41  ,
			       Limit1.C42 C42  ,
			       Limit1.C43 C43  ,
			       Limit1.C44 C44  ,
			       Limit1.C45 C45  ,
			       Limit1.C46 C46  ,
			       Limit1.C47 C47  ,
			       Limit1.C48 C48  ,
			     --  Limit1.C49 C49  ,
			       Limit1.C50 C50  ,
			       Limit1.C51 C51  ,
			       Limit1.C52 C52  ,
			       Limit1.C53 C53  ,
			       Limit1.C54 C54  ,
			       Limit1.C55 C55  ,
			       Limit1.C56 C56  ,
			       Limit1.TR_NO TR_NO  ,
			       Limit1.TEL_MOBILE TEL_MOBILE  ,
			       Limit1.TEL_HUSE TEL_HUSE  ,
			       Limit1.TEL_OFFICE TEL_OFFICE  ,
			       Limit1.C57 C57  ,
			       Limit1.SPUSE_CODE SPUSE_CODE  ,
			       Limit1.SPOUSE_NAME SPOUSE_NAME  ,
			       Limit1.SPOUSE_NRIC SPOUSE_NRIC  ,
			       Limit1.SPOUSE_TEL_CNTC SPOUSE_TEL_CNTC  ,
			       Limit1.C58 C58  ,
			       Limit1.SPOUSE_OCPAT SPOUSE_OCPAT  ,
			       Limit1.C59 C59  ,
			       Limit1.RANK RANK  ,
			       Limit1.C60 C60  ,
			       Limit1.HSPTLZ  HSPTLZ 
			  FROM (
			SELECT Extent1.MEM_ID MEM_ID  ,
			                Extent1.MEM_CODE MEM_CODE  ,
			                Extent1.MEM_TYPE MEM_TYPE  ,
			                Extent1.NAME NAME  ,
			                Extent1.NRIC NRIC  ,
			                Extent1.GENDER GENDER  ,
			                --Extent1.ADDR1 ADDR1  ,
			               -- Extent1.ADDR2 ADDR2  ,
			               -- Extent1.ADDR3 ADDR3  ,
			                Extent1.TEL_OFFICE TEL_OFFICE  ,
			                Extent1.TEL_HUSE TEL_HUSE  ,
			                Extent1.TEL_MOBILE TEL_MOBILE  ,
			                Extent1.EMAIL EMAIL  ,
			                Extent1.SPUSE_CODE SPUSE_CODE  ,
			                Extent1.SPOUSE_NAME SPOUSE_NAME  ,
			                Extent1.SPOUSE_NRIC SPOUSE_NRIC  ,
			                Extent1.SPOUSE_OCPAT SPOUSE_OCPAT  ,
			                Extent1.SPOUSE_TEL_CNTC SPOUSE_TEL_CNTC  ,
			                Extent1.BANK BANK  ,
			                Extent1.BANK_ACC_NO BANK_ACC_NO  ,
			                Extent1.RANK RANK  ,
			                Extent1.TR_NO TR_NO  ,
			                Extent1.HSPTLZ HSPTLZ  ,
			                Extent2.NAME NAME1  ,
			                Extent3.CODE_NAME CODE_NAME   ,
			              --  CASE 
			             --        WHEN (1 IS NOT NULL ) THEN 1
			             --   ELSE 0
			               --    END C1  ,
			                CASE 
			                     WHEN ( Extent6.AREA_ID IS NOT NULL ) THEN Extent6.AREA_NAME
			                ELSE ''
			                   END C2  ,
			                CASE 
			                     WHEN ( Extent1.BRNCH IS NOT NULL ) THEN TO_NUMBER(Extent1.BRNCH,99999.99)
			                ELSE 0
			                   END C3  ,
			                CASE 
			                     WHEN ( Extent10.BRNCH_ID IS NOT NULL ) THEN Extent10.CODE
			                ELSE ''
			                   END C4  ,
			                CASE 
			                     WHEN ( Extent10.BRNCH_ID IS NOT NULL ) THEN Extent10.NAME
			                ELSE ''
			                   END C5  ,
			              --  CASE 
			              --       WHEN ( 1 IS NOT NULL ) THEN TO_NUMBER(1,99999.99)
			               -- ELSE 0
			               --    END C6  ,
			                CASE 
			                     WHEN ( Extent9.CNTY_ID IS NOT NULL ) THEN Extent9.NAME
			                ELSE ''
			                   END C7  ,
			                CASE 
			                     WHEN ( Extent1.EDC_LEV IS NOT NULL ) THEN TO_NUMBER(Extent1.EDC_LEV,99999.99)
			                ELSE 0
			                   END C8  ,
			                CASE 
			                     WHEN ( Extent11.CODE_ID IS NOT NULL ) THEN Extent11.CODE_NAME
			                ELSE ''
			                   END C9  ,
			                CASE 
			                     WHEN ( Extent1.LANG IS NOT NULL ) THEN TO_NUMBER(Extent1.LANG,99999.99)
			                ELSE 0
			                   END C10  ,
			                CASE 
			                     WHEN ( Extent12.CODE_ID IS NOT NULL ) THEN Extent12.CODE_NAME
			                ELSE ''
			                   END C11  ,
			                CASE 
			                     WHEN ( Extent13.MEM_ID IS NOT NULL ) THEN Extent13.MEM_CODE
			                ELSE ''
			                   END C12  ,
			                CASE 
			                     WHEN ( Extent13.MEM_ID IS NOT NULL ) THEN Extent13.NAME
			                ELSE ''
			                   END C13  ,
			                CASE 
			                     WHEN ( Extent13.MEM_ID IS NOT NULL ) THEN Extent13.TEL_MOBILE
			                ELSE ''
			                   END C14  ,
			                CASE 
			                     WHEN ( Extent13.MEM_ID IS NOT NULL ) THEN Extent13.TEL_OFFICE
			                ELSE ''
			                   END C15  ,
			                CASE 
			                     WHEN ( Extent13.MEM_ID IS NOT NULL ) THEN Extent13.TEL_HUSE
			                ELSE ''
			                   END C16  ,
			                CASE 
			                     WHEN ( Extent14.MEM_ID IS NOT NULL ) THEN Extent14.MEM_CODE
			                ELSE ''
			                   END C17  ,                    
			                CASE 
			                     WHEN ( Extent14.MEM_ID IS NOT NULL ) THEN Extent14.NAME
			                ELSE ''
			                   END C18  ,
			                CASE 
			                     WHEN ( Extent14.MEM_ID IS NOT NULL ) THEN Extent14.TEL_MOBILE
			                ELSE ''
			                   END C19  ,
			                CASE 
			                     WHEN ( Extent14.MEM_ID IS NOT NULL ) THEN Extent14.TEL_OFFICE
			                ELSE ''
			                   END C20  ,
			                CASE 
			                     WHEN ( Extent14.MEM_ID IS NOT NULL ) THEN Extent14.TEL_HUSE
			                ELSE ''
			                   END C21  ,
			                CASE 
			                     WHEN ( Extent15.MEM_ID IS NOT NULL ) THEN Extent15.MEM_CODE
			                ELSE ''
			                   END C22  ,
			                CASE 
			                     WHEN ( Extent15.MEM_ID IS NOT NULL ) THEN Extent15.NAME
			                ELSE ''
			                   END C23  ,
			                CASE 
			                     WHEN ( Extent15.MEM_ID IS NOT NULL ) THEN Extent15.TEL_MOBILE
			                ELSE ''
			                   END C24  ,
			                CASE 
			                     WHEN ( Extent15.MEM_ID IS NOT NULL ) THEN Extent15.TEL_OFFICE
			                ELSE ''
			                   END C25  ,
			                CASE 
			                     WHEN ( Extent15.MEM_ID IS NOT NULL ) THEN Extent15.TEL_HUSE
			                ELSE ''
			                   END C26  ,
			                CASE 
			                     WHEN ( Extent1.MARTL IS NOT NULL ) THEN TO_NUMBER(Extent1.MARTL,99999.99)
			                ELSE 0
			                   END C27  ,
			                CASE 
			                     WHEN ( Extent21.CODE_ID IS NOT NULL ) THEN Extent21.CODE_NAME
			                ELSE ''
			                   END C28  ,
			                CASE 
			                     WHEN ( Extent1.DOB IS NOT NULL ) THEN to_char(Extent1.DOB,'yyyy-mm-dd')
			                ELSE ''
			                   END C29  ,
			                CASE 
			                     WHEN ( Extent1.JOIN_DT IS NOT NULL ) THEN TO_char(Extent1.JOIN_DT,'yyyy-mm-dd')
			                ELSE ''
			                   END C30  ,
			                CASE 
			                     WHEN ( Extent25.USER_VAL_ID_TO IS NOT NULL ) THEN to_char(Extent25.USER_VAL_ID_TO,'yyyy-mm-dd')
			                ELSE ''
			                   END C31  ,
			                CASE 
			                     WHEN ( Extent1.STUS IS NOT NULL ) THEN Extent1.STUS
			                ELSE 0
			                   END C32   ,
			                CASE 
			                     WHEN ( NOT ( ( Extent4.MEM_ID IS NULL )
			                       AND ( Extent4.MEM_CODE IS NULL )
			                       AND ( Extent4.MEM_LVL IS NULL )
			                       AND ( Extent4.DEPT_CODE IS NULL )
			                       AND ( Extent4.GRP_CODE IS NULL )
			                       AND ( Extent4.ORG_CODE IS NULL )
			                       AND ( Extent4.TOP_ORG_CODE IS NULL )
			                       AND ( Extent4.MEM_UP_ID IS NULL )
			                       AND ( Extent4.LVL3_UP_ID IS NULL )
			                       AND ( Extent4.LVL2_UP_ID IS NULL )
			                       AND ( Extent4.LVL1_UP_ID IS NULL )
			                       AND ( Extent4.LVL0_UP_ID IS NULL ) ) ) THEN Extent4.MEM_UP_ID
			                ELSE 0
			                   END C33  ,
			                CASE 
			                     WHEN ( Extent22.WH_LOC_ID IS NOT NULL ) THEN Extent22.WH_LOC_ID
			                ELSE 0
			                   END C34  ,
			                CASE 
			                     WHEN ( Extent1.NATION IS NOT NULL ) THEN TO_NUMBER(Extent1.NATION,99999.99)
			                ELSE 0
			                   END C35  ,
			                CASE 
			                     WHEN ( Extent17.CNTY_ID IS NOT NULL ) THEN Extent17.NAME
			                ELSE ''
			                   END C36  ,
			                CASE 
			                     WHEN (1 IS NOT NULL ) THEN 1
			                ELSE 0
			                   END C37  ,
			                CASE 
			                     WHEN ( Extent7.POST_CODE_ID IS NOT NULL ) THEN Extent7.POST_CODE
			                ELSE ''
			                   END C38  ,
			                CASE 
			                     WHEN ( Extent1.RACE IS NOT NULL ) THEN TO_NUMBER(Extent1.RACE,99999.99)
			                ELSE 0
			                   END C39  ,
			                CASE 
			                     WHEN ( Extent18.CODE_ID IS NOT NULL ) THEN Extent18.CODE_NAME
			                ELSE ''
			                   END C40,
			                CASE 
			                     WHEN ( NOT ( ( Extent4.MEM_ID IS NULL )
			                       AND ( Extent4.MEM_CODE IS NULL )
			                       AND ( Extent4.MEM_LVL IS NULL )
			                       AND ( Extent4.DEPT_CODE IS NULL )
			                       AND ( Extent4.GRP_CODE IS NULL )
			                       AND ( Extent4.ORG_CODE IS NULL )
			                       AND ( Extent4.TOP_ORG_CODE IS NULL )
			                       AND ( Extent4.MEM_UP_ID IS NULL )
			                       AND ( Extent4.LVL3_UP_ID IS NULL )
			                       AND ( Extent4.LVL2_UP_ID IS NULL )
			                       AND ( Extent4.LVL1_UP_ID IS NULL )
			                       AND ( Extent4.LVL0_UP_ID IS NULL ) ) ) THEN Extent4.DEPT_CODE
			                ELSE ''
			                   END C41  ,
			                CASE 
			                     WHEN ( NOT ( ( Extent4.MEM_ID IS NULL )
			                       AND ( Extent4.MEM_CODE IS NULL )
			                       AND ( Extent4.MEM_LVL IS NULL )
			                       AND ( Extent4.DEPT_CODE IS NULL )
			                       AND ( Extent4.GRP_CODE IS NULL )
			                       AND ( Extent4.ORG_CODE IS NULL )
			                       AND ( Extent4.TOP_ORG_CODE IS NULL )
			                       AND ( Extent4.MEM_UP_ID IS NULL )
			                       AND ( Extent4.LVL3_UP_ID IS NULL )
			                       AND ( Extent4.LVL2_UP_ID IS NULL )
			                       AND ( Extent4.LVL1_UP_ID IS NULL )
			                       AND ( Extent4.LVL0_UP_ID IS NULL ) ) ) THEN Extent4.GRP_CODE
			                ELSE ''
			                   END C42  ,
			                CASE 
			                     WHEN ( NOT ( ( Extent4.MEM_ID IS NULL )
			                       AND ( Extent4.MEM_CODE IS NULL )
			                       AND ( Extent4.MEM_LVL IS NULL )
			                       AND ( Extent4.DEPT_CODE IS NULL )
			                       AND ( Extent4.GRP_CODE IS NULL )
			                       AND ( Extent4.ORG_CODE IS NULL )
			                       AND ( Extent4.TOP_ORG_CODE IS NULL )
			                       AND ( Extent4.MEM_UP_ID IS NULL )
			                       AND ( Extent4.LVL3_UP_ID IS NULL )
			                       AND ( Extent4.LVL2_UP_ID IS NULL )
			                       AND ( Extent4.LVL1_UP_ID IS NULL )
			                       AND ( Extent4.LVL0_UP_ID IS NULL ) ) ) THEN Extent4.ORG_CODE
			                ELSE ''
			                   END C43  ,
			                CASE 
			                     WHEN ( NOT ( ( Extent4.MEM_ID IS NULL )
			                       AND ( Extent4.MEM_CODE IS NULL )
			                       AND ( Extent4.MEM_LVL IS NULL )
			                       AND ( Extent4.DEPT_CODE IS NULL )
			                       AND ( Extent4.GRP_CODE IS NULL )
			                       AND ( Extent4.ORG_CODE IS NULL )
			                       AND ( Extent4.TOP_ORG_CODE IS NULL )
			                       AND ( Extent4.MEM_UP_ID IS NULL )
			                       AND ( Extent4.LVL3_UP_ID IS NULL )
			                       AND ( Extent4.LVL2_UP_ID IS NULL )
			                       AND ( Extent4.LVL1_UP_ID IS NULL )
			                       AND ( Extent4.LVL0_UP_ID IS NULL ) ) ) THEN Extent4.MEM_LVL
			                ELSE 0
			                   END C44  ,
			                CASE 
			                     WHEN ( NOT ( ( Extent4.MEM_ID IS NULL )
			                       AND ( Extent4.MEM_CODE IS NULL )
			                       AND ( Extent4.MEM_LVL IS NULL )
			                       AND ( Extent4.DEPT_CODE IS NULL )
			                       AND ( Extent4.GRP_CODE IS NULL )
			                       AND ( Extent4.ORG_CODE IS NULL )
			                       AND ( Extent4.TOP_ORG_CODE IS NULL )
			                       AND ( Extent4.MEM_UP_ID IS NULL )
			                       AND ( Extent4.LVL3_UP_ID IS NULL )
			                       AND ( Extent4.LVL2_UP_ID IS NULL )
			                       AND ( Extent4.LVL1_UP_ID IS NULL )
			                       AND ( Extent4.LVL0_UP_ID IS NULL ) ) ) THEN Extent4.LVL3_UP_ID
			                ELSE 0
			                   END C45  ,
			                CASE 
			                     WHEN ( NOT ( ( Extent4.MEM_ID IS NULL )
			                       AND ( Extent4.MEM_CODE IS NULL )
			                       AND ( Extent4.MEM_LVL IS NULL )
			                       AND ( Extent4.DEPT_CODE IS NULL )
			                       AND ( Extent4.GRP_CODE IS NULL )
			                       AND ( Extent4.ORG_CODE IS NULL )
			                       AND ( Extent4.TOP_ORG_CODE IS NULL )
			                       AND ( Extent4.MEM_UP_ID IS NULL )
			                       AND ( Extent4.LVL3_UP_ID IS NULL )
			                       AND ( Extent4.LVL2_UP_ID IS NULL )
			                       AND ( Extent4.LVL1_UP_ID IS NULL )
			                       AND ( Extent4.LVL0_UP_ID IS NULL ) ) ) THEN Extent4.LVL2_UP_ID
			                ELSE 0
			                   END C46  ,
			                CASE 
			                     WHEN ( NOT ( ( Extent4.MEM_ID IS NULL )
			                       AND ( Extent4.MEM_CODE IS NULL )
			                       AND ( Extent4.MEM_LVL IS NULL )
			                       AND ( Extent4.DEPT_CODE IS NULL )
			                       AND ( Extent4.GRP_CODE IS NULL )
			                       AND ( Extent4.ORG_CODE IS NULL )
			                       AND ( Extent4.TOP_ORG_CODE IS NULL )
			                       AND ( Extent4.MEM_UP_ID IS NULL )
			                       AND ( Extent4.LVL3_UP_ID IS NULL )
			                       AND ( Extent4.LVL2_UP_ID IS NULL )
			                       AND ( Extent4.LVL1_UP_ID IS NULL )
			                       AND ( Extent4.LVL0_UP_ID IS NULL ) ) ) THEN Extent4.LVL1_UP_ID
			                ELSE 0
			                   END C47,  
			               CASE 
			                     WHEN ( Extent1.RESIGN_DT IS NOT NULL ) THEN to_char(Extent1.RESIGN_DT,'yyyy-mm-dd')
			                ELSE ''
			                   END C48  ,
			                --CASE 
			                 --    WHEN (1 IS NOT NULL ) THEN TO_NUMBER(1,99999.99)
			                --ELSE 0
			                 --  END C49  ,
			                CASE 
			                     WHEN ( Extent8.STATE_ID IS NOT NULL ) THEN Extent8.NAME
			                ELSE ''
			                   END C50  ,
			                CASE 
			                     WHEN ( Extent20.MEM_ID IS NOT NULL ) THEN Extent20.MEM_CODE
			                ELSE ''
			                   END C51  ,
			                CASE 
			                     WHEN ( Extent20.MEM_ID IS NOT NULL ) THEN Extent20.NAME
			                ELSE ''
			                   END C52  ,
			                CASE 
			                     WHEN ( Extent20.MEM_ID IS NOT NULL ) THEN Extent20.NRIC
			                ELSE ''
			                   END C53  ,
			                CASE 
			                     WHEN ( Extent1.TRM_DT IS NOT NULL ) THEN to_char(Extent1.TRM_DT,'yyyy-mm-dd')
			                ELSE ''
			                   END C54  ,
			                CASE 
			                     WHEN ( Extent1.TRNSPRT IS NOT NULL ) THEN Extent1.TRNSPRT
			                ELSE 0
			                   END C55  ,
			                CASE 
			                     WHEN ( Extent19.CODE_ID IS NOT NULL ) THEN Extent19.CODE_NAME
			                ELSE ''
			                   END C56  ,
			                CASE 
			                     WHEN ( Extent5.MEM_ORG_DESC_ID IS NOT NULL ) THEN Extent5.MEM_ORG_DESC
			                ELSE ''
			                   END C57  ,
			                CASE 
			                     WHEN ( Extent1.SPOUSE_DOB IS NOT NULL ) THEN to_char(Extent1.SPOUSE_DOB,'yyyy-mm-dd')
			                ELSE ''
			                   END C58  ,
			                CASE 
			                     WHEN dbms_lob.getlength(Extent23.CODE_DESC) = 0 THEN null
			                ELSE Extent23.CODE_DESC
			                   END C59  ,
			                CASE 
			                     WHEN ( Extent24.CODE_NAME IS NULL ) THEN ''
			                ELSE Extent24.CODE_NAME
			                   END C60  
			         FROM ORG0001D Extent1 
			                JOIN SYS0038M Extent2   ON Extent2.STUS_CODE_ID = Extent1.STUS
			                JOIN SYS0013M Extent3   ON Extent3.CODE_ID = Extent1.MEM_TYPE
			        LEFT JOIN ( SELECT vMemberOrg.MEM_ID MEM_ID  ,
			                                   vMemberOrg.MEM_CODE MEM_CODE  ,
			                                   vMemberOrg.MEM_LVL MEM_LVL  ,
			                                   vMemberOrg.DEPT_CODE DEPT_CODE  ,
			                                   vMemberOrg.GRP_CODE GRP_CODE  ,
			                                   vMemberOrg.ORG_CODE ORG_CODE  ,
			                                   vMemberOrg.TOP_ORG_CODE TOP_ORG_CODE  ,
			                                   vMemberOrg.MEM_UP_ID MEM_UP_ID  ,
			                                   vMemberOrg.LVL3_UP_ID LVL3_UP_ID  ,
			                                   vMemberOrg.LVL2_UP_ID LVL2_UP_ID  ,
			                                   vMemberOrg.LVL1_UP_ID LVL1_UP_ID  ,
			                                   vMemberOrg.LVL0_UP_ID LVL0_UP_ID  
			                            FROM ORG1001V vMemberOrg  ) Extent4   ON Extent4.MEM_ID = Extent1.MEM_ID
			                LEFT JOIN ORG0012D Extent5   ON ( Extent5.MEM_ORG_LVL = Extent4.MEM_LVL )
			                AND ( Extent5.MEM_TYPE_ID = Extent1.MEM_TYPE )
			                LEFT JOIN SYS0039M Extent6   ON 1 = 1
			                LEFT JOIN SYS0030C Extent7   ON 1 = 1
			                LEFT JOIN SYS0035M Extent8   ON Extent8.STATE_ID = 1
			                LEFT JOIN SYS0015M Extent9   ON 1 = 1
			                LEFT JOIN SYS0005M Extent10   ON Extent10.BRNCH_ID = UTILS.CONVERT_TO_NUMBER(Extent1.BRNCH,99999.99)
			                LEFT JOIN SYS0013M Extent11   ON Extent11.CODE_ID = TO_NUMBER(Extent1.EDC_LEV,99999.99)
			                LEFT JOIN SYS0013M Extent12   ON Extent12.CODE_ID = TO_NUMBER(Extent1.LANG,99999.99)
			                LEFT JOIN ORG0001D Extent13   ON Extent13.MEM_ID = Extent4.LVL1_UP_ID
			                LEFT JOIN ORG0001D Extent14   ON Extent14.MEM_ID = Extent4.LVL2_UP_ID
			                LEFT JOIN ORG0001D Extent15   ON Extent15.MEM_ID = Extent4.LVL3_UP_ID
			                LEFT JOIN SYS0013M Extent16   ON Extent16.CODE_ID = TO_NUMBER(Extent1.MARTL,99999.99)
			                LEFT JOIN SYS0015M Extent17   ON Extent17.CNTY_ID = TO_NUMBER(Extent1.NATION,99999.99)
			                LEFT JOIN SYS0013M Extent18   ON Extent18.CODE_ID = TO_NUMBER(Extent1.RACE,99999.99)
			                LEFT JOIN SYS0013M Extent19   ON Extent19.CODE_ID = Extent1.TRNSPRT
			                LEFT JOIN ORG0001D Extent20   ON Extent20.MEM_CODE = Extent1.SPONS_CODE
			                LEFT JOIN SYS0013M Extent21   ON Extent21.CODE_ID = TO_NUMBER(Extent1.MARTL,99999.99)
			                LEFT JOIN SYS0028M Extent22   ON ( Extent22.WH_LOC_CODE = Extent1.MEM_CODE )
			                AND ( Extent1.MEM_TYPE IN ( 2,3 )
			               )
			        LEFT JOIN SYS0013M Extent23   ON Extent23.CODE_ID = Extent1.RANK
			                LEFT JOIN SYS0013M Extent24   ON Extent24.CODE_ID = TO_NUMBER(Extent1.BIZ_TYPE,99999.99)
			                LEFT JOIN SYS0047M Extent25   ON Extent25.USER_FULL_NAME = Extent1.FULL_NAME
			          WHERE  Extent1.MEM_ID = #{memId} AND ROWNUM <= 1  ) Limit1
			           ]]>
          </select>
          <select id="selectViewInstallation" parameterType="Map" resultType="egovMap">
	          SELECT Extent1.RESULT_ID RESULT_ID  ,
			       Extent2.CODE CODE  ,
			       Extent1.INSTALL_DT INSTALL_DT  ,
			       Extent3.MEM_CODE MEM_CODE  ,
			       Extent3.NAME NAME  ,
			       Extent1.REM REM  
			  FROM SAL0047D Extent1
			         LEFT JOIN SYS0038M Extent2   ON Extent1.STUS_CODE_ID = Extent2.STUS_CODE_ID
			         LEFT JOIN ORG0001D Extent3   ON Extent1.CT_ID = Extent3.MEM_ID
			 WHERE  Extent1.ENTRY_ID = #{installEntryId}
		 </select>
		 <select id="selectCallType" parameterType="Map" resultType="egovMap">
		 SELECT Extent2.CALL_ENTRY_ID CALL_ENTRY_ID  ,
		       Extent2.SALES_ORD_ID SALES_ORD_ID  ,
		       Extent2.TYPE_ID TYPE_ID  ,
		       Extent2.STUS_CODE_ID STUS_CODE_ID  ,
		       Extent2.RESULT_ID RESULT_ID  ,
		       Extent2.DOC_ID DOC_ID  ,
		       Extent2.CRT_USER_ID CRT_USER_ID  ,
		       Extent2.CRT_DT CRT_DT  ,
		       Extent2.CALL_DT CALL_DT  ,
		       Extent2.IS_WAIT_FOR_CANCL IS_WAIT_FOR_CANCL  ,
		       Extent2.HAPY_CALLER_ID HAPY_CALLER_ID  ,
		       Extent2.UPD_DT UPD_DT  ,
		       Extent2.UPD_USER_ID UPD_USER_ID  ,
		       Extent2.ORI_CALL_DT ORI_CALL_DT  
		  FROM SAL0046D Extent1
		         JOIN CCR0006D Extent2   ON Extent1.CALL_ENTRY_ID = Extent2.CALL_ENTRY_ID
		 WHERE  Extent1.INSTALL_ENTRY_ID =#{installEntryId}
		 </select>
		 <select id="getOrderExchangeTypeByInstallEntryID" parameterType="Map" resultType="egovMap">
		 SELECT Extent1.INSTALL_ENTRY_ID INSTALL_ENTRY_ID  ,
		       Extent4.SALES_ORD_NO SALES_ORD_NO  ,
		       CASE 
		            WHEN ( Extent4.REF_NO IS NOT NULL ) THEN Extent4.REF_NO
		       ELSE ''
		          END C1  ,
		       Extent4.SALES_DT SALES_DT  ,
		       CASE 
		            WHEN ( Extent4.UPD_DT IS NOT NULL ) THEN Extent4.UPD_DT
		       ELSE Extent4.SALES_DT
		          END C2  ,
		       CASE 
		            WHEN ( Extent4.UPD_USER_ID IS NOT NULL ) THEN Extent4.UPD_USER_ID
		       ELSE 0
		          END C3  ,
		       CASE 
		            WHEN ( Extent7.CODE_ID IS NOT NULL ) THEN Extent7.CODE_ID
		       ELSE 0
		          END C4  ,
		       CASE 
		            WHEN ( Extent7.CODE_NAME IS NOT NULL ) THEN Extent7.CODE_NAME
		       ELSE ''
		          END C5  ,
		       Extent8.STK_CTGRY_ID STK_CTGRY_ID  ,
		       Extent8.STK_ID STK_ID  ,
		       CASE 
		            WHEN ( Extent8.STK_CODE IS NOT NULL ) THEN Extent8.STK_CODE
		       ELSE ''
		          END C6  ,
		       CASE 
		            WHEN ( Extent8.STK_DESC IS NOT NULL ) THEN Extent8.STK_DESC
		       ELSE ''
		          END C7  ,
		       Extent5.CUST_ID CUST_ID  ,
		       Extent5.NAME NAME  ,
		       Extent5.NRIC NRIC  ,
		       Extent4.REM REM  ,
		       Extent4.PROMO_ID PROMO_ID  ,
		       Extent10.PROMO_CODE PROMO_CODE  ,
		       Extent10.PROMO_DESC PROMO_DESC  ,
		       CASE 
		            WHEN ( Extent3.SO_EXCHG_OLD_PROMO_ID IS NOT NULL ) THEN Extent3.SO_EXCHG_OLD_PROMO_ID
		       ELSE 0
		          END C8  ,
		       CASE 
		            WHEN ( Extent11.PROMO_CODE IS NOT NULL ) THEN Extent11.PROMO_CODE
		       ELSE ''
		          END C9  ,
		       CASE 
		            WHEN ( Extent11.PROMO_DESC IS NOT NULL ) THEN Extent11.PROMO_DESC
		       ELSE ''
		          END C10  ,
		       CASE 
		            WHEN ( Extent3.SO_EXCHG_NW_PRC_ID IS NOT NULL ) THEN Extent3.SO_EXCHG_NW_PRC_ID
		       ELSE 0
		          END C11  ,
		       CASE 
		            WHEN ( Extent3.SO_EXCHG_NW_PRC IS NOT NULL ) THEN Extent3.SO_EXCHG_NW_PRC
		       ELSE UTILS.CONVERT_TO_FLOAT(0,53)
		          END C12  ,
		       CASE 
		            WHEN ( Extent3.SO_EXCHG_NW_PV IS NOT NULL ) THEN Extent3.SO_EXCHG_NW_PV
		       ELSE UTILS.CONVERT_TO_FLOAT(0,53)
		          END C13  ,
		       CASE 
		            WHEN ( Extent3.SO_EXCHG_OLD_PRC_ID IS NOT NULL ) THEN Extent3.SO_EXCHG_OLD_PRC_ID
		       ELSE 0
		          END C14  ,
		       CASE 
		            WHEN ( Extent3.SO_EXCHG_OLD_PRC IS NOT NULL ) THEN Extent3.SO_EXCHG_OLD_PRC
		       ELSE UTILS.CONVERT_TO_FLOAT(0,53)
		          END C15  ,
		       CASE 
		            WHEN ( Extent3.SO_EXCHG_OLD_PV IS NOT NULL ) THEN Extent3.SO_EXCHG_OLD_PV
		       ELSE UTILS.CONVERT_TO_FLOAT(0,53)
		          END C16  ,
		       CASE 
		            WHEN ( Extent4.MTH_RENT_AMT IS NOT NULL ) THEN Extent4.MTH_RENT_AMT
		       ELSE UTILS.CONVERT_TO_FLOAT(0,53)
		          END C17  ,
		       CASE 
		            WHEN ( Extent4.DEF_RENT_AMT IS NOT NULL ) THEN Extent4.DEF_RENT_AMT
		       ELSE UTILS.CONVERT_TO_FLOAT(0,53)
		          END C18  ,
		       CASE 
		            WHEN ( Extent12.STUS_CODE_ID IS NOT NULL ) THEN Extent12.STUS_CODE_ID
		       ELSE 0
		          END C19  ,
		       Extent12.NAME NAME1  ,
		       Extent6.MEM_ID MEM_ID  ,
		       Extent6.MEM_CODE MEM_CODE  ,
		       Extent6.MEM_TYPE MEM_TYPE  ,
		       Extent6.NAME NAME2  ,
		       Extent6.FULL_NAME FULL_NAME  ,
		       Extent6.PASSWD PASSWD  ,
		       Extent6.NRIC NRIC1  ,
		       Extent6.DOB DOB  ,
		       Extent6.GENDER GENDER  ,
		       Extent6.RACE RACE  ,
		       Extent6.MARTL MARTL  ,
		       Extent6.NATION NATION  ,
		     --  Extent6.ADDR1 ADDR1  ,
		     --  Extent6.ADDR2 ADDR2  ,
		     --  Extent6.ADDR3 ADDR3  ,
		     --  Extent6.ADDR4 ADDR4  ,
		     --  Extent6.AREAL AREAL  ,
		     --  Extent6.POST_CODE POST_CODE  ,
		       -- Extent6.STATE STATE  ,
		    --   Extent6.CNTY CNTY  ,
		       Extent6.TEL_OFFICE TEL_OFFICE  ,
		       Extent6.TEL_HUSE TEL_HUSE  ,
		       Extent6.TEL_MOBILE TEL_MOBILE  ,
		       Extent6.EMAIL EMAIL  ,
		       Extent6.SPUSE_CODE SPUSE_CODE  ,
		       Extent6.SPOUSE_NAME SPOUSE_NAME  ,
		       Extent6.SPOUSE_NRIC SPOUSE_NRIC  ,
		       Extent6.SPOUSE_OCPAT SPOUSE_OCPAT  ,
		       Extent6.SPOUSE_TEL_CNTC SPOUSE_TEL_CNTC  ,
		       Extent6.SPOUSE_DOB SPOUSE_DOB  ,
		       Extent6.EDC_LEV EDC_LEV  ,
		       Extent6.LANG LANG  ,
		       Extent6.BANK BANK  ,
		       Extent6.BANK_ACC_NO BANK_ACC_NO  ,
		       Extent6.SPONS_CODE SPONS_CODE  ,
		       Extent6.JOIN_DT JOIN_DT  ,
		       Extent6.RESIGN_DT RESIGN_DT  ,
		       Extent6.TRM_DT TRM_DT  ,
		       Extent6.RENEW_DT RENEW_DT  ,
		       Extent6.AGRMNT_NO AGRMNT_NO  ,
		       Extent6.BRNCH BRNCH  ,
		       Extent6.STUS STUS  ,
		       Extent6.SYNC_CHK SYNC_CHK  ,
		       Extent6.RANK RANK  ,
		       Extent6.TRNSPRT TRNSPRT  ,
		       Extent6.PROMO_DT PROMO_DT  ,
		       Extent6.TR_NO TR_NO  ,
		       Extent6.CRT_DT CRT_DT  ,
		       Extent6.CRT_USER_ID CRT_USER_ID  ,
		       Extent6.UPD_DT UPD_DT  ,
		       Extent6.UPD_USER_ID UPD_USER_ID  ,
		       Extent6.MEM_IS_OUT_SRC MEM_IS_OUT_SRC  ,
		       Extent6.APLICNT_ID APLICNT_ID  ,
		       Extent6.BIZ_TYPE BIZ_TYPE  ,
		       Extent6.HSPTLZ HSPTLZ  ,
		       Extent9.MEM_ID MEMBERID1  ,
		       Extent9.MEM_UP_ID MEM_UP_ID  ,
		       Extent9.MEM_LVL MEM_LVL  ,
		       Extent9.DEPT_CODE DEPT_CODE  ,
		       Extent9.ORG_UPD_USER_ID ORG_UPD_USER_ID  ,
		       Extent9.ORG_UPD_DT ORG_UPD_DT  ,
		       Extent9.PREV_DEPT_CODE PREV_DEPT_CODE  ,
		       Extent9.PREV_GRP_CODE PREV_GRP_CODE  ,
		       Extent9.PREV_MEM_ID_ID PREV_MEM_ID_ID  ,
		       Extent9.PREV_MEM_LVL PREV_MEM_LVL  ,
		       Extent9.ORG_STUS_CODE_ID ORG_STUS_CODE_ID  ,
		       Extent9.PR_CODE PR_CODE  ,
		       Extent9.PR_MEM_ID PR_MEM_ID  ,
		       Extent9.GRAND_PR_CODE GRAND_PR_CODE  ,
		       Extent9.GRAND_PR_MEM_ID GRAND_PR_MEM_ID  ,
		       Extent9.LAST_DEPT_CODE LAST_DEPT_CODE  ,
		       Extent9.LAST_GRP_CODE LAST_GRP_CODE  ,
		       Extent9.LAST_ORG_CODE LAST_ORG_CODE  ,
		       Extent9.LAST_TOP_ORG_CODE LAST_TOP_ORG_CODE  ,
		       Extent9.BRNCH_ID BRNCH_ID  ,
		       CASE 
		            WHEN ( Extent3.SO_CUR_STUS_ID IS NOT NULL ) THEN Extent3.SO_CUR_STUS_ID
		       ELSE 0
		          END C20  ,
		       Extent2.DOC_ID DOC_ID  ,
		       CASE 
		            WHEN ( Extent3.SO_EXCHG_NW_APP_TYPE_ID IS NOT NULL ) THEN Extent3.SO_EXCHG_NW_APP_TYPE_ID
		       ELSE 0
		          END C21  
		  FROM SAL0046D Extent1
		         JOIN CCR0006D Extent2   ON Extent1.CALL_ENTRY_ID = Extent2.CALL_ENTRY_ID
		         LEFT JOIN SAL0004D Extent3   ON Extent2.DOC_ID = Extent3.SO_EXCHG_ID
		         JOIN SAL0001D Extent4   ON Extent1.SALES_ORD_ID = Extent4.SALES_ORD_ID
		         JOIN SAL0029D Extent5   ON Extent4.CUST_ID = Extent5.CUST_ID
		         JOIN ORG0001D Extent6   ON Extent4.MEM_ID = Extent6.MEM_ID
		         LEFT JOIN SYS0013M Extent7   ON Extent4.APP_TYPE_ID = Extent7.CODE_ID
		         LEFT JOIN SYS0026M Extent8   ON Extent1.INSTALL_STK_ID = Extent8.STK_ID
		         LEFT JOIN ORG0005D Extent9   ON Extent6.MEM_ID = Extent9.MEM_ID
		         LEFT JOIN SAL0017D Extent10   ON Extent4.PROMO_ID = Extent10.PROMO_ID
		         LEFT JOIN SAL0017D Extent11   ON Extent3.SO_EXCHG_OLD_PROMO_ID = Extent11.PROMO_ID
		         LEFT JOIN SYS0038M Extent12   ON Extent1.STUS_CODE_ID = Extent12.STUS_CODE_ID
		 WHERE  Extent1.INSTALL_ENTRY_ID = #{installEntryId}
		 </select>
    </mapper>