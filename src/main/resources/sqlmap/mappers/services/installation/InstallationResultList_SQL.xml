<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
    <mapper
     namespace="com.coway.trust.biz.services.installation.impl.InstallationResultListMapper">


    <select id="selectApplicationType" parameterType="Map" resultType="egovMap">
    <![CDATA[
       SELECT Project1.CODE_ID CODE_ID  ,
	       Project1.CODE_MASTER_ID CODE_MASTER_ID  ,
	       Project1.CODE CODE  ,
	       Project1.CODE_NAME CODE_NAME  ,
	       Project1.CODE_DESC CODE_DESC  ,
	       Project1.DISAB DISAB  ,
	       Project1.CRT_DT CRT_DT  ,
	       Project1.CRT_USER_ID CRT_USER_ID  ,
	       Project1.UPD_DT UPD_DT  ,
	       Project1.UPD_USER_ID UPD_USER_ID  ,
	       Project1.OLD_CODE_ID OLD_CODE_ID
	  FROM ( SELECT Extent1.CODE_ID CODE_ID  ,
	                Extent1.CODE_MASTER_ID CODE_MASTER_ID  ,
	                Extent1.CODE CODE  ,
	                Extent1.CODE_NAME CODE_NAME  ,
	                Extent1.CODE_DESC CODE_DESC  ,
	                Extent1.DISAB DISAB  ,
	                Extent1.CRT_DT CRT_DT  ,
	                Extent1.CRT_USER_ID CRT_USER_ID  ,
	                Extent1.UPD_DT UPD_DT  ,
	                Extent1.UPD_USER_ID UPD_USER_ID  ,
	                Extent1.OLD_CODE_ID OLD_CODE_ID
	         FROM SYS0013M Extent1
	          WHERE  Extent1.CODE_MASTER_ID = 10 ) Project1
	  ORDER BY Project1.CODE_ID ASC
          ]]>
    </select>

    <select id="selectInstallStatus" parameterType="Map" resultType="egovMap">
    <![CDATA[
       SELECT Extent1.STUS_CODE_ID CODE_ID  ,
	       Extent1.CODE CODE  ,
	       Extent1.NAME CODE_NAME
	  FROM SYS0038M Extent1
	 WHERE  Extent1.STUS_CODE_ID IN ( 1,4,21 )
          ]]>
    </select>
    <select id="installationResultList" parameterType="Map" resultType="egovMap">
        <![CDATA[
		          SELECT DISTINCT
                        CD1.CODE,
                        IE.INSTALL_ENTRY_NO,
                        SOM.SALES_ORD_NO,
                        IE.INSTALL_DT,
                        MEM.MEM_CODE,
                        STK.STK_DESC,
                        SOM.CUST_ID,
                        MEM.NAME,
                        CD2.CODE as APP_TYPE,
                        ST.CODE CODE1,
                        IE.INSTALL_ENTRY_ID,
                        CE.CALL_ENTRY_ID,
                        CD1.CODE_ID CODEID1,
                        CD1.CODE_NAME,
                        SOM.SALES_ORD_ID SALES_ORD_ID,
                        TO_CHAR (IE.INSTALL_DT, 'DD-MM-YYYY') C3,
                        CE.DOC_ID C1 ,
                        I.BRNCH_ID ,
                         BRANCH.CODE BRNCH_CODE
                        FROM SAL0001D som
                        join SAL0002D SOD ON SOD.SALES_ORD_ID = som.SALES_ORD_ID
                        JOIN SAL0045D I ON I.SALES_ORD_ID = som.SALES_ORD_ID
                        LEFT JOIN SAL0046D IE ON IE.SALES_ORD_ID = som.SALES_ORD_ID
                        LEFT JOIN SAL0047D IR ON IR.ENTRY_ID = IE.INSTALL_ENTRY_ID
                        LEFT JOIN CCR0006D CE ON CE.CALL_ENTRY_ID = IE.CALL_ENTRY_ID
                        JOIN SYS0026M STK ON STK.STK_ID = SOD.ITM_STK_ID
                        LEFT JOIN SYS0013M CD1 ON CD1.CODE_ID = CE.TYPE_ID
                        LEFT JOIN SYS0013M CD2 ON CD2.CODE_ID = som.APP_TYPE_ID
                        LEFT JOIN SYS0038M ST ON ST.STUS_CODE_ID = IE.STUS_CODE_ID
                        LEFT JOIN ORG0001D MEM ON MEM.MEM_ID = IE.CT_ID
                        JOIN SYS0005M BRANCH ON BRANCH.BRNCH_ID = I.BRNCH_ID
                        JOIN SAL0023D CUSTADD ON CUSTADD.CUST_ADD_ID = I.ADD_ID
                        JOIN SAL0029D CUST ON CUST.CUST_ID = CUSTADD.CUST_ID
                        WHERE 1=1
		                 ]]>
		                 <if test="installStatusList != null and installStatusList != '' ">
                            and ST.STUS_CODE_ID IN
                            <foreach item="item" collection="installStatusList" index="index" open="(" separator="," close=")">
		                    #{item}
		                    </foreach>
		                 </if>
		                 <if test="typeList != null and typeList != '' ">
                            AND CD1.CODE_ID IN
                            <foreach item="item" collection="typeList" index="index" open="(" separator="," close=")">
                            #{item}
                            </foreach>
                         </if>
                         <if test="appTypeList != null and appTypeList != '' ">
                            AND CD2.CODE_ID IN
                            <foreach item="item" collection="appTypeList" index="index" open="(" separator="," close=")">
                            #{item}
                            </foreach>
                         </if>
                         <if test="installNo != null and installNo != ''">
                           AND ( (TO_NUMBER(INSTR(UPPER(IE.INSTALL_ENTRY_NO), UPPER(LTRIM(RTRIM(#{installNo})))),99999)) > 0 )
                         </if>
                         <if test="orderNo != null and orderNo != ''">
                         AND ( (TO_NUMBER(INSTR(UPPER(SOM.SALES_ORD_NO), UPPER(LTRIM(RTRIM(#{orderNo})))),99999)) > 0 )
                         </if>
                         <if test="orderRefNo != null and orderRefNo != ''">
                         AND SOM.REF_NO = #{orderRefNo}
                         </if>
                          <if test="poNo != null and poNo != ''">
                         AND ( (TO_NUMBER(INSTR(UPPER(SOM.CUST_PO_NO), UPPER(LTRIM(RTRIM(#{poNo})))),99999)) > 0 )
                         </if>
                         <if test="ctCode != null and ctCode != ''">
                         AND ((CASE WHEN (MEM.MEM_ID IS NOT NULL) THEN MEM.MEM_CODE ELSE '' END) = #{ctCode})
                         </if>
                         <if test="dscCode != null and dscCode != ''">
                        AND I.BRNCH_ID = #{dscCode}
                         </if>
                         <if test="customerId != null and customerId != ''">
                         AND CUST.CUST_ID = #{customerId}
                         </if>
                         <if test="customerName != null and customerName != ''">
                         and ( (TO_NUMBER(INSTR(LTRIM(RTRIM(UPPER(CUST.NAME))), UPPER(LTRIM(RTRIM(#{customerName})))),99999)) > 0 )
                         </if>
                          <if test="customerIc != null and customerIc != ''">
                         AND ( (TO_NUMBER(INSTR(LTRIM(RTRIM(UPPER(CUST.NRIC))), UPPER(LTRIM(RTRIM(#{customerIc})))),99999)) > 0 )
                         </if>
                         <if test="sirimNo != null and sirimNo != ''">
                         AND IR.SIRIM_NO = #{sirimNo}
                        <!--  AND ( (TO_NUMBER(INSTR(LTRIM(RTRIM(UPPER(CASE  WHEN ( Extent9.SIRIM_NO IS NOT NULL ) THEN Extent9.SIRIM_NO
							ELSE ''
						   END))), UPPER(LTRIM(RTRIM(#{sirimNo})))),99999)) > 0 )  )-->
                         </if>
                         <if test="serialNo != null and serialNo != ''">
                         AND IR.SERIAL_NO = #{serialNo}
                         <!-- AND ( (TO_NUMBER(INSTR(LTRIM(RTRIM(UPPER(CASE WHEN ( Extent9.SERIAL_NO IS NOT NULL ) THEN Extent9.SERIAL_NO
						ELSE ''
						   END))), UPPER(LTRIM(RTRIM(#{serialNo}))),99999)) > 0 ) ) -->
                         </if>
                         <if test="instalStrlDate != '' and installEndDate == '' ">
                            <![CDATA[ AND  IE.INSTALL_DT  >= TO_DATE(#{instalStrlDate}, 'DD/MM/YYYY') ]]>
                         </if>
                          <if test="installEndDate != '' and instalStrlDate == '' ">
                            <![CDATA[  AND IE.INSTALL_DT <=  TO_DATE(#{installEndDate}, 'DD/MM/YYYY') ]]>
                         </if>
                          <if test="instalStrlDate != '' and installEndDate != '' ">
                            <![CDATA[  AND IE.INSTALL_DT  between TO_DATE(#{instalStrlDate}, 'DD/MM/YYYY') and  TO_DATE(#{installEndDate}, 'DD/MM/YYYY') ]]>
                         </if>
                         <if test="startDate != '' and endDate == '' ">
                            <![CDATA[ AND  IE.APPNT_DT  >= TO_DATE(#{startDate}, 'DD/MM/YYYY') ]]>
                         </if>
                          <if test="endDate != '' and startDate == '' ">
                            <![CDATA[  AND IE.APPNT_DT <=  TO_DATE(#{endDate}, 'DD/MM/YYYY') ]]>
                         </if>
                          <if test="startDate != '' and endDate != '' ">
                            <![CDATA[  AND IE.APPNT_DT  between TO_DATE(#{startDate}, 'DD/MM/YYYY') and  TO_DATE(#{endDate}, 'DD/MM/YYYY') ]]>
                         </if>
                         <if test="orderDate != null and orderDate != ''">
                         AND SOM.SALES_DT = TO_DATE(#{orderDate},'DD/MM/YYYY')
                         </if>
    </select>
    <select id="installationResultList2" parameterType="Map" resultType="egovMap">
    <![CDATA[
	    SELECT *
			  FROM ( SELECT Project1.INSTALL_ENTRY_ID INSTALL_ENTRY_ID  ,
			                Project1.C1 C1  ,
			                Project1.C2 C2  ,
			                Project1.INSTALL_ENTRY_NO INSTALL_ENTRY_NO  ,
			                Project1.SALES_ORD_ID SALES_ORD_ID  ,
			                Project1.SALES_ORD_NO SALES_ORD_NO  ,
			                Project1.REF_NO REF_NO  ,
			                Project1.CUST_PO_NO CUST_PO_NO  ,
			                Project1.SALES_DT SALES_DT  ,
			                Project1.C3 C3  ,
			                Project1.STK_DESC STK_DESC  ,
			                Project1.CODE_ID CODE_ID  ,
			                Project1.CODE_NAME CODE_NAME  ,
			                Project1.CALL_ENTRY_ID CALL_ENTRY_ID  ,
			                Project1.CODEID1 CODEID1  ,
			                Project1.CODE1 CODE  ,
			                Project1.STUS_CODE_ID STUS_CODE_ID  ,
			                Project1.CODE CODE1  ,
			                Project1.BRNCH_ID BRNCH_ID  ,
			                (SELECT  CODE  FROM  SYS0005M  H WHERE   H.BRNCH_ID =Project1.BRNCH_ID) BRNCH_CODE,
			                Project1.CUST_ID CUST_ID  ,
			                Project1.NAME NAME  ,
			                Project1.NRIC NRIC  ,
			                Project1.C4 C4  ,
			                Project1.C5 C5  ,
			                Project1.C6 C6
			  FROM ( SELECT Project1.INSTALL_ENTRY_ID INSTALL_ENTRY_ID  ,
			                Project1.INSTALL_ENTRY_NO INSTALL_ENTRY_NO  ,
			                Project1.CALL_ENTRY_ID CALL_ENTRY_ID  ,
			                Project1.SALES_ORD_ID SALES_ORD_ID  ,
			                Project1.SALES_ORD_NO SALES_ORD_NO  ,
			                Project1.REF_NO REF_NO  ,
			                Project1.SALES_DT SALES_DT  ,
			                Project1.CUST_PO_NO CUST_PO_NO  ,
			                Project1.CODE_ID CODE_ID  ,
			                Project1.CODE_NAME CODE_NAME  ,
			                Project1.STK_DESC STK_DESC  ,
			                Project1.CUST_ID CUST_ID  ,
			                Project1.NAME NAME  ,
			                Project1.NRIC NRIC  ,
			                Project1.BRNCH_ID BRNCH_ID  ,
			                Project1.STUS_CODE_ID STUS_CODE_ID  ,
			                Project1.CODE CODE  ,
			                Project1.CODEID1 CODEID1  ,
			                Project1.CODE1 CODE1  ,
			                Project1.C1 C1  ,
			                Project1.C2 C2  ,
			                Project1.C3 C3  ,
			                Project1.C4 C4  ,
			                Project1.C5 C5  ,
			                Project1.C6 C6  ,
			                ROW_NUMBER() OVER ( ORDER BY Project1.INSTALL_ENTRY_ID ASC  ) ROW_NUMBER
			         FROM ( SELECT Filter1.INSTALL_ENTRY_ID INSTALL_ENTRY_ID  ,
			                       Filter1.INSTALL_ENTRY_NO INSTALL_ENTRY_NO  ,
			                       Filter1.CALLENTRYID1 CALL_ENTRY_ID  ,
			                       Filter1.SALESORDERID1 SALES_ORD_ID  ,
			                       Filter1.SALES_ORD_NO SALES_ORD_NO  ,
			                       Filter1.REF_NO REF_NO  ,
			                       Filter1.SALES_DT SALES_DT  ,
			                       Filter1.CUST_PO_NO CUST_PO_NO  ,
			                       Filter1.CODEID2 CODE_ID  ,
			                       Filter1.CODENAME1 CODE_NAME  ,
			                       Filter1.STK_DESC STK_DESC  ,
			                       Filter1.CUSTOMERID1 CUST_ID  ,
			                       Filter1.NAME1 NAME  ,
			                       Filter1.NRIC NRIC  ,
			                       Filter1.BRANCHID1 BRNCH_ID  ,
			                       Filter1.STATUSCODEID1 STUS_CODE_ID  ,
			                       Filter1.CODE2 CODE  ,
			                       Filter1.CODEID3 CODEID1  ,
			                       Filter1.CODE3 CODE1  ,
			                       CASE
			                            WHEN ( Filter1.DOC_ID IS NOT NULL ) THEN Filter1.DOC_ID
			                       ELSE 0
			                          END C1  ,
			                       CASE
			                            WHEN ( Extent12.MEM_ID IS NOT NULL ) THEN Extent12.MEM_CODE
			                       ELSE ''
			                          END C2  ,
			                      Filter1.INSTALLDATE1 C3  ,
			                       CASE
			                            WHEN ( Filter1.SIRIM_NO IS NOT NULL ) THEN Filter1.SIRIM_NO
			                       ELSE ''
			                          END C4  ,
			                       CASE
			                            WHEN ( Filter1.SERIAL_NO IS NOT NULL ) THEN Filter1.SERIAL_NO
			                       ELSE ''
			                          END C5  ,
			                       CASE
			                                                       WHEN ( Filter1.INSTALLDATE2 IS NOT NULL ) THEN Filter1.INSTALLDATE2
			                       ELSE to_date('1900-01-01','yyyy-mm-dd')
			                          END C6
			                FROM ( SELECT Extent1.INSTALL_ENTRY_ID INSTALL_ENTRY_ID  ,
			                              Extent1.INSTALL_ENTRY_NO INSTALL_ENTRY_NO  ,
			                              Extent1.CT_ID CTID1  ,
			                              Extent1.INSTALL_DT INSTALLDATE1  ,
			                              Extent1.CALL_ENTRY_ID CALLENTRYID1  ,
			                              Extent2.SALES_ORD_ID SALESORDERID1  ,
			                              Extent2.SALES_ORD_NO SALES_ORD_NO  ,
			                              Extent2.REF_NO REF_NO  ,
			                              Extent2.SALES_DT SALES_DT  ,
			                              Extent2.CUST_PO_NO CUST_PO_NO  ,
			                              Extent3.CODE_ID CODEID2  ,
			                              Extent3.CODE_NAME CODENAME1  ,
			                              Extent5.STK_DESC STK_DESC  ,
			                              Extent6.CUST_ID CUSTOMERID1  ,
			                              Extent6.NAME NAME1  ,
			                              Extent6.NRIC NRIC  ,
			                              Extent7.BRNCH_ID BRANCHID1  ,
			                              Extent8.STUS_CODE_ID STATUSCODEID1  ,
			                              Extent8.CODE CODE2  ,
			                              Extent9.INSTALL_DT INSTALLDATE2  ,
			                              Extent9.SIRIM_NO SIRIM_NO  ,
			                              Extent9.SERIAL_NO SERIAL_NO  ,
			                              Extent10.DOC_ID DOC_ID  ,
			                              Extent11.CODE_ID CODEID3  ,
			                              Extent11.CODE CODE3
			                       FROM SAL0046D Extent1
			                              JOIN SAL0001D Extent2   ON Extent2.SALES_ORD_ID = Extent1.SALES_ORD_ID
			                              JOIN SYS0013M Extent3   ON Extent3.CODE_ID = Extent2.APP_TYPE_ID
			                              JOIN SAL0002D Extent4   ON Extent4.SALES_ORD_ID = Extent2.SALES_ORD_ID
			                              JOIN SYS0026M Extent5   ON Extent5.STK_ID = Extent4.ITM_STK_ID
			                              JOIN SAL0029D Extent6   ON Extent6.CUST_ID = Extent2.CUST_ID
			                              JOIN SAL0045D Extent7   ON Extent7.SALES_ORD_ID = Extent2.SALES_ORD_ID
			                              JOIN SYS0038M Extent8   ON Extent8.STUS_CODE_ID = Extent1.STUS_CODE_ID
			                              LEFT JOIN SAL0047D Extent9   ON Extent9.ENTRY_ID = Extent1.INSTALL_ENTRY_ID
			                              LEFT JOIN CCR0006D Extent10   ON Extent10.CALL_ENTRY_ID = Extent1.CALL_ENTRY_ID
			                              LEFT JOIN SYS0013M Extent11   ON Extent11.CODE_ID = Extent10.TYPE_ID
			                        WHERE  1 = Extent8.STUS_CODE_ID ) Filter1
	                       LEFT JOIN ORG0001D Extent12   ON Extent12.MEM_ID = Filter1.CTID1
	                       WHERE 1=1
                          ]]>
                          <if test="dscCode != null and dscCode != ''">
                         AND Filter1.BRANCHID1 = #{dscCode}
                         </if>
                          <if test="customerName != null and customerName != ''">
                         and ( (TO_NUMBER(INSTR(LTRIM(RTRIM(UPPER(Filter1.NAME1))), UPPER(LTRIM(RTRIM(#{customerName})))),99999)) > 0 )
                         </if>
                          <if test="customerIc != null and customerIc != ''">
                         AND ( (TO_NUMBER(INSTR(LTRIM(RTRIM(UPPER(Filter1.NRIC))), UPPER(LTRIM(RTRIM(#{customerIc})))),99999)) > 0 )
                         </if>
                         <if test="sirimNo != null and sirimNo != ''">
                         AND Filter1.SIRIM_NO = #{sirimNo}
                        <!--  AND ( (TO_NUMBER(INSTR(LTRIM(RTRIM(UPPER(CASE  WHEN ( Extent9.SIRIM_NO IS NOT NULL ) THEN Extent9.SIRIM_NO
                            ELSE ''
                           END))), UPPER(LTRIM(RTRIM(#{sirimNo})))),99999)) > 0 )  )-->
                         </if>
                         <if test="serialNo != null and serialNo != ''">
                         AND Filter1.SERIAL_NO = #{serialNo}
                         <!-- AND ( (TO_NUMBER(INSTR(LTRIM(RTRIM(UPPER(CASE WHEN ( Extent9.SERIAL_NO IS NOT NULL ) THEN Extent9.SERIAL_NO
                        ELSE ''
                           END))), UPPER(LTRIM(RTRIM(#{serialNo}))),99999)) > 0 ) ) -->
                         </if>
                         <![CDATA[
                                  ) Project1
                          ) Project1
           WHERE  Project1.ROW_NUMBER > 0
          ORDER BY Project1.INSTALL_ENTRY_ID ASC )
      ]]>
    </select>
    <select id="getInstallResultByInstallEntryID" parameterType="Map" resultType="egovMap">
        SELECT Extent1.INSTALL_ENTRY_ID INSTALL_ENTRY_ID  ,
	       Extent1.INSTALL_ENTRY_NO INSTALL_ENTRY_NO  ,
	       Extent3.SALES_ORD_ID SALES_ORD_ID  ,
	       Extent3.SALES_ORD_NO SALES_ORD_NO  ,
	       Extent3.REF_NO REF_NO  ,
	       Extent3.CUST_PO_NO CUST_PO_NO  ,
	       TO_CHAR(Extent3.SALES_DT,'DD-MM-YYYY') SALES_DT  ,
	       TO_CHAR(Extent1.INSTALL_DT,'DD-MM-YYYY')  C1  ,
	       Extent1.INSTALL_STK_ID INSTALL_STK_ID  ,
	       Extent9.STK_CODE STK_CODE  ,
	       Extent9.STK_DESC STK_DESC  ,
	       Extent10.NAME NAME  ,
	       Extent8.CODE_ID CODE_ID  ,
	       Extent8.CODE_NAME CODE_NAME  ,
	       Extent7.CODE_ID CODEID1  ,
	       Extent7.CODE CODE  ,
	       Extent7.CODE_NAME CODENAME1  ,
	       Extent13.STUS_CODE_ID STUS_CODE_ID  ,
	       Extent13.CODE CODE1  ,
	       Extent13.NAME NAME1  ,
	       Extent14.BRNCH_ID BRNCH_ID  ,
	       Extent10.CUST_ID CUST_ID  ,
	       Extent10.NRIC NRIC  ,
	       CASE
	            WHEN ( Extent3.CUST_ADD_ID IS NOT NULL ) THEN Extent3.CUST_ADD_ID
	       ELSE 0
	          END C2  ,
	       Extent3.CUST_CNT_ID CUST_CNT_ID  ,
	       Extent2.SIRIM_NO SIRIM_NO  ,
	       Extent2.SERIAL_NO SERIAL_NO  ,
	       Extent11.USER_NAME USER_NAME  ,
	       Extent9.IS_SIRIM IS_SIRIM  ,
	       Extent9.STK_GRAD STK_GRAD  ,
	       TO_CHAR(Extent2.CRT_DT,'DD-MM-YYYY') C3  ,
	       Extent9.STK_CTGRY_ID STK_CTGRY_ID  ,
	       Extent2.DOC_REF_NO1 DOC_REF_NO1  ,
	       Extent2.DOC_REF_NO2 DOC_REF_NO2  ,
	       Extent2.ALLOW_COMM ALLOW_COMM  ,
	       Extent2.IS_TRADE_IN IS_TRADE_IN  ,
	       Extent2.REQUIRE_SMS REQUIRE_SMS  ,
	       CASE
	            WHEN ( Extent12.USER_ID IS NOT NULL ) THEN Extent12.USER_NAME
	       ELSE ' '
	          END C4  ,
	       Extent2.CRT_DT C5  ,
	       CASE
	            WHEN ( Extent2.RESULT_ID IS NOT NULL ) THEN Extent2.CT_ID
	       ELSE 0
	          END C6  ,
	       Extent15.MEM_CODE MEM_CODE  ,
	       Extent15.NAME NAME2  ,
	       Extent16.WH_LOC_ID WH_LOC_ID  ,
	       Extent4.DOC_ID DOC_ID  ,
	       Extent2.INSTALL_DT INSTALL_DT  ,
	       Extent2.NEXT_CALL_DT NEXT_CALL_DT  ,
	       Extent2.REM REM  ,
	       CASE
	            WHEN ( Extent3.CUST_BILL_ID IS NOT NULL ) THEN Extent3.CUST_BILL_ID
	       ELSE 0
	          END C7  ,
           Extent6.CODE_NAME CODENAME2,
           Extent18.city,
           Extent18.STATE,
           Extent18.COUNTRY,
           Extent18.AREA,
           ctcode.mem_code as ct_mem_code,
           ctcode.name as ct_mem_name

	  FROM SAL0046D Extent1
	         LEFT JOIN SAL0047D Extent2   ON Extent1.INSTALL_ENTRY_ID = Extent2.ENTRY_ID
	         JOIN SAL0001D Extent3   ON Extent1.SALES_ORD_ID = Extent3.SALES_ORD_ID
	         LEFT JOIN CCR0006D Extent4   ON Extent1.CALL_ENTRY_ID = Extent4.CALL_ENTRY_ID
	         LEFT JOIN SAL0074D Extent5   ON Extent3.SALES_ORD_ID = Extent5.SALES_ORD_ID
	         LEFT JOIN SYS0013M Extent6   ON Extent5.MODE_ID = Extent6.CODE_ID
	         LEFT JOIN SYS0013M Extent7   ON Extent4.TYPE_ID = Extent7.CODE_ID
	         LEFT JOIN SYS0013M Extent8   ON Extent3.APP_TYPE_ID = Extent8.CODE_ID
	         LEFT JOIN SYS0026M Extent9   ON Extent1.INSTALL_STK_ID = Extent9.STK_ID
	         LEFT JOIN SAL0029D Extent10   ON Extent3.CUST_ID = Extent10.CUST_ID
	         LEFT JOIN SYS0047M  Extent11   ON Extent3.UPD_USER_ID = Extent11.USER_ID
	         LEFT JOIN SYS0047M  Extent12   ON Extent2.CRT_USER_ID = Extent12.USER_ID
	         LEFT JOIN SYS0038M Extent13   ON Extent1.STUS_CODE_ID = Extent13.STUS_CODE_ID
	         JOIN SAL0045D Extent14   ON Extent3.SALES_ORD_ID = Extent14.SALES_ORD_ID
	         LEFT JOIN ORG0001D Extent15   ON Extent2.CT_ID = Extent15.MEM_ID
	         LEFT JOIN SYS0028M Extent16   ON ( Extent15.MEM_CODE = Extent16.WH_LOC_CODE )
	         OR ( ( Extent15.MEM_CODE IS NULL )
	         AND ( Extent16.WH_LOC_CODE IS NULL ) )
             join SAL0023D Extent17
              on Extent10.CUST_ID = Extent17.CUST_ID
             join SYS0064M Extent18
              on Extent17.AREA_ID = Extent18.AREA_ID
            JOIN ORG0001D ctcode on extent1.ct_id = ctcode.mem_id
        WHERE  Extent1.INSTALL_ENTRY_ID = #{installEntryId}
     and rownum =1

    </select>
    <select id="getOrderInfo" parameterType="Map" resultType="egovMap">
	    SELECT Extent1.INSTALL_ENTRY_ID INSTALL_ENTRY_ID  ,
		   Extent1.DISTANCE,
	       Extent1.PREV_SVC_AREA,
	       Extent1.NEXT_SVC_AREA,
	       Extent3.SALES_ORD_NO SALES_ORD_NO  ,
	       Extent3.REF_NO REF_NO  ,
	       Extent3.SALES_DT SALES_DT  ,
	       Extent3.UPD_DT UPD_DT  ,
	       Extent3.UPD_USER_ID UPD_USER_ID  ,
	       Extent7.CODE_ID CODE_ID  ,
	       Extent7.CODE_NAME CODE_NAME  ,
	       Extent8.STK_CTGRY_ID STK_CTGRY_ID  ,
	       Extent9.CODE_NAME CODENAME1  ,
	       Extent8.STK_ID STK_ID  ,
	       Extent8.STK_CODE STK_CODE  ,
	       Extent8.STK_DESC STK_DESC  ,
	       Extent5.CUST_ID CUST_ID  ,
	       Extent5.NAME NAME  ,
	       Extent5.NRIC NRIC  ,
	       CASE
	            WHEN ( Extent3.REM IS NOT NULL ) THEN Extent3.REM
	       ELSE ''
	          END C1  ,
	       CASE
	            WHEN ( Extent3.PROMO_ID IS NOT NULL ) THEN Extent3.PROMO_ID
	       ELSE 0
	          END C2  ,
	       CASE
	            WHEN ( Extent11.PROMO_CODE IS NOT NULL ) THEN Extent11.PROMO_CODE
	       ELSE ''
	          END C3  ,
	       CASE
	            WHEN ( Extent11.PROMO_DESC IS NOT NULL ) THEN Extent11.PROMO_DESC
	       ELSE ''
	          END C4  ,
	       CASE
	            WHEN ( Extent3.TOT_AMT IS NOT NULL ) THEN Extent3.TOT_AMT
	       ELSE 0
	          END C5  ,
	       CASE
	            WHEN ( Extent3.TOT_PV IS NOT NULL ) THEN Extent3.TOT_PV
	       ELSE 0
	          END C6  ,
	       CASE
	            WHEN ( Extent3.MTH_RENT_AMT IS NOT NULL ) THEN Extent3.MTH_RENT_AMT
	       ELSE 0
	          END C7  ,
	       CASE
	            WHEN ( Extent3.DEF_RENT_AMT IS NOT NULL ) THEN Extent3.DEF_RENT_AMT
	       ELSE 0
	          END C8  ,
	       CASE
	            WHEN ( Extent12.STUS_CODE_ID IS NOT NULL ) THEN Extent12.STUS_CODE_ID
	       ELSE 0
	          END C9  ,
	       CASE
	            WHEN ( Extent12.NAME IS NOT NULL ) THEN Extent12.NAME
	       ELSE ''
	          END C10  ,
	       Extent6.MEM_ID MEM_ID  ,
	       Extent6.MEM_CODE MEM_CODE  ,
	       Extent6.MEM_TYPE MEM_TYPE  ,
	       Extent6.NAME NAME1  ,
	       Extent6.FULL_NAME FULL_NAME  ,
	       Extent6.PASSWD PASSWD  ,
	       Extent6.NRIC NRIC1  ,
	       Extent6.DOB DOB  ,
	       Extent6.GENDER GENDER  ,
	       Extent6.RACE RACE  ,
	       Extent6.MARTL MARTL  ,
	     <!--   Extent6.NATION NATION  ,
	       Extent6.AREAL AREAL  ,
	       Extent6.POST_CODE POST_CODE  ,
	       Extent6.STATE STATE  ,
	       Extent6.CNTY CNTY  , -->
	       Extent6.TEL_OFFICE TEL_OFFICE  ,
	       Extent6.TEL_HUSE TEL_HUSE  ,
	       Extent6.TEL_MOBILE TEL_MOBILE  ,
	       Extent6.EMAIL EMAIL  ,
	       Extent6.SPUSE_CODE SPUSE_CODE  ,
	       Extent6.SPOUSE_NAME SPOUSE_NAME  ,
	       Extent6.SPOUSE_NRIC SPOUSE_NRIC  ,
	       Extent6.SPOUSE_OCPAT SPOUSE_OCPAT  ,
	       Extent6.SPOUSE_TEL_CNTC SPOUSE_TEL_CNTC  ,
	       Extent6.SPOUSE_DOB SPOUSE_DOB  ,
	       Extent6.EDC_LEV EDC_LEV  ,
	       Extent6.LANG LANG  ,
	       Extent6.BANK BANK  ,
	       Extent6.BANK_ACC_NO BANK_ACC_NO  ,
	       Extent6.SPONS_CODE SPONS_CODE  ,
	       Extent6.JOIN_DT JOIN_DT  ,
	       Extent6.RESIGN_DT RESIGN_DT  ,
	       Extent6.TRM_DT TRM_DT  ,
	       Extent6.RENEW_DT RENEW_DT  ,
	       Extent6.AGRMNT_NO AGRMNT_NO  ,
	       Extent6.BRNCH BRNCH  ,
	       Extent6.STUS STUS  ,
	       Extent6.SYNC_CHK SYNC_CHK  ,
	       Extent6.RANK RANK  ,
	       Extent6.TRNSPRT TRNSPRT  ,
	       Extent6.PROMO_DT PROMO_DT  ,
	       Extent6.TR_NO TR_NO  ,
	       Extent6.CRT_DT CRT_DT  ,
	       Extent6.CRT_USER_ID CRT_USER_ID  ,
	       Extent6.UPD_DT UPDATED1  ,
	       Extent6.UPD_USER_ID UPDATOR1  ,
	       Extent6.MEM_IS_OUT_SRC MEM_IS_OUT_SRC  ,
	       Extent6.APLICNT_ID APLICNT_ID  ,
	       Extent6.BIZ_TYPE BIZ_TYPE  ,
	       Extent6.HSPTLZ HSPTLZ  ,
	       Extent10.MEM_ID MEMBERID1  ,
	       Extent10.MEM_UP_ID MEM_UP_ID  ,
	       Extent10.MEM_LVL MEM_LVL  ,
	       Extent10.DEPT_CODE DEPT_CODE  ,
	       Extent10.ORG_UPD_USER_ID ORG_UPD_USER_ID  ,
	       Extent10.ORG_UPD_DT ORG_UPD_DT  ,
	       Extent10.PREV_DEPT_CODE PREV_DEPT_CODE  ,
	       Extent10.PREV_GRP_CODE PREV_GRP_CODE  ,
	       Extent10.PREV_MEM_ID_ID PREV_MEM_ID_ID  ,
	       Extent10.PREV_MEM_LVL PREV_MEM_LVL  ,
	       Extent10.ORG_STUS_CODE_ID ORG_STUS_CODE_ID  ,
	       Extent10.PR_CODE PR_CODE  ,
	       Extent10.PR_MEM_ID PR_MEM_ID  ,
	       Extent10.GRAND_PR_CODE GRAND_PR_CODE  ,
	       Extent10.GRAND_PR_MEM_ID GRAND_PR_MEM_ID  ,
	       Extent10.LAST_DEPT_CODE LAST_DEPT_CODE  ,
	       Extent10.LAST_GRP_CODE LAST_GRP_CODE  ,
	       Extent10.LAST_ORG_CODE LAST_ORG_CODE  ,
	       Extent10.LAST_TOP_ORG_CODE LAST_TOP_ORG_CODE  ,
	       Extent10.BRNCH_ID BRNCH_ID  ,
	       Extent4.ITM_PRC_ID ITM_PRC_ID
	  FROM SAL0046D Extent1
	         JOIN CCR0006D Extent2   ON Extent1.CALL_ENTRY_ID = Extent2.CALL_ENTRY_ID
	         JOIN SAL0001D Extent3   ON Extent1.SALES_ORD_ID = Extent3.SALES_ORD_ID
	         JOIN SAL0002D Extent4   ON Extent3.SALES_ORD_ID = Extent4.SALES_ORD_ID
	         JOIN SAL0029D Extent5   ON Extent3.CUST_ID = Extent5.CUST_ID
	         JOIN ORG0001D Extent6   ON Extent3.MEM_ID = Extent6.MEM_ID
	         JOIN SYS0013M Extent7   ON Extent3.APP_TYPE_ID = Extent7.CODE_ID
	         JOIN SYS0026M Extent8   ON Extent1.INSTALL_STK_ID = Extent8.STK_ID
	         LEFT JOIN SYS0013M Extent9   ON Extent8.STK_CTGRY_ID = Extent9.CODE_ID
	         LEFT JOIN ORG0005D Extent10   ON Extent6.MEM_ID = Extent10.MEM_ID
	         LEFT JOIN SAL0017D Extent11   ON Extent3.PROMO_ID = Extent11.PROMO_ID
	         LEFT JOIN SYS0038M Extent12   ON Extent1.STUS_CODE_ID = Extent12.STUS_CODE_ID
	 WHERE  Extent1.INSTALL_ENTRY_ID = #{installEntryId}
    </select>

     <select id="getcustomerInfo" parameterType="Object" resultType="egovMap">
	     SELECT Extent1.CUST_ID CUST_ID  ,
	       CASE
	            WHEN ( 964 = Extent1.TYPE_ID ) THEN TO_NUMBER(0)
	       ELSE TO_NUMBER(1)
	          END C1  ,
	       Extent1.NAME NAME  ,
	       Extent1.NRIC NRIC  ,
	       Extent1.NATION NATION  ,
	       Extent3.NAME NAME1  ,
	       Extent1.DOB DOB  ,
	       Extent1.EMAIL EMAIL  ,
	       Extent1.GENDER GENDER  ,
	       Extent1.RACE_ID RACE_ID  ,
	       Extent1.TYPE_ID TYPE_ID  ,
	       Extent2.CODE_NAME CODE_NAME  ,
	       Extent1.STUS_CODE_ID STUS_CODE_ID  ,
	       Extent1.UPD_USER_ID UPD_USER_ID  ,
	       Extent1.UPD_DT UPD_DT  ,
	       Extent1.REN_GRP REN_GRP  ,
	       Extent1.PST_TERMS PST_TERMS  ,
	       Extent1.ID_OLD ID_OLD  ,
	       Extent1.CRT_USER_ID CRT_USER_ID  ,
	       Extent1.CRT_DT CRT_DT  ,
	       CASE
	            WHEN ( 966 = Extent1.TYPE_ID ) THEN TO_NUMBER(1)
	       ELSE TO_NUMBER(0)
              END C2,
           extend64.city,
           extend64.STATE,
           extend64.COUNTRY,
           extend64.AREA
	  FROM SAL0029D Extent1
	         LEFT JOIN SYS0013M Extent2   ON TO_NUMBER(Extent1.RACE_ID,99999) = Extent2.CODE_ID
	         LEFT JOIN SYS0015M Extent3   ON TO_NUMBER(Extent1.NATION,99999) = Extent3.CNTY_ID
             join SAL0023D extend23
             ON Extent1.CUST_ID = extend23.CUST_ID
            join sys0064m extend64
              ON extend23.AREA_ID = extend64.AREA_ID
	 WHERE  ( Extent1.CUST_ID = #{custId} )
	          and extend23.stus_code_id = '9'
	          AND (TO_NUMBER(Extent1.STUS_CODE_ID,99999) = 1 )

     </select>
     <select id="getCustomerAddressInfo" parameterType="Map" resultType="egovMap">
		     SELECT Filter1.CUST_ADD_ID CUST_ADD_ID  ,
		       Filter1.ADD1 ADD1  ,
		       Filter1.ADD2 ADD2  ,
		       Filter1.ADD3 ADD3  ,
		       Filter1.ADD1 + Filter1.ADD2 + Filter1.ADD3 C1  ,
		       Filter1.COUNTRYID1 CNTY_ID  ,
		       Filter1.NAME1 NAME  ,
		       Filter1.STATEID1 STATE_ID  ,
		       Filter1.NAME2 NAME1  ,
		       Filter1.AREAID1 AREA_ID  ,
		       Filter1.AREA_NAME AREA_NAME  ,
		       Filter1.POSTCODEID1 POST_CODE_ID  ,
		       Filter1.POSTCODE1 POST_CODE  ,
		       Filter1.NRIC NRIC  ,
		       Filter1.TEL TEL  ,
		       Filter1.FAX FAX  ,
		       Filter1.ADD4 ADD4  ,
		       Filter1.STATUSCODEID1 STUS_CODE_ID  ,
		       Extent6.NAME NAME2  ,
		       Filter1.REM REM  ,
		       Filter1.UPDATOR1 UPD_USER_ID  ,
		       Filter1.UPDATED1 UPD_DT  ,
		       Filter1.ID_OLD ID_OLD  ,
		       Filter1.SO_ID SO_ID  ,
		       Filter1.IDCM IDCM  ,
		       Filter1.CREATOR1 CRT_USER_ID  ,
		       Filter1.CREATED1 CRT_DT
		  FROM ( SELECT Extent1.CUST_ADD_ID CUST_ADD_ID  ,
		                Extent1.CUST_ID CUST_ID  ,
		                Extent1.NRIC NRIC  ,
		                Extent1.TEL TEL  ,
		                Extent1.FAX FAX  ,
		                Extent1.ADD1 ADD1  ,
		                Extent1.ADD2 ADD2  ,
		                Extent1.ADD3 ADD3  ,
		                Extent1.ADD4 ADD4  ,
		                Extent1.POST_CODE_ID POSTCODEID1  ,
		                Extent1.AREA_ID AREAID1  ,
		                Extent1.STATE_ID STATEID1  ,
		                Extent1.CNTY_ID COUNTRYID1  ,
		                Extent1.STUS_CODE_ID STATUSCODEID1  ,
		                Extent1.REM REM  ,
		                Extent1.UPD_USER_ID UPDATOR1  ,
		                Extent1.UPD_DT UPDATED1  ,
		                Extent1.ID_OLD ID_OLD  ,
		                Extent1.SO_ID SO_ID  ,
		                Extent1.IDCM IDCM  ,
		                Extent1.CRT_USER_ID CREATOR1  ,
		                Extent1.CRT_DT CREATED1  ,
		                Extent2.NAME NAME1  ,
		                Extent3.NAME NAME2  ,
		                Extent4.AREA_NAME AREA_NAME  ,
		                Extent5.POST_CODE POSTCODE1
		         FROM SAL0023D Extent1
		                JOIN SYS0015M Extent2   ON Extent1.CNTY_ID = Extent2.CNTY_ID
		                LEFT JOIN SYS0035M Extent3   ON Extent1.STATE_ID = Extent3.STATE_ID
		                LEFT JOIN SYS0039M Extent4   ON Extent1.AREA_ID = Extent4.AREA_ID
		                LEFT JOIN SYS0030C Extent5   ON Extent1.POST_CODE_ID = Extent5.POST_CODE_ID
		                LEFT JOIN SYS0064M Extent7   ON Extent1.AREA_ID = Extent7.AREA_ID
		          WHERE  9 = UTILS.CONVERT_TO_NUMBER(Extent1.STUS_CODE_ID,10,0) ) Filter1
		         LEFT JOIN SYS0038M Extent6   ON ( Filter1.STATUSCODEID1 = TO_NUMBER(Extent6.STUS_CODE_ID,99999) )
		         OR ( ( Filter1.STATUSCODEID1 IS NULL )
		         AND ( TO_NUMBER(Extent6.STUS_CODE_ID,99999) IS NULL ) )
		 WHERE  Filter1.CUST_ID = #{custId}
     </select>
     <select id="getCustomerContractInfo" parameterType="Map" resultType="egovMap">
		     SELECT Project1.CUST_CNTC_ID CUST_CNTC_ID  ,
		       Project1.CUST_INITIAL CUST_INITIAL  ,
		       Project1.CODE_NAME CODE_NAME  ,
		       Project1.NAME NAME  ,
		       Project1.DOB DOB  ,
		       Project1.GENDER GENDER  ,
		       Project1.RACE_ID RACE_ID  ,
		       Project1.CODENAME1 CODENAME1  ,
		       Project1.TEL_M1 TEL_M1  ,
		       Project1.TEL_M2 TEL_M2  ,
		       Project1.TEL_O TEL_O  ,
		       Project1.TEL_R TEL_R  ,
		       Project1.TELF TELF  ,
		       Project1.NRIC NRIC  ,
		       Project1.POS POS  ,
		       Project1.EMAIL EMAIL  ,
		       Project1.DEPT DEPT  ,
		       Project1.STUS_CODE_ID STUS_CODE_ID  ,
		       Project1.UPD_USER_ID UPD_USER_ID  ,
		       Project1.UPD_DT UPD_DT  ,
		       Project1.ID_OLD ID_OLD  ,
		       Project1.DCM DCM  ,
		       Project1.CRT_USER_ID CRT_USER_ID  ,
		       Project1.CRT_DT CRT_DT
		  FROM ( SELECT Filter1.CUST_CNTC_ID CUST_CNTC_ID  ,
		                Filter1.NAME NAME  ,
		                Filter1.CUST_INITIAL CUST_INITIAL  ,
		                Filter1.NRIC NRIC  ,
		                Filter1.POS POS  ,
		                Filter1.TEL_M1 TEL_M1  ,
		                Filter1.TEL_M2 TEL_M2  ,
		                Filter1.TEL_O TEL_O  ,
		                Filter1.TEL_R TEL_R  ,
		                Filter1.TELF TELF  ,
		                Filter1.DOB DOB  ,
		                Filter1.GENDER GENDER  ,
		                Filter1.RACE_ID RACE_ID  ,
		                Filter1.EMAIL EMAIL  ,
		                Filter1.STUS_CODE_ID STUS_CODE_ID  ,
		                Filter1.UPDATED1 UPD_DT  ,
		                Filter1.UPDATOR1 UPD_USER_ID  ,
		                Filter1.ID_OLD ID_OLD  ,
		                Filter1.DEPT DEPT  ,
		                Filter1.DCM DCM  ,
		                Filter1.CREATED1 CRT_DT  ,
		                Filter1.CREATOR1 CRT_USER_ID  ,
		                Filter1.CODE_NAME CODE_NAME  ,
		                Extent3.CODE_NAME CODENAME1
		         FROM ( SELECT Extent1.CUST_CNTC_ID CUST_CNTC_ID  ,
		                       Extent1.CUST_ID CUST_ID  ,
		                       Extent1.NAME NAME  ,
		                       Extent1.CUST_INITIAL CUST_INITIAL  ,
		                       Extent1.NRIC NRIC  ,
		                       Extent1.POS POS  ,
		                       Extent1.TEL_M1 TEL_M1  ,
		                       Extent1.TEL_M2 TEL_M2  ,
		                       Extent1.TEL_O TEL_O  ,
		                       Extent1.TEL_R TEL_R  ,
		                       Extent1.TELF TELF  ,
		                       Extent1.DOB DOB  ,
		                       Extent1.GENDER GENDER  ,
		                       Extent1.RACE_ID RACE_ID  ,
		                       Extent1.EMAIL EMAIL  ,
		                       Extent1.STUS_CODE_ID STUS_CODE_ID  ,
		                       Extent1.UPD_DT UPDATED1  ,
		                       Extent1.UPD_USER_ID UPDATOR1  ,
		                       Extent1.ID_OLD ID_OLD  ,
		                       Extent1.DEPT DEPT  ,
		                       Extent1.DCM DCM  ,
		                       Extent1.CRT_DT CREATED1  ,
		                       Extent1.CRT_USER_ID CREATOR1  ,
		                       Extent2.CODE_NAME CODE_NAME
		                FROM SAL0027D Extent1
		                       LEFT JOIN SYS0013M Extent2   ON Extent1.CUST_INITIAL = Extent2.CODE_ID
		                 WHERE  ( 9 = UTILS.CONVERT_TO_NUMBER(Extent1.STUS_CODE_ID,10,0) )
		                          OR ( 1 = UTILS.CONVERT_TO_NUMBER(Extent1.STUS_CODE_ID,10,0) ) ) Filter1
		                LEFT JOIN SYS0013M Extent3   ON UTILS.CONVERT_TO_NUMBER(Filter1.RACE_ID,10,0) = Extent3.CODE_ID
		          WHERE  Filter1.CUST_ID = #{custId} ) Project1
		    WHERE ROWNUM = 1
		  ORDER BY Project1.STUS_CODE_ID DESC
     </select>

     <select id="getInstallationBySalesOrderID" parameterType="Map" resultType="egovMap">
         SELECT Extent1.INSTALL_ID INSTALL_ID  ,
		       Extent1.SALES_ORD_ID SALES_ORD_ID  ,
		       Extent1.ADD_ID ADD_ID  ,
		       Extent1.CNT_ID CNT_ID  ,
		       Extent1.PRE_CALL_DT PRE_CALL_DT  ,
		       Extent1.PRE_DT PRE_DT  ,
		       Extent1.PRE_TM PRE_TM  ,
		       Extent1.ACT_DT ACT_DT  ,
		       Extent1.ACT_TM ACT_TM  ,
		       Extent1.STUS_CODE_ID STUS_CODE_ID  ,
		       Extent1.INSTCT INSTCT  ,
		       Extent1.UPD_DT UPD_DT  ,
		       Extent1.UPD_USER_ID UPD_USER_ID  ,
		       Extent1.BRNCH_ID BRNCH_ID  ,
		       Extent1.EDIT_TYPE_ID EDIT_TYPE_ID  ,
		       Extent1.IS_TRADE_IN IS_TRADE_IN  ,
		       Extent1.VRIFY_REM VRIFY_REM,
		       CustAdd.ADDR_DTL Address,
		       CustAdd.AREA_ID
		  FROM SAL0045D Extent1
		  join SAL0023D CustAdd on CustAdd.CUST_ADD_ID = Extent1.ADD_ID
		 WHERE  Extent1.SALES_ORD_ID = #{salesOrdId}
     </select>
     <select id="getInstallContactByContactID" parameterType="Map" resultType="egovMap">
		     SELECT Extent1.CUST_CNTC_ID CUST_CNTC_ID  ,
		       Extent1.CUST_INITIAL CUST_INITIAL  ,
		       Extent2.CODE_NAME CODE_NAME  ,
		       Extent1.NAME NAME  ,
		       Extent1.DOB DOB  ,
		       Extent1.GENDER GENDER  ,
		       Extent1.RACE_ID RACE_ID  ,
		       Extent3.CODE_NAME CODENAME1  ,
		       Extent1.TEL_M1 TEL_M1  ,
		       Extent1.TEL_M2 TEL_M2  ,
		       Extent1.TEL_O TEL_O  ,
		       Extent1.TEL_R TEL_R  ,
		       Extent1.TELF TELF  ,
		       Extent1.NRIC NRIC  ,
		       Extent1.POS POS  ,
		       Extent1.EMAIL EMAIL  ,
		       Extent1.DEPT DEPT  ,
		       Extent1.STUS_CODE_ID STUS_CODE_ID  ,
		       Extent1.UPD_USER_ID UPD_USER_ID  ,
		       Extent1.UPD_DT UPD_DT  ,
		       Extent1.ID_OLD ID_OLD  ,
		       Extent1.DCM DCM  ,
		       Extent1.CRT_USER_ID CRT_USER_ID  ,
		       Extent1.CRT_DT CRT_DT
		  FROM SAL0027D Extent1
		         LEFT JOIN SYS0013M Extent2   ON Extent1.CUST_INITIAL = Extent2.CODE_ID
		         LEFT JOIN SYS0013M Extent3   ON UTILS.CONVERT_TO_NUMBER(Extent1.RACE_ID,10,0) = Extent3.CODE_ID
		   WHERE  Extent1.CUST_CNTC_ID = #{cntId}
        </select>
        <select id="getSalesOrderMBySalesOrderID" parameterType="Map" resultType="egovMap">
		 SELECT Extent1.SALES_ORD_ID SALES_ORD_ID  ,
		       Extent1.SALES_ORD_NO SALES_ORD_NO  ,
		       Extent1.REF_NO REF_NO  ,
		       Extent1.SALES_DT SALES_DT  ,
		       Extent1.CUST_ID CUST_ID  ,
		       Extent1.CUST_CNT_ID CUST_CNT_ID  ,
		       Extent1.CUST_ADD_ID CUST_ADD_ID  ,
		       Extent1.MEM_ID MEM_ID  ,
		       Extent1.BRNCH_ID BRNCH_ID  ,
		       Extent1.APP_TYPE_ID APP_TYPE_ID  ,
		       --Extent1.DSCNT_AMT DSCNT_AMT  ,
		       --Extent1.TAX_AMT TAX_AMT  ,
		       Extent1.TOT_AMT TOT_AMT  ,
		       Extent1.PROMO_ID PROMO_ID  ,
		       Extent1.BINDING_NO BINDING_NO  ,
		       Extent1.CC_PROMO_ID CC_PROMO_ID  ,
		       Extent1.TOT_PV TOT_PV  ,
		       Extent1.REM REM  ,
		       Extent1.PV_MONTH PV_MONTH  ,
		       Extent1.PV_YEAR PV_YEAR  ,
		       Extent1.STUS_CODE_ID STUS_CODE_ID  ,
		       Extent1.UPD_DT UPD_DT  ,
		       Extent1.UPD_USER_ID UPD_USER_ID  ,
		       Extent1.SYNC_CHK SYNC_CHK  ,
		       Extent1.CUST_PO_NO CUST_PO_NO  ,
		       Extent1.REN_CHK_ID REN_CHK_ID  ,
		       Extent1.INST_PRIOD INST_PRIOD  ,
		       Extent1.DO_NO DO_NO  ,
		       Extent1.DEPT_CODE DEPT_CODE  ,
		       Extent1.GRP_CODE GRP_CODE  ,
		       Extent1.ORG_CODE ORG_CODE  ,
		       Extent1.SALES_ORD_ID_OLD SALES_ORD_ID_OLD  ,
		       Extent1.EDIT_TYPE_ID EDIT_TYPE_ID  ,
		       Extent1.CUST_BILL_ID CUST_BILL_ID  ,
		       Extent1.MTH_RENT_AMT MTH_RENT_AMT  ,
		       Extent1.LOK LOK  ,
		       Extent1.AEON_STUS_ID AEON_STUS_ID  ,
		       Extent1.COMM_DT COMM_DT  ,
		       Extent1.CRT_USER_ID CRT_USER_ID  ,
		       Extent1.CRT_DT CRT_DT  ,
		       Extent1.PAY_COM_DT PAY_COM_DT  ,
		       Extent1.DEF_RENT_AMT DEF_RENT_AMT  ,
		       Extent1.REF_DOC_ID REF_DOC_ID  ,
		       --Extent1.RENT_PROMO_ID RENT_PROMO_ID  ,
		       Extent2.MEM_CODE MEM_CODE  ,
		       CASE
		            WHEN ( Extent1.CNVR_SCHEME_ID IS NULL ) THEN 0
		       ELSE Extent1.CNVR_SCHEME_ID
		          END C1
		  FROM SAL0001D Extent1
		         LEFT JOIN ORG0001D Extent2   ON Extent1.MEM_ID = Extent2.MEM_ID
		 WHERE  Extent1.SALES_ORD_ID = #{salesOrdId}
		 </select>
		  <select id="getMemberFullDetailsByMemberIDCode" parameterType="Map" resultType="egovMap">
		  <![CDATA[
					 SELECT Limit1.MEM_ID MEM_ID  ,
			       Limit1.C2 C2  ,
			       Limit1.C3 C3  ,
			       Limit1.C4 C4  ,
			       Limit1.C5 C5  ,
			       Limit1.C7 C7  ,
			       Limit1.C8 C8  ,
			       Limit1.C9 C9  ,
			       Limit1.EMAIL EMAIL  ,
			       Limit1.GENDER GENDER  ,
			       Limit1.C10 C10  ,
			       Limit1.C11 C11  ,
			       Limit1.C12 C12  ,
			       Limit1.C13 C13  ,
			       Limit1.C14 C14  ,
			       Limit1.C15 C15  ,
			       Limit1.C16 C16  ,
			       Limit1.C17 C17  ,
			       Limit1.C18 C18  ,
			       Limit1.C19 C19  ,
			       Limit1.C20 C20  ,
			       Limit1.C21 C21  ,
			       Limit1.C22 C22  ,
			       Limit1.C23 C23  ,
			       Limit1.C24 C24  ,
			       Limit1.C25 C25  ,
			       Limit1.C26 C26  ,
			       Limit1.C27 C27  ,
			       Limit1.C28 C28  ,
			       Limit1.BANK BANK  ,
			       Limit1.BANK_ACC_NO BANK_ACC_NO  ,
			       Limit1.C29 C29  ,
			       Limit1.C30 C30  ,
			       Limit1.C31 C31  ,
			       Limit1.C32 C32  ,
			       Limit1.NAME1 NAME  ,
			       Limit1.MEM_CODE MEM_CODE  ,
			       Limit1.NAME NAME1  ,
			       Limit1.NRIC NRIC  ,
			       Limit1.MEM_TYPE MEM_TYPE  ,
			       Limit1.CODE_NAME CODE_NAME  ,
			       Limit1.C33 C33  ,
			       Limit1.C34 C34  ,
			       Limit1.C35 C35  ,
			       Limit1.C36 C36  ,
			       Limit1.C37 C37  ,
			       Limit1.C38 C38  ,
			       Limit1.C39 C39  ,
			       Limit1.C40 C40  ,
			       Limit1.C41 C41  ,
			       Limit1.C42 C42  ,
			       Limit1.C43 C43  ,
			       Limit1.C44 C44  ,
			       Limit1.C45 C45  ,
			       Limit1.C46 C46  ,
			       Limit1.C47 C47  ,
			       Limit1.C48 C48  ,
			       Limit1.C50 C50  ,
			       Limit1.C51 C51  ,
			       Limit1.C52 C52  ,
			       Limit1.C53 C53  ,
			       Limit1.C54 C54  ,
			       Limit1.C55 C55  ,
			       Limit1.C56 C56  ,
			       Limit1.TR_NO TR_NO  ,
			       Limit1.TEL_MOBILE TEL_MOBILE  ,
			       Limit1.TEL_HUSE TEL_HUSE  ,
			       Limit1.TEL_OFFICE TEL_OFFICE  ,
			       Limit1.C57 C57  ,
			       Limit1.SPUSE_CODE SPUSE_CODE  ,
			       Limit1.SPOUSE_NAME SPOUSE_NAME  ,
			       Limit1.SPOUSE_NRIC SPOUSE_NRIC  ,
			       Limit1.SPOUSE_TEL_CNTC SPOUSE_TEL_CNTC  ,
			       Limit1.C58 C58  ,
			       Limit1.SPOUSE_OCPAT SPOUSE_OCPAT  ,
			       Limit1.C59 C59  ,
			       Limit1.RANK RANK  ,
			       Limit1.C60 C60  ,
			       Limit1.HSPTLZ  HSPTLZ
			  FROM (
			SELECT Extent1.MEM_ID MEM_ID  ,
			                Extent1.MEM_CODE MEM_CODE  ,
			                Extent1.MEM_TYPE MEM_TYPE  ,
			                Extent1.NAME NAME  ,
			                Extent1.NRIC NRIC  ,
			                Extent1.GENDER GENDER  ,
			                Extent1.TEL_OFFICE TEL_OFFICE  ,
			                Extent1.TEL_HUSE TEL_HUSE  ,
			                Extent1.TEL_MOBILE TEL_MOBILE  ,
			                Extent1.EMAIL EMAIL  ,
			                Extent1.SPUSE_CODE SPUSE_CODE  ,
			                Extent1.SPOUSE_NAME SPOUSE_NAME  ,
			                Extent1.SPOUSE_NRIC SPOUSE_NRIC  ,
			                Extent1.SPOUSE_OCPAT SPOUSE_OCPAT  ,
			                Extent1.SPOUSE_TEL_CNTC SPOUSE_TEL_CNTC  ,
			                Extent1.BANK BANK  ,
			                Extent1.BANK_ACC_NO BANK_ACC_NO  ,
			                Extent1.RANK RANK  ,
			                Extent1.TR_NO TR_NO  ,
			                Extent1.HSPTLZ HSPTLZ  ,
			                Extent2.NAME NAME1  ,
			                Extent3.CODE_NAME CODE_NAME   ,
			                CASE
			                     WHEN ( Extent6.AREA_ID IS NOT NULL ) THEN Extent6.AREA_NAME
			                ELSE ''
			                   END C2  ,
			                CASE
			                     WHEN ( Extent1.BRNCH IS NOT NULL ) THEN TO_NUMBER(Extent1.BRNCH,99999.99)
			                ELSE 0
			                   END C3  ,
			                CASE
			                     WHEN ( Extent10.BRNCH_ID IS NOT NULL ) THEN Extent10.CODE
			                ELSE ''
			                   END C4  ,
			                CASE
			                     WHEN ( Extent10.BRNCH_ID IS NOT NULL ) THEN Extent10.NAME
			                ELSE ''
			                   END C5  ,
			                CASE
			                     WHEN ( Extent9.CNTY_ID IS NOT NULL ) THEN Extent9.NAME
			                ELSE ''
			                   END C7  ,
			                CASE
			                     WHEN ( Extent1.EDC_LEV IS NOT NULL ) THEN TO_NUMBER(Extent1.EDC_LEV,99999.99)
			                ELSE 0
			                   END C8  ,
			                CASE
			                     WHEN ( Extent11.CODE_ID IS NOT NULL ) THEN Extent11.CODE_NAME
			                ELSE ''
			                   END C9  ,
			                CASE
			                     WHEN ( Extent1.LANG IS NOT NULL ) THEN TO_NUMBER(Extent1.LANG,99999.99)
			                ELSE 0
			                   END C10  ,
			                CASE
			                     WHEN ( Extent12.CODE_ID IS NOT NULL ) THEN Extent12.CODE_NAME
			                ELSE ''
			                   END C11  ,
			                CASE
			                     WHEN ( Extent13.MEM_ID IS NOT NULL ) THEN Extent13.MEM_CODE
			                ELSE ''
			                   END C12  ,
			                CASE
			                     WHEN ( Extent13.MEM_ID IS NOT NULL ) THEN Extent13.NAME
			                ELSE ''
			                   END C13  ,
			                CASE
			                     WHEN ( Extent13.MEM_ID IS NOT NULL ) THEN Extent13.TEL_MOBILE
			                ELSE ''
			                   END C14  ,
			                CASE
			                     WHEN ( Extent13.MEM_ID IS NOT NULL ) THEN Extent13.TEL_OFFICE
			                ELSE ''
			                   END C15  ,
			                CASE
			                     WHEN ( Extent13.MEM_ID IS NOT NULL ) THEN Extent13.TEL_HUSE
			                ELSE ''
			                   END C16  ,
			                CASE
			                     WHEN ( Extent14.MEM_ID IS NOT NULL ) THEN Extent14.MEM_CODE
			                ELSE ''
			                   END C17  ,
			                CASE
			                     WHEN ( Extent14.MEM_ID IS NOT NULL ) THEN Extent14.NAME
			                ELSE ''
			                   END C18  ,
			                CASE
			                     WHEN ( Extent14.MEM_ID IS NOT NULL ) THEN Extent14.TEL_MOBILE
			                ELSE ''
			                   END C19  ,
			                CASE
			                     WHEN ( Extent14.MEM_ID IS NOT NULL ) THEN Extent14.TEL_OFFICE
			                ELSE ''
			                   END C20  ,
			                CASE
			                     WHEN ( Extent14.MEM_ID IS NOT NULL ) THEN Extent14.TEL_HUSE
			                ELSE ''
			                   END C21  ,
			                CASE
			                     WHEN ( Extent15.MEM_ID IS NOT NULL ) THEN Extent15.MEM_CODE
			                ELSE ''
			                   END C22  ,
			                CASE
			                     WHEN ( Extent15.MEM_ID IS NOT NULL ) THEN Extent15.NAME
			                ELSE ''
			                   END C23  ,
			                CASE
			                     WHEN ( Extent15.MEM_ID IS NOT NULL ) THEN Extent15.TEL_MOBILE
			                ELSE ''
			                   END C24  ,
			                CASE
			                     WHEN ( Extent15.MEM_ID IS NOT NULL ) THEN Extent15.TEL_OFFICE
			                ELSE ''
			                   END C25  ,
			                CASE
			                     WHEN ( Extent15.MEM_ID IS NOT NULL ) THEN Extent15.TEL_HUSE
			                ELSE ''
			                   END C26  ,
			                CASE
			                     WHEN ( Extent1.MARTL IS NOT NULL ) THEN TO_NUMBER(Extent1.MARTL,99999.99)
			                ELSE 0
			                   END C27  ,
			                CASE
			                     WHEN ( Extent21.CODE_ID IS NOT NULL ) THEN Extent21.CODE_NAME
			                ELSE ''
			                   END C28  ,
			                CASE
			                     WHEN ( Extent1.DOB IS NOT NULL ) THEN to_char(Extent1.DOB,'yyyy-mm-dd')
			                ELSE ''
			                   END C29  ,
			                CASE
			                     WHEN ( Extent1.JOIN_DT IS NOT NULL ) THEN TO_char(Extent1.JOIN_DT,'yyyy-mm-dd')
			                ELSE ''
			                   END C30  ,
			                CASE
			                     WHEN ( Extent25.USER_VAL_ID_TO IS NOT NULL ) THEN to_char(Extent25.USER_VAL_ID_TO,'yyyy-mm-dd')
			                ELSE ''
			                   END C31  ,
			                CASE
			                     WHEN ( Extent1.STUS IS NOT NULL ) THEN Extent1.STUS
			                ELSE 0
			                   END C32   ,
			                CASE
			                     WHEN ( NOT ( ( Extent4.MEM_ID IS NULL )
			                       AND ( Extent4.MEM_CODE IS NULL )
			                       AND ( Extent4.MEM_LVL IS NULL )
			                       AND ( Extent4.DEPT_CODE IS NULL )
			                       AND ( Extent4.GRP_CODE IS NULL )
			                       AND ( Extent4.ORG_CODE IS NULL )
			                       AND ( Extent4.TOP_ORG_CODE IS NULL )
			                       AND ( Extent4.MEM_UP_ID IS NULL )
			                       AND ( Extent4.LVL3_UP_ID IS NULL )
			                       AND ( Extent4.LVL2_UP_ID IS NULL )
			                       AND ( Extent4.LVL1_UP_ID IS NULL )
			                       AND ( Extent4.LVL0_UP_ID IS NULL ) ) ) THEN Extent4.MEM_UP_ID
			                ELSE 0
			                   END C33  ,
			                CASE
			                     WHEN ( Extent22.WH_LOC_ID IS NOT NULL ) THEN Extent22.WH_LOC_ID
			                ELSE 0
			                   END C34  ,
			                CASE
			                     WHEN ( Extent1.NATION IS NOT NULL ) THEN TO_NUMBER(Extent1.NATION,99999.99)
			                ELSE 0
			                   END C35  ,
			                CASE
			                     WHEN ( Extent17.CNTY_ID IS NOT NULL ) THEN Extent17.NAME
			                ELSE ''
			                   END C36  ,
			                CASE
			                     WHEN (1 IS NOT NULL ) THEN 1
			                ELSE 0
			                   END C37  ,
			                CASE
			                     WHEN ( Extent7.POST_CODE_ID IS NOT NULL ) THEN Extent7.POST_CODE
			                ELSE ''
			                   END C38  ,
			                CASE
			                     WHEN ( Extent1.RACE IS NOT NULL ) THEN TO_NUMBER(Extent1.RACE,99999.99)
			                ELSE 0
			                   END C39  ,
			                CASE
			                     WHEN ( Extent18.CODE_ID IS NOT NULL ) THEN Extent18.CODE_NAME
			                ELSE ''
			                   END C40,
			                CASE
			                     WHEN ( NOT ( ( Extent4.MEM_ID IS NULL )
			                       AND ( Extent4.MEM_CODE IS NULL )
			                       AND ( Extent4.MEM_LVL IS NULL )
			                       AND ( Extent4.DEPT_CODE IS NULL )
			                       AND ( Extent4.GRP_CODE IS NULL )
			                       AND ( Extent4.ORG_CODE IS NULL )
			                       AND ( Extent4.TOP_ORG_CODE IS NULL )
			                       AND ( Extent4.MEM_UP_ID IS NULL )
			                       AND ( Extent4.LVL3_UP_ID IS NULL )
			                       AND ( Extent4.LVL2_UP_ID IS NULL )
			                       AND ( Extent4.LVL1_UP_ID IS NULL )
			                       AND ( Extent4.LVL0_UP_ID IS NULL ) ) ) THEN Extent4.DEPT_CODE
			                ELSE ''
			                   END C41  ,
			                CASE
			                     WHEN ( NOT ( ( Extent4.MEM_ID IS NULL )
			                       AND ( Extent4.MEM_CODE IS NULL )
			                       AND ( Extent4.MEM_LVL IS NULL )
			                       AND ( Extent4.DEPT_CODE IS NULL )
			                       AND ( Extent4.GRP_CODE IS NULL )
			                       AND ( Extent4.ORG_CODE IS NULL )
			                       AND ( Extent4.TOP_ORG_CODE IS NULL )
			                       AND ( Extent4.MEM_UP_ID IS NULL )
			                       AND ( Extent4.LVL3_UP_ID IS NULL )
			                       AND ( Extent4.LVL2_UP_ID IS NULL )
			                       AND ( Extent4.LVL1_UP_ID IS NULL )
			                       AND ( Extent4.LVL0_UP_ID IS NULL ) ) ) THEN Extent4.GRP_CODE
			                ELSE ''
			                   END C42  ,
			                CASE
			                     WHEN ( NOT ( ( Extent4.MEM_ID IS NULL )
			                       AND ( Extent4.MEM_CODE IS NULL )
			                       AND ( Extent4.MEM_LVL IS NULL )
			                       AND ( Extent4.DEPT_CODE IS NULL )
			                       AND ( Extent4.GRP_CODE IS NULL )
			                       AND ( Extent4.ORG_CODE IS NULL )
			                       AND ( Extent4.TOP_ORG_CODE IS NULL )
			                       AND ( Extent4.MEM_UP_ID IS NULL )
			                       AND ( Extent4.LVL3_UP_ID IS NULL )
			                       AND ( Extent4.LVL2_UP_ID IS NULL )
			                       AND ( Extent4.LVL1_UP_ID IS NULL )
			                       AND ( Extent4.LVL0_UP_ID IS NULL ) ) ) THEN Extent4.ORG_CODE
			                ELSE ''
			                   END C43  ,
			                CASE
			                     WHEN ( NOT ( ( Extent4.MEM_ID IS NULL )
			                       AND ( Extent4.MEM_CODE IS NULL )
			                       AND ( Extent4.MEM_LVL IS NULL )
			                       AND ( Extent4.DEPT_CODE IS NULL )
			                       AND ( Extent4.GRP_CODE IS NULL )
			                       AND ( Extent4.ORG_CODE IS NULL )
			                       AND ( Extent4.TOP_ORG_CODE IS NULL )
			                       AND ( Extent4.MEM_UP_ID IS NULL )
			                       AND ( Extent4.LVL3_UP_ID IS NULL )
			                       AND ( Extent4.LVL2_UP_ID IS NULL )
			                       AND ( Extent4.LVL1_UP_ID IS NULL )
			                       AND ( Extent4.LVL0_UP_ID IS NULL ) ) ) THEN Extent4.MEM_LVL
			                ELSE 0
			                   END C44  ,
			                CASE
			                     WHEN ( NOT ( ( Extent4.MEM_ID IS NULL )
			                       AND ( Extent4.MEM_CODE IS NULL )
			                       AND ( Extent4.MEM_LVL IS NULL )
			                       AND ( Extent4.DEPT_CODE IS NULL )
			                       AND ( Extent4.GRP_CODE IS NULL )
			                       AND ( Extent4.ORG_CODE IS NULL )
			                       AND ( Extent4.TOP_ORG_CODE IS NULL )
			                       AND ( Extent4.MEM_UP_ID IS NULL )
			                       AND ( Extent4.LVL3_UP_ID IS NULL )
			                       AND ( Extent4.LVL2_UP_ID IS NULL )
			                       AND ( Extent4.LVL1_UP_ID IS NULL )
			                       AND ( Extent4.LVL0_UP_ID IS NULL ) ) ) THEN Extent4.LVL3_UP_ID
			                ELSE 0
			                   END C45  ,
			                CASE
			                     WHEN ( NOT ( ( Extent4.MEM_ID IS NULL )
			                       AND ( Extent4.MEM_CODE IS NULL )
			                       AND ( Extent4.MEM_LVL IS NULL )
			                       AND ( Extent4.DEPT_CODE IS NULL )
			                       AND ( Extent4.GRP_CODE IS NULL )
			                       AND ( Extent4.ORG_CODE IS NULL )
			                       AND ( Extent4.TOP_ORG_CODE IS NULL )
			                       AND ( Extent4.MEM_UP_ID IS NULL )
			                       AND ( Extent4.LVL3_UP_ID IS NULL )
			                       AND ( Extent4.LVL2_UP_ID IS NULL )
			                       AND ( Extent4.LVL1_UP_ID IS NULL )
			                       AND ( Extent4.LVL0_UP_ID IS NULL ) ) ) THEN Extent4.LVL2_UP_ID
			                ELSE 0
			                   END C46  ,
			                CASE
			                     WHEN ( NOT ( ( Extent4.MEM_ID IS NULL )
			                       AND ( Extent4.MEM_CODE IS NULL )
			                       AND ( Extent4.MEM_LVL IS NULL )
			                       AND ( Extent4.DEPT_CODE IS NULL )
			                       AND ( Extent4.GRP_CODE IS NULL )
			                       AND ( Extent4.ORG_CODE IS NULL )
			                       AND ( Extent4.TOP_ORG_CODE IS NULL )
			                       AND ( Extent4.MEM_UP_ID IS NULL )
			                       AND ( Extent4.LVL3_UP_ID IS NULL )
			                       AND ( Extent4.LVL2_UP_ID IS NULL )
			                       AND ( Extent4.LVL1_UP_ID IS NULL )
			                       AND ( Extent4.LVL0_UP_ID IS NULL ) ) ) THEN Extent4.LVL1_UP_ID
			                ELSE 0
			                   END C47,
			               CASE
			                     WHEN ( Extent1.RESIGN_DT IS NOT NULL ) THEN to_char(Extent1.RESIGN_DT,'yyyy-mm-dd')
			                ELSE ''
			                   END C48  ,
			                CASE
			                     WHEN ( Extent8.STATE_ID IS NOT NULL ) THEN Extent8.NAME
			                ELSE ''
			                   END C50  ,
			                CASE
			                     WHEN ( Extent20.MEM_ID IS NOT NULL ) THEN Extent20.MEM_CODE
			                ELSE ''
			                   END C51  ,
			                CASE
			                     WHEN ( Extent20.MEM_ID IS NOT NULL ) THEN Extent20.NAME
			                ELSE ''
			                   END C52  ,
			                CASE
			                     WHEN ( Extent20.MEM_ID IS NOT NULL ) THEN Extent20.NRIC
			                ELSE ''
			                   END C53  ,
			                CASE
			                     WHEN ( Extent1.TRM_DT IS NOT NULL ) THEN to_char(Extent1.TRM_DT,'yyyy-mm-dd')
			                ELSE ''
			                   END C54  ,
			                CASE
			                     WHEN ( Extent1.TRNSPRT IS NOT NULL ) THEN Extent1.TRNSPRT
			                ELSE 0
			                   END C55  ,
			                CASE
			                     WHEN ( Extent19.CODE_ID IS NOT NULL ) THEN Extent19.CODE_NAME
			                ELSE ''
			                   END C56  ,
			                CASE
			                     WHEN ( Extent5.MEM_ORG_DESC_ID IS NOT NULL ) THEN Extent5.MEM_ORG_DESC
			                ELSE ''
			                   END C57  ,
			                CASE
			                     WHEN ( Extent1.SPOUSE_DOB IS NOT NULL ) THEN to_char(Extent1.SPOUSE_DOB,'yyyy-mm-dd')
			                ELSE ''
			                   END C58  ,
			                CASE
			                     WHEN dbms_lob.getlength(Extent23.CODE_DESC) = 0 THEN null
			                ELSE Extent23.CODE_DESC
			                   END C59  ,
			                CASE
			                     WHEN ( Extent24.CODE_NAME IS NULL ) THEN ''
			                ELSE Extent24.CODE_NAME
			                   END C60
			         FROM ORG0001D Extent1
			                JOIN SYS0038M Extent2   ON Extent2.STUS_CODE_ID = Extent1.STUS
			                JOIN SYS0013M Extent3   ON Extent3.CODE_ID = Extent1.MEM_TYPE
			        LEFT JOIN ( SELECT vMemberOrg.MEM_ID MEM_ID  ,
			                                   vMemberOrg.MEM_CODE MEM_CODE  ,
			                                   vMemberOrg.MEM_LVL MEM_LVL  ,
			                                   vMemberOrg.DEPT_CODE DEPT_CODE  ,
			                                   vMemberOrg.GRP_CODE GRP_CODE  ,
			                                   vMemberOrg.ORG_CODE ORG_CODE  ,
			                                   vMemberOrg.TOP_ORG_CODE TOP_ORG_CODE  ,
			                                   vMemberOrg.MEM_UP_ID MEM_UP_ID  ,
			                                   vMemberOrg.LVL3_UP_ID LVL3_UP_ID  ,
			                                   vMemberOrg.LVL2_UP_ID LVL2_UP_ID  ,
			                                   vMemberOrg.LVL1_UP_ID LVL1_UP_ID  ,
			                                   vMemberOrg.LVL0_UP_ID LVL0_UP_ID
			                            FROM ORG1001V vMemberOrg  ) Extent4   ON Extent4.MEM_ID = Extent1.MEM_ID
			                LEFT JOIN ORG0012D Extent5   ON ( Extent5.MEM_ORG_LVL = Extent4.MEM_LVL )
			                AND ( Extent5.MEM_TYPE_ID = Extent1.MEM_TYPE )
			                LEFT JOIN SYS0039M Extent6   ON 1 = 1
			                LEFT JOIN SYS0030C Extent7   ON 1 = 1
			                LEFT JOIN SYS0035M Extent8   ON Extent8.STATE_ID = 1
			                LEFT JOIN SYS0015M Extent9   ON 1 = 1
			                LEFT JOIN SYS0005M Extent10   ON Extent10.BRNCH_ID = UTILS.CONVERT_TO_NUMBER(Extent1.BRNCH,99999.99)
			                LEFT JOIN SYS0013M Extent11   ON Extent11.CODE_ID = TO_NUMBER(Extent1.EDC_LEV,99999.99)
			                LEFT JOIN SYS0013M Extent12   ON Extent12.CODE_ID = TO_NUMBER(Extent1.LANG,99999.99)
			                LEFT JOIN ORG0001D Extent13   ON Extent13.MEM_ID = Extent4.LVL1_UP_ID
			                LEFT JOIN ORG0001D Extent14   ON Extent14.MEM_ID = Extent4.LVL2_UP_ID
			                LEFT JOIN ORG0001D Extent15   ON Extent15.MEM_ID = Extent4.LVL3_UP_ID
			                LEFT JOIN SYS0013M Extent16   ON Extent16.CODE_ID = TO_NUMBER(Extent1.MARTL,99999.99)
			                LEFT JOIN SYS0015M Extent17   ON Extent17.CNTY_ID = TO_NUMBER(Extent1.NATION,99999.99)
			                LEFT JOIN SYS0013M Extent18   ON Extent18.CODE_ID = TO_NUMBER(Extent1.RACE,99999.99)
			                LEFT JOIN SYS0013M Extent19   ON Extent19.CODE_ID = Extent1.TRNSPRT
			                LEFT JOIN ORG0001D Extent20   ON Extent20.MEM_CODE = Extent1.SPONS_CODE
			                LEFT JOIN SYS0013M Extent21   ON Extent21.CODE_ID = TO_NUMBER(Extent1.MARTL,99999.99)
			                LEFT JOIN SYS0028M Extent22   ON ( Extent22.WH_LOC_CODE = Extent1.MEM_CODE )
			                AND ( Extent1.MEM_TYPE IN ( 2,3 )
			               )
			        LEFT JOIN SYS0013M Extent23   ON Extent23.CODE_ID = Extent1.RANK
			                LEFT JOIN SYS0013M Extent24   ON Extent24.CODE_ID = TO_NUMBER(Extent1.BIZ_TYPE,99999.99)
			                LEFT JOIN SYS0047M Extent25   ON Extent25.USER_FULL_NAME = Extent1.FULL_NAME
			          WHERE  Extent1.MEM_ID = #{memId} AND ROWNUM <= 1  ) Limit1
			           ]]>
          </select>
          <select id="selectViewInstallation" parameterType="Map" resultType="egovMap">
	          SELECT Extent1.RESULT_ID RESULT_ID  ,
			       Extent2.CODE CODE  ,
			       TO_CHAR(Extent1.INSTALL_DT,'YYYY-MM-DD')  INSTALL_DT  ,
			       Extent3.MEM_CODE MEM_CODE  ,
			       Extent3.NAME NAME  ,
			       Extent1.REM REM
			  FROM SAL0047D Extent1
			         LEFT JOIN SYS0038M Extent2   ON Extent1.STUS_CODE_ID = Extent2.STUS_CODE_ID
			         LEFT JOIN ORG0001D Extent3   ON Extent1.CT_ID = Extent3.MEM_ID
			 WHERE  Extent1.ENTRY_ID = #{installEntryId}
		 </select>
		 <select id="selectCallType" parameterType="Map" resultType="egovMap">
		 SELECT Extent2.CALL_ENTRY_ID CALL_ENTRY_ID  ,
		       Extent2.SALES_ORD_ID SALES_ORD_ID  ,
		       Extent2.TYPE_ID TYPE_ID  ,
		       Extent2.STUS_CODE_ID STUS_CODE_ID  ,
		       Extent2.RESULT_ID RESULT_ID  ,
		       Extent2.DOC_ID DOC_ID  ,
		       Extent2.CRT_USER_ID CRT_USER_ID  ,
		       Extent2.CRT_DT CRT_DT  ,
		       Extent2.CALL_DT CALL_DT  ,
		       Extent2.IS_WAIT_FOR_CANCL IS_WAIT_FOR_CANCL  ,
		       Extent2.HAPY_CALLER_ID HAPY_CALLER_ID  ,
		       Extent2.UPD_DT UPD_DT  ,
		       Extent2.UPD_USER_ID UPD_USER_ID  ,
		       Extent2.ORI_CALL_DT ORI_CALL_DT
		  FROM SAL0046D Extent1
		         JOIN CCR0006D Extent2   ON Extent1.CALL_ENTRY_ID = Extent2.CALL_ENTRY_ID
		 WHERE  Extent1.INSTALL_ENTRY_ID =#{installEntryId}
		 </select>
		 <select id="getOrderExchangeTypeByInstallEntryID" parameterType="Map" resultType="egovMap">
		 SELECT Extent1.INSTALL_ENTRY_ID INSTALL_ENTRY_ID  ,
			   Extent1.DISTANCE,
		       Extent1.PREV_SVC_AREA,
		       Extent1.NEXT_SVC_AREA,
		       Extent4.SALES_ORD_NO SALES_ORD_NO  ,
		       CASE
		            WHEN ( Extent4.REF_NO IS NOT NULL ) THEN Extent4.REF_NO
		       ELSE ''
		          END C1  ,
		       Extent4.SALES_DT SALES_DT  ,
		       CASE
		            WHEN ( Extent4.UPD_DT IS NOT NULL ) THEN Extent4.UPD_DT
		       ELSE Extent4.SALES_DT
		          END C2  ,
		       CASE
		            WHEN ( Extent4.UPD_USER_ID IS NOT NULL ) THEN Extent4.UPD_USER_ID
		       ELSE 0
		          END C3  ,
		       CASE
		            WHEN ( Extent7.CODE_ID IS NOT NULL ) THEN Extent7.CODE_ID
		       ELSE 0
		          END C4  ,
		       CASE
		            WHEN ( Extent7.CODE_NAME IS NOT NULL ) THEN Extent7.CODE_NAME
		       ELSE ''
		          END C5  ,
		       Extent8.STK_CTGRY_ID STK_CTGRY_ID  ,
		       Extent8.STK_ID STK_ID  ,
		       CASE
		            WHEN ( Extent8.STK_CODE IS NOT NULL ) THEN Extent8.STK_CODE
		       ELSE ''
		          END C6  ,
		       CASE
		            WHEN ( Extent8.STK_DESC IS NOT NULL ) THEN Extent8.STK_DESC
		       ELSE ''
		          END C7  ,
		       Extent5.CUST_ID CUST_ID  ,
		       Extent5.NAME NAME  ,
		       Extent5.NRIC NRIC  ,
		       Extent4.REM REM  ,
		       Extent4.PROMO_ID PROMO_ID  ,
		       Extent10.PROMO_CODE PROMO_CODE  ,
		       Extent10.PROMO_DESC PROMO_DESC  ,
		       CASE
		            WHEN ( Extent3.SO_EXCHG_OLD_PROMO_ID IS NOT NULL ) THEN Extent3.SO_EXCHG_OLD_PROMO_ID
		       ELSE 0
		          END C8  ,
		       CASE
		            WHEN ( Extent11.PROMO_CODE IS NOT NULL ) THEN Extent11.PROMO_CODE
		       ELSE ''
		          END C9  ,
		       CASE
		            WHEN ( Extent11.PROMO_DESC IS NOT NULL ) THEN Extent11.PROMO_DESC
		       ELSE ''
		          END C10  ,
		       CASE
		            WHEN ( Extent3.SO_EXCHG_NW_PRC_ID IS NOT NULL ) THEN Extent3.SO_EXCHG_NW_PRC_ID
		       ELSE 0
		          END C11  ,
		       CASE
		            WHEN ( Extent3.SO_EXCHG_NW_PRC IS NOT NULL ) THEN Extent3.SO_EXCHG_NW_PRC
		       ELSE UTILS.CONVERT_TO_FLOAT(0,53)
		          END C12  ,
		       CASE
		            WHEN ( Extent3.SO_EXCHG_NW_PV IS NOT NULL ) THEN Extent3.SO_EXCHG_NW_PV
		       ELSE UTILS.CONVERT_TO_FLOAT(0,53)
		          END C13  ,
		       CASE
		            WHEN ( Extent3.SO_EXCHG_OLD_PRC_ID IS NOT NULL ) THEN Extent3.SO_EXCHG_OLD_PRC_ID
		       ELSE 0
		          END C14  ,
		       CASE
		            WHEN ( Extent3.SO_EXCHG_OLD_PRC IS NOT NULL ) THEN Extent3.SO_EXCHG_OLD_PRC
		       ELSE UTILS.CONVERT_TO_FLOAT(0,53)
		          END C15  ,
		       CASE
		            WHEN ( Extent3.SO_EXCHG_OLD_PV IS NOT NULL ) THEN Extent3.SO_EXCHG_OLD_PV
		       ELSE UTILS.CONVERT_TO_FLOAT(0,53)
		          END C16  ,
		       CASE
		            WHEN ( Extent4.MTH_RENT_AMT IS NOT NULL ) THEN Extent4.MTH_RENT_AMT
		       ELSE UTILS.CONVERT_TO_FLOAT(0,53)
		          END C17  ,
		       CASE
		            WHEN ( Extent4.DEF_RENT_AMT IS NOT NULL ) THEN Extent4.DEF_RENT_AMT
		       ELSE UTILS.CONVERT_TO_FLOAT(0,53)
		          END C18  ,
		       CASE
		            WHEN ( Extent12.STUS_CODE_ID IS NOT NULL ) THEN Extent12.STUS_CODE_ID
		       ELSE 0
		          END C19  ,
		       Extent12.NAME NAME1  ,
		       Extent6.MEM_ID MEM_ID  ,
		       Extent6.MEM_CODE MEM_CODE  ,
		       Extent6.MEM_TYPE MEM_TYPE  ,
		       Extent6.NAME NAME2  ,
		       Extent6.FULL_NAME FULL_NAME  ,
		       Extent6.PASSWD PASSWD  ,
		       Extent6.NRIC NRIC1  ,
		       Extent6.DOB DOB  ,
		       Extent6.GENDER GENDER  ,
		       Extent6.RACE RACE  ,
		       Extent6.MARTL MARTL  ,
		       Extent6.NATION NATION  ,
		     --  Extent6.ADDR1 ADDR1  ,
		     --  Extent6.ADDR2 ADDR2  ,
		     --  Extent6.ADDR3 ADDR3  ,
		     --  Extent6.ADDR4 ADDR4  ,
		     --  Extent6.AREAL AREAL  ,
		     --  Extent6.POST_CODE POST_CODE  ,
		       -- Extent6.STATE STATE  ,
		    --   Extent6.CNTY CNTY  ,
		       Extent6.TEL_OFFICE TEL_OFFICE  ,
		       Extent6.TEL_HUSE TEL_HUSE  ,
		       Extent6.TEL_MOBILE TEL_MOBILE  ,
		       Extent6.EMAIL EMAIL  ,
		       Extent6.SPUSE_CODE SPUSE_CODE  ,
		       Extent6.SPOUSE_NAME SPOUSE_NAME  ,
		       Extent6.SPOUSE_NRIC SPOUSE_NRIC  ,
		       Extent6.SPOUSE_OCPAT SPOUSE_OCPAT  ,
		       Extent6.SPOUSE_TEL_CNTC SPOUSE_TEL_CNTC  ,
		       Extent6.SPOUSE_DOB SPOUSE_DOB  ,
		       Extent6.EDC_LEV EDC_LEV  ,
		       Extent6.LANG LANG  ,
		       Extent6.BANK BANK  ,
		       Extent6.BANK_ACC_NO BANK_ACC_NO  ,
		       Extent6.SPONS_CODE SPONS_CODE  ,
		       Extent6.JOIN_DT JOIN_DT  ,
		       Extent6.RESIGN_DT RESIGN_DT  ,
		       Extent6.TRM_DT TRM_DT  ,
		       Extent6.RENEW_DT RENEW_DT  ,
		       Extent6.AGRMNT_NO AGRMNT_NO  ,
		       Extent6.BRNCH BRNCH  ,
		       Extent6.STUS STUS  ,
		       Extent6.SYNC_CHK SYNC_CHK  ,
		       Extent6.RANK RANK  ,
		       Extent6.TRNSPRT TRNSPRT  ,
		       Extent6.PROMO_DT PROMO_DT  ,
		       Extent6.TR_NO TR_NO  ,
		       Extent6.CRT_DT CRT_DT  ,
		       Extent6.CRT_USER_ID CRT_USER_ID  ,
		       Extent6.UPD_DT UPD_DT  ,
		       Extent6.UPD_USER_ID UPD_USER_ID  ,
		       Extent6.MEM_IS_OUT_SRC MEM_IS_OUT_SRC  ,
		       Extent6.APLICNT_ID APLICNT_ID  ,
		       Extent6.BIZ_TYPE BIZ_TYPE  ,
		       Extent6.HSPTLZ HSPTLZ  ,
		       Extent9.MEM_ID MEMBERID1  ,
		       Extent9.MEM_UP_ID MEM_UP_ID  ,
		       Extent9.MEM_LVL MEM_LVL  ,
		       Extent9.DEPT_CODE DEPT_CODE  ,
		       Extent9.ORG_UPD_USER_ID ORG_UPD_USER_ID  ,
		       Extent9.ORG_UPD_DT ORG_UPD_DT  ,
		       Extent9.PREV_DEPT_CODE PREV_DEPT_CODE  ,
		       Extent9.PREV_GRP_CODE PREV_GRP_CODE  ,
		       Extent9.PREV_MEM_ID_ID PREV_MEM_ID_ID  ,
		       Extent9.PREV_MEM_LVL PREV_MEM_LVL  ,
		       Extent9.ORG_STUS_CODE_ID ORG_STUS_CODE_ID  ,
		       Extent9.PR_CODE PR_CODE  ,
		       Extent9.PR_MEM_ID PR_MEM_ID  ,
		       Extent9.GRAND_PR_CODE GRAND_PR_CODE  ,
		       Extent9.GRAND_PR_MEM_ID GRAND_PR_MEM_ID  ,
		       Extent9.LAST_DEPT_CODE LAST_DEPT_CODE  ,
		       Extent9.LAST_GRP_CODE LAST_GRP_CODE  ,
		       Extent9.LAST_ORG_CODE LAST_ORG_CODE  ,
		       Extent9.LAST_TOP_ORG_CODE LAST_TOP_ORG_CODE  ,
		       Extent9.BRNCH_ID BRNCH_ID  ,
		       CASE
		            WHEN ( Extent3.SO_CUR_STUS_ID IS NOT NULL ) THEN Extent3.SO_CUR_STUS_ID
		       ELSE 0
		          END C20  ,
		       Extent2.DOC_ID DOC_ID  ,
		       CASE
		            WHEN ( Extent3.SO_EXCHG_NW_APP_TYPE_ID IS NOT NULL ) THEN Extent3.SO_EXCHG_NW_APP_TYPE_ID
		       ELSE 0
		          END C21
		  FROM SAL0046D Extent1
		         JOIN CCR0006D Extent2   ON Extent1.CALL_ENTRY_ID = Extent2.CALL_ENTRY_ID
		         LEFT JOIN SAL0004D Extent3   ON Extent2.DOC_ID = Extent3.SO_EXCHG_ID
		         JOIN SAL0001D Extent4   ON Extent1.SALES_ORD_ID = Extent4.SALES_ORD_ID
		         JOIN SAL0029D Extent5   ON Extent4.CUST_ID = Extent5.CUST_ID
		         JOIN ORG0001D Extent6   ON Extent4.MEM_ID = Extent6.MEM_ID
		         LEFT JOIN SYS0013M Extent7   ON Extent4.APP_TYPE_ID = Extent7.CODE_ID
		         LEFT JOIN SYS0026M Extent8   ON Extent1.INSTALL_STK_ID = Extent8.STK_ID
		         LEFT JOIN ORG0005D Extent9   ON Extent6.MEM_ID = Extent9.MEM_ID
		         LEFT JOIN SAL0017D Extent10   ON Extent4.PROMO_ID = Extent10.PROMO_ID
		         LEFT JOIN SAL0017D Extent11   ON Extent3.SO_EXCHG_OLD_PROMO_ID = Extent11.PROMO_ID
		         LEFT JOIN SYS0038M Extent12   ON Extent1.STUS_CODE_ID = Extent12.STUS_CODE_ID
		 WHERE  Extent1.INSTALL_ENTRY_ID = #{installEntryId}
		 </select>
		 <select id="selectFailReason" parameterType="Map" resultType="egovMap">
		 SELECT Extent1.RESN_ID RESN_ID  ,
		       Extent1.CODE CODE  ,
		       Extent1.CODE || '  - ' || Extent1.RESN_DESC C1
		  FROM SYS0032M Extent1
		 WHERE  ( Extent1.RESN_TYPE_ID = #{reasonTypeId} )
		          AND ( Extent1.STUS_CODE_ID = #{ststusCodeId} )
		  </select>

		  <select id="getStockInCTIDByInstallEntryIDForInstallationView" parameterType="Map" resultType="egovMap">
		      SELECT Filter1.MOV_ID MOV_ID  ,
			       Filter1.MOV_TO_LOC_ID MOV_TO_LOC_ID  ,
			       Filter1.MEM_CODE MEM_CODE  ,
			       Filter1.NAME NAME
			  FROM ( SELECT Extent1.MOV_ID MOV_ID  ,
			                Extent1.INSTALL_ENTRY_ID INSTALL_ENTRY_ID  ,
			                Extent1.MOV_TO_LOC_ID MOV_TO_LOC_ID  ,
			                Extent3.MEM_CODE MEM_CODE  ,
			                Extent3.NAME NAME
			         FROM LOG0013D Extent1
			                JOIN SYS0028M Extent2   ON Extent1.MOV_TO_LOC_ID = Extent2.WH_LOC_ID
			                JOIN ORG0001D Extent3   ON Extent2.WH_LOC_CODE = Extent3.MEM_CODE
			          WHERE  Extent1.MOV_STUS_ID IN ( 1,4 )
			        ) Filter1
			         JOIN ( SELECT MAX(Extent4.MOV_ID)  A1
			                FROM LOG0013D Extent4
			                 WHERE  ( Extent4.INSTALL_ENTRY_ID = #{installEntryId} )
			                          AND ( Extent4.MOV_STUS_ID IN ( 1,4 )
			                         )
			                          AND ( Extent4.MOV_TYPE_ID IN ( 261,263 )
			                         ) ) GroupBy1   ON Filter1.MOV_ID = GroupBy1.A1
			 WHERE  Filter1.INSTALL_ENTRY_ID = #{installEntryId}
		  </select>
		  <select id="getSirimLocByInstallEntryID" parameterType="Map" resultType="egovMap">
			  SELECT Extent1.WH_LOC_CODE WH_LOC_CODE
			  FROM SYS0028M Extent1
			         JOIN LOG0013D Extent2   ON Extent1.WH_LOC_ID = Extent2.MOV_FROM_LOC_ID
			 WHERE  ( Extent2.INSTALL_ENTRY_ID = #{installEntryId} )
			          AND ( Extent2.MOV_STUS_ID IN ( 1,4 )
			         )
			          AND ( 261 = Extent2.MOV_TYPE_ID )
		  </select>
		   <select id="checkCurrentPromoIsSwapPromoIDByPromoID" parameterType="int" resultType="egovMap">
		          SELECT Extent1.PROMO_ID PROMO_ID  ,
				       Extent1.PROMO_MTCH_ID PROMO_MTCH_ID  ,
				       Extent1.PROMO_CODE PROMO_CODE  ,
				       Extent1.PROMO_DESC PROMO_DESC  ,
				       Extent1.PROMO_TYPE_ID PROMO_TYPE_ID  ,
				       Extent1.PROMO_APP_TYPE_ID PROMO_APP_TYPE_ID  ,
				       Extent1.PROMO_SRV_MEM_PAC_ID PROMO_SRV_MEM_PAC_ID  ,
				       Extent1.PROMO_DT_FROM PROMO_DT_FROM  ,
				       Extent1.PROMO_DT_END PROMO_DT_END  ,
				       Extent1.PROMO_STUS_ID PROMO_STUS_ID  ,
				       Extent1.PROMO_UPD_DT PROMO_UPD_DT  ,
				       Extent1.PROMO_UPD_USER_ID PROMO_UPD_USER_ID  ,
				       Extent1.PROMO_IS_TRIAL_CNVR PROMO_IS_TRIAL_CNVR  ,
			       Extent1.PROMO_PRC_PRCNT PROMO_PRC_PRCNT
			  FROM SAL0017D Extent1
			 WHERE  ( 1 = Extent1.PROMO_STUS_ID )
			          AND ( Extent1.PROMO_MTCH_ID IS NOT NULL )
			          AND ( Extent1.PROMO_MTCH_ID > 0 )
			          AND ( Extent1.PROMO_ID = #{promotionId} )
		   </select>

		  <select id="selectSalesPromoMs" parameterType="int" resultType="egovMap">
				SELECT Extent1.PROMO_ID PROMO_ID  ,
				       Extent1.PROMO_MTCH_ID PROMO_MTCH_ID  ,
				       Extent1.PROMO_CODE PROMO_CODE  ,
				       Extent1.PROMO_DESC PROMO_DESC  ,
				       Extent1.PROMO_TYPE_ID PROMO_TYPE_ID  ,
				       Extent1.PROMO_APP_TYPE_ID PROMO_APP_TYPE_ID  ,
				       Extent1.PROMO_SRV_MEM_PAC_ID PROMO_SRV_MEM_PAC_ID  ,
				       Extent1.PROMO_DT_FROM PROMO_DT_FROM  ,
				       Extent1.PROMO_DT_END PROMO_DT_END  ,
				       Extent1.PROMO_STUS_ID PROMO_STUS_ID  ,
				       Extent1.PROMO_UPD_DT PROMO_UPD_DT  ,
				       Extent1.PROMO_UPD_USER_ID PROMO_UPD_USER_ID  ,
				       Extent1.PROMO_IS_TRIAL_CNVR PROMO_IS_TRIAL_CNVR  ,
				       Extent1.PROMO_PRC_PRCNT PROMO_PRC_PRCNT
				  FROM SAL0017D Extent1
				 WHERE  ( 1 = Extent1.PROMO_STUS_ID )
				          AND ( Extent1.PROMO_MTCH_ID = #{promotionId} )
		  </select>
		  <select id="getPromoPriceAndPV" parameterType="Map" resultType="egovMap">
		  SELECT Extent2.PROMO_ITM_ID PROMO_ITM_ID  ,
		       Extent2.PROMO_ID PROMO_ID  ,
		       Extent2.PROMO_ITM_STK_ID PROMO_ITM_STK_ID  ,
		       Extent2.PROMO_ITM_CUR_ID PROMO_ITM_CUR_ID  ,
		       Extent2.PROMO_ITM_PRC PROMO_ITM_PRC  ,
		       Extent2.PROMO_ITM_PV PROMO_ITM_PV  ,
		       Extent2.PROMO_ITM_STUS_ID PROMO_ITM_STUS_ID  ,
		       Extent2.PROMO_ITM_UPD_USER_ID PROMO_ITM_UPD_USER_ID  ,
		       Extent2.PROMO_ITM_UPD_DT PROMO_ITM_UPD_DT  ,
		       Extent2.PROMO_ITM_RENTAL PROMO_ITM_RENTAL  ,
		       Extent2.PROMO_ITM_RENT_PRIOD PROMO_ITM_RENT_PRIOD  ,
		       Extent2.PROMO_ITM_OBLIG_PRIOD PROMO_ITM_OBLIG_PRIOD
		  FROM SAL0017D Extent1
		         JOIN SAL0018D Extent2   ON Extent1.PROMO_ID = Extent2.PROMO_ID
		 WHERE  ( Extent2.PROMO_ID = #{promotionId})
		          AND ( 1 = Extent2.PROMO_ITM_STUS_ID )
		          AND ( Extent2.PROMO_ITM_STK_ID = #{productId} )
		  </select>
		  <select id="selectInstallation" parameterType="Map" resultType="egovMap">
		  <![CDATA[
		  SELECT Limit1.INSTALL_ENTRY_ID INSTALL_ENTRY_ID  ,
		       Limit1.CALL_ENTRY_ID CALL_ENTRY_ID  ,
		       Limit1.INSTALL_ENTRY_NO INSTALL_ENTRY_NO  ,
		       Limit1.INSTALL_DT INSTALL_DT  ,
		       Limit1.TYPE_ID TYPE_ID  ,
		       Limit1.CODE_NAME CODE_NAME  ,
		       '' C1  ,
		       0 C2  ,
		       '' C3  ,
		       '' C4  ,
		       0 C5  ,
		       CASE
		            WHEN ( Limit1.BRNCH_ID IS NOT NULL ) THEN Limit1.BRNCH_ID
		       ELSE 0
		          END C6  ,
		      TO_NUMBER(0) C7  ,
		       CASE
		            WHEN ( Limit1.STK_CTGRY_ID IS NOT NULL ) THEN Limit1.STK_CTGRY_ID
		       ELSE 0
		          END C8  ,
		       Limit1.INSTALL_STK_ID INSTALL_STK_ID  ,
		       Limit1.STK_CODE STK_CODE  ,
		       Limit1.STK_DESC STK_DESC  ,
		       Limit1.CODENAME1 CODENAME1  ,
		       0 C9  ,
		       '' C10  ,
		       Limit1.STUS_CODE_ID STUS_CODE_ID  ,
		       Limit1.NAME NAME
		  FROM ( SELECT Extent1.INSTALL_ENTRY_ID INSTALL_ENTRY_ID  ,
		                Extent1.INSTALL_ENTRY_NO INSTALL_ENTRY_NO  ,
		                Extent1.STUS_CODE_ID STUS_CODE_ID  ,
		                Extent1.INSTALL_DT INSTALL_DT  ,
		                Extent1.CALL_ENTRY_ID CALL_ENTRY_ID  ,
		                Extent1.INSTALL_STK_ID INSTALL_STK_ID  ,
		                Extent2.BRNCH_ID BRNCH_ID  ,
		                Extent3.NAME NAME  ,
		                Extent4.TYPE_ID TYPE_ID  ,
		                Extent5.CODE_NAME CODE_NAME  ,
		                Extent6.STK_CODE STK_CODE  ,
		                Extent6.STK_DESC STK_DESC  ,
		                Extent6.STK_CTGRY_ID STK_CTGRY_ID  ,
		                Extent7.CODE_NAME CODENAME1
		         FROM SAL0046D Extent1
		                JOIN SAL0045D Extent2   ON Extent2.SALES_ORD_ID = Extent1.SALES_ORD_ID
		                JOIN SYS0038M Extent3   ON Extent3.STUS_CODE_ID = Extent1.STUS_CODE_ID
		                JOIN CCR0006D Extent4   ON Extent4.CALL_ENTRY_ID = Extent1.CALL_ENTRY_ID
		                JOIN SYS0013M Extent5   ON Extent5.CODE_ID = Extent4.TYPE_ID
		                JOIN SYS0026M Extent6   ON Extent6.STK_ID = Extent1.INSTALL_STK_ID
		                JOIN SYS0013M Extent7   ON Extent7.CODE_ID = Extent6.STK_CTGRY_ID
		          WHERE  Extent1.INSTALL_ENTRY_ID =  #{installEntryId} AND ROWNUM <= 1 ) Limit1
		          ]]>
		  </select>

		  <select id="selectAssignCt" parameterType="Map" resultType="egovMap">
		  <![CDATA[
		      SELECT Limit1.WH_LOC_ID WH_LOC_ID  ,
			       Limit1.MEM_ID MEM_ID  ,
			       Limit1.MEM_CODE MEM_CODE  ,
			       Limit1.NAME NAME  ,
			       Limit1.NRIC NRIC
			  FROM ( SELECT Extent3.WH_LOC_ID WH_LOC_ID  ,
			                Extent4.MEM_ID MEM_ID  ,
			                Extent4.MEM_CODE MEM_CODE  ,
			                Extent4.NAME NAME  ,
			                Extent4.NRIC NRIC
			         FROM LOG0013D Extent1
			                JOIN ( SELECT MAX(Extent2.MOV_ID)  A1
			                       FROM LOG0013D Extent2
			                        WHERE  ( Extent2.INSTALL_ENTRY_ID =#{installEntryId} )
			                                 AND ( Extent2.MOV_STUS_ID IN ( 1,4 )
			                                )
			                                 AND ( Extent2.MOV_TYPE_ID IN ( 261,263 )
			                                ) ) GroupBy1   ON Extent1.MOV_ID = GroupBy1.A1
			                JOIN SYS0028M Extent3   ON Extent3.WH_LOC_ID = Extent1.MOV_TO_LOC_ID
			                JOIN ORG0001D Extent4   ON Extent4.MEM_CODE = Extent3.WH_LOC_CODE
			          WHERE  ( Extent1.INSTALL_ENTRY_ID = #{installEntryId} )
			                   AND ( Extent1.MOV_STUS_ID IN ( 1,4 )
			                  ) AND ROWNUM <= 1 ) Limit1
		      ]]>
		  </select>

		  <select id="selectDoComplete" parameterType="Map" resultType="egovMap">
		  <![CDATA[
		          SELECT Limit1.MOV_ID MOV_ID  ,
				        Limit1.MOV_FROM_LOC_ID MOV_FROM_LOC_ID  ,
				       Limit1.WH_LOC_CODE WH_LOC_CODE  ,
				       Limit1.MOV_TO_LOC_ID MOV_TO_LOC_ID
				  FROM ( SELECT Extent1.MOV_ID MOV_ID  ,
				                Extent1.MOV_FROM_LOC_ID MOV_FROM_LOC_ID  ,
				                Extent1.MOV_TO_LOC_ID MOV_TO_LOC_ID  ,
				                Extent2.WH_LOC_CODE WH_LOC_CODE
				         FROM LOG0013D Extent1
				                JOIN SYS0028M Extent2   ON Extent2.WH_LOC_ID = Extent1.MOV_FROM_LOC_ID
				          WHERE  ( Extent1.INSTALL_ENTRY_ID = 2751 )
				                   AND ( 261 = Extent1.MOV_TYPE_ID )
				                   AND ( 4 = Extent1.MOV_STUS_ID ) AND ROWNUM <= 1 ) Limit1
			 ]]>
		  </select>
		  <select id="selectExchangeInfo" parameterType="Map" resultType="egovMap">
		  <![CDATA[
		  SELECT Limit1.SO_EXCHG_ID SO_EXCHG_ID  ,
		       Limit1.APP_TYPE_ID APP_TYPE_ID  ,
		       Limit1.SO_EXCHG_UNDER_FREE_AS_ID SO_EXCHG_UNDER_FREE_AS_ID  ,
		       Limit1.SO_EXCHG_CRT_DT SO_EXCHG_CRT_DT  ,
		       Limit1.SO_EXCHG_CRT_USER_ID SO_EXCHG_CRT_USER_ID  ,
		       Limit1.C1 C1  ,
		       Limit1.CUST_ID CUST_ID  ,
		       Limit1.NAME NAME  ,
		       Limit1.NRIC NRIC  ,
		       Limit1.SO_EXCHG_RESN_ID SO_EXCHG_RESN_ID  ,
		       Limit1.C2 C2  ,
		       Limit1.C3 C3  ,
		       Limit1.SO_CUR_STUS_ID SO_CUR_STUS_ID  ,
		       Limit1.NAME1 NAME1  ,
		       Limit1.SO_EXCHG_STUS_ID SO_EXCHG_STUS_ID  ,
		       Limit1.CODE CODE  ,
		       Limit1.NAME2 NAME2  ,
		       Limit1.SO_EXCHG_TYPE_ID SO_EXCHG_TYPE_ID  ,
		       Limit1.CODE1 CODE1  ,
		       Limit1.CODE_NAME CODE_NAME  ,
		       Limit1.INSTALL_ENTRY_ID INSTALL_ENTRY_ID  ,
		       Limit1.SO_EXCHG_STK_RET_MOV_ID SO_EXCHG_STK_RET_MOV_ID  ,
		       Limit1.SO_EXCHG_NW_APP_TYPE_ID SO_EXCHG_NW_APP_TYPE_ID  ,
		       Limit1.C4 C4  ,
		       Limit1.SO_EXCHG_NW_CALL_ENTRY_ID SO_EXCHG_NW_CALL_ENTRY_ID  ,
		       Limit1.SO_EXCHG_NW_SRV_CONFIG_ID SO_EXCHG_NW_SRV_CONFIG_ID  ,
		       Limit1.SO_EXCHG_NW_CUST_ID SO_EXCHG_NW_CUST_ID  ,
		       Limit1.SO_EXCHG_NW_DEF_RENT_AMT SO_EXCHG_NW_DEF_RENT_AMT  ,
		       Limit1.SO_EXCHG_NW_PRC SO_EXCHG_NW_PRC  ,
		       Limit1.SO_EXCHG_NW_PRC_ID SO_EXCHG_NW_PRC_ID  ,
		       Limit1.SO_EXCHG_NW_STK_ID SO_EXCHG_NW_STK_ID  ,
		       Limit1.C5 C5  ,
		       Limit1.C6 C6  ,
		       Limit1.SO_EXCHG_NW_PROMO_ID SO_EXCHG_NW_PROMO_ID  ,
		       Limit1.C7 C7  ,
		       Limit1.C8 C8  ,
		       Limit1.SO_EXCHG_NW_PV SO_EXCHG_NW_PV  ,
		       Limit1.SO_EXCHG_NW_RENT_AMT SO_EXCHG_NW_RENT_AMT  ,
		       Limit1.SO_EXCHG_OLD_APP_TYPE_ID SO_EXCHG_OLD_APP_TYPE_ID  ,
		       Limit1.C9 C9  ,
		       Limit1.SO_EXCHG_OLD_CALL_ENTRY_ID SO_EXCHG_OLD_CALL_ENTRY_ID  ,
		       Limit1.SO_EXCHG_OLD_SRV_CONFIG_ID SO_EXCHG_OLD_SRV_CONFIG_ID  ,
		       Limit1.SO_EXCHG_OLD_CUST_ID SO_EXCHG_OLD_CUST_ID  ,
		       Limit1.SO_EXCHG_OLD_DEF_RENT_AMT SO_EXCHG_OLD_DEF_RENT_AMT  ,
		       Limit1.SO_EXCHG_OLD_PRC SO_EXCHG_OLD_PRC  ,
		       Limit1.SO_EXCHG_OLD_PRC_ID SO_EXCHG_OLD_PRC_ID  ,
		       Limit1.SO_EXCHG_OLD_STK_ID SO_EXCHG_OLD_STK_ID  ,
		       Limit1.C10 C10  ,
		       Limit1.C11 C11  ,
		       Limit1.SO_EXCHG_OLD_PROMO_ID SO_EXCHG_OLD_PROMO_ID  ,
		       Limit1.C12 C12  ,
		       Limit1.C13 C13  ,
		       Limit1.SO_EXCHG_OLD_PV SO_EXCHG_OLD_PV  ,
		       Limit1.SO_EXCHG_OLD_RENT_AMT SO_EXCHG_OLD_RENT_AMT  ,
		       Limit1.SO_ID SO_ID  ,
		       Limit1.SALES_ORD_NO SALES_ORD_NO  ,
		       Limit1.C14 C14  ,
		       Limit1.C15 C15  ,
		       Limit1.SO_EXCHG_UPD_DT SO_EXCHG_UPD_DT  ,
		       Limit1.SO_EXCHG_UPD_USER_ID SO_EXCHG_UPD_USER_ID  ,
		       Limit1.C16 C16  ,
		       Limit1.C17 C17  ,
		       Limit1.NAME3 NAME3  ,
		       Limit1.NAME4 NAME4
		  FROM ( SELECT Extent1.SO_EXCHG_ID SO_EXCHG_ID  ,
		                Extent1.SO_ID SO_ID  ,
		                Extent1.SO_EXCHG_TYPE_ID SO_EXCHG_TYPE_ID  ,
		                Extent1.SO_EXCHG_STUS_ID SO_EXCHG_STUS_ID  ,
		                Extent1.SO_EXCHG_RESN_ID SO_EXCHG_RESN_ID  ,
		                Extent1.SO_CUR_STUS_ID SO_CUR_STUS_ID  ,
		                Extent1.INSTALL_ENTRY_ID INSTALL_ENTRY_ID  ,
		                Extent1.SO_EXCHG_OLD_APP_TYPE_ID SO_EXCHG_OLD_APP_TYPE_ID  ,
		                Extent1.SO_EXCHG_NW_APP_TYPE_ID SO_EXCHG_NW_APP_TYPE_ID  ,
		                Extent1.SO_EXCHG_OLD_STK_ID SO_EXCHG_OLD_STK_ID  ,
		                Extent1.SO_EXCHG_NW_STK_ID SO_EXCHG_NW_STK_ID  ,
		                Extent1.SO_EXCHG_OLD_PRC_ID SO_EXCHG_OLD_PRC_ID  ,
		                Extent1.SO_EXCHG_NW_PRC_ID SO_EXCHG_NW_PRC_ID  ,
		                Extent1.SO_EXCHG_OLD_PRC SO_EXCHG_OLD_PRC  ,
		                Extent1.SO_EXCHG_NW_PRC SO_EXCHG_NW_PRC  ,
		                Extent1.SO_EXCHG_OLD_PV SO_EXCHG_OLD_PV  ,
		                Extent1.SO_EXCHG_NW_PV SO_EXCHG_NW_PV  ,
		                Extent1.SO_EXCHG_OLD_RENT_AMT SO_EXCHG_OLD_RENT_AMT  ,
		                Extent1.SO_EXCHG_NW_RENT_AMT SO_EXCHG_NW_RENT_AMT  ,
		                Extent1.SO_EXCHG_OLD_PROMO_ID SO_EXCHG_OLD_PROMO_ID  ,
		                Extent1.SO_EXCHG_NW_PROMO_ID SO_EXCHG_NW_PROMO_ID  ,
		                Extent1.SO_EXCHG_CRT_DT SO_EXCHG_CRT_DT  ,
		                Extent1.SO_EXCHG_CRT_USER_ID SO_EXCHG_CRT_USER_ID  ,
		                Extent1.SO_EXCHG_UPD_DT SO_EXCHG_UPD_DT  ,
		                Extent1.SO_EXCHG_UPD_USER_ID SO_EXCHG_UPD_USER_ID  ,
		                Extent1.SO_EXCHG_OLD_SRV_CONFIG_ID SO_EXCHG_OLD_SRV_CONFIG_ID  ,
		                Extent1.SO_EXCHG_NW_SRV_CONFIG_ID SO_EXCHG_NW_SRV_CONFIG_ID  ,
		                Extent1.SO_EXCHG_OLD_CALL_ENTRY_ID SO_EXCHG_OLD_CALL_ENTRY_ID  ,
		                Extent1.SO_EXCHG_NW_CALL_ENTRY_ID SO_EXCHG_NW_CALL_ENTRY_ID  ,
		                Extent1.SO_EXCHG_STK_RET_MOV_ID SO_EXCHG_STK_RET_MOV_ID  ,
		                Extent1.SO_EXCHG_OLD_DEF_RENT_AMT SO_EXCHG_OLD_DEF_RENT_AMT  ,
		                Extent1.SO_EXCHG_NW_DEF_RENT_AMT SO_EXCHG_NW_DEF_RENT_AMT  ,
		                Extent1.SO_EXCHG_UNDER_FREE_AS_ID SO_EXCHG_UNDER_FREE_AS_ID  ,
		                Extent1.SO_EXCHG_OLD_CUST_ID SO_EXCHG_OLD_CUST_ID  ,
		                Extent1.SO_EXCHG_NW_CUST_ID SO_EXCHG_NW_CUST_ID  ,
		                Extent2.SALES_ORD_NO SALES_ORD_NO  ,
		                Extent2.APP_TYPE_ID APP_TYPE_ID  ,
		                Extent3.CUST_ID CUST_ID  ,
		                Extent3.NAME NAME  ,
		                Extent3.NRIC NRIC  ,
		                Extent4.NAME NAME1  ,
		                Extent5.CODE CODE  ,
		                Extent5.NAME NAME2  ,
		                Extent6.CODE CODE1  ,
		                Extent6.CODE_NAME CODE_NAME  ,
		                Extent16.NAME NAME3  ,
		                Extent17.NAME NAME4  ,
		                CASE
		                     WHEN ( Extent8.USER_ID IS NOT NULL ) THEN Extent8.USER_NAME
		                ELSE ''
		                   END C1  ,
		                CASE
		                     WHEN ( Extent7.RESN_ID IS NOT NULL ) THEN Extent7.CODE
		                ELSE ''
		                   END C2  ,
		                CASE
		                     WHEN ( Extent7.RESN_ID IS NOT NULL ) THEN Extent7.RESN_DESC
		                ELSE ''
		                   END C3  ,
		                CASE
		                     WHEN ( Extent10.CODE_ID IS NOT NULL ) THEN Extent10.CODE_NAME
		                ELSE ''
		                   END C4  ,
		                CASE
		                     WHEN ( Extent11.STK_ID IS NOT NULL ) THEN Extent11.STK_CODE
		                ELSE ''
		                   END C5  ,
		                CASE
		                     WHEN ( Extent11.STK_ID IS NOT NULL ) THEN Extent11.STK_DESC
		                ELSE ''
		                   END C6  ,
		                CASE
		                     WHEN ( Extent12.PROMO_ID IS NOT NULL ) THEN Extent12.PROMO_CODE
		                ELSE ''
		                   END C7  ,
		                CASE
		                     WHEN ( Extent12.PROMO_ID IS NOT NULL ) THEN Extent12.PROMO_DESC
		                ELSE ''
		                   END C8  ,
		                CASE
		                     WHEN ( Extent13.CODE_ID IS NOT NULL ) THEN Extent13.CODE_NAME
		                ELSE ''
		                   END C9  ,
		                CASE
		                     WHEN ( Extent14.STK_ID IS NOT NULL ) THEN Extent14.STK_CODE
		                ELSE ''
		                   END C10  ,
		                CASE
		                     WHEN ( Extent14.STK_ID IS NOT NULL ) THEN Extent14.STK_DESC
		                ELSE ''
		                   END C11  ,
		                CASE
		                     WHEN ( Extent15.PROMO_ID IS NOT NULL ) THEN Extent15.PROMO_CODE
		                ELSE ''
		                   END C12  ,
		                CASE
		                     WHEN ( Extent15.PROMO_ID IS NOT NULL ) THEN Extent15.PROMO_DESC
		                ELSE ''
		                   END C13  ,
		                Extent2.SALES_DT C14  ,
		                CASE
		                     WHEN ( Extent1.SO_EXCHG_REM IS NOT NULL ) THEN Extent1.SO_EXCHG_REM
		                ELSE ''
		                   END C15  ,
		                CASE
		                     WHEN ( Extent9.USER_ID IS NOT NULL ) THEN Extent9.USER_NAME
		                ELSE ''
		                   END C16  ,
		                CASE
		                     WHEN ( Extent1.SO_EXCHG_FORM_NO IS NOT NULL ) THEN Extent1.SO_EXCHG_FORM_NO
		                ELSE ' - '
		                   END C17
		         FROM SAL0004D Extent1
		                JOIN SAL0001D Extent2   ON Extent2.SALES_ORD_ID = Extent1.SO_ID
		                JOIN SAL0029D Extent3   ON Extent3.CUST_ID = Extent2.CUST_ID
		                JOIN SYS0038M Extent4   ON Extent4.STUS_CODE_ID = Extent1.SO_CUR_STUS_ID
		                JOIN SYS0038M Extent5   ON Extent5.STUS_CODE_ID = Extent1.SO_EXCHG_STUS_ID
		                JOIN SYS0013M Extent6   ON Extent6.CODE_ID = Extent1.SO_EXCHG_TYPE_ID
		                LEFT JOIN SYS0032M Extent7   ON Extent7.RESN_ID = Extent1.SO_EXCHG_RESN_ID
		                LEFT JOIN SYS0047M Extent8   ON Extent8.USER_ID = Extent1.SO_EXCHG_CRT_USER_ID
		                LEFT JOIN SYS0047M Extent9   ON Extent9.USER_ID = Extent1.SO_EXCHG_UPD_USER_ID
		                LEFT JOIN SYS0013M Extent10   ON Extent10.CODE_ID = Extent1.SO_EXCHG_NW_APP_TYPE_ID
		                LEFT JOIN SYS0026M Extent11   ON Extent11.STK_ID = Extent1.SO_EXCHG_NW_STK_ID
		                LEFT JOIN SAL0017D Extent12   ON Extent12.PROMO_ID = Extent1.SO_EXCHG_NW_PROMO_ID
		                LEFT JOIN SYS0013M Extent13   ON Extent13.CODE_ID = Extent1.SO_EXCHG_OLD_APP_TYPE_ID
		                LEFT JOIN SYS0026M Extent14   ON Extent14.STK_ID = Extent1.SO_EXCHG_OLD_STK_ID
		                LEFT JOIN SAL0017D Extent15   ON Extent15.PROMO_ID = Extent1.SO_EXCHG_OLD_PROMO_ID
		                LEFT JOIN SAL0029D Extent16   ON Extent16.CUST_ID = Extent1.SO_EXCHG_OLD_CUST_ID
		                LEFT JOIN SAL0029D Extent17   ON Extent17.CUST_ID = Extent1.SO_EXCHG_NW_CUST_ID
		          WHERE  ( 0 <> Extent1.SO_EXCHG_STUS_ID )
		                   AND ( 8 <> Extent1.SO_EXCHG_STUS_ID )
		                   AND ( Extent1.SO_EXCHG_ID = #{docId} ) AND ROWNUM <= 1 ) Limit1
		                   ]]>
		  </select>
		  <select id="selectBasicInfo" parameterType="Map" resultType="egovMap">
		  SELECT Extent1.ORD_ID ORD_ID  ,
		       Extent1.ORD_NO ORD_NO  ,
		       Extent1.RENTAL_STUS RENTAL_STUS  ,
		       Extent1.ORD_STUS_ID ORD_STUS_ID  ,
		       Extent1.ORD_STUS_CODE ORD_STUS_CODE  ,
		       Extent1.ORD_STUS_NAME ORD_STUS_NAME  ,
		       Extent1.ORD_DT ORD_DT  ,
		       Extent1.INSTLMT_PRIOD INSTLMT_PRIOD  ,
		       Extent1.ORD_AMT ORD_AMT  ,
		       Extent1.ORD_MTH_RENTAL ORD_MTH_RENTAL  ,
		       Extent1.ORD_PV ORD_PV  ,
		       Extent1.ORD_PV_MONTH ORD_PV_MONTH  ,
		       Extent1.ORD_PV_YEAR ORD_PV_YEAR  ,
		       Extent1.ORD_REF_NO ORD_REF_NO  ,
		       Extent1.ORD_PO_NO ORD_PO_NO  ,
		       Extent1.ORD_DEPT_CODE ORD_DEPT_CODE  ,
		       Extent1.ORD_GRP_CODE ORD_GRP_CODE  ,
		       Extent1.ORD_ORG_CODE ORD_ORG_CODE  ,
		       Extent1.ORD_CRT_USER_ID ORD_CRT_USER_ID  ,
		       Extent1.ORD_CRT_DT ORD_CRT_DT  ,
		       Extent1.APP_TYPE_ID APP_TYPE_ID  ,
		       Extent1.APP_TYPE_CODE APP_TYPE_CODE  ,
		       Extent1.APP_TYPE_DESC APP_TYPE_DESC  ,
		       Extent1.STOCK_ID STOCK_ID  ,
		       Extent1.STOCK_CODE STOCK_CODE  ,
		       Extent1.STOCK_DESC STOCK_DESC  ,
		       Extent1.CUST_ID CUST_ID  ,
		       Extent1.CUST_TYPE CUST_TYPE  ,
		       Extent1.CUST_NAME CUST_NAME  ,
		       Extent1.CUST_NRIC CUST_NRIC  ,
		       Extent1.CUST_DOB CUST_DOB  ,
		       Extent1.CUST_NATION CUST_NATION  ,
		       Extent1.CUST_GENDER CUST_GENDER  ,
		       Extent1.CUST_RACE CUST_RACE  ,
		       Extent1.CUST_EMAIL CUST_EMAIL  ,
		       Extent1.CUST_VA_NO CUST_VA_NO  ,
		       Extent1.CUST_PASSPORT_EXPR CUST_PASSPORT_EXPR  ,
		       Extent1.CUST_VISA_EXPR CUST_VISA_EXPR  ,
		       Extent1.ORD_PROMO_ID ORD_PROMO_ID  ,
		       Extent1.ORD_PROMO_CODE ORD_PROMO_CODE  ,
		       Extent1.ORD_PROMO_DESC ORD_PROMO_DESC  ,
		       Extent1.ORD_MEM_ID ORD_MEM_ID  ,
		       Extent1.ORD_MEM_CODE ORD_MEM_CODE  ,
		       Extent1.ORD_MEM_NAME ORD_MEM_NAME  ,
		       Extent1.ORD_MEM_NRIC ORD_MEM_NRIC  ,
		       Extent1.ORD_MEM_TYPE_ID ORD_MEM_TYPE_ID  ,
		       Extent1.ORD_MEM_TYPE_CODE ORD_MEM_TYPE_CODE  ,
		       Extent1.ORD_MEM_TYPE_NAME ORD_MEM_TYPE_NAME  ,
		       Extent1.COOL_OFF_PRIOD COOL_OFF_PRIOD  ,
		       Extent1.KEYIN_BRNCH_ID KEYIN_BRNCH_ID  ,
		       Extent1.KEYIN_BRNCH_CODE KEYIN_BRNCH_CODE  ,
		       Extent1.KEYIN_BRNCH_NAME KEYIN_BRNCH_NAME  ,
		       Extent1.ORD_REM ORD_REM  ,
		       Extent1.RENT_CHK_ID RENT_CHK_ID  ,
		       Extent1.ORD_HM_ID ORD_HM_ID  ,
		       Extent1.ORD_SM_ID ORD_SM_ID  ,
		       Extent1.ORD_GM_ID ORD_GM_ID  ,
		       Extent1.ORD_ADDR_ID ORD_ADDR_ID  ,
		       Extent1.ORD_CNTC_ID ORD_CNTC_ID  ,
		       Extent1.ORD_PROMO_RELATED_NO ORD_PROMO_RELATED_NO  ,
		       Extent1.UPD_DT UPD_DT  ,
		       Extent1.UPD_USER_ID UPD_USER_ID  ,
		       Extent1.JOM_PAY_REF JOM_PAY_REF  ,
		       Extent1.STK_CTGRY_ID STK_CTGRY_ID  ,
		       Extent1.STK_CTGRY_NAME STK_CTGRY_NAME  ,
		       Extent1.CUST_TYPE_ID CUST_TYPE_ID  ,
		       Extent1.CUST_BILL_ID CUST_BILL_ID  ,
		       Extent1.OBLIGT_YEAR OBLIGT_YEAR
		  FROM ( SELECT vOrderBasicInfo.ORD_ID ORD_ID  ,
		                vOrderBasicInfo.ORD_NO ORD_NO  ,
		                vOrderBasicInfo.RENTAL_STUS RENTAL_STUS  ,
		                vOrderBasicInfo.ORD_STUS_ID ORD_STUS_ID  ,
		                vOrderBasicInfo.ORD_STUS_CODE ORD_STUS_CODE  ,
		                vOrderBasicInfo.ORD_STUS_NAME ORD_STUS_NAME  ,
		                vOrderBasicInfo.ORD_DT ORD_DT  ,
		                vOrderBasicInfo.INSTLMT_PRIOD INSTLMT_PRIOD  ,
		                vOrderBasicInfo.ORD_AMT ORD_AMT  ,
		                vOrderBasicInfo.ORD_MTH_RENTAL ORD_MTH_RENTAL  ,
		                vOrderBasicInfo.ORD_PV ORD_PV  ,
		                vOrderBasicInfo.ORD_PV_MONTH ORD_PV_MONTH  ,
		                vOrderBasicInfo.ORD_PV_YEAR ORD_PV_YEAR  ,
		                vOrderBasicInfo.ORD_REF_NO ORD_REF_NO  ,
		                vOrderBasicInfo.ORD_PO_NO ORD_PO_NO  ,
		                vOrderBasicInfo.ORD_DEPT_CODE ORD_DEPT_CODE  ,
		                vOrderBasicInfo.ORD_GRP_CODE ORD_GRP_CODE  ,
		                vOrderBasicInfo.ORD_ORG_CODE ORD_ORG_CODE  ,
		                vOrderBasicInfo.ORD_CRT_USER_ID ORD_CRT_USER_ID  ,
		                vOrderBasicInfo.ORD_CRT_DT ORD_CRT_DT  ,
		                vOrderBasicInfo.APP_TYPE_ID APP_TYPE_ID  ,
		                vOrderBasicInfo.APP_TYPE_CODE APP_TYPE_CODE  ,
		                vOrderBasicInfo.APP_TYPE_DESC APP_TYPE_DESC  ,
		                vOrderBasicInfo.STOCK_ID STOCK_ID  ,
		                vOrderBasicInfo.STOCK_CODE STOCK_CODE  ,
		                vOrderBasicInfo.STOCK_DESC STOCK_DESC  ,
		                vOrderBasicInfo.CUST_ID CUST_ID  ,
		                vOrderBasicInfo.CUST_TYPE CUST_TYPE  ,
		                vOrderBasicInfo.CUST_NAME CUST_NAME  ,
		                vOrderBasicInfo.CUST_NRIC CUST_NRIC  ,
		                vOrderBasicInfo.CUST_DOB CUST_DOB  ,
		                vOrderBasicInfo.CUST_NATION CUST_NATION  ,
		                vOrderBasicInfo.CUST_GENDER CUST_GENDER  ,
		                vOrderBasicInfo.CUST_RACE CUST_RACE  ,
		                vOrderBasicInfo.CUST_EMAIL CUST_EMAIL  ,
		                vOrderBasicInfo.CUST_VA_NO CUST_VA_NO  ,
		                vOrderBasicInfo.CUST_PASSPORT_EXPR CUST_PASSPORT_EXPR  ,
		                vOrderBasicInfo.CUST_VISA_EXPR CUST_VISA_EXPR  ,
		                vOrderBasicInfo.ORD_PROMO_ID ORD_PROMO_ID  ,
		                vOrderBasicInfo.ORD_PROMO_CODE ORD_PROMO_CODE  ,
		                vOrderBasicInfo.ORD_PROMO_DESC ORD_PROMO_DESC  ,
		                vOrderBasicInfo.ORD_MEM_ID ORD_MEM_ID  ,
		                vOrderBasicInfo.ORD_MEM_CODE ORD_MEM_CODE  ,
		                vOrderBasicInfo.ORD_MEM_NAME ORD_MEM_NAME  ,
		                vOrderBasicInfo.ORD_MEM_NRIC ORD_MEM_NRIC  ,
		                vOrderBasicInfo.ORD_MEM_TYPE_ID ORD_MEM_TYPE_ID  ,
		                vOrderBasicInfo.ORD_MEM_TYPE_CODE ORD_MEM_TYPE_CODE  ,
		                vOrderBasicInfo.ORD_MEM_TYPE_NAME ORD_MEM_TYPE_NAME  ,
		                vOrderBasicInfo.COOL_OFF_PRIOD COOL_OFF_PRIOD  ,
		                vOrderBasicInfo.KEYIN_BRNCH_ID KEYIN_BRNCH_ID  ,
		                vOrderBasicInfo.KEYIN_BRNCH_CODE KEYIN_BRNCH_CODE  ,
		                vOrderBasicInfo.KEYIN_BRNCH_NAME KEYIN_BRNCH_NAME  ,
		                vOrderBasicInfo.ORD_REM ORD_REM  ,
		                vOrderBasicInfo.RENT_CHK_ID RENT_CHK_ID  ,
		                vOrderBasicInfo.ORD_HM_ID ORD_HM_ID  ,
		                vOrderBasicInfo.ORD_SM_ID ORD_SM_ID  ,
		                vOrderBasicInfo.ORD_GM_ID ORD_GM_ID  ,
		                vOrderBasicInfo.ORD_ADDR_ID ORD_ADDR_ID  ,
		                vOrderBasicInfo.ORD_CNTC_ID ORD_CNTC_ID  ,
		                vOrderBasicInfo.ORD_PROMO_RELATED_NO ORD_PROMO_RELATED_NO  ,
		                vOrderBasicInfo.UPD_DT UPD_DT  ,
		                vOrderBasicInfo.UPD_USER_ID UPD_USER_ID  ,
		                vOrderBasicInfo.JOM_PAY_REF JOM_PAY_REF  ,
		                vOrderBasicInfo.STK_CTGRY_ID STK_CTGRY_ID  ,
		                vOrderBasicInfo.STK_CTGRY_NAME STK_CTGRY_NAME  ,
		                vOrderBasicInfo.CUST_TYPE_ID CUST_TYPE_ID  ,
		                vOrderBasicInfo.CUST_BILL_ID CUST_BILL_ID  ,
		                vOrderBasicInfo.OBLIGT_YEAR OBLIGT_YEAR
		         FROM SAL1006V vOrderBasicInfo ) Extent1
		 WHERE  Extent1.ORD_ID = #{orderId}
		 </select>
		   <select id="selectinstallationInfo" parameterType="Map" resultType="egovMap">
		          SELECT Extent1.ORD_ID ORD_ID  ,
				       --Extent1.INST_ADDR1 INST_ADDR1  ,
				       --Extent1.INST_ADDR2 INST_ADDR2  ,
				       --Extent1.INST_ADDR3 INST_ADDR3  ,
				       --Extent1.INST_CNTY INST_CNTY  ,
				       --Extent1.INST_STATE INST_STATE  ,
				      -- Extent1.INST_AREA INST_AREA  ,
				      -- Extent1.INST_POST_CODE INST_POST_CODE  ,
				       Extent1.INST_CNT_NAME INST_CNT_NAME  ,
				       Extent1.INST_CNT_NRIC INST_CNT_NRIC  ,
				       Extent1.INST_CNT_EMAIL INST_CNT_EMAIL  ,
				       Extent1.INST_CNT_TEL_M INST_CNT_TEL_M  ,
				       Extent1.INST_CNT_TEL_O INST_CNT_TEL_O  ,
				       Extent1.INST_CNT_TEL_R INST_CNT_TEL_R  ,
				       Extent1.INST_CNT_TEL_F INST_CNT_TEL_F  ,
				       Extent1.INST_CNT_GENDER INST_CNT_GENDER  ,
				       Extent1.FIRST_INSTALL_NO FIRST_INSTALL_NO  ,
				       Extent1.FIRST_INSTALL_CT_CODE FIRST_INSTALL_CT_CODE  ,
				       Extent1.FIRST_INSTALL_CT_NAME FIRST_INSTALL_CT_NAME  ,
				       Extent1.FIRST_INSTALL_DT FIRST_INSTALL_DT  ,
				       Extent1.FIRST_INSTALL_REM FIRST_INSTALL_REM  ,
				       Extent1.FIRST_INSTALL_SIRIM_NO FIRST_INSTALL_SIRIM_NO  ,
				       Extent1.FIRST_INSTALL_SERIAL_NO FIRST_INSTALL_SERIAL_NO  ,
				       Extent1.LAST_INSTALL_NO LAST_INSTALL_NO  ,
				       Extent1.LAST_INSTALL_CT_CODE LAST_INSTALL_CT_CODE  ,
				       Extent1.LAST_INSTALL_CT_NAME LAST_INSTALL_CT_NAME  ,
				       Extent1.LAST_INSTALL_DT LAST_INSTALL_DT  ,
				       Extent1.LAST_INSTALL_REM LAST_INSTALL_REM  ,
				       Extent1.LAST_INSTALL_SIRIM_NO LAST_INSTALL_SIRIM_NO  ,
				       Extent1.LAST_INSTALL_SERIAL_NO LAST_INSTALL_SERIAL_NO  ,
				       Extent1.DSC_ID DSC_ID  ,
				       Extent1.DSC_CODE DSC_CODE  ,
				       Extent1.DSC_NAME DSC_NAME  ,
				       Extent1.INSTCT INSTCT  ,
				       Extent1.PREFER_INST_DT PREFER_INST_DT  ,
				       Extent1.PREFER_INST_TM PREFER_INST_TM  ,
				       Extent1.INSTALL_ADDR_ID INSTALL_ADDR_ID  ,
				       Extent1.INSTALL_CNTC_ID INSTALL_CNTC_ID  ,
				       Extent1.INST_CNT_DEPT INST_CNT_DEPT  ,
				       Extent1.INST_CNT_POST INST_CNT_POST  ,
				       Extent1.VRIFY_REM VRIFY_REM
				  FROM ( SELECT vOrderInstallationInfo.ORD_ID ORD_ID  ,
				                --vOrderInstallationInfo.INST_ADDR1 INST_ADDR1  ,
				               -- vOrderInstallationInfo.INST_ADDR2 INST_ADDR2  ,
				                --vOrderInstallationInfo.INST_ADDR3 INST_ADDR3  ,
				                --vOrderInstallationInfo.INST_CNTY INST_CNTY  ,
				               -- vOrderInstallationInfo.INST_STATE INST_STATE  ,
				               -- vOrderInstallationInfo.INST_AREA INST_AREA  ,
				               -- vOrderInstallationInfo.INST_POST_CODE INST_POST_CODE  ,
				                vOrderInstallationInfo.INST_CNT_NAME INST_CNT_NAME  ,
				                vOrderInstallationInfo.INST_CNT_NRIC INST_CNT_NRIC  ,
				                vOrderInstallationInfo.INST_CNT_EMAIL INST_CNT_EMAIL  ,
				                vOrderInstallationInfo.INST_CNT_TEL_M INST_CNT_TEL_M  ,
				                vOrderInstallationInfo.INST_CNT_TEL_O INST_CNT_TEL_O  ,
				                vOrderInstallationInfo.INST_CNT_TEL_R INST_CNT_TEL_R  ,
				                vOrderInstallationInfo.INST_CNT_TEL_F INST_CNT_TEL_F  ,
				                vOrderInstallationInfo.INST_CNT_GENDER INST_CNT_GENDER  ,
				                vOrderInstallationInfo.FIRST_INSTALL_NO FIRST_INSTALL_NO  ,
				                vOrderInstallationInfo.FIRST_INSTALL_CT_CODE FIRST_INSTALL_CT_CODE  ,
				                vOrderInstallationInfo.FIRST_INSTALL_CT_NAME FIRST_INSTALL_CT_NAME  ,
				                vOrderInstallationInfo.FIRST_INSTALL_DT FIRST_INSTALL_DT  ,
				                vOrderInstallationInfo.FIRST_INSTALL_REM FIRST_INSTALL_REM  ,
				                vOrderInstallationInfo.FIRST_INSTALL_SIRIM_NO FIRST_INSTALL_SIRIM_NO  ,
				                vOrderInstallationInfo.FIRST_INSTALL_SERIAL_NO FIRST_INSTALL_SERIAL_NO  ,
				                vOrderInstallationInfo.LAST_INSTALL_NO LAST_INSTALL_NO  ,
				                vOrderInstallationInfo.LAST_INSTALL_CT_CODE LAST_INSTALL_CT_CODE  ,
				                vOrderInstallationInfo.LAST_INSTALL_CT_NAME LAST_INSTALL_CT_NAME  ,
				                vOrderInstallationInfo.LAST_INSTALL_DT LAST_INSTALL_DT  ,
				                vOrderInstallationInfo.LAST_INSTALL_REM LAST_INSTALL_REM  ,
				                vOrderInstallationInfo.LAST_INSTALL_SIRIM_NO LAST_INSTALL_SIRIM_NO  ,
				                vOrderInstallationInfo.LAST_INSTALL_SERIAL_NO LAST_INSTALL_SERIAL_NO  ,
				                vOrderInstallationInfo.DSC_ID DSC_ID  ,
				                vOrderInstallationInfo.DSC_CODE DSC_CODE  ,
				                vOrderInstallationInfo.DSC_NAME DSC_NAME  ,
				                vOrderInstallationInfo.INSTCT INSTCT  ,
				                vOrderInstallationInfo.PREFER_INST_DT PREFER_INST_DT  ,
				                vOrderInstallationInfo.PREFER_INST_TM PREFER_INST_TM  ,
				                vOrderInstallationInfo.INSTALL_ADDR_ID INSTALL_ADDR_ID  ,
				                vOrderInstallationInfo.INSTALL_CNTC_ID INSTALL_CNTC_ID  ,
				                vOrderInstallationInfo.INST_CNT_DEPT INST_CNT_DEPT  ,
				                vOrderInstallationInfo.INST_CNT_POST INST_CNT_POST  ,
				                vOrderInstallationInfo.VRIFY_REM VRIFY_REM
				         FROM SAL1010V vOrderInstallationInfo ) Extent1
				 WHERE  Extent1.ORD_ID = #{orderId}
		   </select>
		  <select id="selectProgressInfo" parameterType="Map" resultType="egovMap">
		        SELECT Project1.LOG_ID LOG_ID  ,
			       Project1.LOG_CRT_DT LOG_CRT_DT  ,
			       Project1.LOG_CRT_USER_ID LOG_CRT_USER_ID  ,
			       Project1.C1 C1  ,
			       Project1.IS_LOK IS_LOK  ,
			       Project1.LOG_DT LOG_DT  ,
			       Project1.SALES_ORD_ID SALES_ORD_ID  ,
			       Project1.PRGRS_ID PRGRS_ID  ,
			       Project1.PRGRS PRGRS  ,
			       Project1.REF_ID REF_ID
			  FROM ( SELECT Extent1.LOG_ID LOG_ID  ,
			                Extent1.SALES_ORD_ID SALES_ORD_ID  ,
			                Extent1.PRGRS_ID PRGRS_ID  ,
			                Extent1.LOG_DT LOG_DT  ,
			                Extent1.REF_ID REF_ID  ,
			                Extent1.IS_LOK IS_LOK  ,
			                Extent1.LOG_CRT_USER_ID LOG_CRT_USER_ID  ,
			                Extent1.LOG_CRT_DT LOG_CRT_DT  ,
			                Extent2.PRGRS PRGRS  ,
			                CASE
			                     WHEN ( Extent3.USER_ID IS NOT NULL ) THEN Extent3.USER_NAME
			                ELSE ''
			                   END C1
			         FROM SAL0009D Extent1
			                JOIN SAL0010M Extent2   ON Extent2.PRGRS_ID = Extent1.PRGRS_ID
			                LEFT JOIN SYS0047M  Extent3   ON Extent3.USER_ID = Extent1.LOG_CRT_USER_ID
			          WHERE  Extent1.SALES_ORD_ID = #{orderId} ) Project1
			          WHERE ROWNUM = 1
			ORDER BY Project1.LOG_ID DESC

		  </select>
		  <select id="selectMailingInfo" parameterType="Map" resultType="egovMap">
		  <![CDATA[
		  SELECT Extent1.ORD_ID ORD_ID  ,
		       --Extent1.MAIL_ADD1 MAIL_ADD1  ,
		       --Extent1.MAIL_ADD2 MAIL_ADD2  ,
		       --Extent1.MAIL_ADD3 MAIL_ADD3  ,
		       Extent1.MAIL_CNTY MAIL_CNTY  ,
		       Extent1.MAIL_STATE MAIL_STATE  ,
		       Extent1.MAIL_AREA MAIL_AREA  ,
		       Extent1.MAIL_POST_CODE MAIL_POST_CODE  ,
		       Extent1.MAIL_CNT_NAME MAIL_CNT_NAME  ,
		       Extent1.MAIL_CNT_NRIC MAIL_CNT_NRIC  ,
		       Extent1.MAIL_CNT_EMAIL MAIL_CNT_EMAIL  ,
		       Extent1.MAIL_CNT_TEL_M MAIL_CNT_TEL_M  ,
		       Extent1.MAIL_CNT_TEL_O MAIL_CNT_TEL_O  ,
		       Extent1.MAIL_CNT_TEL_R MAIL_CNT_TEL_R  ,
		       Extent1.MAIL_CNT_TEL_F MAIL_CNT_TEL_F  ,
		       Extent1.MAIL_CNT_GENDER MAIL_CNT_GENDER  ,
		       Extent1.BILL_GRP_NO BILL_GRP_NO  ,
		       Extent1.BILL_STATE_EMAIL BILL_STATE_EMAIL  ,
		       Extent1.BILL_STATE BILL_STATE  ,
		       Extent1.BILL_SMS BILL_SMS  ,
		       Extent1.BILL_POST BILL_POST  ,
		       Extent1.MAIL_CNTC_ID MAIL_CNTC_ID  ,
		       Extent1.MAIL_ADDR_ID MAIL_ADDR_ID  ,
		       Extent1.MAIL_CNT_DEPT MAIL_CNT_DEPT  ,
		       Extent1.MAIL_CNT_POST MAIL_CNT_POST
		  FROM ( SELECT vOrderMailingInfo.ORD_ID ORD_ID  ,
		                --vOrderMailingInfo.MAIL_ADD1 MAIL_ADD1  ,
		                --vOrderMailingInfo.MAIL_ADD2 MAIL_ADD2  ,
		               -- vOrderMailingInfo.MAIL_ADD3 MAIL_ADD3  ,
		                vOrderMailingInfo.MAIL_CNTY MAIL_CNTY  ,
		                vOrderMailingInfo.MAIL_STATE MAIL_STATE  ,
		                vOrderMailingInfo.MAIL_AREA MAIL_AREA  ,
		                vOrderMailingInfo.MAIL_POST_CODE MAIL_POST_CODE  ,
		                vOrderMailingInfo.MAIL_CNT_NAME MAIL_CNT_NAME  ,
		                vOrderMailingInfo.MAIL_CNT_NRIC MAIL_CNT_NRIC  ,
		                vOrderMailingInfo.MAIL_CNT_EMAIL MAIL_CNT_EMAIL  ,
		                vOrderMailingInfo.MAIL_CNT_TEL_M MAIL_CNT_TEL_M  ,
		                vOrderMailingInfo.MAIL_CNT_TEL_O MAIL_CNT_TEL_O  ,
		                vOrderMailingInfo.MAIL_CNT_TEL_R MAIL_CNT_TEL_R  ,
		                vOrderMailingInfo.MAIL_CNT_TEL_F MAIL_CNT_TEL_F  ,
		                vOrderMailingInfo.MAIL_CNT_GENDER MAIL_CNT_GENDER  ,
		                vOrderMailingInfo.BILL_GRP_NO BILL_GRP_NO  ,
		                vOrderMailingInfo.BILL_STATE_EMAIL BILL_STATE_EMAIL  ,
		                vOrderMailingInfo.BILL_STATE BILL_STATE  ,
		                vOrderMailingInfo.BILL_SMS BILL_SMS  ,
		                vOrderMailingInfo.BILL_POST BILL_POST  ,
		                vOrderMailingInfo.MAIL_CNTC_ID MAIL_CNTC_ID  ,
		                vOrderMailingInfo.MAIL_ADDR_ID MAIL_ADDR_ID  ,
		                vOrderMailingInfo.MAIL_CNT_DEPT MAIL_CNT_DEPT  ,
		                vOrderMailingInfo.MAIL_CNT_POST MAIL_CNT_POST
		         FROM SAL1011V vOrderMailingInfo ) Extent1
		 WHERE  Extent1.ORD_ID = #{orderId} AND ROWNUM <= 1
		  ]]>
		  </select>

		  <select id="selectEntry" parameterType="Map" resultType="egovMap">
		      SELECT Extent1.INSTALL_ENTRY_ID INSTALL_ENTRY_ID  ,
			       Extent1.INSTALL_ENTRY_NO INSTALL_ENTRY_NO  ,
			       Extent1.SALES_ORD_ID SALES_ORD_ID  ,
			       Extent1.STUS_CODE_ID STUS_CODE_ID  ,
			       Extent1.CT_ID CT_ID  ,
			       Extent1.INSTALL_DT INSTALL_DT  ,
			       Extent1.CALL_ENTRY_ID CALL_ENTRY_ID  ,
			       Extent1.INSTALL_STK_ID INSTALL_STK_ID  ,
			       Extent1.INSTALL_RESULT_ID INSTALL_RESULT_ID  ,
			       Extent1.CRT_USER_ID CRT_USER_ID  ,
			       Extent1.CRT_DT CRT_DT  ,
			       Extent1.ALLOW_COMM ALLOW_COMM  ,
			       Extent1.IS_TRADE_IN IS_TRADE_IN  ,
			       Extent1.CT_GRP CT_GRP  ,
			       Extent1.UPD_DT UPD_DT  ,
			       Extent1.UPD_USER_ID UPD_USER_ID  ,
			       Extent1.REV_ID REV_ID
			  FROM SAL0046D Extent1
			 WHERE  Extent1.INSTALL_ENTRY_ID = #{entryId}
			 AND ROWNUM=1
		  </select>

		 <select id="selectExchange" parameterType="Map" resultType="egovMap">
		      SELECT Limit1.SO_EXCHG_ID SO_EXCHG_ID  ,
				       Limit1.SO_ID SO_ID  ,
				       Limit1.SO_EXCHG_TYPE_ID SO_EXCHG_TYPE_ID  ,
				       Limit1.SO_EXCHG_STUS_ID SO_EXCHG_STUS_ID  ,
				       Limit1.SO_EXCHG_RESN_ID SO_EXCHG_RESN_ID  ,
				       Limit1.SO_CUR_STUS_ID SO_CUR_STUS_ID  ,
				       Limit1.INSTALL_ENTRY_ID INSTALL_ENTRY_ID  ,
				       Limit1.SO_EXCHG_OLD_APP_TYPE_ID SO_EXCHG_OLD_APP_TYPE_ID  ,
				       Limit1.SO_EXCHG_NW_APP_TYPE_ID SO_EXCHG_NW_APP_TYPE_ID  ,
				       Limit1.SO_EXCHG_OLD_STK_ID SO_EXCHG_OLD_STK_ID  ,
				       Limit1.SO_EXCHG_NW_STK_ID SO_EXCHG_NW_STK_ID  ,
				       Limit1.SO_EXCHG_OLD_PRC_ID SO_EXCHG_OLD_PRC_ID  ,
				       Limit1.SO_EXCHG_NW_PRC_ID SO_EXCHG_NW_PRC_ID  ,
				       Limit1.SO_EXCHG_OLD_PRC SO_EXCHG_OLD_PRC  ,
				       Limit1.SO_EXCHG_NW_PRC SO_EXCHG_NW_PRC  ,
				       Limit1.SO_EXCHG_OLD_PV SO_EXCHG_OLD_PV  ,
				       Limit1.SO_EXCHG_NW_PV SO_EXCHG_NW_PV  ,
				       Limit1.SO_EXCHG_OLD_RENT_AMT SO_EXCHG_OLD_RENT_AMT  ,
				       Limit1.SO_EXCHG_NW_RENT_AMT SO_EXCHG_NW_RENT_AMT  ,
				       Limit1.SO_EXCHG_OLD_PROMO_ID SO_EXCHG_OLD_PROMO_ID  ,
				       Limit1.SO_EXCHG_NW_PROMO_ID SO_EXCHG_NW_PROMO_ID  ,
				       Limit1.SO_EXCHG_CRT_DT SO_EXCHG_CRT_DT  ,
				       Limit1.SO_EXCHG_CRT_USER_ID SO_EXCHG_CRT_USER_ID  ,
				       Limit1.SO_EXCHG_UPD_DT SO_EXCHG_UPD_DT  ,
				       Limit1.SO_EXCHG_UPD_USER_ID SO_EXCHG_UPD_USER_ID  ,
				       Limit1.SO_EXCHG_OLD_SRV_CONFIG_ID SO_EXCHG_OLD_SRV_CONFIG_ID  ,
				       Limit1.SO_EXCHG_NW_SRV_CONFIG_ID SO_EXCHG_NW_SRV_CONFIG_ID  ,
				       Limit1.SO_EXCHG_SYNC_CHK SO_EXCHG_SYNC_CHK  ,
				       Limit1.SO_EXCHG_OLD_CALL_ENTRY_ID SO_EXCHG_OLD_CALL_ENTRY_ID  ,
				       Limit1.SO_EXCHG_NW_CALL_ENTRY_ID SO_EXCHG_NW_CALL_ENTRY_ID  ,
				       Limit1.SO_EXCHG_STK_RET_MOV_ID SO_EXCHG_STK_RET_MOV_ID  ,
				       Limit1.SO_EXCHG_REM SO_EXCHG_REM  ,
				       Limit1.SO_EXCHG_OLD_DEF_RENT_AMT SO_EXCHG_OLD_DEF_RENT_AMT  ,
				       Limit1.SO_EXCHG_NW_DEF_RENT_AMT SO_EXCHG_NW_DEF_RENT_AMT  ,
				       Limit1.SO_EXCHG_UNDER_FREE_AS_ID SO_EXCHG_UNDER_FREE_AS_ID  ,
				       Limit1.SO_EXCHG_OLD_CUST_ID SO_EXCHG_OLD_CUST_ID  ,
				       Limit1.SO_EXCHG_NW_CUST_ID SO_EXCHG_NW_CUST_ID  ,
				       Limit1.SO_EXCHG_FORM_NO SO_EXCHG_FORM_NO
				  FROM ( SELECT Extent3.SO_EXCHG_ID SO_EXCHG_ID  ,
				                Extent3.SO_ID SO_ID  ,
				                Extent3.SO_EXCHG_TYPE_ID SO_EXCHG_TYPE_ID  ,
				                Extent3.SO_EXCHG_STUS_ID SO_EXCHG_STUS_ID  ,
				                Extent3.SO_EXCHG_RESN_ID SO_EXCHG_RESN_ID  ,
				                Extent3.SO_CUR_STUS_ID SO_CUR_STUS_ID  ,
				                Extent3.INSTALL_ENTRY_ID INSTALL_ENTRY_ID  ,
				                Extent3.SO_EXCHG_OLD_APP_TYPE_ID SO_EXCHG_OLD_APP_TYPE_ID  ,
				                Extent3.SO_EXCHG_NW_APP_TYPE_ID SO_EXCHG_NW_APP_TYPE_ID  ,
				                Extent3.SO_EXCHG_OLD_STK_ID SO_EXCHG_OLD_STK_ID  ,
				                Extent3.SO_EXCHG_NW_STK_ID SO_EXCHG_NW_STK_ID  ,
				                Extent3.SO_EXCHG_OLD_PRC_ID SO_EXCHG_OLD_PRC_ID  ,
				                Extent3.SO_EXCHG_NW_PRC_ID SO_EXCHG_NW_PRC_ID  ,
				                Extent3.SO_EXCHG_OLD_PRC SO_EXCHG_OLD_PRC  ,
				                Extent3.SO_EXCHG_NW_PRC SO_EXCHG_NW_PRC  ,
				                Extent3.SO_EXCHG_OLD_PV SO_EXCHG_OLD_PV  ,
				                Extent3.SO_EXCHG_NW_PV SO_EXCHG_NW_PV  ,
				                Extent3.SO_EXCHG_OLD_RENT_AMT SO_EXCHG_OLD_RENT_AMT  ,
				                Extent3.SO_EXCHG_NW_RENT_AMT SO_EXCHG_NW_RENT_AMT  ,
				                Extent3.SO_EXCHG_OLD_PROMO_ID SO_EXCHG_OLD_PROMO_ID  ,
				                Extent3.SO_EXCHG_NW_PROMO_ID SO_EXCHG_NW_PROMO_ID  ,
				                Extent3.SO_EXCHG_CRT_DT SO_EXCHG_CRT_DT  ,
				                Extent3.SO_EXCHG_CRT_USER_ID SO_EXCHG_CRT_USER_ID  ,
				                Extent3.SO_EXCHG_UPD_DT SO_EXCHG_UPD_DT  ,
				                Extent3.SO_EXCHG_UPD_USER_ID SO_EXCHG_UPD_USER_ID  ,
				                Extent3.SO_EXCHG_OLD_SRV_CONFIG_ID SO_EXCHG_OLD_SRV_CONFIG_ID  ,
				                Extent3.SO_EXCHG_NW_SRV_CONFIG_ID SO_EXCHG_NW_SRV_CONFIG_ID  ,
				                Extent3.SO_EXCHG_SYNC_CHK SO_EXCHG_SYNC_CHK  ,
				                Extent3.SO_EXCHG_OLD_CALL_ENTRY_ID SO_EXCHG_OLD_CALL_ENTRY_ID  ,
				                Extent3.SO_EXCHG_NW_CALL_ENTRY_ID SO_EXCHG_NW_CALL_ENTRY_ID  ,
				                Extent3.SO_EXCHG_STK_RET_MOV_ID SO_EXCHG_STK_RET_MOV_ID  ,
				                Extent3.SO_EXCHG_REM SO_EXCHG_REM  ,
				                Extent3.SO_EXCHG_OLD_DEF_RENT_AMT SO_EXCHG_OLD_DEF_RENT_AMT  ,
				                Extent3.SO_EXCHG_NW_DEF_RENT_AMT SO_EXCHG_NW_DEF_RENT_AMT  ,
				                Extent3.SO_EXCHG_UNDER_FREE_AS_ID SO_EXCHG_UNDER_FREE_AS_ID  ,
				                Extent3.SO_EXCHG_OLD_CUST_ID SO_EXCHG_OLD_CUST_ID  ,
				                Extent3.SO_EXCHG_NW_CUST_ID SO_EXCHG_NW_CUST_ID  ,
				                Extent3.SO_EXCHG_FORM_NO SO_EXCHG_FORM_NO
				         FROM SAL0046D Extent1
				                JOIN CCR0006D Extent2   ON Extent2.CALL_ENTRY_ID = Extent1.CALL_ENTRY_ID
				                JOIN SAL0004D Extent3   ON Extent3.SO_EXCHG_ID = Extent2.DOC_ID
				          WHERE  Extent1.INSTALL_ENTRY_ID = #{entryId}  AND ROWNUM=1) Limit1
		 </select>

		 <select id="selectSalesOrderM" parameterType="Map" resultType="egovMap">
		 <![CDATA[
		         SELECT Limit1.SALES_ORD_ID SALES_ORD_ID  ,
					       Limit1.SALES_ORD_NO SALES_ORD_NO  ,
					       Limit1.REF_NO REF_NO  ,
					       Limit1.SALES_DT SALES_DT  ,
					       Limit1.CUST_ID CUST_ID  ,
					       Limit1.CUST_CNT_ID CUST_CNT_ID  ,
					       Limit1.CUST_ADD_ID CUST_ADD_ID  ,
					       Limit1.MEM_ID MEM_ID  ,
					       Limit1.BRNCH_ID BRNCH_ID  ,
					       Limit1.APP_TYPE_ID APP_TYPE_ID  ,
					      -- Limit1.DSCNT_AMT DSCNT_AMT  ,
					       --Limit1.TAX_AMT TAX_AMT  ,
					       Limit1.TOT_AMT TOT_AMT  ,
					       Limit1.PROMO_ID PROMO_ID  ,
					       Limit1.BINDING_NO BINDING_NO  ,
					       Limit1.CC_PROMO_ID CC_PROMO_ID  ,
					       Limit1.TOT_PV TOT_PV  ,
					       Limit1.REM REM  ,
					       Limit1.PV_MONTH PV_MONTH  ,
					       Limit1.PV_YEAR PV_YEAR  ,
					       Limit1.STUS_CODE_ID STUS_CODE_ID  ,
					       Limit1.UPD_DT UPD_DT  ,
					       Limit1.UPD_USER_ID UPD_USER_ID  ,
					       Limit1.SYNC_CHK SYNC_CHK  ,
					       Limit1.CUST_PO_NO CUST_PO_NO  ,
					       Limit1.REN_CHK_ID REN_CHK_ID  ,
					       Limit1.INST_PRIOD INST_PRIOD  ,
					       Limit1.DO_NO DO_NO  ,
					       Limit1.DEPT_CODE DEPT_CODE  ,
					       Limit1.GRP_CODE GRP_CODE  ,
					       Limit1.ORG_CODE ORG_CODE  ,
					       Limit1.SALES_ORD_ID_OLD SALES_ORD_ID_OLD  ,
					       Limit1.EDIT_TYPE_ID EDIT_TYPE_ID  ,
					       Limit1.CUST_BILL_ID CUST_BILL_ID  ,
					       Limit1.MTH_RENT_AMT MTH_RENT_AMT  ,
					       Limit1.LOK LOK  ,
					       Limit1.AEON_STUS_ID AEON_STUS_ID  ,
					       Limit1.COMM_DT COMM_DT  ,
					       Limit1.CRT_USER_ID CRT_USER_ID  ,
					       Limit1.CRT_DT CRT_DT  ,
					       Limit1.PAY_COM_DT PAY_COM_DT  ,
					       Limit1.DEF_RENT_AMT DEF_RENT_AMT  ,
					       Limit1.REF_DOC_ID REF_DOC_ID  ,
					       --Limit1.RENT_PROMO_ID RENT_PROMO_ID  ,
					       Limit1.SALES_HM_ID SALES_HM_ID  ,
					       Limit1.SALES_SM_ID SALES_SM_ID  ,
					       Limit1.SALES_GM_ID SALES_GM_ID  ,
					       Limit1.ADV_BILL ADV_BILL  ,
					       Limit1.CNVR_SCHEME_ID CNVR_SCHEME_ID  ,
					       Limit1.CUST_CARE_CNT_ID CUST_CARE_CNT_ID
					  FROM ( SELECT Extent2.SALES_ORD_ID SALES_ORD_ID  ,
					                Extent2.SALES_ORD_NO SALES_ORD_NO  ,
					                Extent2.REF_NO REF_NO  ,
					                Extent2.SALES_DT SALES_DT  ,
					                Extent2.CUST_ID CUST_ID  ,
					                Extent2.CUST_CNT_ID CUST_CNT_ID  ,
					                Extent2.CUST_ADD_ID CUST_ADD_ID  ,
					                Extent2.MEM_ID MEM_ID  ,
					                Extent2.BRNCH_ID BRNCH_ID  ,
					                Extent2.APP_TYPE_ID APP_TYPE_ID  ,
					               -- Extent2.DSCNT_AMT DSCNT_AMT  ,
					                --Extent2.TAX_AMT TAX_AMT  ,
					                Extent2.TOT_AMT TOT_AMT  ,
					                Extent2.PROMO_ID PROMO_ID  ,
					                Extent2.BINDING_NO BINDING_NO  ,
					                Extent2.CC_PROMO_ID CC_PROMO_ID  ,
					                Extent2.TOT_PV TOT_PV  ,
					                Extent2.REM REM  ,
					                Extent2.PV_MONTH PV_MONTH  ,
					                Extent2.PV_YEAR PV_YEAR  ,
					                Extent2.STUS_CODE_ID STUS_CODE_ID  ,
					                Extent2.UPD_DT UPD_DT  ,
					                Extent2.UPD_USER_ID UPD_USER_ID  ,
					                Extent2.SYNC_CHK SYNC_CHK  ,
					                Extent2.CUST_PO_NO CUST_PO_NO  ,
					                Extent2.REN_CHK_ID REN_CHK_ID  ,
					                Extent2.INST_PRIOD INST_PRIOD  ,
					                Extent2.DO_NO DO_NO  ,
					                Extent2.DEPT_CODE DEPT_CODE  ,
					                Extent2.GRP_CODE GRP_CODE  ,
					                Extent2.ORG_CODE ORG_CODE  ,
					                Extent2.SALES_ORD_ID_OLD SALES_ORD_ID_OLD  ,
					                Extent2.EDIT_TYPE_ID EDIT_TYPE_ID  ,
					                Extent2.CUST_BILL_ID CUST_BILL_ID  ,
					                Extent2.MTH_RENT_AMT MTH_RENT_AMT  ,
					                Extent2.LOK LOK  ,
					                Extent2.AEON_STUS_ID AEON_STUS_ID  ,
					                Extent2.COMM_DT COMM_DT  ,
					                Extent2.CRT_USER_ID CRT_USER_ID  ,
					                Extent2.CRT_DT CRT_DT  ,
					                Extent2.PAY_COM_DT PAY_COM_DT  ,
					                Extent2.DEF_RENT_AMT DEF_RENT_AMT  ,
					                Extent2.REF_DOC_ID REF_DOC_ID  ,
					               -- Extent2.RENT_PROMO_ID RENT_PROMO_ID  ,
					                Extent2.SALES_HM_ID SALES_HM_ID  ,
					                Extent2.SALES_SM_ID SALES_SM_ID  ,
					                Extent2.SALES_GM_ID SALES_GM_ID  ,
					                Extent2.ADV_BILL ADV_BILL  ,
					                Extent2.CNVR_SCHEME_ID CNVR_SCHEME_ID  ,
					                Extent2.CUST_CARE_CNT_ID CUST_CARE_CNT_ID
					         FROM SAL0046D Extent1
					                JOIN SAL0001D Extent2   ON Extent2.SALES_ORD_ID = Extent1.SALES_ORD_ID
					          WHERE  Extent1.INSTALL_ENTRY_ID = #{entryId} AND ROWNUM <= 1 ) Limit1
					           ]]>
		 </select>
		 <insert id="insertInstallResult" parameterType="Map">
			   INSERT INTO SAL0047D  (
			   RESULT_ID
	           , ENTRY_ID
	           , STUS_CODE_ID
	           , CT_ID
	           , INSTALL_DT
	           , REM
	           , GL_POST
	           , CRT_USER_ID
	           , CRT_DT
	           , SIRIM_NO
	           , SERIAL_NO
	           , FAIL_ID
	           , NEXT_CALL_DT
	           , ALLOW_COMM
	           , IS_TRADE_IN
	           , REQUIRE_SMS
	           , DOC_REF_NO1
	           , DOC_REF_NO2
	           , UPD_DT
	           , UPD_USER_ID
	           , ADJ_AMT
	           , MOBILE_ID
	           )
	            VALUES (
	            SAL0047D_RESULT_ID_SEQ.NEXTVAL
	            , #{entryId}
	            , #{statusCodeId}
	            , #{ctid}
	            ,  sysdate
	            , #{remark}
	            , #{glpost}
	            , #{creator}
	            , SYSDATE
	            , #{sirimNo}
	            , #{serialNo}
	            , #{failId}
	            , TO_DATE(#{nextCallDate},'DD-MM-YYYY')
	            , #{allowComm}
	            , #{inTradeIn}
	            , #{reqSms}
	            , #{docRefNo1}
	            , #{docRefNo2}
	            , SYSDATE
	            , #{updator}
	            , #{adjAmount}
	            , NULL
	            )
		 </insert>
		 <select id="selectMaxId" parameterType="Map" resultType="String">
		      <if test="value != null and value == 'resultId' ">
		           SELECT MAX(RESULT_ID) FROM SAL0047D
		        </if>
		        <if test="value != null and value == 'callEntryId' ">
		           SELECT MAX(CALL_ENTRY_ID) FROM CCR0006D
		         </if>
		         <if test="value != null and value == 'callResultId' ">
		            SELECT MAX(CALL_RESULT_ID) FROM CCR0007D
		         </if>
		         <if test = "value !=null and value =='taxInvoiceId'">
		              SELECT MAX(TAX_INVC_ID) FROM PAY0029D
		         </if>
		 </select>

		 <update id="updateInstallEntry" parameterType="Map">
		 UPDATE SAL0046D
		   SET STUS_CODE_ID = #{stusCodeId},
		       INSTALL_RESULT_ID = #{installResultId},
		       UPD_DT = SYSDATE,
		       UPD_USER_ID = #{creator}
		 WHERE  ( INSTALL_ENTRY_ID = #{installEntryId} )
		 </update>
		<insert id="insertSirim" parameterType="Map">
		 INSERT INTO LOG0040D (
		      SIRIM_ID
            , SIRIM_NO
            , SIRIM_TYPE_ID
            , SIRIM_LOC
            , SIRIM_QTY
            , SIRIM_DOC_NO
            , SIRIM_REM
            , SIRIM_CRT_DT
            , SIRIM_CRT_USER_ID
            , SIRIM_SYNC_CHK
            , SIRIM_ENTRY_POINT
            , SIRIM_AFT_WEB_SYS
            )
            VALUES (
            (SELECT MAX(SIRIM_ID)+1 FROM LOG0040D)
            , #{sirimNo}
            , #{sirimTypeId}
            , #{sirimLoc}
            , #{sirimQty}
            , #{sirimDocNo}
            , #{sirimRemark}
            , SYSDATE
            , #{sirimCreateBy}
            , #{sirimSyncCheck}
            , #{sirimEntryPoint}
            , #{sirimAfterWebSys}
             )
             </insert>
             <select id="selectPac" parameterType="Map" resultType="egovMap">
             SELECT Limit1.SRV_MEM_ITM_PRIOD SRV_MEM_ITM_PRIOD  ,
			       Limit1.SRV_MEM_DUR SRV_MEM_DUR
			  FROM ( SELECT Extent1.SRV_MEM_DUR SRV_MEM_DUR  ,
			                Extent2.SRV_MEM_ITM_PRIOD SRV_MEM_ITM_PRIOD
			         FROM SAL0091M Extent1
			                JOIN SAL0092M Extent2   ON ( Extent2.SRV_MEM_PAC_ID = Extent1.SRV_MEM_PAC_ID )
			                AND ( Extent2.SRV_MEM_ITM_STK_ID = #{installStkId} )
			                AND ( 1 = Extent2.SRV_MEM_ITM_STUS_ID )
			          WHERE  Extent1.SRV_MEM_PAC_ID =#{pacId} AND ROWNUM &lt;= 1 ) Limit1
			</select>
			<insert id="insertMemberShip" parameterType="Map">
			INSERT INTO SAL0095D  (
			      SRV_MEM_ID
                , SRV_MEM_QUOT_ID
                , SRV_SALES_ORD_ID
                , SRV_MEM_NO
                , SRV_MEM_BILL_NO
                , SRV_MEM_PAC_ID
                , SRV_MEM_PAC_AMT
                , SRV_MEM_BS_AMT
                , SRV_MEM_PV
                , SRV_FREQ
                , SRV_START_DT
                , SRV_EXPR_DT
                , SRV_DUR
                , SRV_STUS_CODE_ID
                , SRV_REM
                , SRV_CRT_DT
                , SRV_CRT_USER_ID
                , SRV_UPD_DT
                , SRV_UPD_USER_ID
                , SRV_MEM_BS12_AMT
                , SRV_MEM_IS_SYNCH
                , SRV_MEM_SALES_MEM_ID
                , SRV_MEM_CUST_CNT_ID
                , SRV_MEM_QTY
                , SRV_BS_QTY
                , SRV_MEM_PROMO_ID
                , SRV_MEM_PV_MONTH
                , SRV_MEM_PV_YEAR
                , SRV_MEM_IS_MNL
                , SRV_MEM_BRNCH_ID
                , SRV_MEM_PAC_PROMO_ID
                , SRV_MEM_FORM_NO
                 )
                VALUES (
                 SAL0095D_SRV_MEM_ID_SEQ.NEXTVAL
                , #{srvMemQuotId}
                , #{srvSalesOrderId}
                , #{srvMemNo}
                , #{srvMemBillNo}
                , #{srvMemPacId}
                , #{srvMemPacAmt}
                , #{srvMemBSAmt}
                , #{srvMemPV}
                , #{srvFreq}
                , #{srvStartDate}
                , #{srvExpireDate}
                , #{srvDuration}
                , #{srvStatusCodeId}
                , #{srvRemark}
                , SYSDATE
                , #{srvCreateBy}
                , SYSDATE
                , #{srvUpdateBy}
                , #{srvMemBS12Amt}
                , #{srvMemIsSynch}
                , #{srvMemSalesMemId}
                , #{srvMemCustCntId}
                , #{srvMemQty}
                , #{SrvBSQty}
                , #{srvMemPromoId}
                , #{srvMemPVMonth}
                , #{srvMemPVYear}
                , #{srvMemIsManual}
                , #{srvMemBranchId}
                , #{srvMemPacPromoId}
                , NULL
                 )
			</insert>
			<select id="selectList" parameterType="Map" resultType="egovMap">
			     SELECT Extent1.SALES_ORD_ID SALES_ORD_ID  ,
				       Extent1.SALES_DT SALES_DT  ,
				       Extent1.SALES_ORD_NO SALES_ORD_NO  ,
				       Extent7.TYPE_ID TYPE_ID  ,
				       Extent1.CUST_BILL_ID CUST_BILL_ID  ,
				       Extent7.NAME NAME  ,
				       Extent14.NAME NAME1  ,
				       Extent15.ADD1 ADD1  ,
				       Extent15.ADD2 ADD2  ,
				       Extent15.ADD3 ADD3  ,
				       Extent15.ADD4 ADD4  ,
				       Extent19.POST_CODE POST_CODE  ,
				       Extent17.NAME NAME2  ,
				       Extent18.AREA_NAME AREA_NAME  ,
				       Extent16.NAME NAME3  ,
				       Extent9.ADD1 ADD11  ,
				       Extent9.ADD2 ADD21  ,
				       Extent9.ADD3 ADD31  ,
				       Extent9.ADD4 ADD41  ,
				       Extent13.POST_CODE POSTCODE1  ,
				       Extent11.NAME NAME4  ,
				       Extent12.AREA_NAME AREANAME1  ,
				       Extent10.NAME NAME5  ,
				       Extent5.STK_DESC STK_DESC  ,
				       Extent6.CODE_DESC CODE_DESC  ,
				       Extent4.CODE_DESC DESCRIPTION1
				  FROM SAL0001D Extent1
				         JOIN SAL0002D Extent2   ON Extent1.SALES_ORD_ID = Extent2.SALES_ORD_ID
				         LEFT JOIN SAL0074D Extent3   ON Extent1.SALES_ORD_ID = Extent3.SALES_ORD_ID
				         LEFT JOIN SYS0013M Extent4   ON Extent3.MODE_ID = Extent4.CODE_ID
				         JOIN SYS002d6M Extent5   ON Extent2.ITM_STK_ID = Extent5.STK_ID
				         JOIN SYS0013M Extent6   ON Extent5.STK_CTGRY_ID = Extent6.CODE_ID
				         JOIN SAL0029D Extent7   ON Extent1.CUST_ID = Extent7.CUST_ID
				         JOIN SAL0045D Extent8   ON Extent1.SALES_ORD_ID = Extent8.SALES_ORD_ID
				         JOIN SAL0023D Extent9   ON Extent8.ADD_ID = Extent9.CUST_ADD_ID
				         JOIN SYS0015M Extent10   ON Extent9.CNTY_ID = Extent10.CNTY_ID
				         LEFT JOIN SYS0035M Extent11   ON Extent9.STATE_ID = Extent11.STATE_ID
				         LEFT JOIN SYS0039M Extent12   ON Extent9.AREA_ID = Extent12.AREA_ID
				         LEFT JOIN SYS0030C Extent13   ON Extent9.POST_CODE_ID = Extent13.POST_CODE_ID
				         LEFT JOIN SAL0027D Extent14   ON Extent1.CUST_CNT_ID = Extent14.CUST_CNTC_ID
				         LEFT JOIN SAL0023D Extent15   ON Extent1.CUST_ADD_ID = Extent15.CUST_ADD_ID
				         JOIN SYS0015M Extent16   ON Extent15.CNTY_ID = Extent16.CNTY_ID
				         LEFT JOIN SYS0035M Extent17   ON Extent15.STATE_ID = Extent17.STATE_ID
				         LEFT JOIN SYS0039M Extent18   ON Extent15.AREA_ID = Extent18.AREA_ID
				         LEFT JOIN SYS0030C Extent19   ON Extent15.POST_CODE_ID = Extent19.POST_CODE_ID
				 WHERE  Extent1.SALES_ORD_ID = 982581 AND ROWNUM &lt;= 1
			</select>
			<select id="selectOutRightPreBill" parameterType="Map" resultType="int">
			     SELECT Extent1.TRADE_RUN_ID TRADE_RUN_ID  ,
				       Extent1.TRADE_ID TRADE_ID  ,
				       Extent1.TRADE_SO_ID TRADE_SO_ID  ,
				       Extent1.TRADE_DOC_NO TRADE_DOC_NO  ,
				       Extent1.TRADE_DOC_TYPE_ID TRADE_DOC_TYPE_ID  ,
				       Extent1.TRADE_DT_TM TRADE_DT_TM  ,
				       Extent1.TRADE_AMT TRADE_AMT  ,
				       Extent1.TRADE_BATCH_NO TRADE_BATCH_NO  ,
				       Extent1.TRADE_INST_NO TRADE_INST_NO  ,
				       Extent1.TRADE_UPD_USER_ID TRADE_UPD_USER_ID  ,
				       Extent1.TRADE_UPD_DT TRADE_UPD_DT  ,
				       Extent1.TRADE_IS_SYNC TRADE_IS_SYNC  ,
				       Extent1.R01 R01
				  FROM PAY0035D Extent1
				 WHERE  ( Extent1.TRADE_SO_ID = #{salesOrdId} )
				          AND ( ( UPPER(Extent1.TRADE_DOC_NO) LIKE '%BR%' )
				          OR ( UPPER(Extent1.TRADE_DOC_NO) LIKE '%DN%')
				          OR ( UPPER(Extent1.TRADE_DOC_NO) LIKE '%CN%'))
			</select>
			<select id="selectZRLocation" parameterType="Map" resultType="egovMap">
			SELECT Extent3.ZR_LOC_ID ZR_LOC_ID  ,
			       Extent3.ZR_LOC_STATE_ID ZR_LOC_STATE_ID  ,
			       Extent3.ZR_LOC_AREA_ID ZR_LOC_AREA_ID  ,
			       Extent3.ZR_LOC_POST_CODE_ID ZR_LOC_POST_CODE_ID  ,
			       Extent3.ZR_LOC_STUS_ID ZR_LOC_STUS_ID  ,
			       Extent3.ZR_LOC_REM ZR_LOC_REM  ,
			       Extent3.ZR_LOC_CRT_DT ZR_LOC_CRT_DT  ,
			       Extent3.ZR_LOC_CRT_USER_ID ZR_LOC_CRT_USER_ID
			  FROM ( SELECT Extent1.SALES_ORD_ID SALES_ORD_ID  ,
			                Extent2.POST_CODE_ID POST_CODE_ID  ,
			                Extent2.AREA_ID AREA_ID  ,
			                Extent2.STATE_ID STATE_ID
			         FROM SAL0045D Extent1
			                JOIN SAL0023D Extent2   ON Extent1.ADD_ID = Extent2.CUST_ADD_ID
			          WHERE  8 &lt;&gt; Extent1.STUS_CODE_ID ) Filter1
			         JOIN SAL0044D Extent3   ON ( Filter1.POST_CODE_ID = Extent3.ZR_LOC_POST_CODE_ID )
			         AND ( Filter1.STATE_ID = Extent3.ZR_LOC_STATE_ID )
			         AND ( Filter1.AREA_ID = Extent3.ZR_LOC_AREA_ID )
			 WHERE  ( Filter1.SALES_ORD_ID = #{salesOrdId} )
			          AND ( 1 = Extent3.ZR_LOC_STUS_ID )
			      </select>
			 <select id="selectRSCertificateID" parameterType="Map" resultType="egovMap">
			     SELECT Extent1.EURC_ID EURC_ID  ,
				       Extent1.EURC_REF_NO EURC_REF_NO  ,
				       Extent1.EURC_REF_DT EURC_REF_DT  ,
				       Extent1.EURC_RLIEF_TYPE_ID EURC_RLIEF_TYPE_ID  ,
				       Extent1.EURC_RLIEF_APP_TYPE_ID EURC_RLIEF_APP_TYPE_ID  ,
				       Extent1.EURC_SALES_ORD_ID EURC_SALES_ORD_ID  ,
				       Extent1.EURC_CUST_ID EURC_CUST_ID  ,
				       Extent1.EURC_CUST_RGS_NO EURC_CUST_RGS_NO  ,
				       Extent1.EURC_REM EURC_REM  ,
				       Extent1.EURC_FILE_PATH_NAME EURC_FILE_PATH_NAME  ,
				       Extent1.EURC_STUS_CODE_ID EURC_STUS_CODE_ID  ,
				       Extent1.EURC_CRT_USER_ID EURC_CRT_USER_ID  ,
				       Extent1.EURC_CRT_DT EURC_CRT_DT  ,
				       Extent1.EURC_UPD_USER_ID EURC_UPD_USER_ID  ,
				       Extent1.EURC_UPD_DT EURC_UPD_DT
				  FROM SAL0042D Extent1
				 WHERE  ( Extent1.EURC_SALES_ORD_ID = 982581 )
				          AND ( 1 &lt;&gt; Extent1.EURC_STUS_CODE_ID )
			 </select>

			 <insert id="insertAccOrderBill" parameterType="Map">
	       INSERT INTO PAY0016D
	             ( ACC_BILL_ID
	             , ACC_BILL_TASK_ID
	             , ACC_BILL_REF_DT
	             , ACC_BILL_REF_NO
	             , ACC_BILL_ORD_ID
	             , ACC_BILL_ORD_NO
	             , ACC_BILL_TYPE_ID
	             , ACC_BILL_MODE_ID
	             , ACC_BILL_SCHDUL_ID
	             , ACC_BILL_SCHDUL_PRIOD
	             , ACC_BILL_ADJ_ID
	             , ACC_BILL_SCHDUL_AMT
	             , ACC_BILL_ADJ_AMT
	             , ACC_BILL_TXS_AMT
	             , ACC_BILL_NET_AMT
	             , ACC_BILL_STUS
	             , ACC_BILL_REM
	             , ACC_BILL_CRT_DT
	             , ACC_BILL_CRT_USER_ID
	             , ACC_BILL_GRP_ID
	             , ACC_BILL_TAX_CODE_ID
	             , ACC_BILL_TAX_RATE
	             , ACC_BILL_ACCT_CNVR
	             , ACC_BILL_CNTRCT_ID )
	               VALUES (
	              PAY0016D_SEQ.NEXTVAL
	               , #{accBillTaskId}
	               ,  SYSDATE
	               , #{accBillRefNo}
	               , #{accBillOrderId}
	               , #{accBillOrderNo}
	               , #{accBillTypeId}
	               , #{accBillModeId}
	               , #{accBillScheduleId}
	               , #{accBillSchedulePeriod}
	               , #{accBillAdjustmentId}
	               , #{accBillScheduleAmount}
	               , #{accBillAdjustmentAmount}
	               , #{accBillTaxesAmount}
	               , #{accBillNetAmount}
	               , #{accBillStatus}
	               , #{accBillRemark}
	               , SYSDATE
	               , #{accBillCreateBy}
	               , #{accBillGroupId}
	               , #{accBillTaxCodeId}
	               , #{accBillTaxRate}
	               , #{accBillAcctConversion}
	               , #{accBillContractId}
	              )
  </insert>

	  <update id="updateBillRem" parameterType="Map">
	      UPDATE PAY0016D
	       SET ACC_BILL_REM = #{accBillRemark}
	     WHERE  ( ( ACC_BILL_ID = (SELECT MAX(ACC_BILL_ID) FROM PAY0016D ))
	      AND ( ACC_BILL_TASK_ID = #{accBillTaskId} ) )
	      </update>




    <select id="getPAY0033D_SEQ" parameterType="Map" resultType="java.lang.String">

               SELECT PAY0033D_TAX_INVC_ID_SEQ.nextval   seq FROM DUAL

    </select>





	<insert id="insertTaxInvocieOutrightD" parameterType="Map">
	      INSERT INTO PAY0033D
            ( TAX_INVC_ID
            , TAX_INVC_REF_NO
            , TAX_INVC_REF_DT
            , TAX_INVC_CUST_NAME
            , TAX_INVC_CNTC_PERSON
            , TAX_INVC_ADDR1
            , TAX_INVC_ADDR2
            , TAX_INVC_ADDR3
            , TAX_INVC_ADDR4
            , TAX_INVC_POST_CODE
            , TAX_INVC_STATE_NAME
            , TAX_INVC_CNTY
            , TAX_INVC_TASK_ID
            , TAX_INVC_CRT_DT
            , TAX_INVC_REM
            , TAX_INVC_CHRG
            , TAX_INVC_OVERDU
            , TAX_INVC_AMT_DUE
            , TAX_INVC_PO_NO
            )
         VALUES (
            #{taxInvcId}
         , #{taxInvoiceRefNo}
         ,  SYSDATE
         , #{taxInvoiceCustName}
         , #{taxInvoiceContactPerson}
         , #{taxInvoiceAddress1}
         , #{taxInvoiceAddress2}
         , #{taxInvoiceAddress3}
         , #{taxInvoiceAddress4}
         , #{taxInvoicePostCode}
         , #{taxInvoiceStateName}
         , #{taxInvoiceCountry}
         , #{taxInvoiceTaskID}
         , SYSDATE
         , #{taxInvoiceRemark}
         , #{taxInvoiceCharges}
         , #{taxInvoiceOverdue}
         , #{taxInvoiceAmountDue}
         , NULL
         )
    </insert>
    <insert id="insertTaxInvocieOutright" parameterType="Map">
	      INSERT INTO PAY0034D
            ( INVC_ITEM_ID
            , TAX_INVC_ID
            , INVC_ITM_ORD_NO
            , INVOICEITEM_PONO
            , INVC_ITM_GST_RATE
            , INVC_ITM_GST_TXS
            , INVC_ITM_AMT_DUE
            , INVC_ITM_RENTAL_FEE
            , INVC_ITM_PRODUCT_CTGRY
            , INVC_ITM_PRODUCT_MODEL
            , INVC_ITM_PRODUCT_SERIAL_NO
            , INVC_ITM_ADD1
            , INVC_ITM_ADD2
            , INVC_ITM_ADD3
            , INVC_ITM_POST_CODE
            , INVC_ITM_STATE_NAME
            , INVC_ITM_CNTY
            , INVC_ITM_FEES_GST_TXS
            , INVC_ITM_FEES_AMT_DUE
            , INVC_ITM_FEES_CHRG
            )
            VALUES (
            PAY0034D.SEQ_NEXTVAL
            , #{taxInvoiceID}
            , #{invoiceItemOrderNo}
            , #{invoiceItem_PONo}
            , #{invoiceItemGSTRate}
            , #{invoiceItemGSTTaxes}
            , #{invoiceItemAmountDue}
            , #{invoiceItemRentalFee}
            , #{invoiceItemProductCategories}
            , #{invoiceItemProductModel}
            , #{invoiceItemProductSerialNo}
            , #{invoiceItemAdd1}
            , #{invoiceItemAdd2}
            , #{invoiceItemAdd3}
            , #{invoiceItemPostCode}
            , #{invoiceItemStateName}
            , #{invoiceItemCountry}
            , NULL
            , NULL
            , NULL
             )
    </insert>
    <insert id="insertTradeLedger" parameterType="Map">
	      INSERT INTO PAY0035D
             ( TRADE_ID
             , TRADE_SO_ID
             , TRADE_DOC_NO
             , TRADE_DOC_TYPE_ID
             , TRADE_DT_TM
             , TRADE_AMT
             , TRADE_BATCH_NO
             , TRADE_INST_NO
             , TRADE_UPD_USER_ID
             , TRADE_UPD_DT
             , TRADE_IS_SYNC
             , R01
             )
             VALUES (
             PAY0035D_SEQ.NEXTVAL
             , #{tradeID}
             , #{tradeSOID}
             , #{tradeDocNo}
             , #{tradeDocTypeID}
             , SYSDATE
             , #{tradeAmount}
             , #{tradeBatchNo}
             , #{tradeInstNo}
             , #{tradeUpdateBy}
             , SYSDATE
             , #{tradeIsSync}
             , NULL
             )
        </insert>
        <insert id="insertConfig" parameterType="Map">
        INSERT INTO SAL0090D
            ( SRV_CONFIG_ID
            , SRV_SO_ID
            , SRV_CODY_ID
            , SRV_PREV_DT
            , SRV_REM
            , SRV_BS_GEN
            , SRV_CRT_DT
            , SRV_CRT_USER_ID
            , SRV_UPD_DT
            , SRV_UPD_USER_ID
            , SRV_STUS_ID
            , SRV_BS_WEEK
             )
             VALUES (
             SAL0090D_SRV_CONFIG_ID_SEQ.NEXTVAL
             , #{srvSOId}
             , #{srvCodyId}
             , #{srvPreviousDate}
             , #{srvRemark}
             , #{srvBSGen}
             , SYSDATE
             , #{srvCreateBy}
             , SYSDATE
             , #{srvUpdateBy}
             , #{srvStatusId}
             , #{srvBSWeek}
             )
       </insert>
       <insert id="insertConfigSet" parameterType="Map">
        INSERT INTO SAL0089D (
            SRV_SETT_ID
		  , SRV_CONFIG_ID
		  , SRV_SETT_TYPE_ID
		  , SRV_SETT_STUS_ID
		  , SRV_SETT_REM
		  , SRV_SETT_CRT_DT
		  , SRV_SETT_CRT_USER_ID
		   )
		  VALUES (
		  SAL0089D_SRV_SETT_ID_SEQ.NEXTVAL
		  , #{srvConfigId}
		  , #{srvSettTypeID}
		  , #{srvSettStatusID}
		  , #{srvSettRemark}
		  , SYSDATE
		  , #{srvSettCreateBy}
		  )
       </insert>
       <insert id="insertConfigPeriod" parameterType="Map">
            INSERT INTO SAL0088D (
                SRV_PRD_ID
			  , SRV_CONFIG_ID
			  , SRV_MBRSH_ID
			  , SRV_PRD_START_DT
			  , SRV_PRD_EXPR_DT
			  , SRV_PRD_DUR
			  , SRV_PRD_STUS_ID
			  , SRV_PRD_REM
			  , SRV_PRD_CRT_DT
			  , SRV_PRD_CRT_USER_ID
			  , SRV_PRD_UPD_DT
			  , SRV_PRD_UPD_USER_ID
			  , SRV_PRD_CNTRCT_ID
			   )
			  VALUES (
			   SAL0088D_SRV_PRD_ID.NEXTVAL
			  , #{srvConfigId}
			  , #{srvMembershipId}
			  , #{srvPrdStartDate}
			  , #{srvPrdExpireDate}
			  , #{srvPrdDuration}
			  , #{srvPrdStatusID}
			  , #{srvPrdRemark}
			  , SYSDATE
			  , #{srvPrdCreateBy}
			  , SYSDATE
			  , #{srvPrdUpdateBy}
			  , 0
			  )
        </insert>
         <select id="selectFilter" parameterType="Map" resultType="egovMap">
        SELECT Project1.BOM_ID BOM_ID  ,
		       Project1.BOM_STK_ID BOM_STK_ID  ,
		       Project1.BOM_PART_ID BOM_PART_ID  ,
		       Project1.BOM_PART_QTY BOM_PART_QTY  ,
		       Project1.BOM_PART_TYPE_ID BOM_PART_TYPE_ID  ,
		       Project1.BOM_PART_STUS_ID BOM_PART_STUS_ID  ,
		       Project1.BOM_PART_PRIOD BOM_PART_PRIOD  ,
		       Project1.BOM_REM BOM_REM  ,
		       Project1.BOM_CRT_DT BOM_CRT_DT  ,
		       Project1.BOM_CRT_USER_ID BOM_CRT_USER_ID  ,
		       Project1.BOM_UPD_DT BOM_UPD_DT  ,
		       Project1.BOM_UPD_USER_ID BOM_UPD_USER_ID  ,
		       Project1.BOM_TYPE_ID BOM_TYPE_ID
		  FROM ( SELECT Extent1.BOM_ID BOM_ID  ,
		                Extent1.BOM_STK_ID BOM_STK_ID  ,
		                Extent1.BOM_PART_ID BOM_PART_ID  ,
		                Extent1.BOM_PART_QTY BOM_PART_QTY  ,
		                Extent1.BOM_PART_TYPE_ID BOM_PART_TYPE_ID  ,
		                Extent1.BOM_PART_STUS_ID BOM_PART_STUS_ID  ,
		                Extent1.BOM_PART_PRIOD BOM_PART_PRIOD  ,
		                Extent1.BOM_REM BOM_REM  ,
		                Extent1.BOM_CRT_DT BOM_CRT_DT  ,
		                Extent1.BOM_CRT_USER_ID BOM_CRT_USER_ID  ,
		                Extent1.BOM_UPD_DT BOM_UPD_DT  ,
		                Extent1.BOM_UPD_USER_ID BOM_UPD_USER_ID  ,
		                Extent1.BOM_TYPE_ID BOM_TYPE_ID
		         FROM LOG0001M Extent1
		          WHERE  ( Extent1.BOM_STK_ID = #{installStkId} )
		                   AND ( Extent1.BOM_PART_PRIOD > 0 )
		                   AND ( 1 = Extent1.BOM_PART_STUS_ID )
		                   AND ( 310 = Extent1.BOM_PART_TYPE_ID ) ) Project1
		  ORDER BY Project1.BOM_PART_ID ASC
		  </select>
		  <insert id="insertConfigFilter" parameterType="Map">
		  INSERT INTO SAL0087D(
		        SRV_FILTER_ID
              , SRV_CONFIG_ID
              , SRV_FILTER_STK_ID
              , SRV_FILTER_PRIOD
              , SRV_FILTER_PRV_CHG_DT
              , SRV_FILTER_STUS_ID
              , SRV_FILTER_REM
              , SRV_FILTER_CRT_DT
              , SRV_FILTER_CRT_USER_ID
              , SRV_FILTER_UPD_DT
              , SRV_FILTER_UPD_USER_ID
              , SRV_FILTER_EXPR_DT
              )
            VALUES (
                SAL0087D_SRV_FILTER_ID_SEQ.NEXTVAL
	            , #{srvConfigId}
	            , #{srvFilterStkId}
	            , #{srvFilterPeriod}
	            , #{srvFilterPrvChgDate}
	            , #{srvFilterStatusId}
	            , #{srvFilterRemark}
	            , SYSDATE
	            , #{srvFilterCreateBy}
	            , SYSDATE
	            , #{srvFilterUpdateBy}
	            , NULL
            )
		  </insert>
		  <select id="selectSalesDet" parameterType="Map" resultType="egovMap">
		        SELECT Extent1.SALES_ORD_ID SALES_ORD_ID  ,
				       Extent1.ITM_NO ITM_NO  ,
				       Extent1.ITM_STK_ID ITM_STK_ID  ,
				       Extent1.ITM_PRC_ID ITM_PRC_ID  ,
				       Extent1.ITM_QTY ITM_QTY  ,
				       --Extent1.ITM_TAX ITM_TAX  ,
				       --Extent1.ITM_DSCNT ITM_DSCNT  ,
				       Extent1.ITM_PRC ITM_PRC  ,
				       Extent1.ITM_PV ITM_PV  ,
				       Extent1.STUS_CODE_ID STUS_CODE_ID  ,
				       Extent1.UPD_DT UPD_DT  ,
				       Extent1.UPD_USER_ID UPD_USER_ID  ,
				       Extent1.EDIT_TYPE_ID EDIT_TYPE_ID  ,
				       Extent1.ITM_ID ITM_ID  ,
				       Extent1.ITM_CALL_ENTRY_ID ITM_CALL_ENTRY_ID
				  FROM SAL0002D Extent1
				 WHERE  Extent1.SALES_ORD_ID = #{salesOrdId} AND ROWNUM &lt;= 1;
		  </select>
		  <update id="updateSalesDet" parameterType="Map">
		        UPDATE SAL0002D
				   SET ITM_PRC = #{itemPrice},
				       UPD_DT = SYSDATE ,
				       UPD_USER_ID = #{updator}
				 WHERE  ( ( SALES_ORD_ID = #{salesOrdId} )
				  AND ( ITM_ID = #{itemStkId} ) )
		  </update>
		  <update id="updateSalesOrderM" parameterType="Map">
			  UPDATE SAL0001D
			   SET STUS_CODE_ID = #{statusCodeId},
			       UPD_DT = SYSDATE,
			       UPD_USER_ID = #{updator}
			 WHERE  ( SALES_ORD_ID = #{saleOrdId} )
		 </update>
		 <update id="updateExchange" parameterType="Map">
		 UPDATE SAL0004D
		   SET SO_EXCHG_STUS_ID = #{soExchgStatusId},
		       SO_EXCHG_UPD_DT = SYSDATE,
		       SO_EXCHG_UPD_USER_ID = #{soExchgUpdateBy}
		 WHERE  ( SO_EXCHG_ID = #{soExchgId})
		 </update>
		  <insert id="insertHappyCall" parameterType="Map">
			 INSERT INTO CCR0001D (
			     HC_ID
			   , HCSOID
			   , HC_CALL_ENTRY_ID
			   , HC_TYPE_NO
			   , HC_TYPE_ID
			   , HC_STUS_ID
			   , HC_REM
			   , HC_COMMENT_TYPE_ID
			   , HC_COMMENT_GID
			   , HC_COMMENT_SID
			   , HC_COMMENT_DID
			   , CRT_USER_ID
			   , CRT_DT
			   , UPD_USER_ID
			   , UPD_DT
			   , HC_NO_SVC
			   , HC_LOK
			   , HC_CLOS_ID
			    )
			  VALUES (
			  CCR0001D_HC_ID_SEQ.NEXTVAL
			  , #{HCSOID}
			  , #{HCCallEntryId}
			  , #{HCTypeNo}
			  , #{HCTypeId}
			  , #{HCStatusId}
			  , #{HCRemark}
			  , #{HCCommentTypeId}
			  , #{HCCommentGId}
			  , #{HCCommentSId}
			  , #{HCCommentDId}
			  , #{creator}
			  , SYSDATE
			  , #{updator}
			  , SYSDATE
			  , #{HCNoService}
			  , #{HCLock}
			  , #{HCCloseId}
			   )
		 </insert>
		 <select id="selectMobWh" parameterType="Map" resultType="egovMap">
		 SELECT Limit1.WH_LOC_ID WH_LOC_ID  ,
		       Limit1.WH_LOC_CODE WH_LOC_CODE  ,
		       Limit1.WH_LOC_DESC WH_LOC_DESC  ,
		       Limit1.WH_LOC_ADD1 WH_LOC_ADD1  ,
		       Limit1.WH_LOC_ADD2 WH_LOC_ADD2  ,
		       Limit1.WH_LOC_ADD3 WH_LOC_ADD3  ,
		       Limit1.WH_LOC_AREA_ID WH_LOC_AREA_ID  ,
		       Limit1.WH_LOC_POST_CODE_ID WH_LOC_POST_CODE_ID  ,
		       Limit1.WH_LOC_STATE_ID WH_LOC_STATE_ID  ,
		       Limit1.WH_LOC_CNTY_ID WH_LOC_CNTY_ID  ,
		       Limit1.WH_LOC_TEL1 WH_LOC_TEL1  ,
		       Limit1.WH_LOC_TEL2 WH_LOC_TEL2  ,
		       Limit1.WH_LOC_BRNCH_ID WH_LOC_BRNCH_ID  ,
		       Limit1.WH_LOC_TYPE_ID WH_LOC_TYPE_ID  ,
		       Limit1.WH_LOC_STK_GRAD WH_LOC_STK_GRAD  ,
		       Limit1.WH_LOC_STUS_ID WH_LOC_STUS_ID  ,
		       Limit1.WH_LOC_UPD_USER_ID WH_LOC_UPD_USER_ID  ,
		       Limit1.WH_LOC_UPD_DT WH_LOC_UPD_DT  ,
		       Limit1.CODE2 CODE2  ,
		       Limit1.DESC2 DESC2  ,
		       Limit1.WH_LOC_IS_SYNC WH_LOC_IS_SYNC  ,
		       Limit1.WH_LOC_MOBILE WH_LOC_MOBILE
		  FROM ( SELECT Extent2.WH_LOC_ID WH_LOC_ID  ,
		                Extent2.WH_LOC_CODE WH_LOC_CODE  ,
		                Extent2.WH_LOC_DESC WH_LOC_DESC  ,
		                Extent2.WH_LOC_ADD1 WH_LOC_ADD1  ,
		                Extent2.WH_LOC_ADD2 WH_LOC_ADD2  ,
		                Extent2.WH_LOC_ADD3 WH_LOC_ADD3  ,
		                Extent2.WH_LOC_AREA_ID WH_LOC_AREA_ID  ,
		                Extent2.WH_LOC_POST_CODE_ID WH_LOC_POST_CODE_ID  ,
		                Extent2.WH_LOC_STATE_ID WH_LOC_STATE_ID  ,
		                Extent2.WH_LOC_CNTY_ID WH_LOC_CNTY_ID  ,
		                Extent2.WH_LOC_TEL1 WH_LOC_TEL1  ,
		                Extent2.WH_LOC_TEL2 WH_LOC_TEL2  ,
		                Extent2.WH_LOC_BRNCH_ID WH_LOC_BRNCH_ID  ,
		                Extent2.WH_LOC_TYPE_ID WH_LOC_TYPE_ID  ,
		                Extent2.WH_LOC_STK_GRAD WH_LOC_STK_GRAD  ,
		                Extent2.WH_LOC_STUS_ID WH_LOC_STUS_ID  ,
		                Extent2.WH_LOC_UPD_USER_ID WH_LOC_UPD_USER_ID  ,
		                Extent2.WH_LOC_UPD_DT WH_LOC_UPD_DT  ,
		                Extent2.CODE2 CODE2  ,
		                Extent2.DESC2 DESC2  ,
		                Extent2.WH_LOC_IS_SYNC WH_LOC_IS_SYNC  ,
		                Extent2.WH_LOC_MOBILE WH_LOC_MOBILE
		         FROM ORG0001D Extent1
		                JOIN SYS0028M Extent2   ON Extent2.WH_LOC_CODE = Extent1.MEM_CODE
		          WHERE  Extent1.MEM_ID = #{CTID} AND ROWNUM &lt;= 1 ) Limit1
		  </select>
		  <insert id="insertRecordCard" parameterType="Map">
		  INSERT INTO LOG0014D (
		      SR_CARD_ID
             , LOC_ID
             , STOCK_ID
             , ENTRY_DT
             , TYPE_ID
             , REF_NO
             , SALES_ORD_ID
             , ITM_NO
             , SRC_ID
             , PRJCT_ID
             , BATCH_NO
             , QTY
             , CURR_ID
             , CURR_RATE
             , COST
             , PRC
             , REM
             , SERIAL_NO
             , INSTALL_NO
             , COST_DT
             , APP_TYPE_ID
             , STK_GRAD
             , INSTALL_FAIL
             , IS_SYNCH
             , ENTRY_MTH_ID
             , ORGN
             , TRANS_TYPE
             , DOC_LNE_NO
             , PO_NO
             , INSERT_DT
             , IS_GR
             , PO_STUS
             )
            VALUES (
           LOG0014D_SR_CARD_ID_SEQ.nextval
             , #{locationId}
             , #{stockId}
             , SYSDATE
             , #{typeId}
             ,#{refNo}
             , #{salesOrderId}
             , #{itemNo}
             , #{sourceId}
             , #{projectId}
             , #{batchNo}
             , #{Qty}
             , #{currId}
             , #{currRate}
             , #{cost}
             , #{price}
             , #{remark}
             , #{serialNo}
             , #{installNo}
             , SYSDATE
             , #{appTypeId}
             , #{stkGrade}
             , #{installFail}
             , #{isSynch}
             , #{entryMethodId}
             , #{origin}
             , NULL
             , NULL
             , NULL
             , NULL
             , NULL
             , NULL
              )
		  </insert>
		  <insert id="insertOrderLog" parameterType="Map">
			  INSERT INTO SAL0009D (
			     LOG_ID
			   , SALES_ORD_ID
			   , PRGRS_ID
			   , LOG_DT
			   , REF_ID
			   , IS_LOK
			   , LOG_CRT_USER_ID
			   , LOG_CRT_DT
			   )
			  VALUES (
			  SAL0009D_LOG_ID_SEQ.NEXTVAL
			  , #{salesOrderId}
			  , #{progressId}
			  , SYSDATE
			  , #{refId}
			  , #{isLock}
			  , #{logCreator}
			  , SYSDATE
			  )
		  </insert>
		  <insert id="insertCallEntry" parameterType="Map">
		  INSERT INTO CCR0006D (
		      CALL_ENTRY_ID
            , SALES_ORD_ID
            , TYPE_ID
            , STUS_CODE_ID
            , RESULT_ID
            , DOC_ID
            , CRT_USER_ID
            , CRT_DT
            , CALL_DT
            , IS_WAIT_FOR_CANCL
            , HAPY_CALLER_ID
            , UPD_DT
            , UPD_USER_ID
            , ORI_CALL_DT
            )
            VALUES (
            CCR0006D_CALL_ENTRY_ID_SEQ.NEXTVAL
            , #{salesOrderId}
            , #{typeId}
            , #{statusCodeId}
            , #{resultId}
            , #{docId}
            , #{creator}
            , SYSDATE
            , TO_DATE(#{callDate},'dd-mm-yyyy')
            , #{isWaitForCancel}
            , #{happyCallerId}
            , SYSDATE
            , #{updator}
            , TO_DATE(#{oriCallDate},'dd-mm-yyyy')
            )
		  </insert>


        <!-- CYC 2017 NOV 24 -->
		  <insert id = "insertTaxInvoiceCompany" parameterType="Map">
		  INSERT INTO PAY0029D
		  (
		  TAX_INVC_ID
		  ,TAX_INVC_REF_NO
		  ,TAX_INVC_REF_DT
		  ,TAX_INVC_GRP_ID
		  ,TAX_INVC_GRP_NO
		  ,TAX_INVC_CUST_NAME
		  ,TAX_INVC_CNTC_PERSON
		  ,TAX_INVC_ADDR1
		  ,TAX_INVC_ADDR2
		  ,TAX_INVC_ADDR3
		  ,TAX_INVC_ADDR4
		  ,TAX_INVC_POST_CODE
		  ,TAX_INVC_STATE_NAME
		  ,TAX_INVC_CNTY
		  ,TAX_INVC_MONTH
		  ,TAX_INVC_YEAR
		  ,TAX_INVC_STUS_ID
		  ,TAX_INVC_TASK_ID
		  ,TAX_INVC_CRT_DT
		  ,TAX_INVC_REM
		  ,TAX_INVC_CHRG
		  ,TAX_INVC_OVERDU
		  ,TAX_INVC_AMT_DUE
		  ,TAX_INVC_TYPE
		  ,TAX_INVC_CRT_USER_ID
		  ,TAX_INVC_PAY_REF_NO1
		  ,TAX_INVC_PAY_REF_NO2
		  ,TAX_INVC_BILL_TYPE
		  ,TAX_INVC_GST_REM
		  ,AREA_ID
		  ,ADDR_DTL
		  ,STREET
		  )VALUES
		  (
		 PAY0029D_SEQ.nextval
        ,#{TAX_INVC_REF_NO}
        ,TO_DATE(#{TAX_INVC_REF_DT},'yyyy-mm-dd')
        ,#{TAX_INVC_GRP_ID}
        ,#{TAX_INVC_GRP_NO}
        ,#{TAX_INVC_CUST_NAME}
        ,#{TAX_INVC_CNTC_PERSON}
        ,#{TAX_INVC_ADDR1}
        ,#{TAX_INVC_ADDR2}
        ,#{TAX_INVC_ADDR3}
        ,#{TAX_INVC_ADDR4}
        ,#{TAX_INVC_POST_CODE}
        ,#{TAX_INVC_STATE_NAME}
        ,#{TAX_INVC_CNTY}
        ,#{TAX_INVC_MONTH}
        ,#{TAX_INVC_YEAR}
        ,#{TAX_INVC_STUS_ID}
        ,#{TAX_INVC_TASK_ID}
        ,TO_DATE(#{TAX_INVC_CRT_DT},'yyyymmdd')
        ,#{TAX_INVC_REM}
        ,#{TAX_INVC_CHRG}
        ,#{TAX_INVC_OVERDU}
        ,#{TAX_INVC_AMT_DUE}
        ,#{TAX_INVC_TYPE}
        ,#{TAX_INVC_CRT_USER_ID}
        ,#{TAX_INVC_PAY_REF_NO1}
        ,#{TAX_INVC_PAY_REF_NO2}
        ,#{TAX_INVC_BILL_TYPE}
        ,#{TAX_INVC_GST_REM}
        ,#{AREA_ID}
        ,#{ADDR_DTL}
        ,#{STREET}
		  )
		  </insert>

		  <insert id="insertTaxInvoiceCompanySub" parameterType = "Map">
		  INSERT INTO PAY0030D
		  (
		  INVC_ITM_ID
        ,TAX_INVC_ID
        ,INVC_ITM_ORD_NO
        ,INVC_ITM_PO_NO
        ,INVC_ITM_GST_RATE
        ,INVC_ITM_GST_TXS
        ,INVC_ITM_RENTAL_FEE
        ,INVC_ITM_HNDL_FEE
        ,INVC_ITM_HNDL_FEE_TXS
        ,INVC_ITM_PRODUCT_CTGRY
        ,INVC_ITM_PRODUCT_MODEL
        ,INVC_ITM_PRODUCT_SERIAL_NO
        ,INVC_ITM_ADD1
        ,INVC_ITM_ADD2
        ,INVC_ITM_ADD3
        ,INVC_ITM_POST_CODE
        ,INVC_ITM_STATE_NAME
        ,INVC_ITM_CNTY
        ,INVC_ITM_INSTALL_DT
        ,INVC_ITM_INSTLMT_NO
        ,INVC_ITM_INSTLMT_PRIOD
        ,INVC_ITM_PAY_MODE
        ,INVC_ITM_DESC1
        ,INVC_ITM_DESC2
        ,INVC_ITM_TYPE_ID
        ,AREA_ID
        ,ADDR_DTL
        ,STREET
		  )VALUES
		  (
		  PAY0030D_SEQ.nextval
        ,#{TAX_INVC_ID}
        ,#{INVC_ITM_ORD_NO}
        ,#{INVC_ITM_PO_NO}
        ,#{INVC_ITM_GST_RATE}
        ,#{INVC_ITM_GST_TXS}
        ,#{INVC_ITM_RENTAL_FEE}
        ,#{INVC_ITM_HNDL_FEE}
        ,#{INVC_ITM_HNDL_FEE_TXS}
        ,#{INVC_ITM_PRODUCT_CTGRY}
        ,#{INVC_ITM_PRODUCT_MODEL}
        ,#{INVC_ITM_PRODUCT_SERIAL_NO}
        ,#{INVC_ITM_ADD1}
        ,#{INVC_ITM_ADD2}
        ,#{INVC_ITM_ADD3}
        ,#{INVC_ITM_POST_CODE}
        ,#{INVC_ITM_STATE_NAME}
        ,#{INVC_ITM_CNTY}
        ,#{INVC_ITM_INSTALL_DT}
        ,#{INVC_ITM_INSTLMT_NO}
        ,#{INVC_ITM_INSTLMT_PRIOD}
        ,#{INVC_ITM_PAY_MODE}
        ,#{INVC_ITM_DESC1}
        ,#{INVC_ITM_DESC2}
        ,#{INVC_ITM_TYPE_ID}
        ,#{AREA_ID}
        ,#{ADDR_DTL}
        ,#{STREET}
		  )
		  </insert>

          <insert id = "insertTaxInvoiceOutright" parameterType="Map">
          INSERT INTO PAY0033D
          (
          TAX_INVC_ID
          ,TAX_INVC_REF_NO
          ,TAX_INVC_REF_DT
          ,TAX_INVC_CUST_NAME
          ,TAX_INVC_CNTC_PERSON
          ,TAX_INVC_ADDR1
          ,TAX_INVC_ADDR2
          ,TAX_INVC_ADDR3
          ,TAX_INVC_ADDR4
          ,TAX_INVC_POST_CODE
          ,TAX_INVC_STATE_NAME
          ,TAX_INVC_CNTY
          ,TAX_INVC_TASK_ID
          ,TAX_INVC_CRT_DT
          ,TAX_INVC_REM
          ,TAX_INVC_CHRG
          ,TAX_INVC_OVERDU
          ,TAX_INVC_AMT_DUE
          ,TAX_INVC_PO_NO
          ,AREA_ID
          ,ADDR_DTL
          ,STREET
          )VALUES
          (
          #{TAX_INVC_ID}
        ,#{TAX_INVC_REF_NO}
        ,SYSDATE
        ,#{TAX_INVC_CUST_NAME}
        ,#{TAX_INVC_CNTC_PERSON}
        ,#{TAX_INVC_ADDR1}
        ,#{TAX_INVC_ADDR2}
        ,#{TAX_INVC_ADDR3}
        ,#{TAX_INVC_ADDR4}
        ,#{TAX_INVC_POST_CODE}
        ,#{TAX_INVC_STATE_NAME}
        ,#{TAX_INVC_CNTY}
        ,#{TAX_INVC_TASK_ID}
        ,TO_DATE(#{TAX_INVC_CRT_DT},'yyyymmdd')
        ,#{TAX_INVC_REM}
        ,#{TAX_INVC_CHRG}
        ,#{TAX_INVC_OVERDU}
        ,#{TAX_INVC_AMT_DUE}
        ,#{TAX_INVC_PO_NO}
        ,#{AREA_ID}
        ,#{ADDR_DTL}
        ,#{STREET}
          )
          </insert>

          <insert id="insertTaxInvoiceOutrightSub" parameterType = "Map">
          INSERT INTO PAY0034D
          (
          INVC_ITM_ID
        ,TAX_INVC_ID
        ,INVC_ITM_ORD_NO
        ,INVC_ITM_PO_NO
        ,INVC_ITM_GST_RATE
        ,INVC_ITM_GST_TXS
        ,INVC_ITM_AMT_DUE
        ,INVC_ITM_RENTAL_FEE
        ,INVC_ITM_PRODUCT_CTGRY
        ,INVC_ITM_PRODUCT_MODEL
        ,INVC_ITM_PRODUCT_SERIAL_NO
        ,INVC_ITM_ADD1
        ,INVC_ITM_ADD2
        ,INVC_ITM_ADD3
        ,INVC_ITM_POST_CODE
        ,INVC_ITM_STATE_NAME
        ,INVC_ITM_CNTY
        ,INVC_ITM_FEES_GST_TXS
        ,INVC_ITM_FEES_AMT_DUE
        ,INVC_ITM_FEES_CHRG
        ,AREA_ID
        ,ADDR_DTL
        ,STREET
          )VALUES
          (
          PAY0034D_INVC_ITM_ID_SEQ.nextval
        ,#{TAX_INVC_ID}
        ,#{INVC_ITM_ORD_NO}
        ,#{INVC_ITM_PO_NO}
        ,#{INVC_ITM_GST_RATE}
        ,#{INVC_ITM_GST_TXS}
        ,#{INVC_ITM_AMT_DUE}
        ,#{INVC_ITM_RENTAL_FEE}
        ,#{INVC_ITM_PRODUCT_CTGRY}
        ,#{INVC_ITM_PRODUCT_MODEL}
        ,#{INVC_ITM_PRODUCT_SERIAL_NO}
        ,#{INVC_ITM_ADD1}
        ,#{INVC_ITM_ADD2}
        ,#{INVC_ITM_ADD3}
        ,#{INVC_ITM_POST_CODE}
        ,#{INVC_ITM_STATE_NAME}
        ,#{INVC_ITM_CNTY}
        ,#{INVC_ITM_FEES_GST_TXS}
        ,#{INVC_ITM_FEES_AMT_DUE}
        ,#{INVC_ITM_FEES_CHRG}
        ,#{AREA_ID}
        ,#{ADDR_DTL}
        ,#{STREET}
          )
          </insert>

        <update id ="updateSalesOrderMStatus" parameterType="Map">
        UPDATE SAL0001D SET STUS_CODE_ID = #{statusCodeId} WHERE SALES_ORD_ID=#{salesOrdId}
        </update>

<insert id="insertAccTradeLedger" parameterType="Map">
INSERT INTO PAY0035D(
TRADE_RUN_ID
,TRADE_ID
,TRADE_SO_ID
,TRADE_DOC_NO
,TRADE_DOC_TYPE_ID
,TRADE_DT_TM
,TRADE_AMT
,TRADE_BATCH_NO
,TRADE_INST_NO
,TRADE_UPD_USER_ID
,TRADE_UPD_DT
,TRADE_IS_SYNC
,R01
)
VALUES
(
PAY0035D_SEQ.nextval
,#{TRADE_ID}
,#{TRADE_SO_ID}
,#{TRADE_DOC_NO}
,#{TRADE_DOC_TYPE_ID}
,TO_DATE(#{TRADE_DT_TM},'yyyy-mm-dd')
,#{TRADE_AMT}
,#{TRADE_BATCH_NO}
,#{TRADE_INST_NO}
,#{TRADE_UPD_USER_ID}
,TO_DATE(#{TRADE_UPD_DT},'yyyy-mm-dd')
,#{TRADE_IS_SYNC}
,#{R01}

)
</insert >


<insert id="insertAccorderBill" parameterType="Map">
INSERT INTO PAY0016D
(
    ACC_BILL_ID
,ACC_BILL_TASK_ID
,ACC_BILL_REF_DT
,ACC_BILL_REF_NO
,ACC_BILL_ORD_ID
,ACC_BILL_ORD_NO
,ACC_BILL_TYPE_ID
,ACC_BILL_MODE_ID
,ACC_BILL_SCHDUL_ID
,ACC_BILL_SCHDUL_PRIOD
,ACC_BILL_ADJ_ID
,ACC_BILL_SCHDUL_AMT
,ACC_BILL_ADJ_AMT
,ACC_BILL_TXS_AMT
,ACC_BILL_NET_AMT
,ACC_BILL_STUS
,ACC_BILL_REM
,ACC_BILL_CRT_DT
,ACC_BILL_CRT_USER_ID
,ACC_BILL_GRP_ID
,ACC_BILL_TAX_CODE_ID
,ACC_BILL_TAX_RATE
,ACC_BILL_ACCT_CNVR
,ACC_BILL_CNTRCT_ID
)
VALUES
(PAY0016D_SEQ.nextval
,#{ACC_BILL_TASK_ID}
,TO_DATE(#{ACC_BILL_REF_DT},'yyyy-mm-dd')
,#{ACC_BILL_REF_NO}
,#{ACC_BILL_ORD_ID}
,#{ACC_BILL_ORD_NO}
,#{ACC_BILL_TYPE_ID}
,#{ACC_BILL_MODE_ID}
,#{ACC_BILL_SCHDUL_ID}
,#{ACC_BILL_SCHDUL_PRIOD}
,#{ACC_BILL_ADJ_ID}
,#{ACC_BILL_SCHDUL_AMT}
,#{ACC_BILL_ADJ_AMT}
,#{ACC_BILL_TXS_AMT}
,#{ACC_BILL_NET_AMT}
,#{ACC_BILL_STUS}
,#{ACC_BILL_REM}
,TO_DATE(#{ACC_BILL_CRT_DT},'yyyy-mm-dd')
,#{ACC_BILL_CRT_USER_ID}
,#{ACC_BILL_GRP_ID}
,#{ACC_BILL_TAX_CODE_ID}
,#{ACC_BILL_TAX_RATE}
,#{ACC_BILL_ACCT_CNVR}
,#{ACC_BILL_CNTRCT_ID}
)
</insert>

<select id="getTradeAmount" parameterType="Map" resultType='Map'>
SELECT NVL(SUM(TRADE_AMT),0)   as SUMTRADE_AMT FROM PAY0035D WHERE TRADE_SO_ID =#{TRADE_SO_ID}  AND (TRADE_DOC_NO LIKE 'BR%' OR TRADE_DOC_NO LIKE 'DN%' OR TRADE_DOC_NO LIKE 'CN%')
</select>

 <select id="getInvoiceNum" parameterType="Map" resultType="java.lang.String">
                SELECT FN_GET_DOCNO(#{DocNo}) InvoiceNo  FROM DUAL
     </select>

		  <insert id="insertCallResult" parameterType="Map">
			  INSERT INTO CCR0007D (
			       CALL_RESULT_ID
	             , CALL_ENTRY_ID
	             , CALL_STUS_ID
	             , CALL_DT
	             , CALL_ACTN_DT
	             , CALL_FDBCK_ID
	             , CALL_CT_ID
	             , CALL_REM
	             , CALL_CRT_USER_ID
	             , CALL_CRT_DT
	             , CALL_CRT_USER_ID_DEPT
	             , CALL_HC_ID
	             , CALL_ROS_AMT
	             , CALL_SMS
	             , CALL_SMS_REM
	             )
	            VALUES (
	            CCR0007D_CALL_RESULT_ID_SEQ.NEXTVAL
	            , #{callEntryId}
	            , #{callStatusId}
	            , TO_DATE(#{callCallDate},'dd-mm-yyyy')
	            , TO_DATE(#{callActionDate},'dd-mm-yyyy')
	            , #{callFeedBackId}
	            , #{callCTID}
	            , #{callRemark}
	            , #{callCreateBy}
	            , SYSDATE
	            , #{callCreateByDept}
	            , #{callHCID}
	            , #{callROSAmt}
	            , #{callSMS}
	            , #{callSMSRemark}
	            )
		  </insert>
		  <update id="updateCallEntry" parameterType="Map">
			  UPDATE CCR0006D
			   SET RESULT_ID = #{resultId}
			 WHERE  ( CALL_ENTRY_ID = #{callEntryId} )
		  </update>
		  <select id="selectDO" parameterType="Map" resultType="egovMap">
		       SELECT *
			  FROM ( SELECT Project1.MOV_ID MOV_ID  ,
			                Project1.INSTALL_ENTRY_ID INSTALL_ENTRY_ID  ,
			                Project1.MOV_FROM_LOC_ID MOV_FROM_LOC_ID  ,
			                Project1.MOV_TO_LOC_ID MOV_TO_LOC_ID  ,
			                Project1.MOV_TYPE_ID MOV_TYPE_ID  ,
			                Project1.MOV_STUS_ID MOV_STUS_ID  ,
			                Project1.MOV_CNFM MOV_CNFM  ,
			                Project1.MOV_CRT_DT MOV_CRT_DT  ,
			                Project1.MOV_UPD_DT MOV_UPD_DT  ,
			                Project1.MOV_CRT_USER_ID MOV_CRT_USER_ID  ,
			                Project1.MOV_UPD_USER_ID MOV_UPD_USER_ID  ,
			                Project1.STK_CRD_POST STK_CRD_POST  ,
			                Project1.STK_CRD_POST_DT STK_CRD_POST_DT  ,
			                Project1.STK_CRD_POST_TO_WEB_ON_TM STK_CRD_POST_TO_WEB_ON_TM
			  FROM ( SELECT Extent1.MOV_ID MOV_ID  ,
			                Extent1.INSTALL_ENTRY_ID INSTALL_ENTRY_ID  ,
			                Extent1.MOV_FROM_LOC_ID MOV_FROM_LOC_ID  ,
			                Extent1.MOV_TO_LOC_ID MOV_TO_LOC_ID  ,
			                Extent1.MOV_TYPE_ID MOV_TYPE_ID  ,
			                Extent1.MOV_STUS_ID MOV_STUS_ID  ,
			                Extent1.MOV_CNFM MOV_CNFM  ,
			                Extent1.MOV_CRT_DT MOV_CRT_DT  ,
			                Extent1.MOV_UPD_DT MOV_UPD_DT  ,
			                Extent1.MOV_CRT_USER_ID MOV_CRT_USER_ID  ,
			                Extent1.MOV_UPD_USER_ID MOV_UPD_USER_ID  ,
			                Extent1.STK_CRD_POST STK_CRD_POST  ,
			                Extent1.STK_CRD_POST_DT STK_CRD_POST_DT  ,
			                Extent1.STK_CRD_POST_TO_WEB_ON_TM STK_CRD_POST_TO_WEB_ON_TM
			         FROM LOG0013D Extent1
			          WHERE  ( Extent1.INSTALL_ENTRY_ID = #{installEntryId} )
			                   AND ( Extent1.MOV_TYPE_ID IN ( 261,263 )
			                  ) ) Project1
			  ORDER BY Project1.MOV_ID DESC )
			  WHERE ROWNUM &lt;= 1

		  </select>
		  <insert id="insertMovement" parameterType="Map">
		  INSERT INTO LOG0013D (
		       MOV_ID
             , INSTALL_ENTRY_ID
             , MOV_FROM_LOC_ID
             , MOV_TO_LOC_ID
             , MOV_TYPE_ID
             , MOV_STUS_ID
             , MOV_CNFM
             , MOV_CRT_DT
             , MOV_UPD_DT
             , MOV_CRT_USER_ID
             , MOV_UPD_USER_ID
             , STK_CRD_POST
             , STK_CRD_POST_DT
             , STK_CRD_POST_TO_WEB_ON_TM
             )
            VALUES (
            LOG0013D_MOV_ID_SEQ.nextval
            , #{installEntryId}
            , #{movFromLocId}
            , #{movToLocId}
            , #{movTypeId}
            , #{movStatusId}
            , #{movConfirm}
            , SYSDATE
            , SYSDATE
            , #{movCreateBy}
            , #{movUpdateBy}
            , #{stkCrdPost}
            , #{stkCrdPostDate}
            , #{stkCrdPostToWebOnTime}
             )
		  </insert>
		  <update id="updateSalesOrderExchange" parameterType="Map">
			  UPDATE SAL0004D
			   SET SO_EXCHG_UPD_DT = SYSDATE,
			       SO_EXCHG_UPD_USER_ID = #{soExchgUpdateBy},
			       SO_EXCHG_NW_CALL_ENTRY_ID = #{soExchgNwCallEntryId}
			 WHERE  ( SO_EXCHG_ID = #{soExchgId} )
		  </update>





    <select id="assignCtList" parameterType="Map" resultType="egovMap">
    
				    
				    SELECT DISTINCT C.MEM_ID CT_ID,
									       C.MEM_CODE CT_CODE,
									       B.BRNCH_ID BRNCH_ID,
									       B.CODE BRANCH_CODE ,
									       B.NAME BRANCH_NAME,
									       C.STUS CT_STUS,
									       C.NAME CT_NAME,
									       D.CT_SUB_GRP CT_SUB_GRP
				  FROM ORG0005D A ,
				       SYS0005M B ,
				       ORG0001D C ,
				       SYS0064M D ,
				       SVC0054M E
				 WHERE A.BRNCH_ID = #{BRNCH_ID}
				   AND A.BRNCH_ID = B.BRNCH_ID
				   AND E.MEM_ID = C.MEM_ID
				   AND C.MEM_TYPE = 3
				   AND A.MEM_LVL = 4
				   AND B.CODE = D.CT_BRNCH_CODE
				   AND E.CT_SUB_GRP = D.CT_SUB_GRP
				   AND C.STUS =1
				   AND E.MAJOR_GRP = '1'
     </select>



    <select id="assignCtOrderList" parameterType="Map" resultType="egovMap">
                  SELECT B.SALES_ORD_NO     SALES_ORD_NO,
                            A.INSTALL_ENTRY_NO INSTALL_ENTRY_NO ,
                            C.NAME             CUST_NAME,
                            C.CUST_ID          CUST_ID ,
                                    A.CT_ID    CT_ID,
                            F.CT_SUB_GRP       CUST_SUB_GRP,
                             (SELECT MEM_CODE   FROM ORG0001D S WHERE S.MEM_ID = A.CT_ID ) MEM_CODE
                     FROM SAL0046D A ,
                          SAL0001D B ,
                          SAL0029D C ,
                          SAL0045D D ,
                          SAL0023D E ,
                          SYS0064M F
                   WHERE 1=1
                        <if test="installNo != null and installNo != '' ">
                             AND INSTALL_ENTRY_NO   IN
                              <foreach item="item" collection="installNo" index="index" open="(" separator="," close=")">
                                        #{item}
                              </foreach>
                        </if>
                         AND A.SALES_ORD_ID      = B.SALES_ORD_ID
                         AND B.CUST_ID       = C.CUST_ID
                         AND B.SALES_ORD_ID  = D.SALES_ORD_ID
                         AND D.ADD_ID        = E.CUST_ADD_ID
                         AND E.AREA_ID       = F.AREA_ID(+)
     </select>


     <insert id="updateAssignCT" parameterType="Map" >
                         UPDATE  SAL0046D
						  SET CT_ID =   #{insstallCtId} ,
						      UPD_DT =SYSDATE   ,
						      UPD_USER_ID = #{updator}
						  WHERE INSTALL_ENTRY_No = #{installEntryNo}
     </insert>

<resultMap id="installationNoteListing" type="egovMap" />
        <select id="selectInstallationNoteListing" parameterType="Map" resultType="egovMap" statementType="CALLABLE" >
        call  SP_CR_GEN_INS_NOTE_LIST(#{V_DSCCODE},#{V_APPDATE},#{V_ORDERDATE},#{V_WHERESQL},#{V_ORDERBYSQL},#{cv_1,mode=OUT,jdbcType=CURSOR, javaType=ResultSet, resultMap=installationNoteListing})
        </select>

        <select id="selectInstallInfo" parameterType="Map" resultType="egovMap">
    <![CDATA[

        SELECT Limit1.INSTALL_ENTRY_ID INSTALL_ENTRY_ID  ,
       CASE
            WHEN ( Limit1.ALLOW_COMM IS NOT NULL ) THEN Limit1.ALLOW_COMM
       ELSE UTILS.CONVERT_TO_NUMBER(0,1,0)
          END C1  ,
       Limit1.CRT_DT CRT_DT  ,
       CASE
            WHEN ( Limit1.USER_ID IS NOT NULL ) THEN Limit1.USER_NAME
       ELSE 'N'
          END C2  ,
       Limit1.CRT_USER_ID CRT_USER_ID  ,
       Limit1.CT_ID CT_ID  ,
       CASE
            WHEN ( Limit1.MEM_ID IS NOT NULL ) THEN Limit1.MEM_CODE
       ELSE 'N'
          END C3  ,
       CASE
            WHEN ( Limit1.MEM_ID IS NOT NULL ) THEN Limit1.NAME1
       ELSE 'N'
          END C4  ,
        CASE
            WHEN (Limit1.INSTALL_ENTRY_NO IS NOT NULL) THEN Limit1.INSTALL_ENTRY_NO
        ELSE '0'
         END C14 ,

       CASE
            WHEN ( Limit1.FAIL_ID IS NOT NULL ) THEN Limit1.FAIL_ID
       ELSE 0
          END C5  ,
       CASE
            WHEN ( Limit1.INSTALL_DT IS NOT NULL ) THEN UTILS.CONVERT_TO_DATETIME(Limit1.INSTALL_DT)
       ELSE sysdate
          END C6  ,
       CASE
            WHEN ( Limit1.IS_TRADE_IN IS NOT NULL ) THEN Limit1.IS_TRADE_IN
       ELSE UTILS.CONVERT_TO_NUMBER(0,1,0)
          END C7  ,
       CASE
            WHEN ( Limit1.NEXT_CALL_DT IS NOT NULL ) THEN UTILS.CONVERT_TO_DATETIME(Limit1.NEXT_CALL_DT)
       ELSE sysdate
          END C8  ,
       Limit1.DOC_REF_NO1 DOC_REF_NO1  ,
       Limit1.DOC_REF_NO2 DOC_REF_NO2  ,
       Limit1.REM REM  ,
       CASE
            WHEN ( Limit1.REQUIRE_SMS IS NOT NULL ) THEN Limit1.REQUIRE_SMS
       ELSE UTILS.CONVERT_TO_NUMBER(0,1,0)
          END C9  ,
       Limit1.RESULT_ID RESULT_ID  ,
       Limit1.SERIAL_NO SERIAL_NO  ,
       Limit1.SIRIM_NO SIRIM_NO  ,
       Limit1.STUS_CODE_ID STUS_CODE_ID  ,
       Limit1.NAME NAME  ,
       CASE
            WHEN ( Limit1.UPD_USER_ID IS NOT NULL ) THEN Limit1.UPD_USER_ID
       ELSE 0
          END C10  ,
       CASE
            WHEN ( Limit1.USERID1 IS NOT NULL ) THEN Limit1.USERNAME1
       ELSE 'N'
          END C11  ,
       CASE
            WHEN ( Limit1.UPD_DT IS NOT NULL ) THEN UTILS.CONVERT_TO_DATETIME(Limit1.UPD_DT)
       ELSE sysdate
          END C12  ,
       Limit1.INSTALL_STK_ID INSTALL_STK_ID  ,
       CASE
            WHEN ( Limit1.IS_SIRIM IS NOT NULL ) THEN UTILS.CONVERT_TO_NUMBER(Limit1.IS_SIRIM,10,0)
       ELSE 0
          END C13
  FROM (
  SELECT Extent1.INSTALL_ENTRY_ID INSTALL_ENTRY_ID  ,
                Extent1.INSTALL_ENTRY_NO INSTALL_ENTRY_NO  ,
                Extent1.INSTALL_STK_ID INSTALL_STK_ID  ,
                Extent2.IS_SIRIM IS_SIRIM  ,
                Extent3.RESULT_ID RESULT_ID  ,
                Extent3.STUS_CODE_ID STUS_CODE_ID  ,
                Extent3.CT_ID CT_ID  ,
                Extent3.INSTALL_DT INSTALL_DT  ,
                Extent3.REM REM  ,
                Extent3.CRT_USER_ID CRT_USER_ID  ,
                Extent3.CRT_DT CRT_DT  ,
                Extent3.SIRIM_NO SIRIM_NO  ,
                Extent3.SERIAL_NO SERIAL_NO  ,
                Extent3.FAIL_ID FAIL_ID  ,
                Extent3.NEXT_CALL_DT NEXT_CALL_DT  ,
                Extent3.ALLOW_COMM ALLOW_COMM  ,
                Extent3.IS_TRADE_IN IS_TRADE_IN  ,
                Extent3.REQUIRE_SMS REQUIRE_SMS  ,
                Extent3.DOC_REF_NO1 DOC_REF_NO1  ,
                Extent3.DOC_REF_NO2 DOC_REF_NO2  ,
                Extent3.UPD_DT UPD_DT  ,
                Extent3.UPD_USER_ID UPD_USER_ID  ,
                Extent4.NAME NAME  ,
                Extent5.MEM_ID MEM_ID  ,
                Extent5.MEM_CODE MEM_CODE  ,
                Extent5.NAME NAME1  ,
                Extent6.USER_ID USER_ID  ,
                Extent6.USER_NAME USER_NAME  ,
                Extent7.USER_ID USERID1  ,
                Extent7.USER_NAME USERNAME1
         FROM SAL0046D Extent1
                JOIN SYS0026M Extent2   ON Extent2.STK_ID = Extent1.INSTALL_STK_ID
                JOIN SAL0047D Extent3   ON Extent3.ENTRY_ID = Extent1.INSTALL_ENTRY_ID
                JOIN SYS0038M Extent4   ON Extent4.STUS_CODE_ID = Extent3.STUS_CODE_ID
                LEFT JOIN ORG0001D Extent5   ON Extent5.MEM_ID = Extent3.CT_ID
                LEFT JOIN SYS0047M Extent6   ON Extent6.USER_ID = Extent3.CRT_USER_ID
                LEFT JOIN SYS0047M Extent7   ON Extent7.USER_ID = Extent3.UPD_USER_ID
          WHERE  Extent1.INSTALL_ENTRY_ID = TO_NUMBER(TRIM(#{installEntryId})) AND ROWNUM <= 1 ) Limit1

          ]]>
    </select>

    <update id="updateInstallResultEdit" parameterType="Map">
         UPDATE SAL0047D
           SET REM = #{remark},
               SIRIM_NO = #{sirimNo},
               SERIAL_NO = #{serialNo},
               DOC_REF_NO1 = #{refNo1},
               DOC_REF_NO2 = #{refNo1},
               UPD_DT = SYSDATE,
               UPD_USER_ID = #{user_id}
         WHERE  ( RESULT_ID = #{resultId} )
         </update>


   <select id="getOrderByInstallEntryID" parameterType="Map" resultType="egovMap">
    <![CDATA[

			     SELECT *
				 FROM SAL0046D I
					JOIN CCR0006D CE ON CE.CALL_ENTRY_ID = I.CALL_ENTRY_ID
					JOIN SAL0001D SOM ON SOM.SALES_ORD_ID = I.SALES_ORD_ID
					JOIN SAL0002D SOD ON SOD.SALES_ORD_ID = SOM.SALES_ORD_ID
					JOIN SAL0029D CUST ON CUST.CUST_ID = SOM.CUST_ID
					JOIN ORG0001D MEM ON MEM.MEM_ID = SOM.MEM_ID
					JOIN SYS0013M APP ON APP.CODE_ID = SOM.APP_TYPE_ID
					JOIN SYS0026M INV ON INV.STK_ID = I.INSTALL_STK_ID
					JOIN SYS0013M CD ON CD.CODE_ID = INV.STK_CTGRY_ID
					LEFT JOIN ORG0005D MO ON MO.MEM_ID = MEM.MEM_ID
					LEFT JOIN SAL0017D SPM ON SPM.PROMO_ID = SOM.PROMO_ID
					LEFT JOIN SYS0038M STUS ON STUS.STUS_CODE_ID = I.STUS_CODE_ID
				WHERE I.INSTALL_ENTRY_ID = #{INSTALL_ENTRY_ID}

        ]]>
    </select>



     <select id="isInstallAlreadyResult" parameterType="Map" resultType="java.lang.Integer">
        <![CDATA[
			SELECT   COUNT (INSTALL_ENTRY_ID) CNT
			  FROM   SAL0046D
			 WHERE   INSTALL_ENTRY_NO = #{serviceNo}  AND STUS_CODE_ID <> '1'
        ]]>
    </select>

     <select id="validationInstallationResult" parameterType="Map" resultType="egovMap">
        SELECT MAX(B.RESULT_ID) AS RESULT_ID ,
                   COUNT(1) AS RESULT_CNT
          FROM SAL0046D A,
                   SAL0047D B
        WHERE A.INSTALL_ENTRY_ID = B.ENTRY_ID
            AND A.INSTALL_ENTRY_ID = #{hidEntryId}
    </select>
    
    <select id="getUsePAY0033D_addr" parameterType="Map" resultType="egovMap">
    <!-- PAY0033D -->
SELECT B.ADDR_DTL AS TAX_INVC_ADDR1,
       B.STREET AS TAX_INVC_ADDR2,
       D.POSTCODE AS TAX_INVC_POST_CODE,
       D.STATE AS TAX_INVC_STATE_NAME, 
       D.COUNTRY AS TAX_INVC_CNTY
  FROM SAL0001D A,
       SAL0023D B,
       SAL0045D C,
       SYS0064M D
 WHERE A.SALES_ORD_ID = C.SALES_ORD_ID
   AND B.CUST_ADD_ID = C.ADD_ID
   AND A.CUST_ID = B.CUST_ID
   AND B.AREA_ID = D.AREA_ID
   AND A.SALES_ORD_NO = #{hidTaxInvDSalesOrderNo}
    </select>
    
    <select id="getUsePAY0034D_addr" parameterType="Map" resultType="egovMap">
    <!-- PAY0034D -->

SELECT B.ADDR_DTL AS INVC_ITM_ADD1,
       B.STREET AS INVC_ITM_ADD2,
       D.POSTCODE AS INVC_ITM_POST_CODE,
       D.STATE AS INVC_ITM_STATE_NAME, 
       D.COUNTRY AS INVC_ITM_CNTY
  FROM SAL0001D A,
       SAL0023D B,
       SAL0045D C,
       SYS0064M D
 WHERE A.SALES_ORD_ID = C.SALES_ORD_ID
   AND B.CUST_ADD_ID = C.ADD_ID
   AND A.CUST_ID = B.CUST_ID
   AND B.AREA_ID = D.AREA_ID
   AND A.SALES_ORD_NO = #{hidTaxInvDSalesOrderNo}
    
    </select>
    
    <select id="getLocInfo" parameterType="Map" resultType="egovMap">    
    <![CDATA[
    select 
         L56.LOC_ID,
         L56.STK_CODE PARTS_CODE,
         L56.STK_DESC PARTS_NAME,
         L56.STK_TYPE_ID PARTS_TYPE,
         L56.STK_CTGRY_ID,
         L56.QTY STOCK_QTY,
         WH_LOC_DESC,
         QTY - NVL (L75.BOOKING_QTY, 0) AVAIL_QTY,
         S26.STK_ID PARTS_ID,
         (SELECT WH_LOC_ID
            FROM sys0028m
           WHERE WH_LOC_CODE = S28.rdc_code)
            rdc_code
        From 
        LOG0056M L56,
        SYS0028M S28,
        SYS0026m S26,
        (  SELECT l75.loc_id,
                   l75.itm_code,
                   SUM (reqst_qty) - SUM (NVL (mov_qty, 0)) AS booking_qty
              FROM log0075m l75
             WHERE NVL (l75.final_cmplt, 'N') <> 'Y'
                   AND l75.reqst_no IN (SELECT reqst_no
                                          FROM log0047m
                                         WHERE NVL (REQST_DEL, 'N') <> 'Y')
          GROUP BY l75.loc_id, l75.itm_code) L75
        where 1=1
        AND L56.LOC_ID = S28.WH_LOC_ID
        AND L56.STK_CODE = S26.STK_CODE
        AND L56.STK_CODE = L75.ITM_CODE(+)
        AND L56.LOC_ID = L75.LOC_ID(+)
        AND L56.QTY > 0
        AND S28.WH_LOC_ID =#{whLocId}
        AND L56.STK_CODE=#{stkCode}
        ]]>
        </select>
    </mapper>