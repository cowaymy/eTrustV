<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.coway.trust.biz.services.mlog.impl.MSvcLogApiMapper">







    <select id="getHeartServiceJobList" parameterType="Map" resultType="egovMap">
                                /* By KV -mobile- get job list */
						SELECT
						  B.SALES_ORD_NO AS sales_Order_No
						  , B.APP_TYPE_ID AS app_Type
						  , D.PROMO_ID AS sales_Promotion
						  , E.CUST_ACC_BANK_ID AS bank_Code
						  , E.CUST_ACC_NO AS card_Account_No
						  , F.TEL_M1 AS handphone_Tel
						  , F.TEL_O AS home_Tel
						  , F.TEL_R AS office_Tel
						  , F.EMAIL AS mail_Address
						  , F.NRIC AS resultIc_Mobile_No
						  , G.NAME AS cust_Name
						  , G.TYPE_ID AS customer_Type
						  , G.cust_id AS customer_Id
						  , H.BRNCH_ID AS dsc_Code
						  , J.SIRIM_NO AS sirim_No
						  , J.SERIAL_NO AS serial_N
<!-- 						  , K.REN_COLCT_ID AS rc_Code -->
						  , K.FAIL_RESN_ID AS fail_Reason_Code
						  , A.NO AS service_No
						  , A.STUS_CODE_ID AS job_Status
				     	  , TO_CHAR(A.APPNT_DT, 'YYYYMMDD') as appointment_Date
						  , A.APPNT_TM as appointment_Time
						  , A.YEAR as   plan_Year
						  , A.MONTH as plan_Month
						  , M.STK_DESC AS product_Name
						  , M.STK_CODE AS product_Code
						  , L.MEM_CODE AS settled_By
						  , N.CUST_BILL_PAY_REF_NO1 as customer_Jom_Pay_Ref_No
						  , G.CUST_VA_NO as customer_Va_No
						  , J.RESULT_CUST_NAME as result_Cust_Name
						  , J.RESULT_REP_EMAIL_NO as result_Report_Email_No
						  , J.RESULT_ACEPT_NAME as result_Acceptance_Name
						  , to_char(P.CODE_ID) as payment_Mode
						  , P.CODE_NAME as payment_ModeName
						  , Q.ADDR_DTL as install_Address
						  , to_char(R.SRV_DUR) as contract_Duration
						  , to_char(R.SRV_EXPR_DT,'YYYYMMDD') as Membership_Contract_Expiry
						  , S.STUS_CODE_ID as rental_Status
						  , K.RESULT_REM as result_Remark
                          , K.REN_COLCT_ID AS rc_Code
					      , k.TEMPERATE_SETNG as temperatureSetting
					      , TO_CHAR(k.NEXT_APPNT_DT, 'YYYYMMDD') as nextAppointmentDate
					      , k.NEXT_APPNT_TM as nextAppointmentTime
					      , k.OWNER_CODE as ownerCode
					      , k.RESULT_CUST_NAME as resultCustName
					      , k.RESULT_MOBILE_NO as resultIcMobileNo
					      , k.RESULT_RPT_EMAIL_NO as resultReportEmailNo
					      , k.RESULT_ACEPT_NAME as resultAcceptanceName
					      , k.SGN_DT as signData                           
						  , 'HS' as job_Type 
						  , '1' as job_Session
						  , '1' as checkIn_Date
						  , '1' as checkIn_Time
						  , '1' as checkIn_Gps
						  , '1' as service_State
						  , '1' as customer_Gps
						  , '1' as postcode
						  , '1' as image_Url
						  , '1' as instruction
						  , '1' as monthly_RentalFees
						  , '1' as registrationFees
						  , '1' as bank_Name
						  , '1' as outstanding
						  , '1' as warranty
						  , '1' as last_Payment_Date
						  , '1' as temperature_Setting
						  , '1' as owner_Code
						  , '1' as owner_Code_Nm
						  , '1' as fail_Reason_Name
						  , '1' as settled_Date
						  , '1' as settled_Time
						  , '1' as ren_Collection_Id
						  , '1' as bsr_No
						  , '1' as need_Filter
						  , '1' as nextAppointment_Date
						  , '1' as nextAppointment_Time
						  , '1' as appType
						  , '1' as salesPromotion
						  , '1' as bank_Code
						  , '1' as dsc_Code
						  , '1' as failReason_Code
						FROM 
						  SVC0008D A
						  , SAL0001D B
						  , SAL0002D C
						  , SAL0017D D
						  , (SELECT * FROM
						      (
						        SELECT CUST_ID, CUST_ACC_BANK_ID, CUST_ACC_NO,
						              ROW_NUMBER() OVER(PARTITION BY CUST_ID ORDER BY CUST_ACC_UPD_DT DESC) AS DUM_SEQ
						        FROM SAL0022D 
						      ) SAL22D 
						      WHERE DUM_SEQ = 1 ) E
						  , (SELECT * FROM
						      (
						        SELECT CUST_ID, TEL_M1, TEL_O, TEL_R, EMAIL, NRIC,
						              ROW_NUMBER() OVER(PARTITION BY CUST_ID ORDER BY UPD_DT DESC) AS DUM_SEQ
						        FROM SAL0027D 
						      ) SAL27D 
						      WHERE DUM_SEQ = 1 ) F
						  , SAL0029D G
						  , SAL0045D H
						  , (SELECT * FROM
						      (
						        SELECT SALES_ORD_ID, INSTALL_ENTRY_ID,
						              ROW_NUMBER() OVER(PARTITION BY SALES_ORD_ID ORDER BY CRT_DT DESC) AS DUM_SEQ
						        FROM SAL0046D 
						      ) SAL46D 
						      WHERE DUM_SEQ = 1 ) I
						  , SAL0047D J
						  , (SELECT * FROM
						      (
						        SELECT SCHDUL_ID, REN_COLCT_ID, SALES_ORD_ID, FAIL_RESN_ID, RESULT_REM,
				                       TEMPERATE_SETNG,
				                       NEXT_APPNT_DT,
				                       NEXT_APPNT_TM,
				                       OWNER_CODE,
				                       RESULT_CUST_NAME,
				                       RESULT_MOBILE_NO,
				                       RESULT_RPT_EMAIL_NO,
				                       RESULT_ACEPT_NAME,
				                       SGN_DT,
						              ROW_NUMBER() OVER(PARTITION BY SALES_ORD_ID ORDER BY SCHDUL_ID DESC) AS DUM_SEQ
						        FROM SVC0006D 
						      ) SAL06D 
						      WHERE DUM_SEQ = 1 ) K
						  , ORG0001D L
						  , SYS0026M M
						  , SAL0024D N
						  , SAL0074D O
						  , SYS0013M P
						  , SAL0023D Q
						  , (SELECT * FROM
						      (
						        SELECT SRV_SALES_ORD_ID, SRV_DUR, SRV_EXPR_DT,
						              ROW_NUMBER() OVER(PARTITION BY SRV_SALES_ORD_ID ORDER BY SRV_EXPR_DT DESC) AS DUM_SEQ
						        FROM SAL0095D 
						      ) SAL95D 
						      WHERE DUM_SEQ = 1 ) R
						  , SAL0071D S
						WHERE A.SALES_ORD_ID = B.SALES_ORD_ID
						  AND B.SALES_ORD_ID = C.SALES_ORD_ID
						  AND B.PROMO_ID = D.PROMO_ID(+)
						  AND B.CUST_ID = E.CUST_ID(+)
						  AND B.CUST_ID = F.CUST_ID(+)
						  AND B.CUST_ID = G.CUST_ID(+)
						  AND B.SALES_ORD_ID = H.SALES_ORD_ID
						  AND B.SALES_ORD_ID = I.SALES_ORD_ID
						  AND I.INSTALL_ENTRY_ID = J.ENTRY_ID
						  AND A.SCHDUL_ID = K.SCHDUL_ID(+)
						  AND A.CODY_ID = L.MEM_ID
						  AND C.ITM_STK_ID = M.STK_ID
						  AND B.CUST_BILL_ID = N.CUST_BILL_ID(+)
						  AND B.SALES_ORD_ID = O.SALES_ORD_ID(+)
						  AND O.MODE_ID = P.CODE_ID(+)
						  AND B.CUST_ADD_ID = Q.CUST_ADD_ID
						  AND B.SALES_ORD_ID = R.SRV_SALES_ORD_ID
						  AND B.SALES_ORD_ID = S.SALES_ORD_ID(+)
						  AND L.MEM_CODE = #{userId}
						  AND A.YEAR  = TO_CHAR(to_date(#{requestDate}  ,'YYYY/MM'),'YYYY')
						  AND A.MONTH = TO_CHAR(to_date(#{requestDate}  ,'YYYY/MM'),'MM')
						  ORDER BY A.NO
     </select>



    <select id="getAfterServiceJobList" parameterType="Map" resultType="egovMap">

<!-- cyc 2017 nov 17 -->
      <!--               select *
        from (
          SELECT ROW_NUMBER() OVER(PARTITION BY scp.SRV_config_ID ORDER BY srv_prd_expr_dt DESC) rn,
                            scp.srv_prd_expr_dt,
                                   som.SALES_ORD_NO AS sales_Order_No,
                                   ae.AS_NO AS service_No,
                                    cust.NAME AS cust_Name,
                                    ae.AS_STUS_ID AS job_Status,
                                    to_char(ae.AS_APPNT_DT,'YYYYMMDD') AS appointment_Date,
                                    replace(substr(ae.AS_APPNT_TM, 0,5 ),':')  AS appointment_Time,
                                    TO_CHAR (ae.AS_APPNT_DT, 'YYYY') as   plan_Year,
                                    TO_CHAR (ae.AS_APPNT_DT, 'MM') as plan_Month,
                                    ae.AS_SESION_CODE AS job_Session,
                                    cust.TYPE_ID as customer_Type,
                                    som.CUST_ID AS customer_Id,
                                    custAdd.ADDR_DTL AS install_Address,
                                    custCnt.TEL_M1 AS handphone_Tel,
                                    custCnt.TEL_R AS home_Tel,
                                    custCnt.TEL_O AS office_Tel,
                                    cust.EMAIL AS mail_Address,
                                     cust.CUST_VA_NO AS customer_Va_No,
                                    cbm.CUST_BILL_PAY_REF_NO1 AS customer_Jom_Pay_Ref_No,
                                    '' AS image_Url,
                                    stk.STK_DESC AS product_Name,
                                    stk.STK_CODE AS product_Code,
                                    FN_GET_COMMCD(10, som.APP_TYPE_ID) as app_Type,
                                    (select PROMO_DESC
                                       from SAL0017D
                                       where 1=1
                                       and promo_id =  som.PROMO_ID)  AS sales_Promotion,
                                    FN_GET_COMMCD(24, ae.AS_REQSTER_TYPE_ID) as requestor,
                                    ae.AS_REM_REQSTER_CNTC AS requestor_Contact,
                                    scp.SRV_prd_DUR AS contract_Duration,
                                    som.MTH_RENT_AMT AS monthly_Rental_Fees,
                                    som.TOT_AMT AS registration_Fees,
                                    to_char(scp.SRV_prd_EXPR_DT,'YYYYMMDD') AS Membership_Contract_Expiry,
                                    rs.STUS_CODE_ID AS rental_Status,
                                    brch.CODE AS dsc_Code,
                                    arm.AS_WORKMNSH AS labour_Charge,
                                    arm.AS_DEFECT_TYPE_ID AS defect_Type_Id,
                                    arm.AS_DEFECT_GRP_ID AS defect_Group_Id,
                                    arm.AS_DEFECT_ID AS defect_Id,
                                    arm.AS_DEFECT_PART_GRP_ID AS defect_Part_Group_Id,
                                    arm.AS_DEFECT_PART_ID AS defect_Part_Id,
                                    arm.AS_DEFECT_DTL_RESN_ID AS defect_Detail_Reason_Id,
                                    arm.AS_SLUTN_RESN_ID AS solution_Reason_Id,
                                     arm.AS_RESULT_REM AS result_Remark,
                                    cust.NAME AS result_Cust_Name,
                                    arm.AS_RESULT_MOBILE_ID AS resultIc_Mobile_No,
                                    arm.AS_MALFUNC_ID AS malfunction_Code,
                                    arm.AS_MALFUNC_RESN_ID AS malfunction_Reason_Code,
                                    arm.AS_FAIL_RESN_ID AS failReason_Code,
                                    mb.MEM_CODE AS settled_By,
                                    to_char(arm.AS_SETL_DT,'YYYYMMDD') AS settled_Date,
                                    REPLACE (SUBSTR (arm.AS_SETL_TM, 0, 5), ':') AS settled_Time,
                                    arm.AS_REN_COLCT_ID AS ren_Collection_Id,
                                    arm.AS_RESULT_NO AS asr_No,
                                    arm.AS_FILTER_AMT AS filter_Amount,
                                    arm.AS_ACSRS_AMT AS accessories_Amount,
                                    arm.AS_TOT_AMT AS total_Amount
from SVC0001D ae,
SVC0004D arm,
SAL0001D  som,
SAL0002D sod,
SAL0045D i,
SAL0071D rs,
SAL0090D sc,
SAL0088D scp,
ORG0001D mb,
SYS0005M brch,
SYS0026M stk,
SAL0023D custAdd,
SAL0027D custCnt,
SAL0024D cbm,
SAL0029D cust
where ae.as_id =arm.as_entry_id
and ae.as_so_id = som.sales_ord_id
and som.sales_ord_id = sod.sales_ord_id
and i.sales_ord_id = som.sales_ord_id
and som.sales_ord_id =rs.sales_ord_id (+)
and sc.srv_so_id= som.sales_ord_id
and scp.srv_config_id = sc.srv_config_id
and mb.mem_id = ae.as_mem_id
and brch.brnch_id = ae.as_brnch_id
and stk.stk_id = sod.itm_stk_id
and custadd.cust_add_id = i.add_id
and custcnt.cust_cntc_id = i.cnt_id
and som.cust_bill_id = cbm.cust_bill_id(+)
and cust.cust_id = custCnt.cust_id
                 AND   ae.AS_APPNT_DT BETWEEN ADD_MONTHS(LAST_DAY(to_date(#{requestDate},'YYYYMM'))+1,-1)
                                                AND  LAST_DAY(TO_DATE(#{requestDate},'YYYYMM'))
                 and    mb.mem_code = #{userId}
        )
         WHERE rn = 1 -->


		<!-- select *
		from (
		  SELECT ROW_NUMBER() OVER(PARTITION BY SRV_SALES_ORD_ID ORDER BY srv_expr_dt DESC) rn,
		                    SAL0095D.srv_expr_dt,
		                           SAL0001D.SALES_ORD_NO AS sales_Order_No,
		                           SVC0001D.AS_NO AS service_No,
		                            SAL0029D.NAME AS cust_Name,
		                            SVC0001D.AS_STUS_ID AS job_Status,
		                            to_char(SVC0001D.AS_APPNT_DT,'YYYYMMDD') AS appointment_Date,
		                            replace(substr(SVC0001D.AS_APPNT_TM, 0,5 ),':')  AS appointment_Time,
		                            TO_CHAR (SVC0001D.AS_APPNT_DT, 'YYYY') as   plan_Year,
                                    TO_CHAR (SVC0001D.AS_APPNT_DT, 'MM') as plan_Month,
		                            SVC0001D.AS_SESION_CODE AS job_Session,
		                            SAL0029D.TYPE_ID as customer_Type,
		                            SAL0001D.CUST_ID AS customer_Id,
		                            SAL0023D.ADDR_DTL AS install_Address,
		                            SAL0027D.TEL_M1 AS handphone_Tel,
		                            SAL0027D.TEL_R AS home_Tel,
		                            SAL0027D.TEL_O AS office_Tel,
		                            SAL0029D.EMAIL AS mail_Address,
		                             SAL0029D.CUST_VA_NO AS customer_Va_No,
		                            SAL0024D.CUST_BILL_PAY_REF_NO1 AS customer_Jom_Pay_Ref_No,
		                            '' AS image_Url,
		                            SYS0026M.STK_DESC AS product_Name,
		                            SYS0026M.STK_CODE AS product_Code,
		                            FN_GET_COMMCD(10, SAL0001D.APP_TYPE_ID) as app_Type,
		                            (select PROMO_DESC
		                               from SAL0017D
		                               where 1=1
		                               and promo_id =  SAL0001D.PROMO_ID)  AS sales_Promotion,
		                            FN_GET_COMMCD(24, SVC0001D.AS_REQSTER_TYPE_ID) as requestor,
		                            SVC0001D.AS_REM_REQSTER_CNTC AS requestor_Contact,
		                            SAL0095D.SRV_DUR AS contract_Duration,
		                            SAL0001D.MTH_RENT_AMT AS monthly_Rental_Fees,
		                            SAL0001D.TOT_AMT AS registration_Fees,
		                            to_char(SAL0095D.SRV_EXPR_DT,'YYYYMMDD') AS Membership_Contract_Expiry,
		                            SAL0071D.STUS_CODE_ID AS rental_Status,
		                            SYS0005M.CODE AS dsc_Code,
		                            SVC0004D.AS_WORKMNSH AS labour_Charge,
		                            SVC0004D.AS_DEFECT_TYPE_ID AS defect_Type_Id,
		                            SVC0004D.AS_DEFECT_GRP_ID AS defect_Group_Id,
		                            SVC0004D.AS_DEFECT_ID AS defect_Id,
		                            SVC0004D.AS_DEFECT_PART_GRP_ID AS defect_Part_Group_Id,
		                            SVC0004D.AS_DEFECT_PART_ID AS defect_Part_Id,
		                            SVC0004D.AS_DEFECT_DTL_RESN_ID AS defect_Detail_Reason_Id,
		                            SVC0004D.AS_SLUTN_RESN_ID AS solution_Reason_Id,
		                             SVC0004D.AS_RESULT_REM AS result_Remark,
		                            SAL0029D.NAME AS result_Cust_Name,
		                            SVC0004D.AS_RESULT_MOBILE_ID AS resultIc_Mobile_No,
		                            SVC0004D.AS_MALFUNC_ID AS malfunction_Code,
		                            SVC0004D.AS_MALFUNC_RESN_ID AS malfunction_Reason_Code,
		                            SVC0004D.AS_FAIL_RESN_ID AS failReason_Code,
		                            ORG0001D.MEM_CODE AS settled_By,
		                            to_char(SVC0004D.AS_SETL_DT,'YYYYMMDD') AS settled_Date,
		                            REPLACE (SUBSTR (SVC0004D.AS_SETL_TM, 0, 5), ':') AS settled_Time,
		                            SVC0004D.AS_REN_COLCT_ID AS ren_Collection_Id,
		                            SVC0004D.AS_RESULT_NO AS asr_No,
		                            SVC0004D.AS_FILTER_AMT AS filter_Amount,
		                            SVC0004D.AS_ACSRS_AMT AS accessories_Amount,
		                            SVC0004D.AS_TOT_AMT AS total_Amount
								    FROM SAL0001D,
								         SAL0002D,
								         SAL0023D,
								         SAL0024D,
								         SAL0027D,
								         SAL0029D,
								         SAL0045D,
								         SAL0071D,
								         SAL0095D,
								         SVC0001D,
								         SVC0004D,
								         ORG0001D,
								         SYS0005M,
								         SYS0026M
		   WHERE     SAL0001D.CUST_ADD_ID = SAL0023D.CUST_ADD_ID
		         AND SAL0001D.CUST_BILL_ID = SAL0024D.CUST_BILL_ID
		         AND SAL0001D.CUST_ID = SAL0024D.CUST_BILL_CUST_ID
		         AND SAL0001D.CUST_ID = SAL0027D.CUST_ID
		         AND SAL0001D.CUST_CNT_ID = SAL0027D.CUST_CNTC_ID
		         AND SAL0001D.CUST_ID = SAL0029D.CUST_ID
		         AND SAL0001D.SALES_ORD_ID = SAL0045D.SALES_ORD_ID
		         AND SAL0001D.SALES_ORD_ID = SAL0095D.SRV_SALES_ORD_ID
		         AND SAL0001D.SALES_ORD_ID = SVC0001D.AS_SO_ID
		         AND SAL0001D.SALES_ORD_ID = SAL0002D.SALES_ORD_ID
		         AND SVC0001D.AS_ID = SVC0004D.AS_ENTRY_ID(+)
		         AND SVC0001D.AS_SO_ID = SAL0045D.SALES_ORD_ID
		         AND SAL0002D.ITM_STK_ID = SYS0026M.STK_ID
		         AND SAL0071D.SALES_ORD_ID = SAL0001D.SALES_ORD_ID
		         AND   ORG0001D.MEM_ID       = SVC0001D.as_mem_id
		         AND ORG0001D.BRNCH = SYS0005M.BRNCH_ID
                 AND   SVC0001D.AS_APPNT_DT BETWEEN ADD_MONTHS(LAST_DAY(to_date(#{requestDate},'YYYYMM'))+1,-1)
                                                AND  LAST_DAY(TO_DATE(#{requestDate},'YYYYMM'))
		         and    ORG0001D.mem_code = #{userId}
		)
		 WHERE rn = 1
 -->

				select  *
				from (
                    SELECT  ROW_NUMBER() OVER(PARTITION BY SAL0001D.SALES_ORD_NO ,SVC0001D.AS_NO  ORDER BY SVC0004D.AS_RESULT_ID DESC) rn,
                            SAL0001D.SALES_ORD_NO AS sales_Order_No,
                            SVC0001D.AS_NO AS service_No,
                            SAL0029D.NAME AS cust_Name,
                            SVC0001D.AS_STUS_ID AS job_Status,
                            to_char(SVC0001D.AS_APPNT_DT,'YYYYMMDD') AS appointment_Date,
                            <!-- replace(substr(SVC0001D.AS_APPNT_TM, 0,5 ),':')  AS appointment_Time, -->
                           case when SVC0001D.AS_APPNT_TM is null
			                    then decode(SVC0001D.AS_SESION_CODE, 'M', '1000','A','1400','E','1900','O','2000')
			                    else  to_char(REPLACE (SUBSTR (SVC0001D.AS_APPNT_TM, 0, 5), ':'))
			                 end appointment_Time,
                            to_char(SVC0001D.AS_APPNT_DT,'YYYY') AS plan_Year,
                            to_char(SVC0001D.AS_APPNT_DT,'MM') AS plan_Month,
                            SVC0001D.AS_SESION_CODE AS job_Session,
                            SAL0001D.CUST_ID AS customer_Id,
                            SAL0023D.ADDR_DTL AS install_Address,
                            SAL0027D.TEL_M1 AS handphone_Tel,
                            SAL0027D.TEL_R AS home_Tel,
                            SAL0027D.TEL_O AS office_Tel,
                            SAL0029D.EMAIL AS mail_Address,
                            SAL0029D.CUST_VA_NO AS customer_Va_No,
                            SAL0024D.CUST_BILL_PAY_REF_NO1 AS customer_Jom_Pay_Ref_No,
                            '' AS image_Url,
                            SYS0026M.STK_DESC AS product_Name,
                            SYS0026M.STK_CODE AS product_Code,
                            FN_GET_COMMCD(10, SAL0001D.APP_TYPE_ID) as app_Type,
                             (select PROMO_DESC
                               from SAL0017D
                               where 1=1
                               and promo_id =  SAL0001D.PROMO_ID)  AS sales_Promotion,
                            FN_GET_COMMCD(24, SVC0001D.AS_REQSTER_TYPE_ID) as requestor,
                            SVC0001D.AS_REM_REQSTER_CNTC AS requestor_Contact,
                            SAL0095D.SRV_DUR AS contract_Duration,
                          SAL0001D.MTH_RENT_AMT AS monthly_Rental_Fees,
                               SAL0001D.TOT_AMT AS registration_Fees,
                            SAL0022D.CUST_ACC_BANK_ID AS bank_Code,
                            SAL0022D.CUST_ACC_NO AS card_Account_No,
                            SAL0047D.SIRIM_NO AS sirim_No,
                            SAL0047D.SERIAL_NO AS serial_No,
                            to_char(SAL0095D.SRV_EXPR_DT,'YYYYMMDD') AS Membership_Contract_Expiry,
                            SAL0071D.STUS_CODE_ID AS rental_Status,
                            SYS0005M.CODE AS dsc_Code,
                            to_char(SAL0047D.INSTALL_DT,'YYYYMMDD') AS installation_Date,
                            SVC0004D.AS_WORKMNSH AS labour_Charge,
                            SVC0004D.AS_DEFECT_TYPE_ID AS defect_Type_Id,
                            SVC0004D.AS_DEFECT_GRP_ID AS defect_Group_Id,
                            SVC0004D.AS_DEFECT_ID AS defect_Id,
                            SVC0004D.AS_DEFECT_PART_GRP_ID AS defect_Part_Group_Id,
                            SVC0004D.AS_DEFECT_PART_ID AS defect_Part_Id,
                            SVC0004D.AS_DEFECT_DTL_RESN_ID AS defect_Detail_Reason_Id,
                            SVC0004D.AS_SLUTN_RESN_ID AS solution_Reason_Id,
                            SVC0004D.AS_RESULT_REM AS result_Remark,
                            SAL0029D.NAME AS result_Cust_Name,
                            SVC0004D.AS_RESULT_MOBILE_ID AS resultIc_Mobile_No,
                            SVC0004D.AS_MALFUNC_ID AS malfunction_Code,
                            SVC0004D.AS_MALFUNC_RESN_ID AS malfunction_Reason_Code,
                            SVC0004D.AS_FAIL_RESN_ID AS failReason_Code,
                            ORG0001D.MEM_CODE AS settled_By,
                            to_char(SVC0004D.AS_SETL_DT,'YYYYMMDD') AS settled_Date,
                            REPLACE (SUBSTR (SVC0004D.AS_SETL_TM, 0, 5), ':') AS settled_Time,
                            SVC0004D.AS_REN_COLCT_ID AS ren_Collection_Id,
                            SVC0004D.AS_RESULT_NO AS asr_No,
                            SVC0004D.AS_FILTER_AMT AS filter_Amount,
                            SVC0004D.AS_ACSRS_AMT AS accessories_Amount,
                            SVC0004D.AS_TOT_AMT AS total_Amount,
			               to_char(SVC0004D.IN_HUSE_REPAIR_REM) AS in_House_Repair_Remark,
			               to_char(SVC0004D.IN_HUSE_REPAIR_REPLACE_YN)  AS in_House_Repair_Replacement_YN,
			               TO_CHAR(SVC0004D.IN_HUSE_REPAIR_PROMIS_DT, 'YYYYMMDD')   AS in_House_Repair_Promised_Date,
			               SVC0004D.IN_HUSE_REPAIR_GRP_CODE AS inHouseRepairProductGroupCode,
			               to_char(SVC0004D.IN_HUSE_REPAIR_PRODUCT_CODE) AS in_House_Repair_Product_Code,
			               to_char(SVC0004D.IN_HUSE_REPAIR_SERIAL_NO) AS in_House_Repair_Serial_No  ,
			               to_char(SVC0004D.RESULT_REP_EMAIL_NO) AS result_Report_Email_No,
			               to_char(SVC0004D.RESULT_ACEPT_NAME) AS result_Acceptance_Name
                FROM    SAL0001D,
                            SAL0002D,
                            SAL0022D,
                            SAL0023D,
                            SAL0024D,
                            SAL0027D,
                            SAL0029D,
                            SAL0045D,
                            SAL0047D,
                            SAL0071D,
                            SAL0095D,
                            SVC0001D,
                            SVC0004D,
                            ORG0001D,
                            SYS0005M,
                            SYS0026M
				  WHERE SVC0001D.AS_MEM_ID = ORG0001D.MEM_ID
					AND SAL0001D.SALES_ORD_ID = SAL0002D.SALES_ORD_ID
					AND SAL0001D.SALES_ORD_ID = SVC0001D.AS_SO_ID
					AND ORG0001D.MEM_CODE = #{userId} 
					AND SAL0001D.SALES_ORD_ID = SAL0002D.SALES_ORD_ID
					and SAL0001D.CUST_ID = SAL0022D.CUST_ID(+)
					AND SAL0001D.CUST_ADD_ID = SAL0023D.CUST_ADD_ID
					AND SAL0001D.CUST_BILL_ID = SAL0024D.CUST_BILL_ID(+)
					AND SAL0001D.CUST_ID = SAL0024D.CUST_BILL_CUST_ID(+)
					AND SAL0001D.CUST_ID = SAL0027D.CUST_ID
					AND SAL0001D.CUST_CNT_ID = SAL0027D.CUST_CNTC_ID
					AND SAL0001D.CUST_ID = SAL0029D.CUST_ID
					AND SAL0001D.SALES_ORD_ID = SAL0045D.SALES_ORD_ID
					AND SAL0045D.INSTALL_ID = SAL0047D.ENTRY_ID(+)
					<!-- AND ORG0001D.MEM_ID = SAL0047D.CT_ID -->
					AND SAL0071D.SALES_ORD_ID(+) = SAL0001D.SALES_ORD_ID
					AND SAL0001D.SALES_ORD_ID = SAL0095D.SRV_SALES_ORD_ID
					AND SAL0095D.SRV_MEM_SALES_MEM_ID=0<!-- MUST CHECK -->
					AND SVC0001D.AS_ID = SVC0004D.AS_ENTRY_ID(+)
					AND ORG0001D.BRNCH = SYS0005M.BRNCH_ID
					AND SAL0002D.ITM_STK_ID = SYS0026M.STK_ID
				    AND   SVC0001D.AS_APPNT_DT BETWEEN ADD_MONTHS(LAST_DAY(to_date(#{requestDate},'YYYYMM'))+1,-1)
				                                                     AND  LAST_DAY(TO_DATE(#{requestDate},'YYYYMM'))
				       )
				where 1=1
				and rn = 1



<!-- 20171115 전명환 선생 변경
 				SELECT SAL0001D.SALES_ORD_NO AS sales_Order_No,
				            SVC0001D.AS_NO AS service_No,
				            SAL0029D.NAME AS cust_Name,
				            SVC0001D.AS_STUS_ID AS job_Status,
				            to_char(SVC0001D.AS_APPNT_DT,'YYYYMMDD') AS appointment_Date,
				            replace(substr(SVC0001D.AS_APPNT_TM, 0,5 ),':')  AS appointment_Time,
				            SVC0001D.AS_APPNT_TM AS appointment_Time,
				            SVC0001D.AS_SESION_CODE AS job_Session,
				            SAL0029D.TYPE_ID AS customer_Type,
				            FN_GET_COMMCD(8,  SAL0029D.TYPE_ID) as customer_Type,
				            SAL0001D.CUST_ID AS customer_Id,
				            SAL0023D.ADDR_DTL AS install_Address,
				            SAL0027D.TEL_M1 AS handphone_Tel,
				            SAL0027D.TEL_R AS home_Tel,
				            SAL0027D.TEL_O AS office_Tel,
				            SAL0029D.EMAIL AS mail_Address,
				            SAL0029D.CUST_VA_NO AS customer_Va_No,
				            SAL0024D.CUST_BILL_PAY_REF_NO1 AS customer_Jom_Pay_Ref_No,
				            SYS0027M.IMG_URL AS image_Url,
				            SYS0026M.STK_DESC AS product_Name,
				            SYS0026M.STK_CODE AS product_Code,
				            SAL0001D.APP_TYPE_ID AS app_Type,
                            FN_GET_COMMCD(10, SAL0001D.APP_TYPE_ID) as app_Type,
                            (select PROMO_DESC
						       from SAL0017D
						       where 1=1
						       and promo_id =  SAL0001D.PROMO_ID)  AS sales_Promotion,
				            SAL0001D.PROMO_ID AS sales_Promotion,
                            SVC0001D.AS_REQSTER_TYPE_ID AS requestor,
				            FN_GET_COMMCD(24, SVC0001D.AS_REQSTER_TYPE_ID) as requestor,
				            SVC0001D.AS_REM_REQSTER_CNTC AS requestor_Contact,
				            SAL0095D.SRV_DUR AS contract_Duration,
				            SAL0001D.MTH_RENT_AMT AS monthly_Rental_Fees,
				            SAL0001D.TOT_AMT AS registration_Fees,
				            SAL0022D.CUST_ACC_BANK_ID AS bank_Code,
 				            SAL0022D.CUST_ACC_NO AS card_Account_No,
				            SAL0047D.SIRIM_NO AS sirim_No,
				            SAL0047D.SERIAL_NO AS serial_No,
				            to_char(SAL0095D.SRV_EXPR_DT,'YYYYMMDD') AS Membership_Contract_Expiry,
                            SAL0071D.STUS_CODE_ID AS rental_Status,
				            SYS0005M.CODE AS dsc_Code,
				            to_char(SAL0047D.INSTALL_DT,'YYYYMMDD') AS installation_Date,
				            SVC0004D.AS_WORKMNSH AS labour_Charge,
				            SVC0004D.AS_DEFECT_TYPE_ID AS defect_Type_Id,
				            SVC0004D.AS_DEFECT_GRP_ID AS defect_Group_Id,
				            SVC0004D.AS_DEFECT_ID AS defect_Id,
				            SVC0004D.AS_DEFECT_PART_GRP_ID AS defect_Part_Group_Id,
				            SVC0004D.AS_DEFECT_PART_ID AS defect_Part_Id,


				            SVC0004D.AS_DEFECT_DTL_RESN_ID AS defect_Detail_Reason_Id,
				            SVC0004D.AS_SLUTN_RESN_ID AS solution_Reason_Id,
 				            SVC0004D.AS_RESULT_REM AS result_Remark,
				            SAL0029D.NAME AS result_Cust_Name,
				            SVC0004D.AS_RESULT_MOBILE_ID AS resultIc_Mobile_No,
				            SVC0004D.AS_MALFUNC_ID AS malfunction_Code,
				            SVC0004D.AS_MALFUNC_RESN_ID AS malfunction_Reason_Code,
				            SVC0004D.AS_FAIL_RESN_ID AS failReason_Code,
				            SVC0004D.AS_CT_ID AS settled_By,
				            ORG0001D.MEM_CODE AS settle_By,
				            to_char(SVC0004D.AS_SETL_DT,'YYYYMMDD') AS settled_Date,
				            SVC0004D.AS_SETL_TM AS settled_Time,
				            REPLACE (SUBSTR (SVC0004D.AS_SETL_TM, 0, 5), ':') AS settled_Time,
				            SVC0004D.AS_REN_COLCT_ID AS ren_Collection_Id,
				            SVC0004D.AS_RESULT_NO AS asr_No,
				            SVC0004D.AS_FILTER_AMT AS filter_Amount,
				            SVC0004D.AS_ACSRS_AMT AS accessories_Amount,
				            SVC0004D.AS_TOT_AMT AS total_Amount
				FROM    SAL0001D,
				            SAL0002D,
				            SAL0022D,
				            SAL0023D,
				            SAL0024D,
				            SAL0027D,
				            SAL0029D,
				            SAL0045D,
				            SAL0047D,
				            SAL0071D,
				            SAL0095D,
				            SVC0001D,
				            SVC0004D,
				            ORG0001D,
				            SYS0005M,
				            SYS0026M,
				            SYS0027M
				WHERE SAL0001D.CUST_ID      = SAL0022D.CUST_ID
				AND   SAL0001D.CUST_ADD_ID  = SAL0023D.CUST_ADD_ID
				AND   SAL0022D.CUST_ID      = SAL0023D.CUST_ID
				AND   SAL0001D.CUST_BILL_ID = SAL0024D.CUST_BILL_ID
				AND   SAL0001D.CUST_ID      = SAL0024D.CUST_BILL_CUST_ID
				AND   SAL0001D.CUST_ID      = SAL0027D.CUST_ID
				AND   SAL0001D.CUST_CNT_ID  = SAL0027D.CUST_CNTC_ID
				AND   SAL0001D.CUST_ID      = SAL0029D.CUST_ID
				AND   SAL0001D.SALES_ORD_ID = SAL0045D.SALES_ORD_ID
				AND   SAL0001D.SALES_ORD_ID = SVC0004D.AS_SO_ID
				AND   SAL0001D.SALES_ORD_ID = SAL0095D.SRV_SALES_ORD_ID
				AND   SAL0001D.SALES_ORD_ID = SVC0001D.AS_SO_ID
				AND   SVC0001D.AS_ID        = SVC0004D.AS_ENTRY_ID
				AND   SAL0001D.SALES_ORD_ID = SAL0002D.SALES_ORD_ID
				AND   SAL0045D.INSTALL_ID   = SAL0047D.ENTRY_ID
				AND   SAL0002D.ITM_STK_ID   = SYS0026M.STK_ID
				AND   SAL0071D.SALES_ORD_ID = SAL0001D.SALES_ORD_ID
				AND   SYS0026M.STK_ID     = SYS0027M.STK_ID
				AND   ORG0001D.MEM_ID       = SVC0004D.AS_CT_ID
				AND   ORG0001D.BRNCH        = SYS0005M.BRNCH_ID
				AND   SVC0001D.AS_APPNT_DT BETWEEN TO_DATE(#{requestDate}, 'YYYYMMDD') AND TO_DATE(#{requestDate}, 'YYYYMMDD')
				AND   SVC0001D.AS_APPNT_DT BETWEEN ADD_MONTHS(LAST_DAY(to_date(#{requestDate},'YYYYMM'))+1,-1)
				                                                 AND  LAST_DAY(TO_DATE(#{requestDate},'YYYYMM'))
				and    ORG0001D.mem_code = #{userId}
				ORDER BY AS_APPNT_DT -->


     </select>


             <select id="getHsBasic" parameterType="Map" resultType="egovMap">

                            SELECT  distinct Project2.No No  ,
                                        Project2.HS_DATE HS_DATE  ,
                                        Project2.STUS_CODE_ID STUS_CODE_ID  ,
                                        Project2.Code Code  ,
                                        Project2.SALES_ORD_NO SALES_ORD_NO  ,
                                        Project2.ASSIGN_CODY C5  ,
                                        Project2.ACTION_CODY as ACTN_MEM_ID,
                                        Project2.MEM_ID ,
                                        Project2.Name Name  ,
                                        Project2.cust_id,
                                        Project2.cody_status_nm,
                                        Project2.BRNCH_ID as BRNCH_ID,
                                        Project2.SCHDUL_ID SCHDUL_ID   ,
                                        Project2.SALES_ORD_ID,
                                        Project2.branch_cd,
                                        Project2.CODY_MANGR_USER_ID,
                                        Project2.MEM_CODE,
                                        Project2.sal_mem_id
                         from(       SELECT HS.NO AS NO,
                                                   HS.STUS_CODE_ID as STUS_CODE_ID,
                                                   HS.MONTH || '/' || HS.YEAR as HS_DATE ,
                                                   HS.MONTH,
                                                   HS.YEAR,
                                                   ST.CODE,
                                                   HR.NO AS Result,
                                                   SO.SALES_ORD_NO,
                                                   AP.CODE AS AppType,
                                                   CU.NAME,
                                                   CD.MEM_CODE AS ASSIGN_CODY,
                                                   CD.MEM_ID,
                                                   AC.MEM_CODE AS ACTION_CODY,
                                                   MG.STATE,
                                                   MG.AREA,
                                                   cu.CUST_ID as cust_id,
                                                (select code
                                                   from SYS0038M
                                                   where 1=1
                                                   and stus_code_id = cu.STUS_CODE_ID ) as cody_status_nm,
                                                   SO.BRNCH_ID as BRNCH_ID,
                                                   HS.SCHDUL_ID SCHDUL_ID  ,
                                                    SO.SALES_ORD_ID,
                                                   BR.CODE as branch_cd,
                                                   MG.CODY_MANGR_USER_ID  ,
                                                   ( select  MEM_CODE
                                                    from ORG0001D
                                                    where mem_id =  SO.MEM_ID) as MEM_CODE,
                                                    SO.MEM_ID as sal_mem_id
                                              FROM SVC0008D HS
                                                   INNER JOIN SAL0001D SO
                                                      ON SO.SALES_ORD_ID = HS.SALES_ORD_ID
                                                   INNER JOIN SAL0023D AD
                                                      ON AD.CUST_ADD_ID = SO.CUST_ADD_ID
                                                   INNER JOIN SYS0064M MG
                                                      ON MG.AREA_ID = AD.AREA_ID
                                                   left JOIN SVC0006D HR
                                                      ON HR.SCHDUL_ID = HS.SCHDUL_ID
                                                   INNER JOIN SYS0038M ST
                                                      ON ST.STUS_CODE_ID = HS.STUS_CODE_ID
                                                   INNER JOIN SYS0013M AP
                                                      ON AP.CODE_ID = SO.APP_TYPE_ID
                                                   INNER JOIN SAL0029D CU
                                                      ON CU.CUST_ID = SO.CUST_ID
                                                   INNER JOIN ORG0001D CD
                                                      ON CD.MEM_ID = HS.CODY_ID
                                                   left JOIN ORG0001D AC
                                                      ON AC.MEM_ID = HS.ACTN_MEM_ID
                                                   LEFT JOIN SYS0005M BR
                                                      ON BR.CODE = MG.CODY_BRNCH_CODE
                                             WHERE 1=1
                                                    AND SO.SALES_ORD_NO = #{salesOrderNo}
                                                     and HS.no = #{serviceNo}
                        )Project2
          </select>
          

    <select id="getAsBasic" parameterType="Map" resultType="egovMap">
                    select    Extent4.SALES_ORD_NO
                        ,Extent4.sales_ord_id
                        ,Extent1.as_id
                        ,Extent1.as_no
                        ,Extent7.AS_RESULT_ID
                        ,Extent7.AS_RESULT_NO
                        ,Extent7.AS_ENTRY_ID
                        ,Extent1.AS_SO_ID
                        ,Extent7.AS_CT_ID
                        ,Extent7.AS_SETL_DT
                        ,Extent7.AS_SETL_TM
                        ,Extent7.AS_RESULT_STUS_ID
                        ,Extent7.AS_FAIL_RESN_ID
                        ,Extent7.AS_REN_COLCT_ID
                        ,Extent7.AS_CMMS
                        ,Extent7.AS_BRNCH_ID
                        ,Extent7.AS_WH_ID
                        ,Extent7.AS_RESULT_REM
                        ,Extent7.AS_RESULT_CRT_DT
                        ,Extent7.AS_RESULT_CRT_USER_ID
                        ,Extent7.AS_MALFUNC_ID
                        ,Extent7.AS_MALFUNC_RESN_ID
                        ,Extent7.AS_DEFECT_TYPE_ID
                        ,Extent7.AS_DEFECT_GRP_ID
                        ,Extent7.AS_DEFECT_ID
                        ,Extent7.AS_DEFECT_PART_GRP_ID
                        ,Extent7.AS_DEFECT_PART_ID
                        ,Extent7.AS_DEFECT_DTL_RESN_ID
                        ,Extent7.AS_SLUTN_RESN_ID
                        ,Extent7.AS_WORKMNSH
				        ,nvl(Extent7.AS_FILTER_AMT,0) as AS_FILTER_AMT
				        ,nvl(Extent7.AS_ACSRS_AMT,0) as AS_ACSRS_AMT
				        ,nvl(Extent7.AS_TOT_AMT,0) as AS_TOT_AMT
                        ,Extent7.AS_RESULT_IS_SYNCH
                        ,Extent7.AS_RCALL
                        ,Extent7.AS_RESULT_STOCK_USE
                        ,Extent7.AS_RESULT_TYPE_ID
                        ,Extent7.AS_RESULT_IS_CURR
                        ,Extent7.AS_RESULT_MTCH_ID
                        ,Extent7.AS_RESULT_NO_ERR
                        ,Extent7.AS_RESULT_UPD_DT
                        ,Extent7.AS_RESULT_UPD_USER_ID
                        ,Extent7.AS_ENTRY_POINT
                        ,Extent7.AS_WORKMNSH_TAX_CODE_ID
                        ,Extent7.AS_WORKMNSH_TXS
                        ,Extent7.AS_RESULT_MOBILE_ID
                        ,Extent7.APPNT_DT
                        ,Extent7.APPNT_TM
                        ,Extent7.IN_HUSE_REPAIR_REM
                        ,Extent7.IN_HUSE_REPAIR_REPLACE_YN
                        ,Extent7.IN_HUSE_REPAIR_PROMIS_DT
                        ,Extent7.IN_HUSE_REPAIR_GRP_CODE
                        ,Extent7.IN_HUSE_REPAIR_PRODUCT_CODE
                        ,Extent7.IN_HUSE_REPAIR_SERIAL_NO
                        ,Extent7.RESULT_CUST_NAME
                        ,Extent7.RESULT_MOBILE_NO
                        ,Extent7.RESULT_REP_EMAIL_NO
                        ,Extent7.RESULT_ACEPT_NAME
                        ,Extent7.SGN_DT
                        ,Extent7.TRNSC_ID
                        ,(  select MEM_ID
                              from ORG0001D
                              where mem_code = #{userId}) as user_id
            from SVC0001D Extent1
                    ,SVC0004D Extent7
                    ,SAL0001D Extent4
            where 1=1
            and Extent1.AS_ID = Extent7.AS_ENTRY_ID(+)
            and Extent1.AS_SO_ID = Extent4.SALES_ORD_ID
            and Extent4.SALES_ORD_NO = #{salesOrderNo}
            and Extent1.as_no = #{serviceNo}
            and rownum = 1

    </select>




   <select id="selectAsBasicInfo" parameterType="Map" resultType="egovMap">
               select   AS_ID
						,AS_NO
						,AS_SO_ID
						,AS_MEM_ID
						,AS_MEM_GRP
						,AS_REQST_DT
						,AS_REQST_TM
<!-- 						,AS_APPNT_DT
						,AS_APPNT_TM      -->
 						,AS_BRNCH_ID
						,AS_MALFUNC_ID
						,AS_MALFUNC_RESN_ID
						,AS_REM_REQSTER
						,AS_REM_REQSTER_CNTC
						,AS_CALLLOG_ID
						,AS_STUS_ID
						,AS_SMS
						,AS_CRT_USER_ID
						,AS_CRT_DT
						,AS_UPD_USER_ID
						,AS_UPD_DT
						,AS_ENTRY_IS_SYNCH
						,AS_ENTRY_IS_EDIT
						,AS_TYPE_ID
						,AS_REQSTER_TYPE_ID
						,AS_IS_BS_WITHIN_30DAYS
						,AS_ALLOW_COMM
						,AS_PREV_MEM_ID
						,AS_REM_ADD_CNTC
						,AS_REM_REQSTER_CNTC_SMS
						,AS_REM_ADD_CNTC_SMS
						,AS_SESION_CODE
						,CALL_MEM
						,REF_REQST
						,PREV_COMP_SVC
						,NEXT_COMP_SVC
						,SIGN_DT_TIME
						,COMP_DT_SEQ
						,DISTANCE
						,FIRST
						,LAST
						,HOME
						,AS_MOBILE_REQST_ID
						,AS_RQST_REM  
            from SVC0001D 
            where 1=1
            and as_no = #{serviceNo}
            and rownum = 1

    </select>
    


    <select id="getInstallationJobList" parameterType="Map" resultType="egovMap">

    SELECT
            SAL0001D.SALES_ORD_NO           AS sales_Order_No,
            SAL0046D.INSTALL_ENTRY_NO       AS service_No,
            SAL0029D.NAME                   AS cust_Name,
            SAL0046D.STUS_CODE_ID           AS job_Status,
            TO_CHAR (SAL0046D.APPNT_DT, 'YYYYMMDD') AS appointment_Date,
	       case when SAL0046D.APPNT_TM is null
	              then decode(SAL0046D.SESION_CODE, 'M', '1000','A','1400','E','1900','O','2000')
	             else  to_char(REPLACE (SUBSTR (SAL0046D.APPNT_TM, 0, 5), ':'))
	       end appointment_Time,            
 <!--            replace(substr(SAL0046D.APPNT_TM, 0,5 ),':')               AS appointment_Time, -->
            TO_CHAR (SAL0046D.INSTALL_DT, 'YYYY') as   plan_Year,
            TO_CHAR (SAL0046D.INSTALL_DT, 'MM') as plan_Month,
            SAL0046D.SESION_CODE            AS job_Session,
            TO_CHAR(SAL0095D.SRV_EXPR_DT,'YYYYMMDD')            AS expiry_Date,
            to_char(SAL0029D.TYPE_ID)       AS customer_Type,
            SAL0001D.CUST_ID                AS customer_Id,
            SYS0064M.POSTCODE               AS postcode,
            SYS0064M.STATE                  AS serviceState,
            SAL0023D.ADDR_DTL               AS install_Address,
            SAL0027D.TEL_M1                 AS handphone_Tel,
            SAL0027D.TEL_R                  AS home_Tel,
            SAL0027D.TEL_O                  AS office_Tel,
            SAL0029D.EMAIL                  AS mail_Address,
            SAL0029D.CUST_VA_NO             AS customer_Va_No,
            SAL0024D.CUST_BILL_PAY_REF_NO1  AS customer_Jom_Pay_Ref_No,
            SYS0027M.IMG_URL                AS image_Url,
            SYS0026M.STK_DESC               AS product_Name,
            SYS0026M.STK_CODE               AS product_Code,
            FN_GET_COMMCD(10,SAL0001D.APP_TYPE_ID)            AS app_Type,
            SAL0001D.PROMO_ID               AS sales_Promotion,
            SAL0095D.SRV_DUR                AS contract_Duration,
            SAL0001D.MTH_RENT_AMT           AS monthly_Rental_Fees,
            SAL0001D.TOT_AMT                AS registration_Fees,
            SAL0022D.CUST_ACC_BANK_ID       AS bank_Code,
            SAL0022D.CUST_ACC_NO            AS card_Account_No,
            SYS0005M.CODE                   AS dsc_Code,
            SAL0047D.SIRIM_NO               AS sirim_No,
            SAL0047D.SERIAL_NO              AS serial_No,
           ORG0001DA.NAME                  AS hp_Name,
           ORG0001DA.TEL_MOBILE            AS hp_Tel,
            ORG0001DA.NAME                  AS smName,
            ORG0001DA.TEL_MOBILE            AS smTel,
            ORG0001DA.NAME                  AS hmName,
           ORG0001DA.TEL_MOBILE           AS hmTel,
            ORG0001D.MEM_CODE               AS settled_By,
            TO_CHAR(SAL0047D.INSTALL_DT,'YYYYMMDD')             AS settled_Date
            FROM
           ORG0001D,
           ORG0001D ORG0001DA,
            ORG0005D,
            SAL0001D,
            SAL0002D,
            SAL0022D,
            SAL0023D,
            SAL0024D,
            SAL0027D,
            SAL0029D,
            SAL0045D,
            SAL0046D,
            SAL0047D,
            SAL0095D,
            SYS0005M,
            SYS0026M,
            SYS0027M,
            SYS0064M
            WHERE SAL0001D.CUST_ID          = SAL0022D.CUST_ID(+)
            AND   SAL0001D.SALES_ORD_ID     = SAL0002D.SALES_ORD_ID
            AND   SAL0001D.CUST_ADD_ID      = SAL0023D.CUST_ADD_ID
            AND   SAL0001D.CUST_BILL_ID     = SAL0024D.CUST_BILL_ID(+)
            AND   SAL0001D.CUST_ID          = SAL0027D.CUST_ID
            AND   SAL0001D.CUST_CNT_ID      = SAL0027D.CUST_CNTC_ID
            AND   SAL0001D.CUST_ID          = SAL0029D.CUST_ID
            AND   SAL0001D.SALES_ORD_ID     = SAL0095D.SRV_SALES_ORD_ID(+)
            AND   SAL0002D.ITM_STK_ID       = SYS0026M.STK_ID
            AND   SYS0026M.STK_ID           = SYS0027M.STK_ID
            AND   SAL0001D.SALES_ORD_ID     = SAL0046D.SALES_ORD_ID
            AND   ORG0001D.MEM_ID           = SAL0046D.CT_ID
            AND   SAL0001D.SALES_ORD_ID     = SAL0045D.SALES_ORD_ID(+)
            AND   SAL0046D.INSTALL_ENTRY_ID = SAL0047D.ENTRY_ID(+)
            AND   ORG0001DA.MEM_ID          = SAL0001D.MEM_ID
            AND   ORG0005D.MEM_ID           = SAL0001D.MEM_ID
            AND   ORG0005D.MEM_ID           = ORG0001DA.MEM_ID
            AND   ORG0001D.BRNCH            = SYS0005M.BRNCH_ID
            AND   SAL0023D.AREA_ID          = SYS0064M.AREA_ID(+)
            AND   SAL0046D.INSTALL_DT BETWEEN ADD_MONTHS(LAST_DAY(to_date(#{requestDate},'YYYYMM'))+1,-1)
                                                 AND  LAST_DAY(TO_DATE(#{requestDate},'YYYYMM'))
            AND ORG0001D.mem_code = #{userId}

            <!--  SELECT
            SAL0001D.SALES_ORD_NO           AS sales_Order_No,
            SAL0046D.INSTALL_ENTRY_NO       AS service_No,
            SAL0029D.NAME                   AS cust_Name,
            SAL0046D.STUS_CODE_ID           AS job_Status,
            TO_CHAR(SAL0047D.APPNT_DT,'YYYYMMDD')               AS appointment_Date,
            replace(substr(SAL0047D.APPNT_TM, 0,5 ),':')               AS appointment_Time,
            SAL0046D.SESION_CODE            AS job_Session,
            TO_CHAR(SAL0095D.SRV_EXPR_DT,'YYYYMMDD')            AS expiry_Date,
            FN_GET_COMMCD(8,SAL0029D.TYPE_ID)               AS customer_Type,
            SAL0001D.CUST_ID                AS customer_Id,
            SYS0064M.POSTCODE               AS postcode,
            SYS0064M.STATE                  AS serviceState,
            SAL0023D.ADDR_DTL               AS install_Address,
            SAL0027D.TEL_M1                 AS handphone_Tel,
            SAL0027D.TEL_R                  AS home_Tel,
            SAL0027D.TEL_O                  AS office_Tel,
            SAL0029D.EMAIL                  AS mail_Address,
            SAL0029D.CUST_VA_NO             AS customer_Va_No,
            SAL0024D.CUST_BILL_PAY_REF_NO1  AS customer_Jom_Pay_Ref_No,
            SYS0027M.IMG_URL                AS image_Url,
            SYS0026M.STK_DESC               AS product_Name,
            SYS0026M.STK_CODE               AS product_Code,
            FN_GET_COMMCD(10,SAL0001D.APP_TYPE_ID)            AS app_Type,
            SAL0001D.PROMO_ID               AS sales_Promotion,
            SAL0095D.SRV_DUR                AS contract_Duration,
            SAL0001D.MTH_RENT_AMT           AS monthly_Rental_Fees,
            SAL0001D.TOT_AMT                AS registration_Fees,
            SAL0022D.CUST_ACC_BANK_ID       AS bank_Code,
            SAL0022D.CUST_ACC_NO            AS card_Account_No,
            SYS0005M.CODE                   AS dsc_Code,
            SAL0047D.SIRIM_NO               AS sirim_No,
            SAL0047D.SERIAL_NO              AS serial_No,
           ORG0001DA.NAME                  AS hp_Name,
           ORG0001DA.TEL_MOBILE            AS hp_Tel,
            ORG0001DA.NAME                  AS smName,
            ORG0001DA.TEL_MOBILE            AS smTel,
            ORG0001DA.NAME                  AS hmName,
           ORG0001DA.TEL_MOBILE           AS hmTel,
            ORG0001D.MEM_CODE               AS settled_By,
            TO_CHAR(SAL0047D.INSTALL_DT,'YYYYMMDD')             AS settled_Date
            FROM
           ORG0001D,
           ORG0001D ORG0001DA,
            ORG0005D,
            SAL0001D,
            SAL0002D,
            SAL0022D,
            SAL0023D,
            SAL0024D,
            SAL0027D,
            SAL0029D,
            SAL0045D,
            SAL0046D,
            SAL0047D,
            SAL0095D,
            SYS0005M,
            SYS0026M,
            SYS0027M,
            SYS0064M
            WHERE SAL0001D.CUST_ID          = SAL0022D.CUST_ID
            AND   SAL0001D.CUST_ADD_ID      = SAL0023D.CUST_ADD_ID
            AND   SAL0022D.CUST_ID          = SAL0023D.CUST_ID
            AND   SAL0001D.CUST_BILL_ID     = SAL0024D.CUST_BILL_ID
            AND   SAL0001D.CUST_ID          = SAL0024D.CUST_BILL_CUST_ID
            AND   SAL0001D.CUST_ID          = SAL0027D.CUST_ID
            AND   SAL0001D.CUST_CNT_ID      = SAL0027D.CUST_CNTC_ID
            AND   SAL0001D.CUST_ID          = SAL0029D.CUST_ID
            AND   SAL0001D.SALES_ORD_ID     = SAL0045D.SALES_ORD_ID
            AND   SAL0001D.SALES_ORD_ID     = SAL0046D.SALES_ORD_ID
            AND   SAL0001D.SALES_ORD_ID     = SAL0002D.SALES_ORD_ID
            AND   SAL0001D.SALES_ORD_ID     = SAL0095D.SRV_SALES_ORD_ID
            AND   SAL0046D.INSTALL_ENTRY_ID = SAL0047D.ENTRY_ID
            AND   SAL0002D.ITM_STK_ID       = SYS0026M.STK_ID
            AND   SYS0026M.STK_ID           = SYS0027M.STK_ID
            AND   ORG0001D.MEM_ID           = SAL0047D.CT_ID
            AND   ORG0001DA.MEM_ID          = SAL0001D.MEM_ID
            AND   ORG0005D.MEM_ID          = SAL0001D.MEM_ID
            AND   ORG0005D.MEM_ID          = ORG0001DA.MEM_ID
            AND   SAL0045D.BRNCH_ID         = SYS0005M.BRNCH_ID
            AND   SAL0023D.AREA_ID          = SYS0064M.AREA_ID(+)
            AND TO_CHAR(SAL0047D.INSTALL_DT,'YYYYMM') = #{requestDate}
            AND ORG0001D.mem_code = #{userId} -->


     </select>





         <select id="getProductRetrunJobList" parameterType="Map" resultType="egovMap">

            SELECT B.SALES_ORD_NO AS salesOrderNo,
                   F.AS_RESULT_NO AS serviceNo,
                   A.NAME,
                   'AS' AS jobType,
                   G.AS_RESULT_STUS_ID AS jobStatus,
                   F.AS_SETL_DT AS appointmentDate,
                   F.AS_SETL_TM AS appointmentTime,
                   D.CODE,
                   C.AS_NO,
                   C.AS_REQST_DT,
                   J.CODE,
                   F.AS_RESULT_NO,
                   H.NAME,
                   B.SALES_ORD_NO,
                   I.CODE APP_TYPE,
                   A.NAME,
                   A.NRIC SVC0004D
              FROM SAL0029D A
                   INNER JOIN SAL0001D B
                      ON B.CUST_ID = A.CUST_ID
                   INNER JOIN SVC0001D C
                      ON C.AS_SO_ID = B.SALES_ORD_ID
                   INNER JOIN SVC0004D F
                      ON F.AS_ENTRY_ID = C.AS_ID
                   INNER JOIN SVC0004D G
                      ON G.AS_RESULT_ID = F.AS_RESULT_ID
                   INNER JOIN SYS0038M C
                      ON C.STUS_CODE_ID = F.AS_RESULT_STUS_ID
                   INNER JOIN SYS0038M J
                      ON J.STUS_CODE_ID = C.AS_STUS_ID
                   INNER JOIN SYS0013M D
                      ON D.CODE_ID = C.AS_TYPE_ID
                   INNER JOIN ORG0001D H
                      ON H.MEM_ID = G.AS_CT_ID
                   INNER JOIN SYS0013M I
                      ON I.CODE_ID = B.APP_TYPE_ID
             WHERE     1 = 1
                 AND C.AS_REQST_DT = TO_DATE ('20170611',    'YYYYMMDD')
<!--                 AND A.CODY_ID = #{userId} -->

     </select>





 	    <select id="heartServiceParts" parameterType="Map" resultType="egovMap">

							SELECT *
							    from (
							        SELECT ROW_NUMBER() OVER(PARTITION BY S01A.SALES_ORD_NO, S08A.NO ,S26A.STK_CODE, S26B.STK_CODE ORDER BY S26B.STK_CODE DESC) rn,
										S01A.SALES_ORD_NO AS sales_Order_No,
										S08A.NO as service_No,
										S08A.YEAR,
										S08A.MONTH,
										S26A.STK_CODE AS product_Code,
										S26B.STK_CODE AS part_Code,
										S26B.STK_DESC as part_Name,
										S87A.SRV_FILTER_STK_ID as part_Id,
										L44A.BOM_COMPNT,
										L44A.COMPNT_QTY as quanity,
<!-- 										S07A.EXCH_REASON_ID, -->
										to_char(S87A.SRV_FILTER_PRV_CHG_DT,'YYYYMMDD') as last_Chg_Date,
										S87A.SRV_FILTER_PRIOD as parts_Period,
										NVL2(L44A.ALTER_ITM_GRP, 'N', 'Y') AS alternative_YN,
										S06A.RESULT_ID,
										S07A.BS_RESULT_PART_ID,
										S07A.BS_RESULT_PART_QTY,
										CASE WHEN S07A.BS_RESULT_PART_QTY BETWEEN '1' AND '100' THEN 'Y' ELSE 'N'
										END as chg_YN,
										null as ex_Chgid ,
						                null as chg_Qty,
						                null as last_Chg_Time,
						                null as alternative_Used_YN,
						                null as alternative_Filter_Code,
						                null as alternative_Filter_Id,
						                null as alternative_Filter_Name,
						                null as filterBarcd_Chk_YN,
						                null as filterBarcd_Serial_No ,
						                S90A.SRV_CODY_ID,
				                        (SELECT MEM_CODE
				                           FROM ORG0001D ME
				                          WHERE 1 = 1 AND ME.MEM_ID = S90A.SRV_CODY_ID) as cody_cd
										FROM SAL0001D S01A
										INNER JOIN SAL0002D S02A ON S02A.SALES_ORD_ID = S01A.SALES_ORD_ID
										INNER JOIN SYS0026M S26A ON S26A.STK_ID = S02A.ITM_STK_ID
										INNER JOIN SAL0090D S90A ON S90A.SRV_SO_ID = S01A.SALES_ORD_ID
										INNER JOIN SAL0087D S87A ON S87A.SRV_CONFIG_ID = S90A.SRV_CONFIG_ID
										INNER JOIN SYS0026M S26B ON S26B.STK_ID = S87A.SRV_FILTER_STK_ID
										INNER JOIN LOG0043M L43A ON L43A.MATRL_NO = S26A.STK_CODE
										LEFT OUTER JOIN LOG0044D L44A ON L44A.BOM = L43A.BOM AND L44A.BOM_COMPNT = S26B.STK_CODE
										INNER JOIN SVC0008D S08A ON S08A.SALES_ORD_ID = S01A.SALES_ORD_ID
										LEFT  JOIN SVC0006D S06A ON S06A.SCHDUL_ID = S08A.SCHDUL_ID
										LEFT  JOIN SVC0007D S07A ON S07A.BS_RESULT_ID = S06A.RESULT_ID
										INNER JOIN ORG0001D O1DA ON O1DA.MEM_ID = S08A.CODY_ID
										
										WHERE S08A.YEAR = TO_CHAR(to_date(#{requestDate}  ,'YYYY/MM'),'YYYY')
										AND   S08A.MONTH =  TO_CHAR(to_date(#{requestDate} ,'YYYY/MM'),'MM')
										AND   O1DA.MEM_CODE = #{userId}
							        )
					        where 1=1
					        and rn=1


	     </select>





        <select id="afterServiceParts" parameterType="Map" resultType="egovMap">


				SELECT MST.*, to_char(BOM_DTL.COMPNT_QTY) AS quanity
				  FROM (SELECT ROW_NUMBER() OVER(PARTITION BY G.SALES_ORD_ID, A.AS_NO ,D.STK_ID ,D.STK_CODE ORDER BY C.SRV_FILTER_PRV_CHG_DT DESC) rn,
				               to_char (G.CUST_ID) as CUST_ID,
				               to_char (G.SALES_ORD_ID) AS sales_Orderid,
				               to_char (G.SALES_ORD_NO) AS sales_Order_No,
				               to_char (A.AS_NO) AS service_No,
				               (SELECT to_char (STK_CODE)
				                  FROM SYS0026M
				                 WHERE STK_ID = H.ITM_STK_ID) AS product_Code,
				               to_char (D.STK_CODE) AS part_Code,
				               to_char (D.STK_ID) AS part_Id,
				               to_char (D.STK_DESC) AS part_Name,
				               to_char (C.SRV_FILTER_PRIOD) AS parts_Period,
				               to_char (D.SERIAL_CHK) AS filter_Barcd_Chk_YN,
				               to_char (C.SRV_FILTER_LAST_SERIAL) AS filter_Barcd_Serial_No,
				               TO_CHAR (C.SRV_FILTER_PRV_CHG_DT, 'YYYYMMDD') AS last_Chg_Date,
				               TO_CHAR (C.SRV_FILTER_PRV_CHG_DT, 'HHMM') AS last_Chg_Time,
				               TO_CHAR (C.SRV_FILTER_EXPR_DT, 'YYYYMMDD') AS last_Chg_Date_Origin,
				               TO_CHAR (C.SRV_FILTER_EXPR_DT, 'HHMM') AS last_Chg_Time_Origin,
				               to_char (D.STK_TYPE_ID) AS part_Type
				          FROM SVC0001D A,
				               SAL0090D B,
				               SAL0087D C,
				               SYS0026M D,
				               SAL0001D G,
				               SAL0002D H
				         WHERE     A.AS_SO_ID = B.SRV_SO_ID
				               AND B.SRV_CONFIG_ID = C.SRV_CONFIG_ID
				               AND C.SRV_FILTER_STK_ID = D.STK_ID
				               AND A.AS_SO_ID = G.SALES_ORD_ID
				               AND G.SALES_ORD_ID = H.SALES_ORD_ID
				               AND A.AS_MEM_ID = (SELECT MEM_ID
				                                    FROM ORG0001D
				                                   WHERE MEM_CODE = #{userId})
				              AND A.AS_APPNT_DT BETWEEN ADD_MONTHS( LAST_DAY( TO_DATE(#{requestDate}, 'YYYYMM' )) + 1, - 1 ) 
				                                        AND LAST_DAY( TO_DATE( #{requestDate}, 'YYYYMM' )) ORDER BY A.AS_NO ASC ) MST 
				 , ( SELECT LOG43.MATRL_NO , LOG44.* FROM LOG0043M LOG43 , LOG0044D LOG44 WHERE LOG43.BOM = LOG44.BOM ) BOM_DTL 
				 WHERE MST.PRODUCT_CODE = BOM_DTL.MATRL_NO AND MST.PART_CODE = BOM_DTL.BOM_COMPNT and  rn = 1



<!-- 					SELECT
					SAL0001D.CUST_ID,
					SAL0001D.SALES_ORD_id AS sales_Orderid,
					SAL0001D.SALES_ORD_NO AS sales_Order_No,
					SVC0001D.AS_NO AS service_No,
					SYS0026M1.STK_CODE AS product_Code,
					SYS0026M2.STK_CODE AS part_Code,
					SYS0026M2.STK_DESC AS part_Name,
					LOG0044D.COMPNT_QTY AS quanity
					FROM SAL0001D,
								SAL0002D,
								SAL0090D,
								SAL0087D,
								SYS0026M SYS0026M1,
								SYS0026M SYS0026M2,
								LOG0043M,
								LOG0044D,
								SVC0001D
					WHERE SAL0001D.SALES_ORD_ID  = SAL0002D.SALES_ORD_ID
					AND   SAL0002D.ITM_STK_ID    = SYS0026M1.STK_ID
					AND   SAL0090D.SRV_SO_ID     = SAL0001D.SALES_ORD_ID
					AND   SAL0090D.SRV_CONFIG_ID = SAL0087D.SRV_CONFIG_ID
					AND   SYS0026M2.STK_ID       = SAL0087D.SRV_FILTER_STK_ID
					AND   LOG0043M.MATRL_NO      = SYS0026M1.STK_CODE
					AND   LOG0044D.BOM           = LOG0043M.BOM
					AND   LOG0044D.BOM_COMPNT    = SYS0026M2.STK_CODE
					AND   SAL0001D.SALES_ORD_ID  = SVC0001D.AS_SO_ID
					AND   SVC0001D.AS_MEM_ID     = (SELECT MEM_ID
					                                                        FROM ORG0001D
					                                                            WHERE ORG0001D.MEM_CODE = #{userId})
					AND   SVC0001D.AS_APPNT_DT BETWEEN TO_DATE(#{requestDate}, 'YYYYMMDD') AND TO_DATE(#{requestDate}, 'YYYYMMDD')
                    AND   SVC0001D.AS_APPNT_DT BETWEEN ADD_MONTHS(LAST_DAY(to_date(#{requestDate},'YYYYMM'))+1,-1)
                                                                    and LAST_DAY(TO_DATE(#{requestDate},'YYYYMM'))

					ORDER BY AS_NO -->
         </select>




	    <insert id="insertHeatLog" parameterType="Map">
	        INSERT INTO SVC0023T (
	           RESULT_SEQ
	           , RESULT_CRT_USER_ID
	           , SALES_ORD_ID
	           , SVC_NO
	           , TEMPER_SETTING
	           , NORESULT_REM
	           , NEXT_APPT_DATE
	           , NEXT_APPT_TIME
	           , OWNER_CODE
	           , RESULT_CUST_NAME
	           , RESULT_IC_MOBILE_NO
	           , RESULT_EMAIL_NO
	           , ACCEPTANCE_NAME
	           , REN_COLCT_ID
	           , SIGN_DATA
	           , BS_RESULT_PART_ID
	           , EXCH_REASON_ID
	           , BS_RESULT_PART_QTY
	           ,CRT_USER_ID
	           , CRT_DT
	           , TRNSC_ID
	           , TRAN_STUS_CD
	        ) VALUES (
	           SVC0023T_RESULT_SEQ.NEXTVAL
	           , #{userId}
	           , #{salesOrderNo}
	           , #{serviceNo}
	           , #{temperatureSetting}
	           , #{resultRemark}
	           , #{nextAppointmentDate}
	           , #{nextAppointmentTime}
	           , #{ownerCode}
	           , #{resultCustName}
	           , #{resultIcMobileNo}
	           , #{resultReportEmailNo}
	           , #{resultAcceptanceName}
	           , #{rcCode}
	           , #{signData}
	           , #{filterCode}
	           , #{exchangeId}
	           , #{filterChangeQty}
	           , #{userId}
	           , SYSDATE
	           , #{transactionId}
	           , 'N'
	        )
	    </insert>




        <insert id="insertAsResultLog" parameterType="Map">
            INSERT INTO SVC0024T (
				RESULT_SEQ
				,RESULT_CRT_USER_ID
				,SALES_ORD_ID
				,SVC_NO
				,LABOUR_CHRG
				,AS_DEFECT_ID
				,AS_DEFECT_PART_ID
				,AS_DEFECT_DTL_RESN_ID
				,AS_SLUTN_RESN_ID
				,AS_DEFECT_TYPE_ID
				,IN_HUSE_REPAIR_REM
				,IN_HUSE_REPAIR_REP_YN
				,IN_HUSE_REPAIR_PROMS_DATE
				,IN_HUSE_REPAIR_PROD_GRP_CODE
				,IN_HUSE_REPAIR_PROD_CODE
				,IN_HUSE_REPAIR_SERIAL_NO
				,RESULT_REM
				,OWNER_CODE
				,RESULT_CUST_NAME
				,RESULT_IC_MOBILE_NO
				,RESULT_EMAIL_NO
				,ACCEPTANCE_NAME
				,SIGN_DATA
				,TRNSC_ID
				,AS_RESULT_PART_ID
				,CHRG_FOC
				,EXCH_REASON_ID
				,SALES_PRC
				,AS_RESULT_PART_QTY
				,PART_TYPE
<!-- 				,filterBarcdSerialNo -->
				,CRT_USER_ID
				,CRT_DT
				,TRAN_STUS_CD
            ) VALUES (
               SVC0024T_RESULT_SEQ.NEXTVAL
				,#{userId}
				,#{salesOrderNo}
				,#{serviceNo}
				,#{labourCharge}
				,#{defectId}
				,#{defectPartId}
				,#{defectDetailReasonId}
				,#{solutionReasonId}
				,#{defectTypeId}
				,#{inHouseRepairRemark}
				,#{inHouseRepairReplacementYN}
				,#{inHouseRepairPromisedDate}
				,#{inHouseRepairProductGroupCode}
				,#{inHouseRepairProductCode}
				,#{inHouseRepairSerialNo}
				,#{resultRemark}
				,#{ownerCode}
				,#{resultCustName}
				,#{resultIcMobileNo}
				,#{resultReportEmailNo}
				,#{resultAcceptanceName}
				,#{signData}
				,#{transactionId}
				,#{filterCode}
				,#{chargesFoc}
				,#{exchangeId}
				,#{salesPrice}
				,#{filterChangeQty}
				,#{partsType}
<!-- 				,#{filterBarcdSerialNo} -->
               ,#{userId}
               , SYSDATE
               , 'N'
            )
        </insert>


            <insert id="insertInstallServiceLog" parameterType="Map">

		             INSERT INTO SVC0025T (
						 RESULT_SEQ
						,RESULT_CRT_USER_ID
						,SALES_ORD_ID
						,SVC_NO
						,SIRIM_NO
						,SERIAL_NO
						,AS_EXCHG_YN
						,BEFOR_PRODUCT_SIRIM_NO
						,RESULT_REM
						,OWNER_CODE
						,RESULT_CUST_NAME
						,RESULT_IC_MOBILE_NO
						,RESULT_EMAIL_NO
						,ACCEPTANCE_NAME
						,SIGN_DATA
						,CRT_USER_ID
						,CRT_DT
						,TRNSC_ID
						,TRAN_STUS_CD
		            ) VALUES (
		               SVC0025T_RESULT_SEQ.NEXTVAL
		                ,#{userId}
						,#{salesOrderNo}
						,#{serviceNo}
						,#{sirimNo}
						,#{serialNo}
						,#{asExchangeYN}
						,#{beforeProductSerialNo}
						,#{resultRemark}
						,#{ownerCode}
						,#{resultCustName}
						,#{resultIcMobileNo}
						,#{resultReportEmailNo}
						,#{resultAcceptanceName}
						,#{signData}
						,#{userId}
						, SYSDATE
						,#{transactionId}
                        , 'N'
		            )

            </insert>



	   <update id="updateSuccessStatus" parameterType="string">
	      UPDATE SVC0023T SET   TRAN_STUS_CD = 'Y' WHERE TRNSC_ID = #{transactionId}
	   </update>


       <update id="updateSuccessASStatus" parameterType="string">
          UPDATE SVC0024T SET   TRAN_STUS_CD = 'Y' WHERE TRNSC_ID = #{transactionId}
       </update>



       <update id="updateSuccessInstallStatus" parameterType="string">
          UPDATE SVC0025T SET   TRAN_STUS_CD = 'Y' WHERE TRNSC_ID = #{transactionId}
       </update>


       <update id="updateSuccessHsReStatus" parameterType="string">
          UPDATE SVC0036T SET   TRAN_STUS_CD = 'Y' WHERE TRNSC_ID = #{transactionId}
       </update>
       

       <update id="updateSuccessAsReStatus" parameterType="string">
          UPDATE SVC0037T SET   TRAN_STUS_CD = 'Y' WHERE TRNSC_ID = #{transactionId}
       </update>
       
       
       <update id="updateSuccessInsReStatus" parameterType="string">
          UPDATE SVC0038T SET   TRAN_STUS_CD = 'Y' WHERE TRNSC_ID = #{transactionId}
       </update>

       
       <update id="updateSuccessRequestRegiStatus" parameterType="string">
          UPDATE SVC0049T SET   TRAN_STUS_CD = 'Y' WHERE TRNSC_ID = #{transactionId}
       </update>
       

        <select id="getNextSvc006dSeq"  resultType="int">
             select GBSLCVD.SVC0006D_RESULT_ID_SEQ.NEXTVAL
                from dual
        </select>



         <insert id="insertHsResultD" parameterType="Map">

              insert into SVC0007D (
                         BS_RESULT_ITM_ID
                        ,BS_RESULT_ID
                        ,BS_RESULT_PART_ID
                        ,BS_RESULT_PART_QTY
                        ,BS_RESULT_CRT_DT
                        ,BS_RESULT_CRT_USER_ID
                        )
                 values (
                      GBSLCVD.SVC0007D_BS_RESULT_ITM_ID_SEQ.nextval
                    , #{bsResultId}
                    , #{filterCode}
                    , #{filterChangeQty}
                    , sysdate
                    , #{memId}
            )
            </insert>


             <select id="selectHSScheduleMCnt"  parameterType="Map" resultType="int">
                        SELECT count(*) cnt
                          FROM SVC0008D Extent1
                        WHERE  Extent1.SCHDUL_ID = #{schdulId}
              </select>


             <select id="selectHSResultMList"  parameterType="Map" resultType="egovMap">
                        SELECT Extent1.RESULT_ID RESULT_ID  ,
                               Extent1.NO NO  ,
                               Extent1.TYPE_ID TYPE_ID  ,
                               Extent1.SCHDUL_ID SCHDUL_ID  ,
                               Extent1.SALES_ORD_ID SALES_ORD_ID  ,
                               Extent1.CODY_ID CODY_ID  ,
                               Extent1.SETL_DT SETL_DT  ,
                               Extent1.RESULT_STUS_CODE_ID RESULT_STUS_CODE_ID  ,
                               Extent1.FAIL_RESN_ID FAIL_RESN_ID  ,
                               Extent1.REN_COLCT_ID REN_COLCT_ID  ,
                               Extent1.WH_ID WH_ID  ,
                               Extent1.RESULT_REM RESULT_REM  ,
                               Extent1.RESULT_CRT_DT RESULT_CRT_DT  ,
                               Extent1.RESULT_CRT_USER_ID RESULT_CRT_USER_ID  ,
                               Extent1.RESULT_UPD_DT RESULT_UPD_DT  ,
                               Extent1.RESULT_UPD_USER_ID RESULT_UPD_USER_ID  ,
                               Extent1.RESULT_IS_SYNC RESULT_IS_SYNC  ,
                               Extent1.RESULT_IS_EDIT RESULT_IS_EDIT  ,
                               Extent1.RESULT_STOCK_USE RESULT_STOCK_USE  ,
                               Extent1.RESULT_IS_CURR RESULT_IS_CURR  ,
                               Extent1.RESULT_MTCH_ID RESULT_MTCH_ID  ,
                               Extent1.RESULT_IS_ADJ RESULT_IS_ADJ  ,
                               Extent1.RESULT_ENTRY_POINT RESULT_ENTRY_POINT  ,
                               Extent1.RESULT_MOBILE_ID RESULT_MOBILE_ID
                          FROM SVC0006D Extent1
                <![CDATA[        WHERE  Extent1.SCHDUL_ID = #{schdulId}  AND ROWNUM <= 1    ]]>

                    </select>




                  <update id="updateHsSVC0008D" parameterType="Map">
                        UPDATE SVC0008D
                           SET STUS_CODE_ID = #{resultStusCodeId}
                                ,ACTN_MEM_ID = #{memId}
                                ,CODY_ID = #{memId}
                         WHERE   SCHDUL_ID = #{schdulId}
                    </update>



                    <select id="selectSrvConfiguration" parameterType="Map" resultType="egovMap">
                                SELECT Extent1.RESULT_ID RESULT_ID  ,
                                       Extent1.NO NO  ,
                                       Extent1.TYPE_ID TYPE_ID  ,
                                       Extent1.SCHDUL_ID SCHDUL_ID  ,
                                       Extent1.SALES_ORD_ID SALES_ORD_ID  ,
                                       Extent1.CODY_ID CODY_ID  ,
                                       Extent1.SETL_DT SETL_DT  ,
                                       Extent1.RESULT_STUS_CODE_ID RESULT_STUS_CODE_ID  ,
                                       Extent1.FAIL_RESN_ID FAIL_RESN_ID  ,
                                       Extent1.REN_COLCT_ID REN_COLCT_ID  ,
                                       Extent1.WH_ID WH_ID  ,
                                       Extent1.RESULT_REM RESULT_REM  ,
                                       Extent1.RESULT_CRT_DT RESULT_CRT_DT  ,
                                       Extent1.RESULT_CRT_USER_ID RESULT_CRT_USER_ID  ,
                                       Extent1.RESULT_UPD_DT RESULT_UPD_DT  ,
                                       Extent1.RESULT_UPD_USER_ID RESULT_UPD_USER_ID  ,
                                       Extent1.RESULT_IS_SYNC RESULT_IS_SYNC  ,
                                       Extent1.RESULT_IS_EDIT RESULT_IS_EDIT  ,
                                       Extent1.RESULT_STOCK_USE RESULT_STOCK_USE  ,
                                       Extent1.RESULT_IS_CURR RESULT_IS_CURR  ,
                                       Extent1.RESULT_MTCH_ID RESULT_MTCH_ID  ,
                                       Extent1.RESULT_IS_ADJ RESULT_IS_ADJ  ,
                                       Extent1.RESULT_ENTRY_POINT RESULT_ENTRY_POINT  ,
                                       Extent1.RESULT_MOBILE_ID RESULT_MOBILE_ID
                                  FROM SVC0006D Extent1
                            <![CDATA[    WHERE  Extent1.SALES_ORD_ID = #{salesOrdId} AND ROWNUM <= 1 ]]>
                            </select>


             <insert id="insertHsResultSVC0006D" parameterType="Map" >
               INSERT INTO GBSLCVD.SVC0006D (
                       RESULT_ID, NO, TYPE_ID, SCHDUL_ID, SALES_ORD_ID , CODY_ID
                      ,SETL_DT,RESULT_STUS_CODE_ID,FAIL_RESN_ID  , REN_COLCT_ID,WH_ID
                      ,RESULT_REM,RESULT_CRT_DT,RESULT_CRT_USER_ID,RESULT_UPD_DT,RESULT_UPD_USER_ID
                      ,RESULT_IS_SYNC,RESULT_IS_EDIT,RESULT_STOCK_USE,RESULT_IS_CURR,RESULT_MTCH_ID
                      ,RESULT_IS_ADJ
                       )
                VALUES ( #{bsResultId}, #{docNo} , #{typeId},#{schdulId} ,#{salesOrdId} ,#{memId}
                             ,SYSDATE,#{resultStusCodeId},#{failResnId} ,#{renColctId},#{whId}
                            ,#{resultRemark} ,SYSDATE,#{memId},SYSDATE ,#{memId}
                            ,#{resultIsSync},#{resultIsEdit},#{resultStockUse},#{resultIsCurr},#{resultMtchId}
                            ,#{resultIsAdj}
                 )
             </insert>


             <select id="selectHsAssiinlList" parameterType="Map" resultType="egovMap">

                            SELECT  distinct Project2.No No  ,
                                        Project2.HS_DATE HS_DATE  ,
                                        Project2.STUS_CODE_ID STUS_CODE_ID  ,
                                        Project2.Code Code  ,
                                        Project2.SALES_ORD_NO SALES_ORD_NO  ,
                                        Project2.ASSIGN_CODY C5  ,
                                        Project2.ACTION_CODY as ACTN_MEM_ID,
                                        Project2.MEM_ID ,
                                        Project2.Name Name  ,
                                        Project2.cust_id,
                                        Project2.cody_status_nm,
                                        Project2.BRNCH_ID as BRNCH_ID,
                                        Project2.SCHDUL_ID SCHDUL_ID   ,
                                        Project2.SALES_ORD_ID,
                                        Project2.branch_cd,
                                        Project2.CODY_MANGR_USER_ID,
                                        Project2.MEM_CODE,
                                        Project2.sal_mem_id
                         from(       SELECT HS.NO AS NO,
                                                   HS.STUS_CODE_ID as STUS_CODE_ID,
                                                   HS.MONTH || '/' || HS.YEAR as HS_DATE ,
                                                   HS.MONTH,
                                                   HS.YEAR,
                                                   ST.CODE,
                                                   HR.NO AS Result,
                                                   SO.SALES_ORD_NO,
                                                   AP.CODE AS AppType,
                                                   CU.NAME,
                                                   CD.MEM_CODE AS ASSIGN_CODY,
                                                   CD.MEM_ID,
                                                   AC.MEM_CODE AS ACTION_CODY,
                                                   MG.STATE,
                                                   MG.AREA,
                                                   cu.CUST_ID as cust_id,
                                                (select code
                                                   from SYS0038M
                                                   where 1=1
                                                   and stus_code_id = cu.STUS_CODE_ID ) as cody_status_nm,
                                                   SO.BRNCH_ID as BRNCH_ID,
                                                   HS.SCHDUL_ID SCHDUL_ID  ,
                                                    SO.SALES_ORD_ID,
                                                   BR.CODE as branch_cd,
                                                   MG.CODY_MANGR_USER_ID  ,
                                                   ( select  MEM_CODE
                                                    from ORG0001D
                                                    where mem_id =  SO.MEM_ID) as MEM_CODE,
                                                    SO.MEM_ID as sal_mem_id
                                              FROM SVC0008D HS
                                                   INNER JOIN SAL0001D SO
                                                      ON SO.SALES_ORD_ID = HS.SALES_ORD_ID
                                                   INNER JOIN SAL0023D AD
                                                      ON AD.CUST_ADD_ID = SO.CUST_ADD_ID
                                                   INNER JOIN SYS0064M MG
                                                      ON MG.AREA_ID = AD.AREA_ID
                                                   left JOIN SVC0006D HR
                                                      ON HR.SCHDUL_ID = HS.SCHDUL_ID
                                                   INNER JOIN SYS0038M ST
                                                      ON ST.STUS_CODE_ID = HS.STUS_CODE_ID
                                                   INNER JOIN SYS0013M AP
                                                      ON AP.CODE_ID = SO.APP_TYPE_ID
                                                   INNER JOIN SAL0029D CU
                                                      ON CU.CUST_ID = SO.CUST_ID
                                                   INNER JOIN ORG0001D CD
                                                      ON CD.MEM_ID = HS.CODY_ID
                                                   left JOIN ORG0001D AC
                                                      ON AC.MEM_ID = HS.ACTN_MEM_ID
                                                   LEFT JOIN SYS0005M BR
                                                      ON BR.CODE = MG.CODY_BRNCH_CODE
                                             WHERE 1=1
                                                    AND SO.SALES_ORD_NO = #{salesOrderNo}
                                                     and HS.no = #{serviceNo}
                        )Project2
          </select>


        <select id="getUseridToMemid" parameterType="Map" resultType="String">
				select MEM_ID
				from ORG0001D
				where mem_code = #{userId}
          </select>



    <select id="getInstallResultByInstallEntryID" parameterType="Map" resultType="egovMap">
        SELECT Extent1.INSTALL_ENTRY_ID INSTALL_ENTRY_ID  ,
		           Extent1.INSTALL_ENTRY_NO INSTALL_ENTRY_NO  ,
		           Extent3.SALES_ORD_ID SALES_ORD_ID  ,
		           Extent3.SALES_ORD_NO SALES_ORD_NO  ,
		           Extent3.REF_NO REF_NO  ,
		           Extent3.CUST_PO_NO CUST_PO_NO  ,
		           TO_CHAR(Extent3.SALES_DT,'DD-MM-YYYY') SALES_DT  ,
		           TO_CHAR(Extent1.INSTALL_DT,'DD-MM-YYYY')  C1  ,
		           Extent1.INSTALL_STK_ID INSTALL_STK_ID  ,
		           Extent9.STK_CODE STK_CODE  ,
		           Extent9.STK_DESC STK_DESC  ,
		           Extent10.NAME NAME  ,
		           Extent8.CODE_ID CODE_ID  ,
		           Extent8.CODE_NAME CODE_NAME  ,
		           Extent7.CODE_ID CODEID1  ,
		           Extent7.CODE CODE  ,
		           Extent7.CODE_NAME CODENAME1  ,
		           Extent13.STUS_CODE_ID STUS_CODE_ID  ,
		           Extent13.CODE CODE1  ,
		           Extent13.NAME NAME1  ,
		           Extent14.BRNCH_ID BRNCH_ID  ,
		           Extent10.CUST_ID CUST_ID  ,
		           Extent10.NRIC NRIC  ,
		           CASE
		                WHEN ( Extent3.CUST_ADD_ID IS NOT NULL ) THEN Extent3.CUST_ADD_ID
		           ELSE 0
		              END C2  ,
		           Extent3.CUST_CNT_ID CUST_CNT_ID  ,
		           Extent2.SIRIM_NO SIRIM_NO  ,
		           Extent2.SERIAL_NO SERIAL_NO  ,
		           Extent11.USER_NAME USER_NAME  ,
		           Extent9.IS_SIRIM IS_SIRIM  ,
		           Extent9.STK_GRAD STK_GRAD  ,
		           TO_CHAR(Extent2.CRT_DT,'DD-MM-YYYY') C3  ,
		           Extent9.STK_CTGRY_ID STK_CTGRY_ID  ,
		           Extent2.DOC_REF_NO1 DOC_REF_NO1  ,
		           Extent2.DOC_REF_NO2 DOC_REF_NO2  ,
		           Extent2.ALLOW_COMM ALLOW_COMM  ,
		           Extent2.IS_TRADE_IN IS_TRADE_IN  ,
		           Extent2.REQUIRE_SMS REQUIRE_SMS  ,
		           CASE
		                WHEN ( Extent12.USER_ID IS NOT NULL ) THEN Extent12.USER_NAME
		           ELSE ' '
		              END C4  ,
		           Extent2.CRT_DT C5  ,
		           CASE
		                WHEN ( Extent2.RESULT_ID IS NOT NULL ) THEN Extent2.CT_ID
		           ELSE 0
		              END C6  ,
		           Extent15.MEM_CODE MEM_CODE  ,
		           Extent15.NAME NAME2  ,
		           Extent16.WH_LOC_ID WH_LOC_ID  ,
		           Extent4.DOC_ID DOC_ID  ,
		           Extent2.INSTALL_DT INSTALL_DT  ,
		           Extent2.NEXT_CALL_DT NEXT_CALL_DT  ,
		           Extent2.REM REM  ,
		           CASE
		                WHEN ( Extent3.CUST_BILL_ID IS NOT NULL ) THEN Extent3.CUST_BILL_ID
		           ELSE 0
		              END C7  ,
		           Extent6.CODE_NAME CODENAME2
		      FROM SAL0046D Extent1
		             LEFT JOIN SAL0047D Extent2   ON Extent1.INSTALL_ENTRY_ID = Extent2.ENTRY_ID
		             JOIN SAL0001D Extent3   ON Extent1.SALES_ORD_ID = Extent3.SALES_ORD_ID
		             LEFT JOIN CCR0006D Extent4   ON Extent1.CALL_ENTRY_ID = Extent4.CALL_ENTRY_ID
		             LEFT JOIN SAL0074D Extent5   ON Extent3.SALES_ORD_ID = Extent5.SALES_ORD_ID
		             LEFT JOIN SYS0013M Extent6   ON Extent5.MODE_ID = Extent6.CODE_ID
		             LEFT JOIN SYS0013M Extent7   ON Extent4.TYPE_ID = Extent7.CODE_ID
		             LEFT JOIN SYS0013M Extent8   ON Extent3.APP_TYPE_ID = Extent8.CODE_ID
		             LEFT JOIN SYS0026M Extent9   ON Extent1.INSTALL_STK_ID = Extent9.STK_ID
		             LEFT JOIN SAL0029D Extent10   ON Extent3.CUST_ID = Extent10.CUST_ID
		             LEFT JOIN SYS0047M  Extent11   ON Extent3.UPD_USER_ID = Extent11.USER_ID
		             LEFT JOIN SYS0047M  Extent12   ON Extent2.CRT_USER_ID = Extent12.USER_ID
		             LEFT JOIN SYS0038M Extent13   ON Extent1.STUS_CODE_ID = Extent13.STUS_CODE_ID
		             JOIN SAL0045D Extent14   ON Extent3.SALES_ORD_ID = Extent14.SALES_ORD_ID
		             LEFT JOIN ORG0001D Extent15   ON Extent2.CT_ID = Extent15.MEM_ID
		             LEFT JOIN SYS0028M Extent16   ON ( Extent15.MEM_CODE = Extent16.WH_LOC_CODE )
		             OR ( ( Extent15.MEM_CODE IS NULL )
		             AND ( Extent16.WH_LOC_CODE IS NULL ) )
		        WHERE  1=1
                    and Extent3.SALES_ORD_NO = #{salesOrderNo}
                    and Extent1.INSTALL_ENTRY_NO = #{serviceNo}
                    and rownum =1

    </select>





         <insert id="insertInstallResult" parameterType="Map">
               INSERT INTO SAL0047D  (
               RESULT_ID
               , ENTRY_ID
               , STUS_CODE_ID
               , CT_ID
               , INSTALL_DT
               , REM
               , GL_POST
               , CRT_USER_ID
               , CRT_DT
               , SIRIM_NO
               , SERIAL_NO
               , FAIL_ID
               , NEXT_CALL_DT
               , ALLOW_COMM
               , IS_TRADE_IN
               , REQUIRE_SMS
               , DOC_REF_NO1
               , DOC_REF_NO2
               , UPD_DT
               , UPD_USER_ID
               , ADJ_AMT
               , MOBILE_ID
               ,APPNT_DT
			   ,APPNT_TM
				,AS_EXCHN_YN
				,BEFOR_PRODUCT_SERIAL_NO
				,RESULT_CUST_NAME
				,RESULT_REP_EMAIL_NO
				,RESULT_ACEPT_NAME
				,SGN_DT
				,TRNSC_ID
               )
                VALUES (
                SAL0047D_RESULT_ID_SEQ.NEXTVAL
                , #{entryId}
                , #{statusCodeId}
                , #{ctid}
                , TO_DATE(#{installDate},'YYYY-MM-DD')
                , #{remark}
                , #{glpost}
                , #{creator}
                , SYSDATE
                , #{sirimNo}
                , #{serialNo}
                , #{failId}
                , TO_DATE(#{nextCallDate},'YYYY-MM-DD')
                , #{allowComm}
                , #{inTradeIn}
                , #{reqSms}
                , #{docRefNo1}
                , #{docRefNo2}
                , SYSDATE
                , #{updator}
                , #{adjAmount}
                , NULL
                ,#{appointmentDate}
				,#{appointmentTime}
				,#{asExchangeYN}
				,#{beforeProductSerialNo}
				,#{resultCustName}
				,#{resultReportEmailNo}
				,#{resultAcceptanceName}
				,#{signData}
				,#{transactionId}
                )
         </insert>



<select id="serviceHistory" parameterType="Map" resultType="egovMap">
         SELECT  sales_ord_no,
                    job_Status,
                    service_No,
                    settle_Date,
                    hsr_Asr_No,
                    action_Member,
                    job_Type,
                    fail_Reason,
                    collection_Code,
                    collection_Name,
                    result_Remark,
                    filter_Code,
                    filter_Name,
                    last_Change_Date,
                    filter_Period,
                    to_char(next_Change_Date)as next_Change_Date,
                    change_Qty,
                    part_Code,
                    part_Name,
                    part_Change_Qty,
                    AS_RESULT_ID
            FROM(
                SELECT b.SALES_ORD_NO,
		                 S.AS_RESULT_STUS_ID job_Status,
		                 S.AS_RESULT_NO service_No,
		                 to_char(S.AS_SETL_DT,'YYYYMMDD') settle_Date,
		                 'Asr' hsr_Asr_No,
		                 S.AS_CT_ID,
		                 (SELECT MEM_CODE
		                    FROM org0001d d
		                   WHERE 1 = 1 AND d.mem_id = S.AS_CT_ID)
		                    action_Member,
		                 'AS' job_Type,
                        (SELECT Extent1.RESN_DESC
                              FROM SYS0032M Extent1
                             WHERE   Extent1.RESN_TYPE_ID = '166'
                                      AND Extent1.STUS_CODE_ID =1
                                      and RESN_ID = S.AS_FAIL_RESN_ID)  as fail_Reason,
	<!-- 	                 FN_GET_COMMCD (167, S.AS_FAIL_RESN_ID) AS fail_Reason, -->
		                 S.AS_RESULT_REM result_Remark,
		                 TO_NUMBER ('') collection_Code,
		                 TO_CHAR ('') collection_Name,
		                 C.ASR_ITM_PART_ID filter_Code,
		                 C.ASR_ITM_PART_DESC filter_Name,
		                 to_char(E.SRV_FILTER_PRV_CHG_DT,'YYYYMMDD') as  last_Change_Date,
		                 E.SRV_FILTER_PRIOD filter_Period,
		                 C.ASR_ITM_PART_QTY change_Qty,
		                 '' next_Change_Date,
		                 '' part_Code,
		                 '' part_Name,
		                 '' part_Change_Qty,
		                 c.AS_RESULT_ID
                FROM  SVC0004D S ,
                               SAL0001D B ,
                               SVC0005D C ,
                               SAL0087D E
               WHERE S.AS_SO_ID = B.SALES_ORD_ID
               AND B.SALES_ORD_NO = #{salesOrderNo}
               AND S.AS_RESULT_ID = C.AS_RESULT_ID(+)
               AND C.ASR_ITM_PART_ID =SRV_FILTER_ID(+)
              <![CDATA[  AND ROWNUM < 4]]>
               ORDER BY S.AS_RESULT_ID ASC
               )
            union all
            select           sales_ord_no
                                ,STUS_CODE_ID
                                ,NO  as service_No
                                ,SETL_DT as settle_Date
                                ,'Hsr' AS hsr_Asr_No
                                ,MEM_CODE as action_Member
                                ,'HS' as job_Type
                                ,(SELECT Extent1.RESN_DESC
		                              FROM SYS0032M Extent1
		                             WHERE   Extent1.RESN_TYPE_ID = '167'
		                                      AND Extent1.STUS_CODE_ID =1
		                                      and RESN_ID = FAIL_RESN_ID)  as fail_Reason
<!--                                 ,FN_GET_COMMCD(167, FAIL_RESN_ID) as fail_Reason -->
                                ,REN_COLCT_ID as collection_Code
                                ,decode(STUS_CODE_ID ,'4' ,'Completed','21','Failed','10','Cancelled',STUS_CODE_ID) as collection_Name
                                ,RESULT_REM as result_Remark
                                ,BS_RESULT_PART_ID as filter_Code
                                ,BS_RESULT_PART_DESC as filter_Name
                                ,BS_RESULT_CRT_DT as last_Change_Date
                                ,SRV_FILTER_PRIOD as filter_Period
                                ,to_char(next_Change_Date) next_Change_Date
                                ,BS_RESULT_PART_QTY change_Qty
                                ,part_Code
                                ,part_Name
                                ,part_Change_Qty
                                 ,BS_RESULT_ID
                    from (  SELECT ROWNUM,
                                    b.STUS_CODE_ID,
                                    b.SCHDUL_ID,
                                    b.SALES_ORD_ID,
                                    c.SALES_ORD_NO,
                                    to_char(a.SETL_DT,'YYYYMMDD')as SETL_DT,
                                    a.NO,
                                    a.CODY_ID,
                                    d.MEM_CODE,
                                    a.FAIL_RESN_ID,
                                    a.RESULT_REM,
                                    a.REN_COLCT_ID,
                                    e.BS_RESULT_PART_ID,
                                    e.BS_RESULT_PART_DESC,
                                    to_char(e.BS_RESULT_CRT_DT,'YYYYMMDD')as BS_RESULT_CRT_DT,
                                    F.SRV_FILTER_PRIOD,
                                    E.BS_RESULT_PART_QTY,
                                    '' next_Change_Date,
                                    '' part_Code,
                                    '' part_Name,
                                    '' part_Change_Qty,
                                    e.BS_RESULT_ID
                        from SVC0006D a
                                ,SVC0008D b
                                ,sal0001d c
                                ,org0001d d
                                ,SVC0007D e
                                ,sal0087d f
                        where 1=1
                        and a.SCHDUL_ID = b.SCHDUL_ID
                        and a.sales_ord_id = c.sales_ord_id
                        and a.CODY_ID = d.mem_id
                        and a.RESULT_ID = e.BS_RESULT_ID
                        AND e.BS_RESULT_ITM_ID =f.SRV_FILTER_ID(+)
                        and c.sales_ord_no = #{salesOrderNo}
                        order by SETL_DT desc ) x
                  where 1=1
                               <![CDATA[  AND ROWNUM < 4]]>

           </select>


<select id="getAsFilterHistoryDList" parameterType="Map" resultType="egovMap">

         SELECT decode(job_Status ,'4' ,'Completed','21','Failed','10','Cancelled',job_Status) as job_Status,
                    service_No,
                    settle_Date,
                    hsr_Asr_No,
                    action_Member,
                    job_Type,
                    fail_Reason,
                    collection_Code,
                    collection_Name,
                    result_Remark,
                    filter_Code,
                    filter_Name,
                    last_Change_Date,
                    filter_Period,
                    to_char(next_Change_Date)as next_Change_Date,
                    change_Qty,
                    part_Code,
                    part_Name,
                    part_Change_Qty
            FROM(
 SELECT S.AS_RESULT_STUS_ID job_Status,
                 S.AS_RESULT_NO service_No,
                 S.AS_SETL_DT settle_Date,
                 'Asr' hsr_Asr_No,
                 S.AS_CT_ID,
                 (SELECT MEM_CODE
                    FROM org0001d d
                   WHERE 1 = 1 AND d.mem_id = S.AS_CT_ID)
                    action_Member,
                 'AS' job_Type,
                (SELECT Extent1.RESN_DESC
	              FROM SYS0032M Extent1
	              WHERE   Extent1.RESN_TYPE_ID = '166'
	                          AND Extent1.STUS_CODE_ID =1
	                          and RESN_ID = S.AS_FAIL_RESN_ID)  as fail_Reason,
<!--                  FN_GET_COMMCD (167, S.AS_FAIL_RESN_ID) AS fail_Reason, -->
                 S.AS_RESULT_REM result_Remark,
                 TO_NUMBER ('') collection_Code,
                 TO_CHAR ('') collection_Name,
                 C.ASR_ITM_PART_ID filter_Code,
                 C.ASR_ITM_PART_DESC filter_Name,
                 to_char(E.SRV_FILTER_PRV_CHG_DT,'YYYYMMDD') as  last_Change_Date,
                 E.SRV_FILTER_PRIOD filter_Period,
                 C.ASR_ITM_PART_QTY change_Qty,
                 '' next_Change_Date,
                 '' part_Code,
                 '' part_Name,
                 '' part_Change_Qty
                FROM  SVC0004D S ,
                               SAL0001D B ,
                               SVC0005D C ,
                               SAL0087D E
               WHERE S.AS_SO_ID = B.SALES_ORD_ID
               AND c.AS_RESULT_ID = #{asResultId}
               AND S.AS_RESULT_ID = C.AS_RESULT_ID(+)
               AND C.ASR_ITM_PART_ID =SRV_FILTER_ID(+)
              <![CDATA[  AND ROWNUM < 4]]>
               ORDER BY S.AS_RESULT_ID ASC
               )

           </select>





<select id="getAsPartsHistoryDList" parameterType="Map" resultType="egovMap">

         SELECT decode(job_Status ,'4' ,'Completed','21','Failed','10','Cancelled',job_Status) as job_Status,
                    service_No,
                    settle_Date,
                    hsr_Asr_No,
                    action_Member,
                    job_Type,
                    fail_Reason,
                    collection_Code,
                    collection_Name,
                    result_Remark,
                    filter_Code,
                    filter_Name,
                    last_Change_Date,
                    filter_Period,
                    to_char(next_Change_Date)as next_Change_Date,
                    change_Qty,
                    part_Code,
                    part_Name,
                    part_Change_Qty
            FROM(
						SELECT S.AS_RESULT_STUS_ID job_Status,
						                 S.AS_RESULT_NO service_No,
						                 S.AS_SETL_DT settle_Date,
						                 'Asr' hsr_Asr_No,
						                 S.AS_CT_ID,
						                 (SELECT MEM_CODE
						                    FROM org0001d d
						                   WHERE 1 = 1 AND d.mem_id = S.AS_CT_ID)
						                    action_Member,
						                 'AS' job_Type,
                                    (SELECT Extent1.RESN_DESC
		                              FROM SYS0032M Extent1
		                             WHERE   Extent1.RESN_TYPE_ID = '166'
		                                      AND Extent1.STUS_CODE_ID =1
		                                      and RESN_ID = S.AS_FAIL_RESN_ID)  as fail_Reason,
				<!-- 		                 FN_GET_COMMCD (167, S.AS_FAIL_RESN_ID) AS fail_Reason, -->
						                 S.AS_RESULT_REM result_Remark,
						                 TO_NUMBER ('') collection_Code,
						                 TO_CHAR ('') collection_Name,
						                 C.ASR_ITM_PART_ID filter_Code,
						                 C.ASR_ITM_PART_DESC filter_Name,
                                        to_char(E.SRV_FILTER_PRV_CHG_DT,'YYYYMMDD') as  last_Change_Date,
						                 E.SRV_FILTER_PRIOD filter_Period,
						                 C.ASR_ITM_PART_QTY change_Qty,
						                 '' next_Change_Date,
						                 '' part_Code,
						                 '' part_Name,
						                 '' part_Change_Qty
                FROM  SVC0004D S ,
                               SAL0001D B ,
                               SVC0005D C ,
                               SAL0087D E
               WHERE S.AS_SO_ID = B.SALES_ORD_ID
               AND c.AS_RESULT_ID = #{asResultId}
               AND S.AS_RESULT_ID = C.AS_RESULT_ID(+)
               AND C.ASR_ITM_PART_ID =SRV_FILTER_ID(+)
              <![CDATA[  AND ROWNUM < 4]]>
               ORDER BY S.AS_RESULT_ID ASC
               )

           </select>



<select id="getHsFilterHistoryDList" parameterType="Map" resultType="egovMap">

            select    decode(STUS_CODE_ID ,'4' ,'Completed','21','Failed','10','Cancelled',STUS_CODE_ID) as job_Status
                               ,SALES_ORD_NO as service_No
                                ,SETL_DT as settle_Date
                                ,no as hsr_Asr_No
                                ,MEM_CODE as action_Member
                                ,'HS' as job_Type
                                ,(SELECT Extent1.RESN_DESC
                                      FROM SYS0032M Extent1
                                     WHERE   Extent1.RESN_TYPE_ID = '167'
                                              AND Extent1.STUS_CODE_ID =1
                                              and RESN_ID = FAIL_RESN_ID)  as fail_Reason
                                <!-- ,FN_GET_COMMCD(82, FAIL_RESN_ID) as fail_Reason -->
                                ,REN_COLCT_ID as collection_Code
                                ,decode(STUS_CODE_ID ,'4' ,'Completed','21','Failed','10','Cancelled',STUS_CODE_ID) as collection_Name
                                ,RESULT_REM as result_Remark
                                ,BS_RESULT_PART_ID as filter_Code
                                ,BS_RESULT_PART_DESC as filter_Name
                                ,BS_RESULT_CRT_DT as last_Change_Date
                                ,SRV_FILTER_PRIOD as filter_Period
                                ,to_char(next_Change_Date) next_Change_Date
                                ,BS_RESULT_PART_QTY change_Qty
                                ,part_Code
                                ,part_Name
                                ,part_Change_Qty
                    from (select rownum
                                ,b.STUS_CODE_ID
                                ,b.SCHDUL_ID
                                ,b.SALES_ORD_ID
                                ,c.SALES_ORD_NO
                                ,a.SETL_DT
                                ,a.NO
                                ,a.CODY_ID
                                ,d.MEM_CODE
                                ,a.FAIL_RESN_ID
                                ,a.RESULT_REM
                                ,a.REN_COLCT_ID
                                ,e.BS_RESULT_PART_ID
                                ,e.BS_RESULT_PART_DESC
                                ,to_char(e.BS_RESULT_CRT_DT,'YYYYMMDD')as BS_RESULT_CRT_DT
                                ,F.SRV_FILTER_PRIOD
                                ,E.BS_RESULT_PART_QTY,
				                 '' next_Change_Date,
				                 '' part_Code,
				                 '' part_Name,
				                 '' part_Change_Qty
                        from SVC0006D a
                                ,SVC0008D b
                                ,sal0001d c
                                ,org0001d d
                                ,SVC0007D e
                                ,sal0087d f
                        where 1=1
                        and a.SCHDUL_ID = b.SCHDUL_ID
                        and a.sales_ord_id = c.sales_ord_id
                        and a.CODY_ID = d.mem_id
                        and a.RESULT_ID = e.BS_RESULT_ID
                        AND e.BS_RESULT_ITM_ID =f.SRV_FILTER_ID(+)
                        and e.BS_RESULT_ID = #{bsResultId}
                        order by SETL_DT desc ) x
                  where 1=1
                               <![CDATA[  AND ROWNUM < 4]]>

           </select>





<select id="getHsPartsHistoryDList" parameterType="Map" resultType="egovMap">

            select    decode(STUS_CODE_ID ,'4' ,'Completed','21','Failed','10','Cancelled',STUS_CODE_ID) as job_Status
                               ,SALES_ORD_NO as service_No
                                ,SETL_DT as settle_Date
                                ,no as hsr_Asr_No
                                ,MEM_CODE as action_Member
                                ,'HS' as job_Type
                                ,(SELECT Extent1.RESN_DESC
                                      FROM SYS0032M Extent1
                                     WHERE   Extent1.RESN_TYPE_ID = '167'
                                              AND Extent1.STUS_CODE_ID =1
                                              and RESN_ID = FAIL_RESN_ID)  as fail_Reason
      <!--                           ,FN_GET_COMMCD(82, FAIL_RESN_ID) as fail_Reason -->
                                ,REN_COLCT_ID as collection_Code
                                ,decode(STUS_CODE_ID ,'4' ,'Completed','21','Failed','10','Cancelled',STUS_CODE_ID) as collection_Name
                                ,RESULT_REM as result_Remark
                                ,BS_RESULT_PART_ID as filter_Code
                                ,BS_RESULT_PART_DESC as filter_Name
                                ,BS_RESULT_CRT_DT as last_Change_Date
                                ,SRV_FILTER_PRIOD as filter_Period
                                ,to_char(next_Change_Date) next_Change_Date
                                ,BS_RESULT_PART_QTY change_Qty
                                ,part_Code
                                ,part_Name
                                ,part_Change_Qty
                    from (select rownum
                                ,b.STUS_CODE_ID
                                ,b.SCHDUL_ID
                                ,b.SALES_ORD_ID
                                ,c.SALES_ORD_NO
                                ,a.SETL_DT
                                ,a.NO
                                ,a.CODY_ID
                                ,d.MEM_CODE
                                ,a.FAIL_RESN_ID
                                ,a.RESULT_REM
                                ,a.REN_COLCT_ID
                                ,e.BS_RESULT_PART_ID
                                ,e.BS_RESULT_PART_DESC
                                ,to_char(e.BS_RESULT_CRT_DT,'YYYYMMDD')as BS_RESULT_CRT_DT
                                ,F.SRV_FILTER_PRIOD
                                ,E.BS_RESULT_PART_QTY,
                 '' next_Change_Date,
                 '' part_Code,
                 '' part_Name,
                 '' part_Change_Qty
                        from SVC0006D a
                                ,SVC0008D b
                                ,sal0001d c
                                ,org0001d d
                                ,SVC0007D e
                                ,sal0087d f
                        where 1=1
                        and a.SCHDUL_ID = b.SCHDUL_ID
                        and a.sales_ord_id = c.sales_ord_id
                        and a.CODY_ID = d.mem_id
                        and a.RESULT_ID = e.BS_RESULT_ID
                        AND e.BS_RESULT_ITM_ID =f.SRV_FILTER_ID(+)
                        <!-- and c.sales_ord_no = #{SALES_ORD_NO} -->
                        and e.BS_RESULT_ID = #{bsResultId}
                        order by SETL_DT desc ) x
                  where 1=1
                               <![CDATA[  AND ROWNUM < 4]]>

           </select>

           <select id="getRentalCustomerList" parameterType="Map" resultType="egovMap">
            SELECT C.NAME as cust_name,
                   B.SALES_ORD_NO as sales_order_no,
                   E.CODE_NAME as payment_mode,
                   NVL(B.MTH_RENT_AMT , 0) as target_amount,
                   NVL(A.RENT_AMT , 0) as amount
              FROM PAY0022D A,
                   SAL0001D B,
                   SAL0029D C,
                   SAL0074D D,
                   SYS0013M E,
                   ORG0001D F
             WHERE     A.rent_so_id = B.sales_ord_id
                   AND B.cust_id = C.cust_id
                   AND B.sales_ord_id = D.sales_ord_id
                   AND D.MODE_ID = E.CODE_ID(+)
                   AND E.CODE_MASTER_ID = 19
                   AND B.MEM_ID = F.MEM_ID
                   AND F.MEM_CODE = #{userId}
                   <if test="searchKeyword != null and searchKeyword != ''">
                    <choose>
                        <when test="searchType == 1">
                            AND C.NAME LIKE  '%'||#{searchKeyword}||'%'
                        </when>
                        <when test="searchType == 2">
                            AND B.sales_ord_no = #{searchKeyword}
                        </when>
                        <otherwise>
                          AND 1 = 1
                        </otherwise>
                    </choose>
                   </if>
         </select>


         <select id="selectOutstandingResult" parameterType="Map" resultType="egovMap">
            select 0 as sum_rpf ,
			       0 as sum_rpt ,
			       0 as sum_rhf ,
			       0 as sum_rental ,
			       0 as sum_adjust
			 from dual
         </select>

         <select id="selectOutstandingResultDetailList" parameterType="Map" resultType="egovMap">
            SELECT A.CODE_NAME AS TYPE,
			       A.RENT_DOC_NO AS DOC_NO,
			       0 AS NALANCE_AMT,
			       NVL (SUM (CASE WHEN A.MODE_ID = '132' THEN A.RENT_AMT  END ), 0)
			          DEBIT_AMT,
			       NVL(SUM (CASE WHEN A.MODE_ID = '131' THEN A.RENT_AMT END ) , 0) CREDIT_AMT,
			       SUM (NVL(A.RENT_INST_AMT , 0)) INSTALL_AMT,
			       TO_CHAR(A.RENT_INST_DT , 'YYYYMMDD') AS EVENT_DATE
			  FROM (SELECT /*+ USE_NL(A B C  D E )     */
			                C.CODE_NAME,
			                 D.RENT_DOC_NO,
			                 D.RENT_AMT,
			                 A.RENT_INST_AMT,
			                 A.RENT_INST_DT,
			                 E.MODE_ID
			            FROM SAL0070D A,
			                 SAL0001D B,
			                 SYS0013M C,
			                 PAY0022D D,
			                 SAL0074D E,
			                 ORG0001D F
			           WHERE     a.sales_ord_id = b.sales_ord_id
			                 AND a.rent_inst_insert_year = 2017
			                 AND A.SALES_ORD_ID = D.RENT_SO_ID
			                 AND A.RENT_INST_TYPE_ID = C.CODE_ID(+)
			                 AND b.app_type_id = 66
			                 AND C.CODE_MASTER_ID = 37
			                 AND D.RENT_AMT > 0
			                 AND E.SALES_ORD_ID = A.sales_ord_id
			                 AND B.MEM_ID = F.MEM_ID
			                 AND F.MEM_CODE LIKE ('CD%')
			                 AND F.MEM_CODE = #{userId}
			                 AND B.sales_ord_ID = #{salesOrderNo}
			                                              ) A
			GROUP BY A.CODE_NAME, A.RENT_DOC_NO, A.RENT_INST_DT
         </select>
         
         
         
         
         
                   <insert id="insertHsReServiceLog" parameterType="Map">
                            INSERT INTO SVC0036T (
                               RESULT_SEQ
                                ,CRT_USER_ID
                                ,SALES_ORD_ID
                                ,SVC_NO
                                ,AS_APPNT_DT
                                ,AS_APPNT_TM
<!--                                ,TRNSC_ID -->
                                ,TRAN_STUS_CD
                            ) VALUES (
                               SVC0036T_ID_SEQ.NEXTVAL
                               , #{userId}
                               , #{salesOrderNo}
                               , #{serviceNo}
                               ,  to_date(#{appointmentDate},'YYYYMMDD')
                               , #{appointmentTime}
                               , 'N'
                            )
                    </insert>
        
                 
         
                    <insert id="insertAsReServiceLog" parameterType="Map">
				            INSERT INTO SVC0037T (
				               RESULT_SEQ
								,CRT_USER_ID
								,SALES_ORD_ID
								,SVC_NO
								,AS_APPNT_DT
								,AS_APPNT_TM
<!-- 								,TRNSC_ID -->
								,TRAN_STUS_CD
				            ) VALUES (
				               SVC0037T_ID_SEQ.NEXTVAL
				               , #{userId}
				               , #{salesOrderNo}
				               , #{serviceNo}
				               ,  to_date(#{appointmentDate},'YYYYMMDD')
				               , #{appointmentTime}
				               , 'N'
				            )
                    </insert>
        
        
        
                <insert id="insertInsReServiceLog" parameterType="Map">
                            INSERT INTO SVC0038T (
                               RESULT_SEQ
                                ,CRT_USER_ID
                                ,SALES_ORD_ID
                                ,SVC_NO
                                ,AS_APPNT_DT
                                ,AS_APPNT_TM
<!--                                ,TRNSC_ID -->
                                ,TRAN_STUS_CD
                            ) VALUES (
                               SVC0038T_ID_SEQ.NEXTVAL
                               , #{userId}
                               , #{salesOrderNo}
                               , #{serviceNo}
                               ,  to_date(#{appointmentDate},'YYYYMMDD')
                               , #{appointmentTime}
                               , 'N'
                            )
                </insert>
                
                
                <insert id="insertPrReServiceLog" parameterType="Map">
                            INSERT INTO SVC0040T (
                               RESULT_SEQ
                                ,CRT_USER_ID
                                ,SALES_ORD_ID
                                ,SVC_NO
                                ,AS_APPNT_DT
                                ,AS_APPNT_TM
<!--                                ,TRNSC_ID -->
                                ,TRAN_STUS_CD
                            ) VALUES (
                               SVC0040T_RESULT_SEQ.NEXTVAL
                               , #{userId}
                               , #{salesOrderNo}
                               , #{serviceNo}
                               ,  to_date(#{appointmentDate},'YYYYMMDD')
                               , #{appointmentTime}
                               , 'N'
                            )
                </insert>                
        
        
        
                <insert id="insertHsFailServiceLog" parameterType="Map">
                            INSERT INTO SVC0041T (
                               RESULT_SEQ
								,CRT_USER_ID
								,SALES_ORD_ID
								,SVC_NO
								,FAIL_RESN_CODE
						<!-- 		,TRNSC_ID -->
								,TRAN_STUS_CD
                            ) VALUES (
                               SVC0041T_RESULT_SEQ.NEXTVAL
                               , #{userId}
                               , #{salesOrderNo}
                               , #{serviceNo}
                               , #{failReasonCode}
                               , 'N'
                            )
                </insert>      
                
                      
                <insert id="insertAsFailServiceLog" parameterType="Map">
                            INSERT INTO SVC0042T (
                               RESULT_SEQ
								,CRT_USER_ID
								,SALES_ORD_ID
								,SVC_NO
								,FAIL_RESN_CODE
						<!-- 		,TRNSC_ID -->
								,TRAN_STUS_CD
                            ) VALUES (
                               SVC0042T_RESULT_SEQ.NEXTVAL
                               , #{userId}
                               , #{salesOrderNo}
                               , #{serviceNo}
                               , #{failReasonCode}
                               , 'N'
                            )
                </insert>            



                <insert id="insertInsFailServiceLog" parameterType="Map">
                            INSERT INTO SVC0043T (
                               RESULT_SEQ
								,CRT_USER_ID
								,SALES_ORD_ID
								,SVC_NO
								,FAIL_RESN_CODE
						<!-- 		,TRNSC_ID -->
								,TRAN_STUS_CD
                            ) VALUES (
                               SVC0043T_RESULT_SEQ.NEXTVAL
                               , #{userId}
                               , #{salesOrderNo}
                               , #{serviceNo}
                               , #{failReasonCode}
                               , 'N'
                            )
                </insert>            


                <insert id="insertPrFailServiceLog" parameterType="Map">
                            INSERT INTO SVC0044T (
                               RESULT_SEQ
								,CRT_USER_ID
								,SALES_ORD_ID
								,SVC_NO
								,FAIL_RESN_CODE
						<!-- 		,TRNSC_ID -->
								,TRAN_STUS_CD
                            ) VALUES (
                               SVC0044T_RESULT_SEQ.NEXTVAL
                               , #{userId}
                               , #{salesOrderNo}
                               , #{serviceNo}
                               , #{failReasonCode}
                               , 'N'
                            )
                </insert>            





                <insert id="insertCanSMSServiceLog" parameterType="Map">
                            INSERT INTO SVC0045T (
                                RESULT_SEQ
								,CRT_USER_ID
								,SALES_ORD_ID
								,SVC_NO
								,SENDER_TEL_NO
								,RCIVER_TEL_NO
								<!-- ,TRNSC_ID -->
								,TRAN_STUS_CD
                            ) VALUES (
                               SVC0045T_RESULT_SEQ.NEXTVAL
                               , #{userId}
                               , #{salesOrderNo}
                               , #{serviceNo}
                               , #{senderTelNo}
                               , #{receiverTelNo}
                               , 'N'
                            )
                </insert>        



                <insert id="insertASRequestRegistrationLogs" parameterType="Map">
                            INSERT INTO SVC0049T (
                                RESULT_SEQ
								,USER_ID
								,SALES_ORD_NO
								,CUST_ID
								,PRODUCT_CODE
								,DEFECT_CODE_ID
								,RESULT_REM
							<!-- 	,TRNSC_ID -->
								,TRAN_STUS_CD

                            ) VALUES (
                               SVC0049T_RESULT_SEQ.NEXTVAL
                               , #{userId}
                               , #{salesOrderNo}
                               , #{customerId}
                               , #{productCode}
                               , #{defectCodeId}
                               , #{resultRemark}
                               , 'N'
                            )
                            
                </insert>        
                
                
                
               <insert id="insertASRequestRegist" parameterType="Map">
					insert into SVC0001D (
					                AS_ID,AS_NO,AS_SO_ID
					                ,AS_MEM_ID,AS_REQST_DT,AS_RQST_REM
					                ,AS_MALFUNC_ID,AS_MALFUNC_RESN_ID,AS_TYPE_ID
					                ,AS_CRT_USER_ID,AS_CRT_DT ,AS_UPD_USER_ID
					                ,AS_UPD_DT
					)
					values(select SVC0001D_AS_ID_SEQ.nextval from dual,SELECT FN_GET_DOCNO(#{DOCNO})  asno  FROM DUAL,#{salesOrderNo}
					            ,select mem_id from org0001d where mem_code = #{userId},  sysdate, #{resultRemark}
					            ,#{errReasonId}, #{errTypeId}, '2703'
					            ,select mem_id from org0001d where mem_code = #{userId},sysdate,select mem_id from org0001d where mem_code = #{userId}
					            ,sysdate
                            )					            
                            
                </insert>       

                
                



                  <update id="updateInsReAppointmentReturnResult" parameterType="Map">
                         update SAL0046D 
                            set APPNT_DT = to_date(#{appointmentDate},'YYYYMMDD'),
                                APPNT_TM = #{appointmentTime},
                                SESION_CODE = #{sesionCode},
                                UPD_DT = sysdate,
                                UPD_USER_ID = (select mem_id
                                                            from org0001d
                                                            where mem_code = #{userId})
                            where 1=1
                              and SAL0046D.INSTALL_ENTRY_NO = #{serviceNo}
                              and SAL0046D.SALES_ORD_ID = (select sales_ord_id
                                                                                 from sal0001d
                                                                                 where sales_ord_no =  #{salesOrderNo})
		                                                     
                    </update>
                    
 
        
        
        
                   <update id="updateHsReAppointmentReturnResult" parameterType="Map">
                        update SVC0008D 
                            set APPNT_DT = to_date(#{appointmentDate},'YYYYMMDD'),
                                APPNT_TM = #{appointmentTime},
                                UPD_DT = sysdate,
                                UPD_USER_ID = (select mem_id
                                               from org0001d
                                               where mem_code = #{userId})
                            where 1=1
                              and SVC0008D.NO = #{serviceNo}
                              and SVC0008D.SALES_ORD_ID = (select sales_ord_id
                                                           from sal0001d
                                                           where sales_ord_no =  #{salesOrderNo})
                    </update>
                    
                    
                    
                    
                   <update id="insertHsFailJobResult" parameterType="Map">
						 update SVC0006D 
						    set  FAIL_RESN_ID = #{failReasonCode},
						          RESULT_STUS_CODE_ID = '21',
						        RESULT_UPD_DT = sysdate,  
						        RESULT_UPD_USER_ID = (select mem_id
						                                   from org0001d
						                                   where mem_code = #{userId})
						    where 1=1
					        and result_id = (select b.RESULT_ID
					                                    from (
					                                        select a.SCHDUL_ID
					                                        from SVC0008D a
					                                        where 1=1
					                                        and a.NO = #{serviceNo}
					                                        and a.SALES_ORD_ID =  (select sales_ord_id
					                                                                           from sal0001d
					                                                                           where sales_ord_no =  #{salesOrderNo})    
					                                    )a
					                                    ,  SVC0006D b
					                             where 1=1
					                             and a.SCHDUL_ID    = b.SCHDUL_ID)                         
                    </update>
                    
                    
                    
                   <update id="upDateHsFailJobResultM" parameterType="Map">
							 update SVC0008D
							    set STUS_CODE_ID = '21',
							        CRT_DT = sysdate,  
							        CRT_USER_ID = (select mem_id
							                                   from org0001d
							                                   where mem_code = #{userId})
							where 1=1
							and NO = #{serviceNo}
							and SALES_ORD_ID =  (select sales_ord_id
							                                   from sal0001d
							                                   where sales_ord_no =  #{salesOrderNo}      )                 
                    </update>
                    
                    
                    
                    
                    <update id="insertAsFailJobResult" parameterType="Map">
						update SVC0004D
						 set  AS_FAIL_RESN_ID = #{failReasonCode},
						               AS_RESULT_STUS_ID = '21',
						              AS_RESULT_UPD_DT = sysdate,
						              AS_RESULT_UPD_USER_ID = (select mem_id
						                                       from org0001d
						                                       where mem_code = #{userId})
						  where AS_ENTRY_ID = (        
						                        select AS_ID
						                        from SVC0001D
						                        where 1=1
						                        and as_so_id  = (select sales_ord_id
						                                                    from sal0001d
						                                                    where 1=1
						                                                    and sales_ord_no = #{salesOrderNo})
						                         and as_no  = #{serviceNo})

                    </update>
                    

                   <update id="upDatetAsFailJobResultM" parameterType="Map">
						 update SVC0001D
						        set AS_STUS_ID = '21',
						            AS_UPD_DT = sysdate,  
						            AS_UPD_USER_ID = (select mem_id
						                                       from org0001d
						                                       where mem_code = #{userId})
						    where 1=1
						    and AS_NO = #{serviceNo}
						    and AS_SO_ID =  (select sales_ord_id
						                                       from sal0001d
						                                       where sales_ord_no =  #{salesOrderNo} )          
						                                                    
                    </update>
                                        
                    
                    
                    <update id="insertInstallFailJobResult" parameterType="Map">
					        update SAL0047D
					        set  FAIL_ID = #{failReasonCode},
					              STUS_CODE_ID = '21',
                                  SERIAL_NO = #{serialNo},
					              UPD_DT = sysdate,
					              UPD_USER_ID = (select mem_id
					                                       from org0001d
					                                       where mem_code = #{userId})
					    where entry_id = (    select INSTALL_ENTRY_ID
					                                        from     SAL0046D a
					                                        where 1=1
					                                         and sales_ord_id  = (select sales_ord_id
			                                                                        from sal0001d
			                                                                        where 1=1
			                                                                        and sales_ord_no = #{salesOrderNo})
					                                           and INSTALL_ENTRY_NO = #{serviceNo})                                                                
                    </update>                    



                   <update id="upDateInstallFailJobResultM" parameterType="Map">
						 update SAL0046D
						        set STUS_CODE_ID = '21',
						            UPD_DT = sysdate,  
						            UPD_USER_ID = (select mem_id
						                                       from org0001d
						                                       where mem_code = #{userId})
						    where 1=1
						    and INSTALL_ENTRY_NO = #{serviceNo}
						    and SALES_ORD_ID =  (select sales_ord_id
						                                       from sal0001d
						                                       where sales_ord_no =  #{salesOrderNo}  )                   
                    </update>
                    
                    
                    
                    

       <select id="getASRequestResultList" parameterType="Map" resultType="egovMap">


					SELECT
					 to_char(B.MEM_CODE) as MEM_CODE
					 , to_char(F.NAME) AS cust_Name
					 , to_char(A.AS_NO) AS request_No
					 , TO_CHAR(A.AS_REQST_DT, 'YYYYMMDD') AS request_Date
					 , to_char(C.SALES_ORD_NO) AS sales_Order_No
					 , decode(A.AS_STUS_ID, '1', 'Active', '4', 'Completed', '21', 'Failed', '10', 'Cancelled', A.AS_STUS_ID) AS job_Status
					 , to_char(E.STK_DESC) AS product_Name
					 , to_char(E.STK_CODE) AS product_Code
					 , to_char(C.CUST_ID) AS cust_Id
					FROM
					 SVC0001D A
					 , ORG0001D B
					 , SAL0001D C
					 , SAL0002D D
					 , SYS0026M E
					 , SAL0029D F
					WHERE A.AS_MEM_ID = B.MEM_ID
					AND A.AS_SO_ID = C.SALES_ORD_ID
					AND C.SALES_ORD_ID = D.SALES_ORD_ID
					AND D.ITM_STK_ID = E.STK_ID
					AND C.CUST_ID = F.CUST_ID
					AND A.AS_TYPE_ID = '2703'  
					AND B.MEM_CODE = #{userId}
					AND A.AS_REQST_DT between  to_date(#{searchFromDate},'yyyymmdd') AND  to_date(#{searchToDate},'yyyymmdd')
					

<!-- 					SELECT to_char(D.NAME) AS cust_Name
					        ,to_char(B.SALES_ORD_NO) AS sales_Order_No
					        ,to_char(D.CUST_ID) AS customer_Id
					        ,to_char(A.AS_NO) AS AS_Request_No
					        ,to_char(A.AS_REQST_DT) AS as_Request_Date
					        ,to_char(A.AS_STUS_ID) AS as_Request_Status
					        ,to_char(F.STK_CODE) AS product_Code
					        ,to_char(F.STK_DESC) AS   product_Name
					        ,to_char(A.AS_MEM_ID)
					FROM SVC0001D A
					        , SAL0001D B
					        , SAL0002D C
					        ,SAL0029D D
					        ,LOG0001M E
					        ,SYS0026M F
					WHERE 1=1
					AND A.AS_SO_ID = B.SALES_ORD_ID
					AND B.SALES_ORD_ID = C.SALES_ORD_ID         
					AND B.CUST_ID = D.CUST_ID
					AND C.ITM_STK_ID = E.BOM_STK_ID
					AND E.BOM_PART_ID = F.STK_ID
					and a.AS_REQST_DT BETWEEN to_date(#{searchFromDate},'yyyymmdd') AND  to_date(#{searchToDate},'yyyymmdd')
					AND A.AS_MEM_ID = (SELECT MEM_ID
	                                    FROM ORG0001D
	                                    WHERE 1=1
	                                    AND MEM_CODE = #{userId}) -->

         </select>



       <select id="getASRequestCustList" parameterType="Map" resultType="egovMap">


				SELECT
				   to_char(C.MEM_CODE) AS USER_ID
				   , to_char(E.NAME) AS cust_Name
				   , to_char(E.CUST_ID) AS customer_Id
				   , CASE WHEN E.TYPE_ID = 964 THEN to_char(E.NRIC)
				     ELSE ''
				     END AS cust_Nric_No
				   , CASE WHEN E.TYPE_ID = 965 THEN to_char(E.NRIC)
				     ELSE ''
				     END AS cust_Company_No
				   , TO_CHAR(E.TYPE_ID) AS customer_Type
				   , to_char(A.SALES_ORD_NO) AS sales_Ord_No
				   , to_char(D.STK_CODE) AS product_Code
				   , to_char(D.STK_ID) AS product_Id
				   , to_char(D.STK_DESC) AS product_Name
				   , UPPER(to_char(J.SERIAL_NO)) AS serial_No
				FROM
				 SAL0001D A
				 , SAL0002D B
				 , ORG0001D C
				 , SYS0026M D
				 , SAL0029D E
				 , (SELECT * FROM
				  (
				   SELECT SALES_ORD_ID, INSTALL_ENTRY_ID,
				    ROW_NUMBER() OVER(PARTITION BY SALES_ORD_ID ORDER BY CRT_DT DESC) AS DUM_SEQ
				   FROM SAL0046D 
				  ) SAL46D 
				 WHERE DUM_SEQ = 1 ) F
				 , (SELECT * FROM
				  (
				   SELECT ENTRY_ID, SERIAL_NO,
				    ROW_NUMBER() OVER(PARTITION BY ENTRY_ID ORDER BY CRT_DT DESC) AS DUM_SEQ
				   FROM SAL0047D 
				  ) SAL47D 
				 WHERE DUM_SEQ = 1 ) J
				WHERE A.SALES_ORD_ID = B.SALES_ORD_ID
				AND A.MEM_ID = C.MEM_ID
				AND B.ITM_STK_ID = D.STK_ID
				AND A.CUST_ID = E.CUST_ID
				AND B.SALES_ORD_ID = F.SALES_ORD_ID(+)
				AND F.INSTALL_ENTRY_ID = J.ENTRY_ID(+)
				AND C.MEM_ID = (SELECT MEM_ID
                                        FROM ORG0001D
                                        WHERE 1=1
                                        AND MEM_CODE = #{userId}) 
                <choose>
                   <when test= 'searchType == "1" and searchType != null and searchType != "" '>
                        AND A.SALES_ORD_NO LIKE '%' ||  (#{searchKeyword})  || '%'
                   </when>
                   <when test ='searchType == "2" and searchType != null and searchType != "" '>
                        AND E.NAME LIKE '%' || (#{searchKeyword}) || '%'
                   </when>
                   <when test ='searchType == "3" and searchType != null and searchType != "" '>
                        AND E.NRIC LIKE '%' || (#{searchKeyword}) || '%'
                   </when>
                   <when test ='searchType == "4" and searchType != null and searchType != "" '>
                        AND E.NAME LIKE '%' || (#{searchKeyword}) || '%'
                   </when>
                    <otherwise>
				     
				    </otherwise>
<!--                    <if test="searchType != null and   searchType != '' and  "> 
                       
                   </if>
                    <if test="searchType != null and   searchType != '' and searchType == '2' ">
                       AND E.NAME LIKE #{searchKeyword}
                    </if>
                    <if test="searchType != null and   searchType != '' and searchType == '3' ">
                       AND E.NRIC LIKE #{searchKeyword}
                    </if>
                    <if test="searchType != null and   searchType != '' and searchType == '4' ">
                       AND E.NRIC LIKE #{searchKeyword}
                    </if> -->
                    
                    
                </choose>                                        


                    



         </select>


     
 








</mapper>