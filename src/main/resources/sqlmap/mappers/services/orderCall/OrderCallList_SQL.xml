<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 <mapper namespace="com.coway.trust.biz.services.orderCall.impl.OrderCallListMapper">


     <select id="selectOrderCall" parameterType="Map" resultType="egovMap">
    <![CDATA[
    SELECT Extent1.CALL_ENTRY_ID CALL_ENTRY_ID  ,
                Extent1.CALL_TYPE_ID CALL_TYPE_ID  ,
                Extent1.CALL_TYPE_CODE CALL_TYPE_CODE  ,
                Extent1.SALES_ORD_ID SALES_ORD_ID  ,
                Extent1.SALES_ORD_NO SALES_ORD_NO  ,
                Extent1.APP_TYPE_NAME APP_TYPE_NAME  ,
                Extent1.CALL_STUS_ID CALL_STUS_ID  ,
                Extent1.CALL_STUS_CODE CALL_STUS_CODE  ,
                Extent1.PRODUCT_CODE PRODUCT_CODE  ,
                Extent1.PRODUCT_NAME PRODUCT_NAME  ,
                Extent1.CUST_NAME CUST_NAME  ,
                Extent1.CUST_IC CUST_IC  ,
                Extent1.INSTALL_AREA_ID INSTALL_AREA_ID  ,
               /* Extent1.INSTALL_STATE_ID INSTALL_STATE_ID  ,*/
                Extent1.INSTALL_AREA_NAME INSTALL_AREA_NAME  ,
                Extent1.CALL_LOG_DT CALL_LOG_DT  ,
                Extent1.DSC_BRNCH_ID DSC_BRNCH_ID  ,
                Extent1.PO_NO PO_NO  ,
                Extent1.INSTALL_TEL_M INSTALL_TEL_M  ,
                Extent1.INSTALL_TEL_O INSTALL_TEL_O  ,
                Extent1.INSTALL_TEL_R INSTALL_TEL_R  ,
                Extent1.INSTALL_TEL_F INSTALL_TEL_F  ,
                Extent1.DOC_ID DOC_ID  ,
                Extent1.IS_WAIT_CANCL IS_WAIT_CANCL  ,
                Extent1.CRT_USER_ID_ID CRT_USER_ID_ID  ,
                Extent1.CRT_USER_ID CRT_USER_ID  ,
                Extent1.CRT_DT CRT_DT  ,
                Extent1.CALL_TYPE_NAME CALL_TYPE_NAME  ,
                CASE
                     WHEN ( Extent1.APP_TYPE_ID IS NOT NULL ) THEN Extent1.APP_TYPE_ID
                ELSE 0
                   END C1  ,
                CASE
                     WHEN ( Extent1.CUST_ID IS NOT NULL ) THEN Extent1.CUST_ID
                ELSE 0
                   END C2  ,
                CASE
                     WHEN ( Extent1.SALES_ORD_DT IS NOT NULL ) THEN Extent1.SALES_ORD_DT
                ELSE TO_DATE('1900-01-01','YYYY-MM-DD')
                   END C3  ,
                CASE
                     WHEN ( Extent1.PRODUCT_ID IS NOT NULL ) THEN Extent1.PRODUCT_ID
                ELSE 0
                   END C4   ,
                STATE,
                area
         FROM ( SELECT vCallLogOrderCall.CALL_ENTRY_ID CALL_ENTRY_ID  ,
                       vCallLogOrderCall.CALLTYPEID CALL_TYPE_ID  ,
                       vCallLogOrderCall.CALL_TYPE_CODE CALL_TYPE_CODE  ,
                       vCallLogOrderCall.SALES_ORD_ID SALES_ORD_ID  ,
                       vCallLogOrderCall.SALES_ORD_NO SALES_ORD_NO  ,
                       vCallLogOrderCall.APP_TYPE_ID APP_TYPE_ID  ,
                       vCallLogOrderCall.APPTYPENAME APP_TYPE_NAME  ,
                       vCallLogOrderCall.SALES_ORD_DT SALES_ORD_DT  ,
                       vCallLogOrderCall.CALL_STUS_ID CALL_STUS_ID  ,
                       vCallLogOrderCall.CALL_STUS_CODE CALL_STUS_CODE  ,
                       vCallLogOrderCall.PRODUCT_ID PRODUCT_ID  ,
                       vCallLogOrderCall.PRODUCT_CODE  || ' - ' ||  vCallLogOrderCall.PRODUCT_NAME PRODUCT_CODE,
                       vCallLogOrderCall.PRODUCT_NAME PRODUCT_NAME  ,
                       vCallLogOrderCall.CUST_ID CUST_ID  ,
                       vCallLogOrderCall.CUST_NAME CUST_NAME  ,
                       vCallLogOrderCall.CUST_IC CUST_IC  ,
                       vCallLogOrderCall.INSTALL_AREA_ID INSTALL_AREA_ID  ,
                       /* vCallLogOrderCall.INSTALL_STATE_ID INSTALL_STATE_ID  , */
                       vCallLogOrderCall.INSTALL_AREA_NAME INSTALL_AREA_NAME  ,
                       vCallLogOrderCall.CALL_LOG_DT CALL_LOG_DT  ,
                       vCallLogOrderCall.DSC_BRNCH_ID DSC_BRNCH_ID  ,
                       vCallLogOrderCall.PO_NO PO_NO  ,
                       vCallLogOrderCall.INSTALL_TEL_M INSTALL_TEL_M  ,
                       vCallLogOrderCall.INSTALL_TEL_O INSTALL_TEL_O  ,
                       vCallLogOrderCall.INSTALL_TEL_R INSTALL_TEL_R  ,
                       vCallLogOrderCall.INSTALL_TEL_F INSTALL_TEL_F  ,
                       vCallLogOrderCall.DOC_ID DOC_ID  ,
                       vCallLogOrderCall.IS_WAIT_CANCL IS_WAIT_CANCL  ,
                       vCallLogOrderCall.CRT_USER_ID CRT_USER_ID_ID  ,
                       vCallLogOrderCall.CRT_USER_ID CRT_USER_ID  ,
                       vCallLogOrderCall.CRT_DT CRT_DT  ,
                       vCallLogOrderCall.CALL_TYPE_NAME CALL_TYPE_NAME  ,
                       vCallLogOrderCall.CALL_FDBCK_ID CALL_FDBCK_ID  ,
                       vCallLogOrderCall.CALL_FDBCK_CODE CALL_FDBCK_CODE  ,
                       vCallLogOrderCall.CALL_FDBCK_DESC CALL_FDBCK_DESC  ,
                       E.CODE,
	                   C.CT_BRNCH_CODE,
	                   C.AREA_ID,
	                   E.BRNCH_ID,
	                   C.STATE,
	                   C.area
	   FROM  SAL0045D A, SAL0023D B, SYS0064M C, SYS0005M E, CCR1002V vCallLogOrderCall
	WHERE A.ADD_ID       = B.CUST_ADD_ID 
		AND   B.AREA_ID    = C.AREA_ID 
		AND   E.CODE        = C.CT_BRNCH_CODE
		AND   B.CUST_ID    = vCallLogOrderCall.CUST_ID
		AND   A.SALES_ORD_ID = vCallLogOrderCall.SALES_ORD_ID) Extent1
          WHERE  1=1
            ]]>
                 <if test="orderNo != null and orderNo != '' ">
                     AND (Extent1.SALES_ORD_NO=#{orderNo} )
                  </if>
                  <if test="product != null and product != '' ">
                     AND (Extent1.PRODUCT_ID=#{product} )
                  </if>
                  <if test="custId != null and custId != '' ">
                     AND (Extent1.CUST_ID=#{custId} )
                  </if>
                  <if test="custName != null and custName != '' ">
                     AND (Extent1.CUST_NAME=#{custName} )
                  </if>
                  <if test="nricNo != null and nricNo != '' ">
                     AND (Extent1.CUST_IC=#{nricNo} )
                  </if>
                   <if test="contactNo != null and contactNo != '' ">
                     AND ((Extent1.INSTALL_TEL_F LIKE '%' ||  #{contactNo} || '%') OR (Extent1.INSTALL_TEL_M LIKE '%' ||  #{contactNo} || '%'') OR (Extent1.INSTALL_TEL_O LIKE '%' ||  #{contactNo} || '%') OR (Extent1.INSTALL_TEL_R LIKE '%' ||  #{contactNo} || '%'))
                  </if>
                  <if test="PONum != null and PONum != '' ">
                     AND (Extent1.PO_NO=#{PONum} )
                  </if>
                  <if test="ordArea != null and ordArea != '' ">
                     AND (Extent1.INSTALL_AREA_ID=#{ordArea} )
                  </if>

                   <if test="callLogTypeList != null and callLogTypeList != '' ">
                            and Extent1.CALL_TYPE_ID IN
                            <foreach item="item" collection="callLogTypeList" index="index" open="(" separator="," close=")">
                            #{item}
                            </foreach>
                   </if>
                   <if test="callLogStatusList != null and callLogStatusList != '' ">
                            and Extent1.CALL_STUS_ID IN
                            <foreach item="item" collection="callLogStatusList" index="index" open="(" separator="," close=")">
                            #{item}
                            </foreach>
                   </if>
                   <if test="DSCCodeList != null and DSCCodeList != '' ">
                            and Extent1.BRNCH_ID IN
                            <foreach item="item" collection="DSCCodeList" index="index" open="(" separator="," close=")">
                            #{item}
                            </foreach>
                   </if>
                   <if test="createDate != '' and endDate == '' ">
                            <![CDATA[ AND  TO_DATE(Extent1.CRT_DT,'DD/MM/YYYY')  >= TO_DATE(#{createDate}, 'DD/MM/YYYY') ]]>
                   </if>
                   <if test="endDate != '' and createDate == '' ">
                            <![CDATA[  AND  TO_DATE(Extent1.CRT_DT,'DD/MM/YYYY')    <=  TO_DATE(#{endDate}, 'DD/MM/YYYY') ]]>
                   </if>
                   <if test="createDate != '' and endDate != '' ">
                            <![CDATA[  AND TO_DATE(Extent1.CRT_DT,'DD/MM/YYYY')    between TO_DATE(#{createDate},  'DD/MM/YYYY') and  TO_DATE(#{endDate}, 'DD/MM/YYYY') ]]>
                   </if>
                    <if test="callStrDate != '' and callEndDate == '' ">
                            <![CDATA[ AND  TO_DATE(Extent1.CALL_LOG_DT,'DD/MM/YYYY')  >= TO_DATE(#{callStrDate}, 'DD/MM/YYYY') ]]>
                   </if>
                   <if test="callEndDate != '' and callStrDate == '' ">
                            <![CDATA[  AND TO_DATE(Extent1.CALL_LOG_DT,'DD/MM/YYYY')    <=  TO_DATE(#{callEndDate}, 'DD/MM/YYYY') ]]>
                   </if>
                   <if test="callStrDate != '' and callEndDate != '' ">
                            <![CDATA[  AND TO_DATE(Extent1.CALL_LOG_DT,'DD/MM/YYYY')    between TO_DATE(#{callStrDate},  'DD/MM/YYYY') and  TO_DATE(#{callEndDate}, 'DD/MM/YYYY') ]]>
                   </if>
                   <if test="ordStatus != '' and ordStatus != '' ">
                     and Extent1.STATE = #{ordStatus}
                   </if>
                   <if test="ordArea != null and ordArea !=''">
                     and Extent1.area = #{ordArea}
                   </if>
                    <if test="sortBy != null and sortBy != '' and sortBy == 1 " >
                     ORDER BY Extent1.SALES_ORD_NO ASC
                  </if>
                  <if test="sortBy != null and sortBy != '' and sortBy == 2 " >
                     ORDER BY Extent1.CUST_NAME
                  </if>

    </select>
     <select id="getOrderCall" parameterType="Map" resultType="egovMap">
      <![CDATA[
            SELECT Limit1.CALL_ENTRY_ID CALL_ENTRY_ID  ,
			       Limit1.C1 C1  ,
			       Limit1.APP_TYPE_NAME APP_TYPE_NAME  ,
			       Limit1.CALL_LOG_DT CALL_LOG_DT  ,
			       Limit1.CALL_STUS_ID CALL_STUS_ID  ,
			       Limit1.CALL_TYPE_ID CALL_TYPE_ID  ,
			       Limit1.C2 C2  ,
			       Limit1.C3 C3  ,
			       Limit1.SALES_ORD_ID SALES_ORD_ID  ,
			       Limit1.SALES_ORD_NO SALES_ORD_NO  ,
			       Limit1.CALL_STUS_CODE CALL_STUS_CODE  ,
			       Limit1.CALL_TYPE_CODE CALL_TYPE_CODE  ,
			       Limit1.CALL_TYPE_NAME CALL_TYPE_NAME  ,
			       Limit1.CUST_NAME CUST_NAME  ,
			       Limit1.CUST_IC CUST_IC  ,
			       Limit1.DSC_BRNCH_ID DSC_BRNCH_ID  ,
			       Limit1.INSTALL_AREA_ID INSTALL_AREA_ID  ,
			       Limit1.INSTALL_AREA_NAME INSTALL_AREA_NAME  ,
			       --Limit1.INSTALL_STATE_ID INSTALL_STATE_ID  ,
			       Limit1.PO_NO PO_NO  ,
			       Limit1.C4 C4  ,
			       Limit1.PRODUCT_CODE PRODUCT_CODE  ,
			       Limit1.PRODUCT_NAME PRODUCT_NAME  ,
			       Limit1.INSTALL_TEL_F INSTALL_TEL_F  ,
			       Limit1.INSTALL_TEL_M INSTALL_TEL_M  ,
			       Limit1.INSTALL_TEL_O INSTALL_TEL_O  ,
			       Limit1.INSTALL_TEL_R INSTALL_TEL_R  ,
			       Limit1.DOC_ID DOC_ID  ,
			       Limit1.IS_WAIT_CANCL IS_WAIT_CANCL  ,
			       Limit1.CRT_DT CRT_DT  ,
			       Limit1.CRT_USER_ID_ID CRT_USER_ID_ID  ,
			       Limit1.CRT_USER_ID CRT_USER_ID
			  FROM ( SELECT Extent1.CALL_ENTRY_ID CALL_ENTRY_ID  ,
			                Extent1.CALL_TYPE_ID CALL_TYPE_ID  ,
			                Extent1.CALL_TYPE_CODE CALL_TYPE_CODE  ,
			                Extent1.SALES_ORD_ID SALES_ORD_ID  ,
			                Extent1.SALES_ORD_NO SALES_ORD_NO  ,
			                Extent1.APP_TYPE_NAME APP_TYPE_NAME  ,
			                Extent1.CALL_STUS_ID CALL_STUS_ID  ,
			                Extent1.CALL_STUS_CODE CALL_STUS_CODE  ,
			                Extent1.PRODUCT_CODE PRODUCT_CODE  ,
			                Extent1.PRODUCT_NAME PRODUCT_NAME  ,
			                Extent1.CUST_NAME CUST_NAME  ,
			                Extent1.CUST_IC CUST_IC  ,
			                Extent1.INSTALL_AREA_ID INSTALL_AREA_ID  ,
			               -- Extent1.INSTALL_STATE_ID INSTALL_STATE_ID  ,
			                Extent1.INSTALL_AREA_NAME INSTALL_AREA_NAME  ,
			                Extent1.CALL_LOG_DT CALL_LOG_DT  ,
			                Extent1.DSC_BRNCH_ID DSC_BRNCH_ID  ,
			                Extent1.PO_NO PO_NO  ,
			                Extent1.INSTALL_TEL_M INSTALL_TEL_M  ,
			                Extent1.INSTALL_TEL_O INSTALL_TEL_O  ,
			                Extent1.INSTALL_TEL_R INSTALL_TEL_R  ,
			                Extent1.INSTALL_TEL_F INSTALL_TEL_F  ,
			                Extent1.DOC_ID DOC_ID  ,
			                Extent1.IS_WAIT_CANCL IS_WAIT_CANCL  ,
			                Extent1.CRT_USER_ID_ID CRT_USER_ID_ID  ,
			                Extent1.CRT_USER_ID CRT_USER_ID  ,
			                Extent1.CRT_DT CRT_DT  ,
			                Extent1.CALL_TYPE_NAME CALL_TYPE_NAME  ,
			                CASE
			                     WHEN ( Extent1.APP_TYPE_ID IS NOT NULL ) THEN Extent1.APP_TYPE_ID
			                ELSE 0
			                   END C1  ,
			                CASE
			                     WHEN ( Extent1.CUST_ID IS NOT NULL ) THEN Extent1.CUST_ID
			                ELSE 0
			                   END C2  ,
			                CASE
			                     WHEN ( Extent1.SALES_ORD_DT IS NOT NULL ) THEN Extent1.SALES_ORD_DT
			                ELSE TO_DATE('1900-01-01','yyyy-mm-dd')
			                   END C3  ,
			                CASE
			                     WHEN ( Extent1.PRODUCT_ID IS NOT NULL ) THEN Extent1.PRODUCT_ID
			                ELSE 0
			                   END C4
			         FROM ( SELECT vCallLogOrderCall.CALL_ENTRY_ID CALL_ENTRY_ID  ,
			                       vCallLogOrderCall.CALLTYPEID CALL_TYPE_ID  ,
			                       vCallLogOrderCall.CALL_TYPE_CODE CALL_TYPE_CODE  ,
			                       vCallLogOrderCall.SALES_ORD_ID SALES_ORD_ID  ,
			                       vCallLogOrderCall.SALES_ORD_NO SALES_ORD_NO  ,
			                       vCallLogOrderCall.APP_TYPE_ID APP_TYPE_ID  ,
			                       vCallLogOrderCall.APPTYPENAME APP_TYPE_NAME  ,
			                       vCallLogOrderCall.SALES_ORD_DT SALES_ORD_DT  ,
			                       vCallLogOrderCall.CALL_STUS_ID CALL_STUS_ID  ,
			                       vCallLogOrderCall.CALL_STUS_CODE CALL_STUS_CODE  ,
			                       vCallLogOrderCall.PRODUCT_ID PRODUCT_ID  ,
			                       vCallLogOrderCall.PRODUCT_CODE PRODUCT_CODE  ,
			                       vCallLogOrderCall.PRODUCT_NAME PRODUCT_NAME  ,
			                       vCallLogOrderCall.CUST_ID CUST_ID  ,
			                       vCallLogOrderCall.CUST_NAME CUST_NAME  ,
			                       vCallLogOrderCall.CUST_IC CUST_IC  ,
			                       vCallLogOrderCall.INSTALL_AREA_ID INSTALL_AREA_ID  ,
			                       --vCallLogOrderCall.INSTALL_STATE_ID INSTALL_STATE_ID  ,
			                       vCallLogOrderCall.INSTALL_AREA_NAME INSTALL_AREA_NAME  ,
			                       vCallLogOrderCall.CALL_LOG_DT CALL_LOG_DT  ,
			                       vCallLogOrderCall.DSC_BRNCH_ID DSC_BRNCH_ID  ,
			                       vCallLogOrderCall.PO_NO PO_NO  ,
			                       vCallLogOrderCall.INSTALL_TEL_M INSTALL_TEL_M  ,
			                       vCallLogOrderCall.INSTALL_TEL_O INSTALL_TEL_O  ,
			                       vCallLogOrderCall.INSTALL_TEL_R INSTALL_TEL_R  ,
			                       vCallLogOrderCall.INSTALL_TEL_F INSTALL_TEL_F  ,
			                       vCallLogOrderCall.DOC_ID DOC_ID  ,
			                       vCallLogOrderCall.IS_WAIT_CANCL IS_WAIT_CANCL  ,
			                       vCallLogOrderCall.CRT_USER_ID CRT_USER_ID_ID  ,
			                       vCallLogOrderCall.CRT_USER_ID CRT_USER_ID  ,
			                       vCallLogOrderCall.CRT_DT CRT_DT  ,
			                       vCallLogOrderCall.CALL_TYPE_NAME CALL_TYPE_NAME  ,
			                       vCallLogOrderCall.CALL_FDBCK_ID CALL_FDBCK_ID  ,
			                       vCallLogOrderCall.CALL_FDBCK_CODE CALL_FDBCK_CODE  ,
			                       vCallLogOrderCall.CALL_FDBCK_DESC CALL_FDBCK_DESC
			                FROM CCR1002V vCallLogOrderCall ) Extent1
			          WHERE  Extent1.CALL_ENTRY_ID = #{callEntryId} AND ROWNUM <= 1 ) Limit1
            ]]>
     </select>
     <select id="selectCallEntry" parameterType="Map" resultType="egovMap">
     <![CDATA[
		    SELECT Extent1.CALL_ENTRY_ID CALL_ENTRY_ID  ,
		       Extent1.SALES_ORD_ID SALES_ORD_ID  ,
		       Extent1.TYPE_ID TYPE_ID  ,
		       Extent1.STUS_CODE_ID STUS_CODE_ID  ,
		       Extent1.RESULT_ID RESULT_ID  ,
		       Extent1.DOC_ID DOC_ID  ,
		       Extent1.CRT_USER_ID CRT_USER_ID  ,
		       Extent1.CRT_DT CRT_DT  ,
		       Extent1.CALL_DT CALL_DT  ,
		       Extent1.IS_WAIT_FOR_CANCL IS_WAIT_FOR_CANCL  ,
		       Extent1.HAPY_CALLER_ID HAPY_CALLER_ID  ,
		       Extent1.UPD_DT UPD_DT  ,
		       Extent1.UPD_USER_ID UPD_USER_ID  ,
		       Extent1.ORI_CALL_DT ORI_CALL_DT
		  FROM CCR0006D Extent1
		 WHERE  Extent1.CALL_ENTRY_ID = #{callEntryId} AND ROWNUM <= 1
		   ]]>
		 </select>
	<insert id="insertCallResult" parameterType="Map">
              INSERT INTO CCR0007D (
                   CALL_RESULT_ID
                 , CALL_ENTRY_ID
                 , CALL_STUS_ID
                 , CALL_DT
                 , CALL_ACTN_DT
                 , CALL_FDBCK_ID
                 , CALL_CT_ID
                 , CALL_REM
                 , CALL_CRT_USER_ID
                 , CALL_CRT_DT
                 , CALL_CRT_USER_ID_DEPT
                 , CALL_HC_ID
                 , CALL_ROS_AMT
                 , CALL_SMS
                 , CALL_SMS_REM
                 )
                VALUES (
                CCR0007D_CALL_RESULT_ID_SEQ.NEXTVAL
                , #{callEntryId}
                , #{callStatusId}
                , TO_DATE(#{callCallDate},'dd-mm-yyyy')
                , TO_DATE(#{callActionDate},'dd-mm-yyyy')
                , #{callFeedBackId}
                , #{callCTID}
                , #{callRemark}
                , #{callCreateBy}
                , SYSDATE
                , #{callCreateByDept}
                , #{callHCID}
                , #{callROSAmt}
                , #{callSMS}
                , #{callSMSRemark}
                )
          </insert>
          <update id="updateCallEntry" parameterType="Map">
	        UPDATE CCR0006D
			   SET STUS_CODE_ID =#{statusCodeId},
			       RESULT_ID = #{resultId},
			       UPD_DT = SYSDATE,
			       UPD_USER_ID = #{updator}
			 WHERE  ( CALL_ENTRY_ID = #{callEntryId} )
        </update>
        <insert id="insertInstallEntry" parameterType="Map">
        INSERT INTO SAL0046D (
            INSTALL_ENTRY_ID
		  , INSTALL_ENTRY_NO
		  , SALES_ORD_ID
		  , STUS_CODE_ID
		  , CT_ID
		  , INSTALL_DT
		  , CALL_ENTRY_ID
		  , INSTALL_STK_ID
		  , INSTALL_RESULT_ID
		  , CRT_USER_ID
		  , CRT_DT
		  , ALLOW_COMM
		  , IS_TRADE_IN
		  , CT_SUB_GRP
		  , UPD_DT
		  , UPD_USER_ID
		  , REV_ID
		  , APPNT_DT
		   )
		  VALUES (
		   SAL0046D_INSTALL_ENTRY_ID_SEQ.NEXTVAL
		  , #{installEntryNo}
		  , #{salesOrderId}
		  , #{statusCodeId}
		  , #{CTID}
		  , TO_DATE(#{installDate},'dd-mm-yyyy')
		  , #{callEntryId}
		  , #{installStkId}
		  , #{installResultId}
		  , #{creator}
		  , SYSDATE
		  , #{allowComm}
		  , #{isTradeIn}
		  , #{CTGroup}
		  , SYSDATE
		  , #{updator}
		  , #{revId}
		  , TO_DATE(#{appDate},'dd-mm-yyyy')
		  )
        </insert>
        <select id="selectCallStatus" parameterType="Map" resultType="egovMap">
        SELECT Extent1.RESN_ID RESN_ID  ,
		       Extent1.CODE CODE  ,
		       Extent1.CODE ||  ' - ' || Extent1.RESN_DESC C1
		  FROM SYS0032M Extent1
		 WHERE  ( Extent1.RESN_TYPE_ID = 276 )
		          AND ( Extent1.STUS_CODE_ID = 1 )
        </select>

        <select id="selectMaxId" parameterType="Map" resultType="String">
              <if test="value != null and value == 'resultId' ">
                   SELECT MAX(RESULT_ID) FROM SAL0047D
                </if>
                <if test="value != null and value == 'callEntryId' ">
                   SELECT MAX(CALL_ENTRY_ID) FROM CCR0006D
                 </if>
                 <if test="value != null and value == 'callResultId' ">
                    SELECT MAX(CALL_RESULT_ID) FROM CCR0007D
                 </if>
         </select>



          <select id="selectCallLogTransaction" parameterType="Map" resultType="egovMap">
          <![CDATA[
            SELECT Project1.CALL_RESULT_ID CALL_RESULT_ID  ,
			       Project1.CALL_ENTRY_ID CALL_ENTRY_ID  ,
			       Project1.C1 C1  ,
			       Project1.C2 C2  ,
			       /* Project1.CALL_REM CALL_REM  , */
			       Project1.CALL_SMS CALL_SMS  ,
			       Project1.CALL_SMS_REM CALL_SMS_REM  ,
			       Project1.CALL_STUS_ID CALL_STUS_ID  ,
			       Project1.NAME NAME  ,
			       Project1.CODE CODE  ,
			       Project1.CALL_CRT_DT CALL_CRT_DT  ,
			       Project1.CALL_CRT_USER_ID CALL_CRT_USER_ID  ,
			       Project1.C3 C3  ,
			       Project1.C4 C4  ,
			       Project1.C5  || '(' || Project1.C6 || ')' C5,
			       Project1.C6 C6  ,
			       Project1.C7 C7  ,
			       Project1.C8 C8  ,
			       Project1.C9 C9  ,
			       Project1.CALL_HC_ID CALL_HC_ID  ,
			       Project1.CALL_ROS_AMT CALL_ROS_AMT
			  FROM ( SELECT Project1.CALL_RESULT_ID CALL_RESULT_ID  ,
			                Project1.CALL_ENTRY_ID CALL_ENTRY_ID  ,
			                Project1.CALL_STUS_ID CALL_STUS_ID  ,
			              /*  Project1.CALL_REM CALL_REM  ,  */
			                Project1.CALL_CRT_USER_ID CALL_CRT_USER_ID  ,
			                Project1.CALL_CRT_DT CALL_CRT_DT  ,
			                Project1.CALL_HC_ID CALL_HC_ID  ,
			                Project1.CALL_ROS_AMT CALL_ROS_AMT  ,
			                Project1.CALL_SMS CALL_SMS  ,
			                Project1.CALL_SMS_REM CALL_SMS_REM  ,
			                Project1.CODE CODE  ,
			                Project1.NAME NAME  ,
			                Project1.C1 C1  ,
			                Project1.C2 C2  ,
			                Project1.C3 C3  ,
			                Project1.C4 C4  ,
			                Project1.C5 C5  ,
			                Project1.C6 C6  ,
			                Project1.C7 C7  ,
			                Project1.C8 C8  ,
			                Project1.C9 C9  ,
			                ROW_NUMBER() OVER ( ORDER BY Project1.CALL_RESULT_ID ASC  ) ROW_NUMBER
			         FROM ( SELECT Extent1.CALL_RESULT_ID CALL_RESULT_ID  ,
			                       Extent1.CALL_ENTRY_ID CALL_ENTRY_ID  ,
			                       Extent1.CALL_STUS_ID CALL_STUS_ID  ,
			                      /*  Extent1.CALL_REM CALL_REM  , */
			                       Extent1.CALL_CRT_USER_ID CALL_CRT_USER_ID  ,
			                       TO_CHAR(Extent1.CALL_CRT_DT,'DD-MM-YY') CALL_CRT_DT  ,
			                       Extent1.CALL_HC_ID CALL_HC_ID  ,
			                       Extent1.CALL_ROS_AMT CALL_ROS_AMT  ,
			                       Extent1.CALL_SMS CALL_SMS  ,
			                       Extent1.CALL_SMS_REM CALL_SMS_REM  ,
			                       Extent2.CODE CODE  ,
			                       Extent2.NAME NAME  ,
			                      CASE
			                          WHEN ( Extent1.CALL_DT IS NOT NULL ) THEN TO_CHAR(Extent1.CALL_DT,'DD-MM-YY')
			                     ELSE TO_CHAR('1900-01-01','DD-MM-YY')
			                        END C1  ,
			                       CASE
		                            WHEN ( Extent1.CALL_ACTN_DT IS NOT NULL ) THEN TO_CHAR(Extent1.CALL_ACTN_DT,'DD-MM-YY')
		                       ELSE TO_CHAR('1900-01-01','DD-MM-YY')
		                          END C2  ,
			                       CASE
			                            WHEN ( Extent4.USER_ID IS NOT NULL ) THEN Extent4.USER_NAME
			                       ELSE ''
			                          END C3  ,
			                       CASE
			                            WHEN ( Extent1.CALL_CT_ID IS NOT NULL ) THEN Extent1.CALL_CT_ID
			                       ELSE 0
			                          END C4  ,
			                       CASE
			                            WHEN ( Extent3.MEM_ID IS NOT NULL ) THEN Extent3.MEM_CODE
			                       ELSE ''
			                          END C5  ,
			                       CASE
			                            WHEN ( Extent3.MEM_ID IS NOT NULL ) THEN Extent3.NAME
			                       ELSE ''
			                          END C6  ,
			                       CASE
			                            WHEN ( Extent1.CALL_FDBCK_ID IS NOT NULL ) THEN Extent1.CALL_FDBCK_ID
			                       ELSE 0
			                          END C7  ,
			                       CASE
			                            WHEN ( Extent5.RESN_ID IS NOT NULL ) THEN Extent5.CODE
			                       ELSE ''
			                          END C8  ,
			                       CASE
			                            WHEN ( Extent5.RESN_ID IS NOT NULL ) THEN '('||Extent5.CODE||')' ||Extent5.RESN_DESC
			                       ELSE ''
			                          END C9
			                FROM CCR0007D Extent1
			                       JOIN SYS0038M Extent2   ON Extent2.STUS_CODE_ID = Extent1.CALL_STUS_ID
			                       LEFT JOIN ORG0001D Extent3   ON Extent3.MEM_ID = Extent1.CALL_CT_ID
			                       LEFT JOIN SYS0047M Extent4   ON Extent4.USER_ID = Extent1.CALL_CRT_USER_ID
			                       LEFT JOIN SYS0032M Extent5   ON Extent5.RESN_ID = Extent1.CALL_FDBCK_ID
			                 WHERE  ( 8 <> Extent1.CALL_STUS_ID )
			                          AND ( Extent1.CALL_ENTRY_ID = #{callEntryId} ) ) Project1 ) Project1
			 WHERE  Project1.ROW_NUMBER > 0
			  ORDER BY Project1.CALL_RESULT_ID ASC
             ]]>
          </select>




        <select id="getstateList" parameterType="Map" resultType="egovMap">

		        select *
				from (
				    select STATE as code_id, STATE as code_name
				    from SYS0064M
				    group by STATE
				)
				order by code_id

	   </select>

        <select id="getAreaList" parameterType="Map" resultType="egovMap">

		           select AREA as code_id, AREA as code_name
				    from SYS0064M
				    where state = #{groupCode}
				    group by AREA

	   </select>
	   
 <select id="selectCdcAvaiableStock" parameterType="Map" resultType="egovMap"> 
		WITH CRDC AS (select s28.WH_LOC_CODE, s28.CDC_CODE, s28.RDC_CODE from sys0028m s28,sys0005m s05
		              where 1 =1
		              and s05.brnch_id in (s28.wh_loc_brnch_id ,s28.wh_loc_brnch_id2  ,s28.wh_loc_brnch_id3)  
		               and s28.WH_LOC_STK_GRAD = 'A' 
                       and s28.WH_LOC_GB = '02'   
		  and s05.code in ( select D.CT_BRNCH_CODE FROM SAL0001D A, SAL0023D B, SAL0045D C, SYS0064M D 
		                     WHERE A.SALES_ORD_ID = C.SALES_ORD_ID
                            AND B.CUST_ADD_ID = C.ADD_ID
                            AND A.CUST_ID = B.CUST_ID
                            AND B.AREA_ID = D.AREA_ID
                            AND A.SALES_ORD_NO = #{salesOrdNo})
		            ) 
		SELECT QTY - NVL (BOOKQTY, 0) AVAIL_QTY
		  FROM LOG0056M L56,
		       SYS0028M S28,
		       (  SELECT LOC_ID,
		                 ITM_CODE,
		                 SUM (NVL (REQST_QTY, 0)) - SUM (NVL (MOV_QTY, 0)) AS BOOKQTY,
		                 MOV_QTY
		            FROM LOG0075M
		   <![CDATA[        WHERE NVL (FINAL_CMPLT, 'N') <> 'Y' ]]>
		        GROUP BY LOC_ID, ITM_CODE, MOV_QTY ) L75,
		       CRDC
		       WHERE     1 = 1
		       AND L56.LOC_ID = L75.LOC_ID(+)
		       AND L56.STK_CODE = L75.ITM_CODE(+)
		       AND S28.WH_LOC_ID = L56.LOC_ID
		       AND S28.wh_loc_stk_grad = 'A'
		       AND L56.STK_CODE = #{productCode}
		       AND S28.WH_LOC_CODE IN
		              (CRDC.WH_LOC_CODE, CRDC.CDC_CODE, CRDC.RDC_CODE)
		       AND S28.WH_LOC_GB = '01'
			   
	   </select>
	   
	   
	    <select id="selectRdcStock" parameterType="Map" resultType="egovMap"> 
        WITH CRDC AS (select s28.WH_LOC_CODE, s28.CDC_CODE, s28.RDC_CODE from sys0028m s28,sys0005m s05
                      where 1 =1
                      and s05.brnch_id in (s28.wh_loc_brnch_id ,s28.wh_loc_brnch_id2  ,s28.wh_loc_brnch_id3)  
          and s05.code in ( select D.CT_BRNCH_CODE FROM SAL0001D A, SAL0023D B, SAL0045D C, SYS0064M D 
                             WHERE A.SALES_ORD_ID = C.SALES_ORD_ID
                            AND B.CUST_ADD_ID = C.ADD_ID
                            AND A.CUST_ID = B.CUST_ID
                            AND B.AREA_ID = D.AREA_ID
                            AND A.SALES_ORD_NO = #{salesOrdNo})
                    ) 
        SELECT  QTY - NVL (BOOKQTY, 0) AVAIL_QTY, 
                      NVL(L56.MOV_QTY,0) INTRANSIT_QTY  
          FROM LOG0056M L56,
               SYS0028M S28,
               (  SELECT LOC_ID,
                         ITM_CODE,
                         SUM (NVL (REQST_QTY, 0)) - SUM (NVL (MOV_QTY, 0)) AS BOOKQTY,
                         MOV_QTY
                    FROM LOG0075M
           <![CDATA[        WHERE NVL (FINAL_CMPLT, 'N') <> 'Y' ]]>
                GROUP BY LOC_ID, ITM_CODE, MOV_QTY ) L75,
               CRDC
               WHERE     1 = 1
               AND L56.LOC_ID = L75.LOC_ID(+)
               AND L56.STK_CODE = L75.ITM_CODE(+)
               AND S28.WH_LOC_ID = L56.LOC_ID
               AND S28.wh_loc_stk_grad = 'A'
               AND L56.STK_CODE = #{productCode}
               AND S28.WH_LOC_CODE IN
                      (CRDC.WH_LOC_CODE, CRDC.CDC_CODE, CRDC.RDC_CODE)
               AND S28.WH_LOC_GB = '02'
               
       </select>



 </mapper>