<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.coway.trust.biz.sales.ccp.impl.PreCcpRegisterMapper">

<insert id="insertPreCcpSubmission" parameterType="java.util.Map">
	    INSERT INTO SAL0343D
	    (
		      PRECCP_SEQ
			, CUST_NAME
			, CUST_IC
			, CUST_MOBILENO
			, CUST_EMAIL
			, CRT_DT
			, CRT_ID
			, CUST_ID
			, CHS_STATUS
			, CHS_RSN
			, DISAB
			, TYPE_ID
	    )
	    VALUES
	    (
	          SAL0343D_PRECCP_SEQ.NEXTVAL
	        , #{customerName}
	        , #{customerNric}
	        , #{customerMobileNo}
	        , #{customerEmailAddr}
	        , SYSDATE
	        , #{userId}
	        , #{custId}
	        , #{chsStatus}
	        , #{chsRsn}
	        , 0
	        , #{customerType}
	    )
</insert>

<select id="getSeqSAL0343D" parameterType="java.lang.Integer">
       SELECT SAL0343D_PRECCP_SEQ.CURRVAL FROM DUAL
</select>

<select id="getExistCustomer" parameterType="Map" resultType="egovMap" resultMap="getPreccpResultMap">
		 SELECT
		        A.CUST_ID
		     ,  NVL(B.CHS_STUS,'-') CHS_STATUS
		     ,  CASE WHEN B.CHS_RSN IS NULL OR B.CHS_STUS = 'GREEN' THEN '-' ELSE B.CHS_RSN END CHS_RSN
		     ,  A.NAME
		     ,  CASE WHEN B.CHS_STUS = 'GREEN' THEN D.APPV_REQ ELSE C.APPV_REQ END APPV_REQ
		     ,  TRUNC(MONTHS_BETWEEN(SYSDATE, A.CRT_DT)) AS CUST_MONTH
		FROM SAL0029D A
		LEFT JOIN SAL0262D B ON A.CUST_ID = B.CUST_ID AND CHS_YEAR = TO_CHAR(SYSDATE, 'YYYY') AND CHS_MONTH = TO_CHAR(SYSDATE, 'MM')
		LEFT JOIN SAL0344D C ON B.CHS_STUS = C.CHS_STUS AND B.CHS_RSN = C.CHS_RSN
        LEFT JOIN SAL0344D D ON B.CHS_STUS = D.CHS_STUS AND D.CHS_STUS = 'GREEN'
		WHERE A.NRIC = #{customerNric} AND ROWNUM = 1
</select>

<select id="searchOrderSummaryList" parameterType="Map" resultType="egovMap">
              WITH RENTAL AS (
                  SELECT SUM(RENT_AMT) RENT_AMT, MAX(RENT_INST_NO) RENT_INST_NO, RENT_SO_ID FROM PAY0022D GROUP BY RENT_SO_ID
              ),
              OUTRIGHT AS (
                  SELECT SUM(TRADE_AMT) TRADE_AMT, TRADE_SO_ID FROM PAY0035D GROUP BY TRADE_SO_ID
              ),
              CURR_RENT AS(
                  SELECT * FROM (
                      SELECT RENT_INST_DT, RENT_INST_NO, RENT_INST_AMT, SALES_ORD_ID, ROW_NUMBER() OVER(PARTITION BY SALES_ORD_ID ORDER BY RENT_INST_DT DESC) RN FROM SAL0070D WHERE RENT_INST_DT = TRUNC(SYSDATE,'MM')
                  ) WHERE RN = 1
              )
              SELECT
                    C.SALES_ORD_ID
                  , C.SALES_ORD_NO
                  , C.APP_TYPE_ID
                  , G.CODE PAYMENT_MODE
                  , E.STUS_CODE_ID RENT_STUS
                  , CASE WHEN C.APP_TYPE_ID = 66  THEN A.RENT_AMT ELSE  D.TRADE_AMT END OUTSTANDING_AMT
                  , CASE WHEN C.APP_TYPE_ID = 66 THEN (NVL(B.RENT_INST_NO,60) - A.RENT_INST_NO) * (C.MTH_RENT_AMT- T1.REBATE_AMT_PER_INSTLMT) END UNBILL_AMT
              FROM SAL0001D C
              LEFT JOIN RENTAL A ON C.SALES_ORD_ID = A.RENT_SO_ID
              LEFT JOIN OUTRIGHT D ON C.SALES_ORD_ID = D.TRADE_SO_ID
              LEFT JOIN CURR_RENT B ON B.SALES_ORD_ID = C.SALES_ORD_ID
              LEFT JOIN SAL0071D E ON E.SALES_ORD_ID = C.SALES_ORD_ID
              LEFT JOIN SAL0074D F ON C.SALES_ORD_ID = F.SALES_ORD_ID
              LEFT JOIN SYS0013M G ON G.CODE_ID = F.MODE_ID
              LEFT JOIN PAY0286D T1 ON C.SALES_ORD_ID = T1.ORD_ID
              WHERE C.CUST_ID = #{custId}
</select>

<resultMap id="custMap" type="egovMap"></resultMap>
<select id="insertNewCustomerInfo" parameterType="Map" statementType="CALLABLE">
		 {
	       call  SP_PRECCP_INST_CCRIS_DATA(#{customerName}, #{customerNric}, #{userId} , #{b2bData, mode=OUT, jdbcType=CURSOR, javaType=Resultset, resultMap=custMap},#{statusCode, mode=OUT, jdbcType=INTEGER, javaType=int, resultMap=custMap}, #{resultMsg, mode=OUT, jdbcType=VARCHAR, javaType=String, resultMap=custMap})
		 }
</select>


<resultMap id="ccrisMap" type="egovMap"></resultMap>
<select id="updateCcrisScre" parameterType="Map" statementType="CALLABLE">
        {
        call  SP_PRECCP_UPD_CCRIS_SCRE(#{ccrisId}, #{custIc}, #{ficoScore}, #{resultRaw}, #{ctosDate}, #{bankRupt}, #{confirmEntity}, #{statusCode, mode=OUT, jdbcType=INTEGER, javaType=int, resultMap=ccrisMap}, #{resultMsg, mode=OUT, jdbcType=VARCHAR, javaType=String, resultMap=ccrisMap})
        }
</select>

<update id="updateCcrisId" parameterType="Map">
         UPDATE  SAL0343D SET CCRIS_ID = #{ccrisId} WHERE PRECCP_SEQ =  #{seq}
</update>

<select id="insertNewCustomerDetails" parameterType="Map" statementType="CALLABLE">
         {
         call  SP_PRECCP_INST_DATA(#{customerName}, #{customerNric}, #{customerMobileNo} , #{customerEmailAddr}, #{userId}, #{customerType} , #{preccpData, mode=OUT, jdbcType=CURSOR, javaType=Resultset, resultMap=custMap},#{statusCode, mode=OUT, jdbcType=INTEGER, javaType=int, resultMap=custMap}, #{resultMsg, mode=OUT, jdbcType=VARCHAR, javaType=String, resultMap=custMap})
         }
</select>


<select id="getPreccpResult" parameterType="Map" resultType="egovMap" >
         SELECT
			      A.CUST_NAME
			    , '-'  CUST_ID
			    , B.CREDIT_SCRE
			    , B.CREDIT_BANKRUPT
			    , CASE
				        WHEN B.CREDIT_SCRE IN (0,9999) AND B.CREDIT_BANKRUPT = 1 THEN 'Advanced Payment'
				        WHEN B.CREDIT_SCRE IN (0,9999) AND B.CREDIT_BANKRUPT = 0 THEN 'Entitle 1'
				        WHEN B.CREDIT_SCRE BETWEEN 300 AND 599 THEN 'Entitle 1'
				        WHEN B.CREDIT_SCRE BETWEEN 300 AND 599 THEN 'Entitle 2'
			      ELSE '' END RESULT
		 FROM SAL0343D A
		 JOIN SAL0345D B ON A.CCRIS_ID = B.CCRIS_ID
		 WHERE A.PRECCP_SEQ = #{seq}
</select>


<resultMap type="egovMap" id="getPreccpResultMap">
    <result property="APPV_REQ" column="APPV_REQ" jdbcType="CLOB" javaType="java.lang.String"/>
</resultMap>


<select id="getPreCcpRemark" parameterType="Map" resultType="egovMap" resultMap="getPreccpResultMap">
		 SELECT
		          A.REMARK_ID
			    , A.CHS_STUS
			    , A.CHS_RSN
			    , A.APPV_REQ
		 FROM SAL0344D A
		 WHERE A.STUS = 1
		 <if test="remarkId != null and remarkId != ''">
         AND  A.REMARK_ID = #{remarkId}
         </if>
		 ORDER BY A.CHS_STUS, A.CHS_RSN
</select>


<update id="editRemarkRequest" parameterType="java.util.Map">
	      UPDATE SAL0344D
	      SET APPV_REQ = #{editorArea}
	      WHERE REMARK_ID = #{editorId}
</update>

<insert id="insertRemarkRequest" parameterType="java.util.Map">
         MERGE INTO SAL0344D A
         USING (
	             SELECT DISTINCT
	                      CHS_STUS
	                    , CHS_RSN
	              FROM SAL0262D
	              WHERE CHS_STUS = 'YELLOW' AND CHS_RSN IS NOT NULL
         ) SRC ON (A.CHS_STUS = SRC.CHS_STUS AND A.CHS_RSN = SRC.CHS_RSN)
         WHEN NOT MATCHED THEN
         INSERT (REMARK_ID, CHS_STUS, CHS_RSN, STUS, CRT_ID, CRT_DT)
         VALUES (
             SAL0344D_REMARK_ID.nextval,
             SRC.CHS_STUS,
             SRC.CHS_RSN,
             1,
             349,
             SYSDATE
         )
</insert>

</mapper>