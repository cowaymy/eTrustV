<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.coway.trust.biz.sales.pos.impl.PosStockMapper">


   <select id="getSeqSAL0293M" resultType="java.lang.Integer">
        SELECT SAL0293M_ID_SEQ.NEXTVAL FROM DUAL
    </select>


 <insert id="insertSAL0293M" parameterType="Map">

            INSERT INTO SAL0293M (
							SCN_NO
						   , SCN_TITLE
							,SCN_MOVE_TYPE
							,SCN_MOVE_STAT
							,SCN_FROM_LOC_ID
							,SCN_TO_LOC_ID
							,SCN_MOVE_DATE
							,CRT_USER_ID
							,CRT_DT
			)VALUES (
				    #{scnNo},
				    #{scnTitle},
				    #{scnMoveType},
				    'A',
				    #{scnFromLocId},
				    #{scnToLocId},
	                 sysdate,
	                 #{userId}   ,
	                 sysdate
			)


 </insert>


 <insert id="insertSAL0294D" parameterType="Map">

		INSERT INTO SAL0294D(
		        SCN_NO
		        ,ITEM_CODE
		        ,ITEM_DESC
		        ,ITEM_CTGRY_ID
		        ,ITEM_INVT_QTY
		        ,ITEM_PURH_ORD_NO
		        ,ITEM_COND
		        ,ITEM_REQ_QTY
		        ,ITEM_TRAN_QTY
		        ,ITEM_RECV_QTY
		        ,ITEM_VARI_QTY
		        ,ITEM_REASON
		        ,ITEM_STATUS
		        ,CRT_USER_ID
		        ,CRT_DT
		        ,ITEM_ADJ_QTY
		        ,ITEM_RTN_REASON
		        ,ITEM_REJ_ATTCH_GRP_ID
		        ,ITEM_RTN_QTY
		)VALUES (
		         #{scnNo}
		        ,#{itemCode}
		        ,#{itemDesc}
		        ,#{itemCtgryId}
		        ,#{itemInvtQty}
		        ,#{itemPurhOrdNo}
		        ,#{itemCond}
		        ,#{itemReqQty}
		        ,#{itemTranQty}
		        ,#{itemRecvQty}
		        ,#{itemVariQty}
		        ,#{itemReason}
		        ,#{itemStatus}
		        ,#{crtUserId}
		        ,#{crtDt}
		        ,#{itemAdjQty}
		        ,#{itemRtnReason}
		        ,#{itemRejAttchGrpId}
		        ,#{itemRtnQty}
		)

 </insert>


   <select id="selectPosStockMgmtList" parameterType="Map" resultType="egovMap">
			SELECT DISTINCT
			  SCN_NO,
			  SCN_MOVE_TYPE_CODE,
			  SCN_MOVE_STAT_CODE,
<!-- 			  CODE_NAME, -->
			  SCN_MOVE_TYPE,
<!-- 			  ITEM_DESC, -->
<!-- 			  ITEM_INVT_QTY, -->
			  SCN_FROM_LOC_DESC,
			  SCN_TO_LOC_DESC,
			  CRT_DT,
			  CRT_USER_ID,
			  UPD_DATE,
			  UPD_USER_ID,
<!--			  ITEM_REASON, -->
<!--			  ITEM_REJ_REMARK, -->
			  SCN_MOVE_DATE,
			  SCN_FROM_LOC_ID,
			  SCN_TO_LOC_ID,
			  SCN_MOVE_STAT,
			  KEY_IN_BRANCH,
			  UPD_NAME,
            CRD_NAME
			FROM
			  (
			    SELECT
			      S.STK_CODE,
			      A.SCN_NO,
			      B.ITEM_CODE,
			      B.ITEM_DESC,
			      DECODE (
			        A.SCN_MOVE_TYPE, 'I', 'STOCK IN',
			        'T', 'STOCK TRANSFER', 'A', 'ADJUSTMENT',
			        'R', 'RETURN'
			      ) AS SCN_MOVE_TYPE_CODE,
			      A.SCN_FROM_LOC_ID,
			      (
			        SELECT
			          CODE || '-' || NAME
			        FROM
			          SYS0005M
			        WHERE
			          BRNCH_ID = A.SCN_FROM_LOC_ID
			      ) AS SCN_FROM_LOC_DESC,
			      A.SCN_TO_LOC_ID,
			      (
			        SELECT
			          CODE || '-' || NAME
			        FROM
			          SYS0005M
			        WHERE
			          BRNCH_ID = A.SCN_TO_LOC_ID
			      ) AS SCN_TO_LOC_DESC,
			      DECODE (
			        A.SCN_MOVE_STAT, 'A', 'ACT', 'C', 'COM',
			        'R', 'REJECT'
			      ) AS SCN_MOVE_STAT_CODE,
			      TO_CHAR(A.SCN_MOVE_DATE, 'dd-mm-yyyy') AS SCN_MOVE_DATE,
			      TO_CHAR(A.UPD_DT, 'dd-mm-yyyy') AS UPD_DATE,
			       U.USER_NAME AS UPD_NAME ,
                   C.USER_NAME AS CRD_NAME,
			      A.UPD_USER_ID,
			      A.SCN_MOVE_TYPE,
			      A.SCN_MOVE_STAT,
			      T.CODE_NAME,
			      ITEM_INVT_QTY,
			      TO_CHAR(A.CRT_DT, 'dd-mm-yyyy') AS CRT_DT,
			      A.CRT_USER_ID,
			      B.ITEM_REASON,
			      B.ITEM_REJ_REMARK,
			      V.CODE AS KEY_IN_BRANCH
			    FROM
			      SAL0293M A,
			      SAL0294D B,
			      SYS0026M S,
			      SYS0013M T,
			      SYS0047M Y,
                  ORG0001D O,
                  SYS0005M V,
                  SYS0047M U,
                  SYS0047M C
			    WHERE
			      A.SCN_NO = B.SCN_NO
			      AND B.ITEM_CODE = S.STK_ID
			      AND T.CODE_ID = B.ITEM_CTGRY_ID
			      AND A.CRT_USER_ID = Y.USER_ID
                  AND O.MEM_CODE = Y.HR_CODE
                  AND O.BRNCH = V.BRNCH_ID
                  AND A.UPD_USER_ID =U.USER_ID (+)
               	 AND A.CRT_USER_ID  =C.USER_ID (+)
           <if test="scnNo != nul and scnNo != '' ">
                    AND A.SCN_NO = #{scnNo}
          </if>

           <if test="scnMoveType != nul and scnMoveType != '' ">
                   AND A.SCN_MOVE_TYPE = #{scnMoveType}
          </if>

          <if test="scnFromLocId != nul and scnFromLocId != '' ">
                  AND  (A.SCN_FROM_LOC_ID = #{scnFromLocId}
                   OR A.SCN_TO_LOC_ID = #{scnFromLocId} )
          </if>

          <if test="scnToLocId != nul and scnToLocId != '' ">
                  AND  A.SCN_TO_LOC_ID = #{scnToLocId}
          </if>

          <if test="scnMoveStat != nul and scnMoveStat != '' ">
                  AND  A.SCN_MOVE_STAT = #{scnMoveStat}
          </if>

          <if test="scnMoveSdate != nul and scnMoveEdate != '' ">
                   AND to_char (A.SCN_MOVE_DATE,'yyyymmdd')   BETWEEN  to_char(TO_DATE(#{scnMoveSdate}, 'dd/mm/yyyy'),'yyyymmdd') AND to_char(TO_DATE (#{scnMoveEdate}, 'dd/mm/yyyy'),'yyyymmdd')
          </if>
              )
			GROUP BY
			  SCN_NO,
			  SCN_MOVE_TYPE_CODE,
			  SCN_FROM_LOC_ID,
			  SCN_FROM_LOC_DESC,
			  SCN_TO_LOC_ID,
			  SCN_TO_LOC_DESC,
			  SCN_MOVE_STAT_CODE,
			  SCN_MOVE_DATE,
			  SCN_MOVE_TYPE,
			  SCN_MOVE_STAT,
			  UPD_DATE,
			  UPD_USER_ID,
			  UPD_NAME,
              CRD_NAME,
			  CODE_NAME,
			  ITEM_DESC,
			  ITEM_INVT_QTY,
			  CRT_DT,
			  CRT_USER_ID,
			  ITEM_REASON,
			  ITEM_REJ_REMARK,
			  KEY_IN_BRANCH
			  ORDER BY SCN_NO DESC
</select>

 <select id="selectPosStockMgmtDetailsList" parameterType="Map" resultType="egovMap">
            SELECT
                SCN_NO,
                SCN_MOVE_TYPE_CODE,
                SCN_MOVE_STAT_CODE,
                CODE_NAME,
                SCN_MOVE_TYPE,
                ITEM_DESC,
                ITEM_INVT_QTY,
                SCN_MOVE_QTY,
                SCN_FROM_LOC_DESC,
                SCN_TO_LOC_DESC,
                CRT_DT,
                CRT_USER_ID,
                UPD_DATE,
                UPD_USER_ID,
                ITEM_REASON,
                ITEM_REJ_REMARK,
                SCN_MOVE_DATE,
                SCN_FROM_LOC_ID,
                SCN_TO_LOC_ID,
                SCN_MOVE_STAT,
                KEY_IN_BRANCH,
                UPD_NAME,
                CRD_NAME,
                'Item Bank' ITEM_TYPE
            FROM
              (
                SELECT
                  S.STK_CODE,
                  A.SCN_NO,
                  B.ITEM_CODE,
                  B.ITEM_DESC,
                  DECODE (
                    A.SCN_MOVE_TYPE, 'I', 'STOCK IN',
                    'T', 'STOCK TRANSFER', 'A', 'ADJUSTMENT',
                    'R', 'RETURN'
                  ) AS SCN_MOVE_TYPE_CODE,
                  DECODE (
                    A.SCN_MOVE_TYPE, 'I',  B.ITEM_RECV_QTY,
                    'T',  B.ITEM_TRAN_QTY,
                    'A',  B.ITEM_ADJ_QTY,
                    'R',  B.ITEM_RTN_QTY
                  ) AS SCN_MOVE_QTY,
                  A.SCN_FROM_LOC_ID,
                  (
                    SELECT
                      CODE || '-' || NAME
                    FROM
                      SYS0005M
                    WHERE
                      BRNCH_ID = A.SCN_FROM_LOC_ID
                  ) AS SCN_FROM_LOC_DESC,
                  A.SCN_TO_LOC_ID,
                  (
                    SELECT
                      CODE || '-' || NAME
                    FROM
                      SYS0005M
                    WHERE
                      BRNCH_ID = A.SCN_TO_LOC_ID
                  ) AS SCN_TO_LOC_DESC,
                  DECODE (
                    A.SCN_MOVE_STAT, 'A', 'ACT', 'C', 'COM',
                    'R', 'REJECT'
                  ) AS SCN_MOVE_STAT_CODE,
                  TO_CHAR(A.SCN_MOVE_DATE, 'dd-mm-yyyy') AS SCN_MOVE_DATE,
                  TO_CHAR(A.UPD_DT, 'dd-mm-yyyy') AS UPD_DATE,
                   U.USER_NAME AS UPD_NAME ,
                   C.USER_NAME AS CRD_NAME,
                  A.UPD_USER_ID,
                  A.SCN_MOVE_TYPE,
                  A.SCN_MOVE_STAT,
                  T.CODE_NAME,
                  ITEM_INVT_QTY,
                  TO_CHAR(A.CRT_DT, 'dd-mm-yyyy') AS CRT_DT,
                  A.CRT_USER_ID,
                  B.ITEM_REASON,
                  B.ITEM_REJ_REMARK,
                  V.CODE || '-' || V.NAME AS KEY_IN_BRANCH
                FROM
                  SAL0293M A,
                  SAL0294D B,
                  SYS0026M S,
                  SYS0013M T,
                  SYS0047M Y,
                  ORG0001D O,
                  SYS0005M V,
                  SYS0047M U,
                  SYS0047M C
                WHERE
                  A.SCN_NO = B.SCN_NO
                  AND B.ITEM_CODE = S.STK_ID
                  AND T.CODE_ID = B.ITEM_CTGRY_ID
                  AND A.CRT_USER_ID = Y.USER_ID
                  AND O.MEM_CODE = Y.HR_CODE
                  AND O.BRNCH = V.BRNCH_ID
                  AND A.UPD_USER_ID =U.USER_ID (+)
                 AND A.CRT_USER_ID  =C.USER_ID (+)
           <if test="scnNo != nul and scnNo != '' ">
                    AND A.SCN_NO = #{scnNo}
          </if>

           <if test="scnMoveType != nul and scnMoveType != '' ">
                   AND A.SCN_MOVE_TYPE = #{scnMoveType}
          </if>

          <if test="scnFromLocId != nul and scnFromLocId != '' ">
                  AND  (A.SCN_FROM_LOC_ID = #{scnFromLocId}
                   OR A.SCN_TO_LOC_ID = #{scnFromLocId} )
          </if>

          <if test="scnToLocId != nul and scnToLocId != '' ">
                  AND  A.SCN_TO_LOC_ID = #{scnToLocId}
          </if>

          <if test="scnMoveStat != nul and scnMoveStat != '' ">
                  AND  A.SCN_MOVE_STAT = #{scnMoveStat}
          </if>

          <if test="scnMoveSdate != nul and scnMoveEdate != '' ">
                   AND to_char (A.SCN_MOVE_DATE,'yyyymmdd')   BETWEEN  to_char(TO_DATE(#{scnMoveSdate}, 'dd/mm/yyyy'),'yyyymmdd') AND to_char(TO_DATE (#{scnMoveEdate}, 'dd/mm/yyyy'),'yyyymmdd')
          </if>
              )
            GROUP BY
              SCN_NO,
              SCN_MOVE_TYPE_CODE,
              SCN_FROM_LOC_ID,
              SCN_FROM_LOC_DESC,
              SCN_TO_LOC_ID,
              SCN_TO_LOC_DESC,
              SCN_MOVE_STAT_CODE,
              SCN_MOVE_DATE,
              SCN_MOVE_TYPE,
              SCN_MOVE_STAT,
              UPD_DATE,
              UPD_USER_ID,
              UPD_NAME,
              CRD_NAME,
              CODE_NAME,
              ITEM_DESC,
              ITEM_INVT_QTY,
              CRT_DT,
              CRT_USER_ID,
              ITEM_REASON,
              ITEM_REJ_REMARK,
              KEY_IN_BRANCH,
              SCN_MOVE_QTY
              ORDER BY SCN_NO DESC
</select>


<select id="selectPosStockMgmtViewInfo" parameterType="Map" resultType="egovMap">
         SELECT
                    A.SCN_NO ,
                    DECODE (A.SCN_MOVE_TYPE ,'I','STOCK IN','T','STOCK TRANSFER','A','ADJUSTMENT' ,'R' ,'RETURN') AS SCN_MOVE_TYPE_CODE,
                    A.SCN_MOVE_TYPE,
                    A.SCN_FROM_LOC_ID ,
                    (SELECT CODE||'-'||NAME FROM SYS0005M  WHERE BRNCH_ID  = A.SCN_FROM_LOC_ID) AS SCN_FROM_LOC_DESC ,
                    A.SCN_TO_LOC_ID ,
                    (SELECT CODE||'-'||NAME  FROM SYS0005M  WHERE BRNCH_ID  = A.SCN_TO_LOC_ID) AS SCN_TO_LOC_DESC,
                    DECODE (A.SCN_MOVE_STAT,'A','ACT','C','COM','R','REJECT') AS SCN_MOVE_STAT_CODE,
                    TO_CHAR(A.SCN_MOVE_DATE,'dd-mm-yyyy')AS SCN_MOVE_DATE ,
                    TO_CHAR(A.UPD_DT,'dd-mm-yyyy')AS UPD_DATE ,
                    A.UPD_USER_ID,
                    (SELECT USER_NAME FROM SYS0047M WHERE USER_ID = A.CRT_USER_ID) AS USER_NAME,
                    (SELECT COUNT (*) FROM SAL0294D WHERE SCN_NO = A.SCN_NO ) TOTALCNT,
                    (SELECT COUNT (*) FROM SAL0294D WHERE SCN_NO = A.SCN_NO   AND ITEM_STATUS  ='C') CTOTALCNT,
                    (SELECT COUNT (*) FROM SAL0294D WHERE SCN_NO = A.SCN_NO   AND ITEM_STATUS  ='R')  RTOTALCNT
        FROM SAL0293M A
        WHERE A.SCN_NO = #{scnNo}
</select>


  <update id="updateReceviedRejectSAL0294D" parameterType="Map">
              UPDATE SAL0294D
                SET ITEM_STATUS  = #{itemStatus}
                     ,UPD_USER_ID  = #{updUserId}
                     ,UPD_DT       = SYSDATE
                     ,ITEM_REJ_ATTCH_GRP_ID  =#{itemRejAttchGrpId}
                     ,ITEM_REJ_REMARK  = #{itemRejRemark}
            WHERE SCN_NO =  #{scnNo}
               AND ITEM_CODE =#{itemCode}
    </update>




    <update id="updateApprovalSAL0294D" parameterType="Map">
              UPDATE SAL0294D
                SET ITEM_STATUS         = #{itemStatus}
                     ,UPD_USER_ID         =  #{updUserId}
                     ,UPD_DT                 = SYSDATE
                     , ITEM_RTN_QTY       = #{itemRtnQty}
                     ,ITEM_REJ_REMARK  = #{itemRejRemark}
            WHERE SCN_NO =  #{scnNo}
               AND ITEM_CODE =#{itemCode}
    </update>


    <update id="updateReceviedRejectSAL0293M" parameterType="Map">
              UPDATE SAL0293M
                SET SCN_MOVE_STAT = #{scnMoveStat}
                     , UPD_USER_ID  = #{userId}
                     , UPD_DT       = SYSDATE
            WHERE SCN_NO =  #{scnNo}
     </update>

   <update id="updateReceviedSAL0294D" parameterType="Map">
              UPDATE SAL0294D
                SET  ITEM_RECV_QTY = #{itemRecvQty}
                     ,ITEM_REASON  = #{itemReason}
                     ,ITEM_STATUS  = #{itemStatus}
                     ,UPD_USER_ID  = #{userId}
                     ,UPD_DT       = SYSDATE
            WHERE SCN_NO =  #{scnNo}
               AND ITEM_CODE =#{itemCode}
    </update>

    <update id="updateReceviedSAL0293M" parameterType="Map">
              UPDATE SAL0293M
                SET SCN_MOVE_STAT = #{scnMoveStat}
                     , UPD_USER_ID  = #{userId}
                     , UPD_DT       = SYSDATE
            WHERE SCN_NO =  #{scnNo}
     </update>

 <update id="updateAdjSAL0294D" parameterType="Map">
              UPDATE SAL0294D
                SET  ITEM_ADJ_QTY  = #{itemAdjQty}
                     , ITEM_REASON    = #{itemReason}
                     , ITEM_REJ_REMARK    = #{itemRejRemark}
                     ,UPD_USER_ID     = #{userId}
                     ,UPD_DT       = SYSDATE
            WHERE SCN_NO =  #{scnNo}
               AND ITEM_CODE =#{itemCode}
    </update>




 <update id="updateMergeLOG0106M" parameterType="Map">
  MERGE INTO LOG0106M C
            USING
            (
                  SELECT    #{logId}  as  LOC_ID
		                       ,#{itemCode} as    ITEM_CODE
		                       ,#{itemDesc}  as   ITEM_DESC
		                       ,#{itemCtgryId} as ITEM_CTGRY_ID
		                       ,#{itemInvQty} as ITEM_INV_QTY
		                       ,#{userId} as  USER_ID
                   FROM DUAL
            ) N
            ON ( C.LOC_ID = N.LOC_ID AND  C.ITEM_CODE =N.ITEM_CODE)
            WHEN MATCHED THEN
            UPDATE
            SET C.ITEM_INV_QTY = NVL(C.ITEM_INV_QTY,0) +( N.ITEM_INV_QTY)
              , C.CRT_USER_ID  = N.USER_ID
              , C.CRT_DT       = SYSDATE
            WHEN NOT MATCHED THEN
            INSERT (    LOC_ID
		                   , ITEM_CODE
		                   , ITEM_DESC
		                   , ITEM_CTGRY_ID
		                   , ITEM_INV_QTY
		                   , CRT_USER_ID
		                   , CRT_DT
                   )
             VALUES (
		                     N.LOC_ID
		                   , N.ITEM_CODE
		                   , N.ITEM_DESC
		                   , N.ITEM_CTGRY_ID
		                   , N.ITEM_INV_QTY
		                   , N.USER_ID
		                   , SYSDATE
                   )
</update>

 <update id="updateLOG0106M" parameterType="Map">
MERGE INTO LOG0106M C
            USING
            (
                  SELECT    #{logId}  as  LOC_ID
                               ,#{itemCode} as    ITEM_CODE
                               ,#{itemDesc}  as   ITEM_DESC
                               ,#{itemCtgryCode} as ITEM_CTGRY_ID
                               ,#{itemRecvQty} as ITEM_INV_QTY
                               ,#{userId} as  USER_ID
                   FROM DUAL
            ) N
            ON ( C.LOC_ID = N.LOC_ID AND  C.ITEM_CODE =N.ITEM_CODE)
            WHEN MATCHED THEN
            UPDATE
            SET C.ITEM_INV_QTY =  NVL(C.ITEM_INV_QTY,0)  +(N.ITEM_INV_QTY)
                  , C.UPD_USER_ID  = N.USER_ID
                  , C.UPD_DT       = SYSDATE
            WHEN NOT MATCHED THEN
            INSERT (    LOC_ID
                           , ITEM_CODE
                           , ITEM_DESC
                           , ITEM_CTGRY_ID
                           , ITEM_INV_QTY
                           , CRT_USER_ID
                           , CRT_DT
                   )
             VALUES (
                             N.LOC_ID
                           , N.ITEM_CODE
                           , N.ITEM_DESC
                           , N.ITEM_CTGRY_ID
                           , N.ITEM_INV_QTY
                           , N.USER_ID
                           , SYSDATE
                   )
</update>


 <update id="updateOutStockLOG0106M" parameterType="Map">
    Update  LOG0106M
        SET  ITEM_INV_QTY = NVL(ITEM_INV_QTY,0) - #{itemRecvQty}
             , UPD_USER_ID  = #{userId}
             , UPD_DT       = SYSDATE
     WHERE  LOC_ID   = #{logId}
        AND  ITEM_CODE =#{itemCode}
 </update>




 <select id="selectPosItmList" parameterType="Map" resultType="egovMap">
        <![CDATA[
			SELECT
			    Project1.StkID AS CODE_ID,
			    Project1.StkCode AS CODE_NAME
			FROM
			    (
			    SELECT
			        stk.STK_ID AS StkID, stk.STK_CODE AS StkCode, stk.STK_DESC AS StkDesc, stk.STK_CTGRY_ID AS StkCategoryID, stk.STK_TYPE_ID AS StkTypeID, stk.STUS_CODE_ID AS StatusCodeID, stk.IS_SIRIM AS IsSirim, stk.IS_NCV AS IsNCV, stk.SERIAL_CHK AS serialchk, stk.QTY_PER_CARTON AS QtyPerCarton, stk.UPD_USER_ID AS Updator, stk.UPD_DT AS Updated, stk.NET_WT AS NetWeight, stk.GROS_WT AS GrossWeight, stk.MEASURE_CBM AS MeasurementCBM, stk.STK_GRAD AS StkGrade, stk.BS_POINT AS BSPoint, stk.UNIT_VALU AS UnitValue, stk.STK_OLD_CODE AS StkOldCd, stk.stk_ext_type AS stkexttype, stk.stk_lch_dt AS stklchdt, stk.is_stock_audit AS isstockaudit, stk.stk_size, stk.is_smo, stk.is_serial_replc, (
			        SELECT
			            CODE_NAME
			        FROM
			            SYS0013M
			        WHERE
			            CODE_ID = stk.STK_CTGRY_ID) CodeName, (
			        SELECT
			            CODE_NAME
			        FROM
			            SYS0013M
			        WHERE
			            CODE_ID = stk.STK_TYPE_ID) CodeName1, (
			        SELECT
			            NAME
			        FROM
			            SYS0038M
			        WHERE
			            STUS_CODE_ID = stk.STUS_CODE_ID) Name,
			    CASE
			            WHEN (usr.USER_ID IS NOT NULL) THEN usr.USER_NAME
			            ELSE 'N'
			        END AS C1, (
			        SELECT
			            CODE_ID
			        FROM
			            SYS0013M
			        WHERE
			            CODE_ID = stk.UOM) C2, (
			        SELECT
			            CODE_NAME
			        FROM
			            SYS0013M
			        WHERE
			            CODE_ID = stk.UOM) C3,
			    CASE
			            WHEN (61 = stk.STK_TYPE_ID) THEN
			        CASE
			                WHEN (sp1.AMT IS NOT NULL) THEN sp1.AMT
			                ELSE CAST (0 AS FLOAT (53))
			            END
			            WHEN (sp2.AMT IS NOT NULL) THEN sp2.AMT
			            ELSE CAST (0 AS FLOAT (53))
			        END AS C4,
			    CASE
			            WHEN (stk.MASTER_STK_ID IS NOT NULL) THEN stk.MASTER_STK_ID
			            ELSE 0
			        END AS C5,
			    CASE
			            WHEN (stk.STK_COMM_AS IS NOT NULL) THEN stk.STK_COMM_AS
			            ELSE CAST (0 AS FLOAT (53))
			        END AS C6,
			    CASE
			            WHEN (stk.STK_COMM_OS_AS IS NOT NULL) THEN stk.STK_COMM_OS_AS
			            ELSE CAST (0 AS FLOAT (53))
			        END AS C7,
			    CASE
			            WHEN (stk.STK_COMM_BS IS NOT NULL) THEN stk.STK_COMM_BS
			            ELSE CAST (0 AS FLOAT (53))
			        END AS C8,
			    CASE
			            WHEN (stk.STK_COMM_OS_BS IS NOT NULL) THEN stk.STK_COMM_OS_BS
			            ELSE CAST (0 AS FLOAT (53))
			        END AS C9,
			    CASE
			            WHEN (stk.STK_COMM_INS IS NOT NULL) THEN stk.STK_COMM_INS
			            ELSE CAST (0 AS FLOAT (53))
			        END AS C10,
			    CASE
			            WHEN (stk.STK_COMM_OS_INS IS NOT NULL) THEN stk.STK_COMM_OS_INS
			            ELSE CAST (0 AS FLOAT (53))
			        END AS C11
			    FROM
			        SYS0026M stk
			    LEFT OUTER JOIN SYS0047M usr ON
			        usr.USER_ID = stk.UPD_USER_ID
			    LEFT OUTER JOIN SAL0016M sp1 ON
			        (67 = sp1.APP_TYPE_ID)
			        AND (61 = stk.STK_TYPE_ID)
			        AND (sp1.STK_ID = stk.STK_ID)
			        AND (0 = sp1.MEM_PAC_ID)
			        AND (1 = sp1.STUS_CODE_ID)
			    LEFT OUTER JOIN SAL0016M sp2 ON
			        (61 <> stk.STK_TYPE_ID)
			        AND (sp2.STK_ID = stk.STK_ID)
			        AND (0 = sp2.MEM_PAC_ID)
			        AND (1 = sp2.STUS_CODE_ID) ) Project1
			WHERE
			    1 = 1
			              ]]>
			              <if test="itmType != nul and itmType != '' ">
			       AND stkCategoryID = #{itmType}
			             </if>

			ORDER BY
			    StkCode

     </select>

<select id="selectPosStockMgmtViewList" parameterType="Map" resultType="egovMap">
        SELECT S.STK_CODE ,
                    A.SCN_NO ,
                    B.ITEM_CODE,
					B.ITEM_DESC,
					B.ITEM_CTGRY_ID,
                    NVL((SELECT ITEM_INV_QTY FROM LOG0106M WHERE ITEM_CODE =B.ITEM_CODE AND LOC_ID =A.SCN_FROM_LOC_ID),0    ) AS ITEM_INVT_QTY,
                    NVL((SELECT ITEM_INV_QTY FROM LOG0106M WHERE ITEM_CODE =B.ITEM_CODE AND LOC_ID =A.SCN_TO_LOC_ID),0    ) AS ITEM_TO_INVT_QTY,
                   B.ITEM_PURH_ORD_NO,
					B.ITEM_COND,
					B.ITEM_TRAN_QTY,
					B.ITEM_RECV_QTY,
					B.ITEM_VARI_QTY,
					B.ITEM_ADJ_QTY,
					B.ITEM_RTN_QTY,
					B.ITEM_REASON,
					B.ITEM_STATUS,
					B.CRT_USER_ID,
					B.CRT_DT,
					B.UPD_USER_ID,
					B.UPD_DT,
                    DECODE (A.SCN_MOVE_TYPE , 'I', B.ITEM_REQ_QTY,'T',B.ITEM_TRAN_QTY,'A',B.ITEM_ADJ_QTY ,'R',B.ITEM_RTN_QTY) AS ITEM_REQ_QTY,
                    B.ITEM_REJ_REMARK ,
				    B.ITEM_REJ_ATTCH_GRP_ID ,
				    FD.ATCH_FILE_ID,
				    FD.ATCH_FILE_NAME,
				    FD.FILE_SUB_PATH,
				    FD.PHYSICL_FILE_NAME,
				    DECODE (B.ITEM_RTN_REASON  ,'D' ,'Defect/Damage' ,'B','Broken','O','Others') AS ITEM_RTN_REASON,
				    (SELECT CODE_DESC  FROM SYS0013M WHERE CODE_MASTER_ID =11 AND CODE_ID = B.ITEM_CTGRY_ID ) AS ITEM_CTGRY_DESC,
                    DECODE (B.ITEM_STATUS , 'C', 'Completed','R','Rejected') AS ITEM_STATUS_DESC
				 FROM SAL0293M A , SAL0294D B  ,SYS0026M S ,SYS0070M F , SYS0071D FD
        WHERE A.SCN_NO  =B.SCN_NO
                 AND A.SCN_NO = #{scnNo}
                 AND B.ITEM_CODE  = S.STK_ID
                 AND B.ITEM_REJ_ATTCH_GRP_ID  = F.ATCH_FILE_GRP_ID (+)
                 AND F.ATCH_FILE_ID = FD.ATCH_FILE_ID (+)
</select>



<select id="selectItemInvtQty" parameterType="Map" resultType="egovMap">
        SELECT
                LOC_ID
				,ITEM_CODE
				,ITEM_DESC
				,ITEM_CTGRY_ID
				,ITEM_INV_QTY
				,ITEM_TRAN_QTY
            FROM LOG0106M
         WHERE ITEM_CODE =#{itemCode}
            AND LOC_ID =#{locId}
</select>

</mapper>