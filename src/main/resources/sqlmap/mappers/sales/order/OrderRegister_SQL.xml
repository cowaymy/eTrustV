<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.coway.trust.biz.sales.order.impl.OrderRegisterMapper">
    
    <select id="selectDocNo" parameterType="Integer" resultType="String">
        SELECT FN_GET_DOCNO(#{value}) from dual
    </select> 

    <select id="selectSrvCntcInfo" parameterType="Map" resultType="egovMap">
        SELECT T1.CUST_CARE_CNT_ID
             , T1.CUST_ID
             , T1.NAME
             , T1.CUST_INITIAL
             , T1.TEL_M
             , T1.TEL_O
             , T1.TEL_R
             , T1.EXT
             , T1.EMAIL
             , T1.STUS_CODE_ID
             , T1.CRT_USER_ID
             , T1.CRT_DT
             , T1.UPD_USER_ID
             , T1.UPD_DT
             , T1.TELF
          FROM SAL0026D T1
         WHERE T1.CUST_CARE_CNT_ID = #{custCareCntId}
           AND ROWNUM &lt;= 1
    </select>

    <select id="selectOldOrderId" parameterType="string" resultType="egovMap">
        SELECT T1.SALES_ORD_ID  
          FROM SAL0001D T1
         WHERE T1.SALES_ORD_NO = #{value}
           AND ROWNUM &lt;= 1
    </select>

    <select id="selectSvcExpire" parameterType="int" resultType="egovMap">
        SELECT T.SRV_PRD_ID
             , T.SRV_CONFIG_ID
             , T.SRV_MBRSH_ID
             , T.SRV_PRD_START_DT
             , T.SRV_PRD_EXPR_DT
             , T.SRV_PRD_EXPR_DT_MMYY
             , T.SRV_PRD_EXPR_DT_MMYY_ADD
             , T.SRV_PRD_DUR
             , T.SRV_PRD_STUS_ID
             , T.SRV_PRD_REM
             , T.SRV_PRD_CRT_DT
             , T.SRV_PRD_CRT_USER_ID
             , T.SRV_PRD_UPD_DT
             , T.SRV_PRD_UPD_USER_ID
             , T.SRV_PRD_CNTRCT_ID
          FROM
             ( SELECT T2.SRV_PRD_ID
                    , T2.SRV_CONFIG_ID
                    , T2.SRV_MBRSH_ID
                    , T2.SRV_PRD_START_DT
                    , T2.SRV_PRD_EXPR_DT
                    , TO_CHAR(T2.SRV_PRD_EXPR_DT, 'MM/YY') SRV_PRD_EXPR_DT_MMYY
                    , TO_CHAR(ADD_MONTHS(T2.SRV_PRD_EXPR_DT, 1),'MM/YY') SRV_PRD_EXPR_DT_MMYY_ADD
                    , T2.SRV_PRD_DUR
                    , T2.SRV_PRD_STUS_ID
                    , T2.SRV_PRD_REM
                    , T2.SRV_PRD_CRT_DT
                    , T2.SRV_PRD_CRT_USER_ID
                    , T2.SRV_PRD_UPD_DT
                    , T2.SRV_PRD_UPD_USER_ID
                    , T2.SRV_PRD_CNTRCT_ID
                 FROM SAL0090D T1
                 JOIN SAL0088D T2   ON T1.SRV_CONFIG_ID = T2.SRV_CONFIG_ID
                WHERE T1.SRV_SO_ID = #{value}
                  AND 1 = T1.SRV_STUS_ID
                ORDER BY T2.SRV_PRD_EXPR_DT DESC
             ) T
         WHERE ROWNUM &lt;= 1
    </select>

    <select id="selectVerifyOldSalesOrderNoValidity" parameterType="int" resultType="egovMap">
        SELECT T1.SALES_ORD_ID
             , T1.SALES_ORD_NO
             , T1.REF_NO
             , T1.SALES_DT
             , T1.CUST_ID
             , T1.CUST_CNT_ID
             , T1.CUST_ADD_ID
             , T1.MEM_ID
             , T1.BRNCH_ID
             , T1.APP_TYPE_ID
         <!--, T1.DSCNT_AMT-->
         <!--, T1.TAX_AMT-->
             , T1.TOT_AMT
             , T1.PROMO_ID
             , T1.BINDING_NO
             , T1.CC_PROMO_ID
             , T1.TOT_PV
             , T1.REM
             , T1.PV_MONTH
             , T1.PV_YEAR
             , T1.STUS_CODE_ID
             , T1.UPD_DT
             , T1.UPD_USER_ID
             , T1.SYNC_CHK
             , T1.CUST_PO_NO
             , T1.REN_CHK_ID
             , T1.INST_PRIOD
             , T1.DO_NO
             , T1.DEPT_CODE
             , T1.GRP_CODE
             , T1.ORG_CODE
             , T1.SALES_ORD_ID_OLD
             , T1.EDIT_TYPE_ID
             , T1.CUST_BILL_ID
             , T1.MTH_RENT_AMT
             , T1.LOK
             , T1.AEON_STUS_ID
             , T1.COMM_DT
             , T1.CRT_USER_ID
             , T1.CRT_DT
             , T1.PAY_COM_DT
             , T1.DEF_RENT_AMT
             , T1.REF_DOC_ID
         <!--, T1.RENT_PROMO_ID-->
             , T1.SALES_HM_ID
             , T1.SALES_SM_ID
             , T1.SALES_GM_ID
             , T1.ADV_BILL
             , T1.CNVR_SCHEME_ID
             , T1.CUST_CARE_CNT_ID
         <!--, T1.EMP_TYPE-->
          FROM SAL0001D T1
         WHERE T1.SALES_ORD_ID_OLD = #{value}
           AND T1.STUS_CODE_ID IN (1,4)
           AND ROWNUM &lt;= 1
    </select>

    <select id="selectSalesOrderM" parameterType="Map" resultType="egovMap">
        SELECT T1.SALES_ORD_ID
             , T1.SALES_ORD_NO
             , T1.REF_NO
             , T1.SALES_DT
             , T1.CUST_ID
             , T1.CUST_CNT_ID
             , T1.CUST_ADD_ID
             , T1.MEM_ID
             , T1.BRNCH_ID
             , T1.APP_TYPE_ID
         <!--, T1.DSCNT_AMT-->
         <!--, T1.TAX_AMT-->
             , T1.TOT_AMT
             , T1.PROMO_ID
             , T1.BINDING_NO
             , T1.CC_PROMO_ID
             , T1.TOT_PV
             , T1.REM
             , T1.PV_MONTH
             , T1.PV_YEAR
             , T1.STUS_CODE_ID
             , T1.UPD_DT
             , T1.UPD_USER_ID
             , T1.SYNC_CHK
             , T1.CUST_PO_NO
             , T1.REN_CHK_ID
             , T1.INST_PRIOD
             , T1.DO_NO
             , T1.DEPT_CODE
             , T1.GRP_CODE
             , T1.ORG_CODE
             , T1.SALES_ORD_ID_OLD
             , T1.EDIT_TYPE_ID
             , T1.CUST_BILL_ID
             , T1.MTH_RENT_AMT
             , T1.LOK
             , T1.AEON_STUS_ID
             , T1.COMM_DT
             , T1.CRT_USER_ID
             , T1.CRT_DT
             , T1.PAY_COM_DT
             , T1.DEF_RENT_AMT
             , T1.REF_DOC_ID
         <!--, T1.RENT_PROMO_ID-->
             , T1.SALES_HM_ID
             , T1.SALES_SM_ID
             , T1.SALES_GM_ID
             , T1.ADV_BILL
             , T1.CNVR_SCHEME_ID
             , T1.CUST_CARE_CNT_ID
             , T1.EMP_CHK
             , T1.EX_TRADE
             , T1.ECASH
         <!--, T1.STK_LOC-->
          FROM SAL0001D T1
         WHERE T1.SALES_ORD_ID = #{salesOrdId}
         <if test='appTypeId != null and appTypeId !=0'>
           AND T1.APP_TYPE_ID = #{appTypeId}
         </if>
           AND ROWNUM &lt;= 1
    </select>

    <select id="selectSalesOrderRentalScheme" parameterType="int" resultType="egovMap">
        SELECT T1.REN_SCH_ID
             , T1.SALES_ORD_ID
             , T1.STUS_CODE_ID
             , T1.REN_SCH_DT
             , T1.REN_SCH_TERMS
             , T1.IS_SYNC
          FROM SAL0071D T1
         WHERE T1.SALES_ORD_ID = #{value}
           AND T1.STUS_CODE_ID IN ( 'REG','INV','SUS' )
           AND ROWNUM &lt;= 1
    </select>

    <select id="selectAccRentLedgers" parameterType="int" resultType="egovMap">
		SELECT T.RENT_RUN_ID
		     , T.RENT_ID
		     , T.RENT_SO_ID
		     , T.RENT_DOC_NO
		     , T.RENT_DOC_TYPE_ID
		     , T.RENT_DT_TM
		     , T.RENT_AMT
		     , T.RENT_BATCH_NO
		     , T.RENT_INST_NO
		     , T.RENT_UPD_USER_ID
		     , T.RENT_UPD_DT
		     , T.RENT_IS_SYNC
		     , T.RENT_BILL_RUNNG_TOT
		     , T.R01 R01
		     , T.R02 R02
		  FROM
		     ( SELECT T1.RENT_RUN_ID
		            , T1.RENT_ID
		            , T1.RENT_SO_ID
		            , T1.RENT_DOC_NO
		            , T1.RENT_DOC_TYPE_ID
		            , T1.RENT_DT_TM
		            , T1.RENT_AMT
		            , T1.RENT_BATCH_NO
		            , T1.RENT_INST_NO
		            , T1.RENT_UPD_USER_ID
		            , T1.RENT_UPD_DT
		            , T1.RENT_IS_SYNC
		            , T1.RENT_BILL_RUNNG_TOT
		            , T1.R01
		            , T1.R02
		         FROM PAY0022D T1
		        WHERE T1.RENT_SO_ID = #{value}
		        ORDER BY T1.RENT_INST_NO DESC
		     ) T
         WHERE ROWNUM &lt;= 1
    </select>

    <select id="selectRentAmt" parameterType="int" resultType="java.math.BigDecimal">
        SELECT SUM(T1.RENT_AMT) RENT_AMT
          FROM PAY0022D T1
         WHERE T1.RENT_SO_ID = #{value}
    </select>

    <select id="selectPromoDesc" parameterType="int" resultType="egovMap">
		SELECT T1.PROMO_DESC
		     , T1.PROMO_DISC_PERIOD_TP
		     , T1.PROMO_DISC_PERIOD
		     , T1.IS_NEW
		  FROM SAL0017D T1
		 WHERE T1.PROMO_ID = #{value}
    </select>

    <select id="selectStockPrice" parameterType="Map" resultType="egovMap">
		SELECT NVL(T.PRC_ID, 0) AS PRICE_ID
		     , NVL(T.PRC_COSTING, 0) AS COST
		     , NVL(T.AMT, 0) AS NORMAL_PRICE
		     , NVL(T.PRC_PV, 0) AS PV
		     , DECODE(T.APP_TYPE_ID, 66, T.AMT, 0) AS MONTHLY_RENTAL
		     , NVL(T.PRC_RPF, 0) RENTAL_DEPOSIT
		     , NVL(T.TRADE_IN_PV, 0) TRADE_IN_PV
		  FROM
		     ( SELECT T2.PRC_ID
		            , T2.AMT
		            , T2.APP_TYPE_ID
		            , T2.PRC_RPF
		            , T2.PRC_PV
		            , T2.TRADE_IN_PV
		            , T2.PRC_COSTING
		         FROM SYS0026M T1
		         LEFT
		         JOIN SAL0016M T2
		           ON T2.STK_ID = T1.STK_ID
		          AND T2.APP_TYPE_ID = #{appTypeId}
		        WHERE T1.STK_ID = #{stkId}
		          AND 61 = T1.STK_TYPE_ID
		          AND ROWNUM &lt;= 1 ) T
    </select>

    <select id="selectDocSubmissionList" parameterType="Map" resultType="egovMap">
        SELECT '0' AS chkfield
             , T.CODE_ID
             , T.TYPE_DESC
          FROM
             ( SELECT T1.CODE_ID
                    , T1.CODE_DESC TYPE_DESC
                    , T2.TYPE_DT_SEQ
                 FROM SYS0013M T1
                 JOIN ORG0013C T2 ON T1.CODE_ID = T2.TYPE_ID
                WHERE T2.TYPE_CODE_ID = #{typeCodeId}
                  AND 1 = T2.STUS_ID
                  AND T2.TYPE_GRP_ID = #{typeCodeId}
             ) T
         ORDER BY T.TYPE_DT_SEQ ASC
    </select>
    
    <select id="selectPromotionByAppTypeStock" parameterType="Map" resultType="egovMap">
        SELECT T.PROMO_ID CODE
             , T.PROMO_DESC CODE_NAME
          FROM
             ( SELECT DISTINCT T2.PROMO_ID PROMO_ID
                    , T2.PROMO_CODE || '-' || T2.PROMO_DESC PROMO_DESC
                 FROM SAL0018D T1
                 JOIN SAL0017D T2
                   ON T2.PROMO_ID = T1.PROMO_ID
                  AND T2.PROMO_STUS_ID = 1
                  AND T2.PROMO_APP_TYPE_ID = #{appTypeId}
                  AND T2.PROMO_TYPE_ID = 2282 <!-- Discount -->
                  AND 0 = T2.PROMO_IS_TRIAL_CNVR
                  AND TO_CHAR(T2.PROMO_DT_FROM, 'YYYYMMDD') &lt;= TO_CHAR(SYSDATE, 'YYYYMMDD')
                  AND TO_CHAR(T2.PROMO_DT_END,  'YYYYMMDD') &gt;= TO_CHAR(SYSDATE, 'YYYYMMDD')
                WHERE T1.PROMO_ITM_STK_ID = #{stkId}
                  AND T1.PROMO_ITM_STUS_ID = 1
             ) T
         ORDER BY T.PROMO_DESC ASC
    </select>
    
    <select id="selectProductPromotionPriceByPromoStockID" parameterType="Map" resultType="egovMap">
        SELECT T1.PROMO_ITM_ID
             , T1.PROMO_ID
             , T1.PROMO_ITM_STK_ID
             , T1.PROMO_ITM_CUR_ID
             , T1.PROMO_ITM_PRC
             , T1.PROMO_ITM_PV
             , T1.PROMO_ITM_STUS_ID
             , T1.PROMO_ITM_UPD_USER_ID
             , T1.PROMO_ITM_UPD_DT
             , T1.PROMO_ITM_RENTAL
             , T1.PROMO_ITM_RENT_PRIOD
             , T1.PROMO_ITM_OBLIG_PRIOD
          FROM SAL0018D T1
         WHERE T1.PROMO_ID = #{promoId}
           AND T1.PROMO_ITM_STK_ID = #{stkId}
           AND 1 = T1.PROMO_ITM_STUS_ID
           AND ROWNUM &lt;= 1
    </select>
    
    <select id="selectProductPromotionPriceByPromoStockIDNew" parameterType="Map" resultType="egovMap">
        SELECT T1.PROMO_ITM_ID
             , T1.PROMO_ID
             , T1.PROMO_ITM_STK_ID
             , T2.STK_CODE AS ITMCD
             , T2.STK_DESC AS ITMNAME
             , T1.PROMO_ITM_CUR_ID
             , T1.PROMO_ITM_PRC
             , T4.AMT
             , T4.PRC_RPF
             , T4.PRC_PV
             , FLOOR(T4.AMT - DECODE(T3.PROMO_DISC_TYPE, 0, T4.AMT*(T3.PROMO_PRC_PRCNT/100), T3.PROMO_PRC_PRCNT) - T3.PROMO_ADD_DISC_PRC) AS PROMO_AMT
             , T4.PRC_RPF - T3.PROMO_RPF_DISC_AMT AS PROMO_PRC_RPF
             , T1.PROMO_ITM_PV
             , T3.PROMO_APP_TYPE_ID
          FROM SAL0018D T1
          LEFT OUTER
          JOIN SYS0026M T2
            ON T1.PROMO_ITM_STK_ID = T2.STK_ID
          LEFT OUTER
          JOIN SAL0017D T3
            ON T1.PROMO_ID = T3.PROMO_ID
          LEFT OUTER
          JOIN SAL0016M T4
            ON T4.STK_ID = T1.PROMO_ITM_STK_ID
           AND T4.APP_TYPE_ID = DECODE(T3.PROMO_APP_TYPE_ID, 2284, 66, 2285, 67, 2286, 68, 2287, 1412)
         WHERE T1.PROMO_ID = #{promoId}
           AND T1.PROMO_ITM_STUS_ID = 1
           AND T1.PROMO_ITM_STK_ID = #{stkId}
    </select>
    
    <select id="selectTrialNo" parameterType="Map" resultType="egovMap">
        SELECT T1.SALES_ORD_ID
             , T1.SALES_ORD_NO
             , T1.REF_NO
             , T1.SALES_DT
             , T1.CUST_ID
             , T1.CUST_CNT_ID
             , T1.CUST_ADD_ID
             , T1.MEM_ID
             , T1.BRNCH_ID
             , T1.APP_TYPE_ID
         <!--, T1.DSCNT_AMT-->
         <!--, T1.TAX_AMT-->
             , T1.TOT_AMT
             , T1.PROMO_ID
             , T1.BINDING_NO
             , T1.CC_PROMO_ID
             , T1.TOT_PV
             , T1.REM
             , T1.PV_MONTH
             , T1.PV_YEAR
             , T1.STUS_CODE_ID
             , T1.UPD_DT
             , T1.UPD_USER_ID
             , T1.SYNC_CHK
             , T1.CUST_PO_NO
             , T1.REN_CHK_ID
             , T1.INST_PRIOD
             , T1.DO_NO DO_NO
             , T1.DEPT_CODE
             , T1.GRP_CODE
             , T1.ORG_CODE
             , T1.SALES_ORD_ID_OLD
             , T1.EDIT_TYPE_ID
             , T1.CUST_BILL_ID
             , T1.MTH_RENT_AMT
             , T1.LOK
             , T1.AEON_STUS_ID
             , T1.COMM_DT
             , T1.CRT_USER_ID
             , T1.CRT_DT
             , T1.PAY_COM_DT
             , T1.DEF_RENT_AMT
             , T1.REF_DOC_ID
         <!--, T1.RENT_PROMO_ID-->
             , T1.SALES_HM_ID
             , T1.SALES_SM_ID
             , T1.SALES_GM_ID
             , T1.ADV_BILL
             , T1.CNVR_SCHEME_ID
             , T1.CUST_CARE_CNT_ID
          FROM SAL0001D T1
         WHERE (T1.BINDING_NO = '' OR T1.BINDING_NO IS NULL)
           AND (T1.SALES_ORD_ID_OLD = 0 OR T1.SALES_ORD_ID_OLD IS NULL)
           AND T1.SALES_ORD_NO = #{salesOrdNo}
           AND ROWNUM &lt;= 1
    </select>
    
    <select id="selectMemberByMemberIDCode" parameterType="Map" resultType="egovMap">
		SELECT T.MEM_ID
		     , T.MEM_CODE
		     , T.NAME
		     , T.NRIC
		     , T.MEM_TYPE
		     , T.CODE_NAME
		     , T.DEPT_CODE
		     , T.GRP_CODE
		     , T.ORG_CODE
		     , T.MEM_LVL
		     , T.LVL3_UP_ID
		     , T.LVL2_UP_ID
		     , T.LVL1_UP_ID
		  FROM (
		     SELECT T1.MEM_ID
		          , T1.MEM_CODE
		          , T1.MEM_TYPE
		          , T1.NAME
		          , T1.NRIC
		          , T2.CODE_NAME
		          , CASE WHEN (NOT((T3.MEM_ID IS NULL)
		                       AND (T3.MEM_CODE IS NULL)
		                       AND (T3.MEM_LVL IS NULL)
		                       AND (T3.DEPT_CODE IS NULL)
		                       AND (T3.GRP_CODE IS NULL)
		                       AND (T3.ORG_CODE IS NULL)
		                       AND (T3.TOP_ORG_CODE IS NULL)
		                       AND (T3.MEM_UP_ID IS NULL)
		                       AND (T3.LVL3_UP_ID IS NULL)
		                       AND (T3.LVL2_UP_ID IS NULL)
		                       AND (T3.LVL1_UP_ID IS NULL)
		                       AND (T3.LVL0_UP_ID IS NULL))) THEN T3.DEPT_CODE
		                 ELSE ''
		            END DEPT_CODE
		          , CASE WHEN (NOT((T3.MEM_ID IS NULL)
		                       AND (T3.MEM_CODE IS NULL)
		                       AND (T3.MEM_LVL IS NULL)
		                       AND (T3.DEPT_CODE IS NULL)
		                       AND (T3.GRP_CODE IS NULL)
		                       AND (T3.ORG_CODE IS NULL)
		                       AND (T3.TOP_ORG_CODE IS NULL)
		                       AND (T3.MEM_UP_ID IS NULL)
		                       AND (T3.LVL3_UP_ID IS NULL)
		                       AND (T3.LVL2_UP_ID IS NULL)
		                       AND (T3.LVL1_UP_ID IS NULL)
		                       AND (T3.LVL0_UP_ID IS NULL))) THEN T3.GRP_CODE
		                 ELSE ''
		            END GRP_CODE
		          , CASE WHEN (NOT((T3.MEM_ID       IS NULL)
		                       AND (T3.MEM_CODE     IS NULL)
		                       AND (T3.MEM_LVL      IS NULL)
		                       AND (T3.DEPT_CODE    IS NULL)
		                       AND (T3.GRP_CODE     IS NULL)
		                       AND (T3.ORG_CODE     IS NULL)
		                       AND (T3.TOP_ORG_CODE IS NULL)
		                       AND (T3.MEM_UP_ID    IS NULL)
		                       AND (T3.LVL3_UP_ID   IS NULL)
		                       AND (T3.LVL2_UP_ID   IS NULL)
		                       AND (T3.LVL1_UP_ID   IS NULL)
		                       AND (T3.LVL0_UP_ID   IS NULL))) THEN T3.ORG_CODE
		                 ELSE ''
		            END ORG_CODE
		          , CASE WHEN (NOT((T3.MEM_ID       IS NULL)
		                       AND (T3.MEM_CODE     IS NULL)
		                       AND (T3.MEM_LVL      IS NULL)
		                       AND (T3.DEPT_CODE    IS NULL)
		                       AND (T3.GRP_CODE     IS NULL)
		                       AND (T3.ORG_CODE     IS NULL)
		                       AND (T3.TOP_ORG_CODE IS NULL)
		                       AND (T3.MEM_UP_ID    IS NULL)
		                       AND (T3.LVL3_UP_ID   IS NULL)
		                       AND (T3.LVL2_UP_ID   IS NULL)
		                       AND (T3.LVL1_UP_ID   IS NULL)
		                       AND (T3.LVL0_UP_ID   IS NULL))) THEN T3.MEM_LVL
		                ELSE 0
		                   END MEM_LVL
		          , CASE WHEN (NOT((T3.MEM_ID       IS NULL)
		                       AND (T3.MEM_CODE     IS NULL)
		                       AND (T3.MEM_LVL      IS NULL)
		                       AND (T3.DEPT_CODE    IS NULL)
		                       AND (T3.GRP_CODE     IS NULL)
		                       AND (T3.ORG_CODE     IS NULL)
		                       AND (T3.TOP_ORG_CODE IS NULL)
		                       AND (T3.MEM_UP_ID    IS NULL)
		                       AND (T3.LVL3_UP_ID   IS NULL)
		                       AND (T3.LVL2_UP_ID   IS NULL)
		                       AND (T3.LVL1_UP_ID   IS NULL)
		                       AND (T3.LVL0_UP_ID   IS NULL))) THEN T3.LVL3_UP_ID
		                 ELSE 0
		            END LVL3_UP_ID
		          , CASE WHEN (NOT((T3.MEM_ID       IS NULL)
		                       AND (T3.MEM_CODE     IS NULL)
		                       AND (T3.MEM_LVL      IS NULL)
		                       AND (T3.DEPT_CODE    IS NULL)
		                       AND (T3.GRP_CODE     IS NULL)
		                       AND (T3.ORG_CODE     IS NULL)
		                       AND (T3.TOP_ORG_CODE IS NULL)
		                       AND (T3.MEM_UP_ID    IS NULL)
		                       AND (T3.LVL3_UP_ID   IS NULL)
		                       AND (T3.LVL2_UP_ID   IS NULL)
		                       AND (T3.LVL1_UP_ID   IS NULL)
		                       AND (T3.LVL0_UP_ID   IS NULL))) THEN T3.LVL2_UP_ID
		                 ELSE 0
		            END LVL2_UP_ID
		          , CASE WHEN (NOT((T3.MEM_ID       IS NULL)
		                       AND (T3.MEM_CODE     IS NULL)
		                       AND (T3.MEM_LVL      IS NULL)
		                       AND (T3.DEPT_CODE    IS NULL)
		                       AND (T3.GRP_CODE     IS NULL)
		                       AND (T3.ORG_CODE     IS NULL)
		                       AND (T3.TOP_ORG_CODE IS NULL)
		                       AND (T3.MEM_UP_ID    IS NULL)
		                       AND (T3.LVL3_UP_ID   IS NULL)
		                       AND (T3.LVL2_UP_ID   IS NULL)
		                       AND (T3.LVL1_UP_ID   IS NULL)
		                       AND (T3.LVL0_UP_ID   IS NULL))) THEN T3.LVL1_UP_ID
		                 ELSE 0
		            END LVL1_UP_ID
		       FROM ORG0001D T1
		       JOIN SYS0013M T2
		         ON T2.CODE_ID = T1.MEM_TYPE
		       LEFT
		       JOIN (SELECT V1.MEM_ID
		                  , V1.MEM_CODE
		                  , V1.MEM_LVL
		                  , V1.DEPT_CODE
		                  , V1.GRP_CODE
		                  , V1.ORG_CODE
		                  , V1.TOP_ORG_CODE
		                  , V1.MEM_UP_ID
		                  , V1.LVL3_UP_ID
		                  , V1.LVL2_UP_ID
		                  , V1.LVL1_UP_ID
		                  , V1.LVL0_UP_ID
		                      FROM ORG1001V V1 ) T3
		         ON T3.MEM_ID = T1.MEM_ID
		      WHERE 1 = 1
              <if test='memId != null and memId !=0'>
                AND T1.MEM_ID = #{memId}
              </if>
              <if test='memCode != null and memCode !=""'>
                AND T1.MEM_CODE = #{memCode}
              </if>
		        AND ROWNUM &lt;= 1 ) T
    </select>
    
    <select id="selectMemberList" parameterType="Map" resultType="egovMap">
		SELECT TT.MEM_ID
		     , TT.MEM_CODE
		     , TT.MEM_TYPE
		     , TT.NAME
		     , TT.NRIC
		     , TT.RANK
		     , TT.UPD_DT
		     , TT.BRNCH
		     , TT.STUS
		     , TT.TEL_HUSE
		     , TT.TEL_MOBILE
		     , TT.TEL_OFFICE
		     , TT.MEM_LVL
		     , TT.DEPT_CODE
		     , TT.EMAIL
		  FROM ( SELECT T.MEM_ID
		              , T.MEM_CODE
		              , T.MEM_TYPE
		              , T.NAME
		              , T.NRIC
		              , T.RANK
		              , T.UPD_DT
		              , T.BRNCH
		              , T.STUS
		              , T.TEL_HUSE
		              , T.TEL_MOBILE
		              , T.TEL_OFFICE
		              , T.MEM_LVL
		              , T.DEPT_CODE
		              , T.EMAIL
		              , ROW_NUMBER() OVER ( ORDER BY T.MEM_CODE ASC  ) ROW_NUMBER
		           FROM
		              ( SELECT T1.MEM_ID
		                     , T1.MEM_CODE
		                     , T1.MEM_TYPE
		                     , T1.NAME
		                     , T1.NRIC
		                     , T1.RANK
		                     , T1.UPD_DT
		                     , NVL(T1.BRNCH, 0) BRNCH
		                     , NVL(T1.STUS, 0) STUS
		                     , NVL(T1.TEL_HUSE, '') TEL_HUSE
		                     , NVL(T1.TEL_MOBILE, '') TEL_MOBILE
		                     , NVL(T1.TEL_OFFICE, '') TEL_OFFICE
		                     , NVL(T2.MEM_LVL, 0) MEM_LVL
		                     , NVL(T2.DEPT_CODE, '') DEPT_CODE
		                     , NVL(T1.EMAIL, '') EMAIL
		                  FROM ORG0001D T1
		                  LEFT
		                  JOIN ORG0005D T2
		                    ON T2.MEM_ID = T1.MEM_ID
		                 WHERE 8 != T1.STUS
		                 <if test='stus != null and stus > 0'>
		                   AND T1.STUS = #{stus}
		                 </if>
                         <if test='memType != null and memType > 0'>
                           AND T1.MEM_TYPE = #{memType}
                         </if>
                         <if test='memCode != null and memCode !=""'>
                           AND T1.MEM_CODE = #{memCode}
                         </if>
                         <if test='name != null and name !=""'>
                           AND UPPER(T1.NAME) LIKE '%'||UPPER(#{name})||'%'
                         </if>
                         <if test='nric != null and nric !=""'>
                           AND UPPER(T1.NRIC) LIKE '%'||UPPER(#{nric})||'%'
                         </if>
                         <if test='brnch != null and brnch > 0'>
                           AND T1.BRNCH = #{brnch}
                         </if>
                         <if test='memLvl != null and memLvl > 0'>
                           AND T2.MEM_LVL = #{memLvl}
                         </if>
		              ) T
		       ) TT ORDER BY MEM_CODE ASC
    </select>
    
    <select id="selectBOMList" parameterType="Map" resultType="egovMap">
		SELECT T1.BOM_ID
		     , T1.BOM_STK_ID
		     , T2.STK_DESC
		     , T1.BOM_PART_ID
		     , T3.STK_DESC
		     , T1.BOM_PART_QTY
		     , T1.BOM_PART_TYPE_ID
		     , T4.CODE_NAME
		     , T1.BOM_PART_STUS_ID
		     , T6.NAME
		     , T1.BOM_PART_PRIOD
		     , T1.BOM_CRT_DT
		     , T1.BOM_CRT_USER_ID
		     , NVL(T7.USER_NAME, '') USER_NAME
		     , T1.BOM_UPD_DT
		     , T1.BOM_UPD_USER_ID
		     , NVL(T8.USER_NAME, '') USER_NAME
		     , T1.BOM_TYPE_ID
		     , T5.CODE_NAME
		  FROM LOG0001M T1
		  JOIN SYS0026M T2 ON T2.STK_ID = T1.BOM_STK_ID
		  JOIN SYS0026M T3 ON T3.STK_ID = T1.BOM_PART_ID
		  JOIN SYS0013M T4 ON T4.CODE_ID = T1.BOM_PART_TYPE_ID
		  JOIN SYS0013M T5 ON T5.CODE_ID = T1.BOM_TYPE_ID
		  JOIN SYS0038M T6 ON T6.STUS_CODE_ID = T1.BOM_PART_STUS_ID
		  LEFT
		  JOIN SYS0047M T7 ON T7.USER_ID = T1.BOM_CRT_USER_ID
		  LEFT
		  JOIN SYS0047M T8 ON T8.USER_ID = T1.BOM_UPD_USER_ID
		 WHERE T1.BOM_STK_ID = #{bomStkId}
		   AND T1.BOM_PART_PRIOD &gt; 0
    </select>
    
    <insert id="insertSalesOrderM" parameterType="salesOrderMVO">
      <selectKey keyProperty="salesOrdId" resultType="Integer" order="BEFORE">
        SELECT SAL0001D_SALES_ORD_ID_SEQ.NEXTVAL FROM DUAL
      </selectKey>
		INSERT
		  INTO SAL0001D
		     ( SALES_ORD_ID
		     , SALES_ORD_NO
		     , REF_NO
		     , SALES_DT
		     , CUST_ID
		     , CUST_CNT_ID
		     , CUST_ADD_ID
		     , MEM_ID
		     , BRNCH_ID
		     , APP_TYPE_ID
		 <!--, DSCNT_AMT-->
		 <!--, TAX_AMT-->
		     , TOT_AMT
		     , PROMO_ID
		     , BINDING_NO
		     , CC_PROMO_ID
		     , TOT_PV
		     , REM
		     , PV_MONTH
		     , PV_YEAR
		     , STUS_CODE_ID
		     , UPD_DT
		     , UPD_USER_ID
		     , SYNC_CHK
		     , CUST_PO_NO
		     , REN_CHK_ID
		     , INST_PRIOD
		     , DO_NO
		     , DEPT_CODE
		     , GRP_CODE
		     , ORG_CODE
		     , SALES_ORD_ID_OLD
		     , EDIT_TYPE_ID
		     , CUST_BILL_ID
		     , MTH_RENT_AMT
		     , LOK
		     , AEON_STUS_ID
		     , COMM_DT
		     , CRT_USER_ID
		     , CRT_DT
		     , PAY_COM_DT
		     , DEF_RENT_AMT
		     , REF_DOC_ID
		 <!--, RENT_PROMO_ID-->
		     , SALES_HM_ID
		     , SALES_SM_ID
		     , SALES_GM_ID
		     , ADV_BILL
		     , CNVR_SCHEME_ID
		     , CUST_CARE_CNT_ID
		     )
		VALUES
		     ( #{salesOrdId}
		     , #{salesOrdNo}
		     , #{refNo}
		     , SYSDATE <!-- TO_DATE(TO_CHAR(SYSDATE, 'yyyy-MM-dd'), 'yyyy-MM-dd') -->
		     , #{custId}
		     , #{custCntId}
		     , #{custAddId}
		     , #{memId}
		     , #{brnchId}
		     , #{appTypeId}
		     , #{totAmt}
		     , #{promoId}
		     , #{bindingNo}
		     , #{ccPromoId}
		     , #{totPv}
		     , #{rem}
		     , #{pvMonth}
		     , #{pvYear}
		     , #{stusCodeId}
		     , SYSDATE
		     , #{updUserId}
		     , #{syncChk}
		     , #{custPoNo}
		     , #{renChkId}
		     , #{instPriod}
		     , #{doNo}
		     , #{deptCode}
		     , #{grpCode}
		     , #{orgCode}
		     , #{salesOrdIdOld}
		     , #{editTypeId}
		     , #{custBillId}
		     , #{mthRentAmt}
		     , #{lok}
		     , #{aeonStusId}
		     , TO_DATE(#{commDt}, 'yyyy-MM-dd')
		     , #{crtUserId}
		     , SYSDATE
		     , TO_DATE(#{payComDt}, 'yyyy-MM-dd')
		     , #{defRentAmt}
		     , #{refDocId}
		     , #{salesHmId}
		     , #{salesSmId}
		     , #{salesGmId}
		     , #{advBill}
		     , #{cnvrSchemeId}
		     , #{custCareCntId}
		     )
    </insert>

    <update id="updateCustBillId" parameterType="salesOrderMVO">
        UPDATE SAL0001D
           SET CUST_BILL_ID = #{custBillId}
         WHERE SALES_ORD_ID = #{salesOrdId}
    </update>
    
    <insert id="insertSalesOrderD" parameterType="salesOrderDVO">
		INSERT
		  INTO SAL0002D
		     ( SALES_ORD_ID
		     , ITM_NO
		     , ITM_STK_ID
		     , ITM_PRC_ID
		     , ITM_QTY
		 <!--, ITM_TAX-->
		 <!--, ITM_DSCNT-->
		     , ITM_PRC
		     , ITM_PV
		     , STUS_CODE_ID
		     , UPD_DT
		     , UPD_USER_ID
		     , EDIT_TYPE_ID
		     , ITM_ID
		     , ITM_CALL_ENTRY_ID
		     )
		VALUES
		     ( #{salesOrdId}
		     , #{itmNo}
		     , #{itmStkId}
		     , #{itmPrcId}
		     , #{itmQty}
		     , #{itmPrc}
		     , #{itmPv}
		     , #{stusCodeId}
		     , SYSDATE
		     , #{updUserId}
		     , #{editTypeId}
		     , #{itmId}
		     , #{itmCallEntryId}
		     )
	</insert>

    <insert id="insertInstallation" parameterType="installationVO">
      <selectKey keyProperty="installId" resultType="Integer" order="BEFORE">
        SELECT SAL0045D_INSTALL_ID_SEQ.NEXTVAL FROM DUAL
      </selectKey>
		INSERT
		  INTO SAL0045D
		     ( INSTALL_ID
		     , SALES_ORD_ID
		     , ADD_ID
		     , CNT_ID
		     , PRE_CALL_DT
		     , PRE_DT
		     , PRE_TM
		     , ACT_DT
		     , ACT_TM
		     , STUS_CODE_ID
		     , INSTCT
		     , UPD_DT
		     , UPD_USER_ID
		     , BRNCH_ID
		     , EDIT_TYPE_ID
		     , IS_TRADE_IN
		     , VRIFY_REM
		     )
		VALUES
		     ( #{installId}
		     , #{salesOrdId}
		     , #{addId}
		     , #{cntId}
		     , TO_DATE(#{preDt}, 'DD/MM/YYYY') - 1
		     , TO_DATE(#{preDt}, 'DD/MM/YYYY')
		     , #{preTm}
		     , TO_DATE(#{actDt}, 'YYYY/MM/DD')
		     , #{actTm}
		     , #{stusCodeId}
		     , #{instct}
		     , SYSDATE
		     , #{updUserId}
		     , #{brnchId}
		     , #{editTypeId}
		     , #{isTradeIn}
		     , #{vrifyRem}
		     )
    </insert>
    
    <insert id="insertRentPaySet" parameterType="rentPaySetVO">
      <selectKey keyProperty="rentPayId" resultType="Integer" order="BEFORE">
        SELECT SAL0074D_RENT_PAY_ID_SEQ.NEXTVAL FROM DUAL
      </selectKey>
		INSERT
		  INTO SAL0074D
		     ( RENT_PAY_ID
		     , SALES_ORD_ID
		     , MODE_ID
		     , CUST_CRC_ID
		     , BANK_ID
		     , CUST_ACC_ID
		     , DD_APPLY_DT
		     , DD_SUBMIT_DT
		     , DD_START_DT
		     , DD_REJCT_DT
		     , UPD_USER_ID
		     , UPD_DT
		     , STUS_CODE_ID
		     , IS_3RD_PARTY
		     , CUST_ID
		     , EDIT_TYPE_ID
		     , NRIC_OLD
		     , FAIL_RESN_ID
		     , ISSU_NRIC
		     , AEON_CNVR
		     , REM
		     , LAST_APPLY_USER
		     , PAY_TRM
		     , SVC_CNTRCT_ID
		     )
		VALUES
		     ( #{rentPayId}
		     , #{salesOrdId}
		     , #{modeId}
		     , #{custCrcId}
		     , #{bankId}
		     , #{custAccId}
		     , SYSDATE
		     , TO_DATE('1900-01-01', 'YYYY-MM-DD')
		     , TO_DATE('1900-01-01', 'YYYY-MM-DD')
		     , TO_DATE('1900-01-01', 'YYYY-MM-DD')
		     , #{updUserId}
		     , SYSDATE
		     , #{stusCodeId}
		     , #{is3RdParty}
		     , #{custId}
		     , #{editTypeId}
		     , #{nricOld}
		     , #{failResnId}
		     , #{issuNric}
		     , #{aeonCnvr}
		     , #{rem}
		     , #{lastApplyUser}
		     , #{payTrm}
		     , #{svcCntrctId}
	     )
	</insert>

    <insert id="insertCustBillMaster" parameterType="custBillMasterVO">
      <selectKey keyProperty="custBillId" resultType="Integer" order="BEFORE">
        SELECT SAL0024D_CUST_BILL_ID_SEQ.NEXTVAL FROM DUAL
      </selectKey>
		INSERT
		  INTO SAL0024D
		     ( CUST_BILL_ID
		     , CUST_BILL_SO_ID
		     , CUST_BILL_CUST_ID
		     , CUST_BILL_CNT_ID
		     , CUST_BILL_ADD_ID
		     , CUST_BILL_STUS_ID
		     , CUST_BILL_REM
		     , CUST_BILL_UPD_USER_ID
		     , CUST_BILL_UPD_DT
		     , CUST_BILL_GRP_NO
		     , CUST_BILL_CRT_USER_ID
		     , CUST_BILL_CRT_DT
		     , CUST_BILL_PAY_TRM
		     , CUST_BILL_INCHG_MEM_ID
		     , CUST_BILL_EMAIL
		     , CUST_BILL_IS_ESTM
		     , CUST_BILL_IS_SMS
		     , CUST_BILL_IS_POST
		     , CUST_BILL_PAY_REF_NO1
		     , CUST_BILL_PAY_REF_NO2
		     , CUST_BILL_EMAIL_ADD
		     , CUST_BILL_IS_WEB_PORTAL
		     , CUST_BILL_WEB_PORTAL_URL
		     , CUST_BILL_IS_SMS2
		     , CUST_BILL_CUST_CARE_CNT_ID
		     )
		VALUES
		     ( #{custBillId}
		     , #{custBillSoId}
		     , #{custBillCustId}
		     , #{custBillCntId}
		     , #{custBillAddId}
		     , #{custBillStusId}
		     , #{custBillRem}
		     , #{custBillUpdUserId}
		     , SYSDATE
		     , #{custBillGrpNo}
		     , #{custBillCrtUserId}
		     , SYSDATE
		     , #{custBillPayTrm}
		     , #{custBillInchgMemId}
		     , #{custBillEmail}
		     , #{custBillIsEstm}
		     , #{custBillIsSms}
		     , #{custBillIsPost}
		     , #{custBillPayRefNo1}
		     , #{custBillPayRefNo2}
		     , #{custBillEmailAdd}
		     , #{custBillIsWebPortal}
		     , #{custBillWebPortalUrl}
		     , #{custBillIsSms2}
		     , #{custBillCustCareCntId}
		     )
    </insert>
    
    <insert id="insertEStatementReq" parameterType="eStatementReqVO">
      <selectKey keyProperty="reqId" resultType="Integer" order="BEFORE">
        SELECT PAY0060D_REQ_ID_SEQ.NEXTVAL FROM DUAL
      </selectKey>
		INSERT
		  INTO PAY0060D
		     ( REQ_ID
		     , STUS_CODE_ID
		     , CUST_BILL_ID
		     , EMAIL
		     , CNFM_CODE
		     , CRT_DT
		     , CRT_USER_ID
		     , CNFM_DT
		     , UPD_DT
		     , UPD_USER_ID
		     , EMAIL_FAIL_IND
		     , EMAIL_FAIL_DESC
		     , REF_NO
		     , EMAIL_ADD
		     )
		VALUES
		     ( #{reqId}
		     , #{stusCodeId}
		     , #{custBillId}
		     , #{email}
		     , #{cnfmCode}
		     , SYSDATE
		     , #{crtUserId}
		     , SYSDATE
		     , SYSDATE
		     , #{updUserId}
		     , #{emailFailInd}
		     , #{emailFailDesc}
		     , #{refNo}
		     , #{emailAdd}
             )
     </insert>
     
    <insert id="insertAccClaimAdt" parameterType="accClaimAdtVO">
		INSERT
		  INTO PAY0008M
		     ( ACC_CL_SO_ID
		     , ACC_CL_SVC_CNTRCT_ID
		     , ACC_CL_BILL_CLM_AMT
		     , ACC_CL_CLM_AMT
		     , ACC_CL_PROMO
		     , ACC_CL_BANK_CODE
		     , ACC_CL_BANK_ACC_NO
		     , ACC_DEC_BANK_ACC_NO
		     , ACC_CL_REQST_M_CODE
		     , ACC_CL_APPLY_DT
		     , ACC_CL_SUBMIT_DT
		     , ACC_CL_APPV_DT
		     , ACC_CL_REJCT_DT
		     , ACC_CL_UPD_USER_ID
		     , ACC_CL_UPD_DT
		     , ACC_CL_STUS_ID
		     , ACC_CL_PROMO_CHK_ID
		     , ACC_CL_PROMO_START_DT
		     , ACC_CL_REJCT_ID
		     , ACC_CL_ACC_T_NAME
		     , ACC_CL_ACC_NRIC
		     , ACC_CL_SPL_CLM_AMT
		     , ACC_CL_SO_NO
		     , ACC_CL_USER_NAME
		     , ACC_CL_PAY_MODE
		     , ACC_CL_PAY_MODE_ID
		     , ACC_CL_BANK_ID
		     , ACC_CL_CLM_LIMIT
		     , ACC_CL_BILL_DT
		     , ACC_CL_INSERT_DT
		     )
		VALUES
		     ( #{accClSoId}
		     , #{accClSvcCntrctId}
		     , #{accClBillClmAmt}
		     , #{accClClmAmt}
		     , #{accClPromo}
		     , #{accClBankCode}
		     , #{accClBankAccNo}
		     , #{accDecBankAccNo}
		     , #{accClReqstMCode}
		     , SYSDATE
		     , TO_DATE('1900-01-01', 'YYYY-MM-DD')
		     , TO_DATE('1900-01-01', 'YYYY-MM-DD')
		     , TO_DATE('1900-01-01', 'YYYY-MM-DD')
		     , #{accClUpdUserId}
		     , SYSDATE
		     , #{accClStusId}
		     , #{accClPromoChkId}
		     , TO_DATE('1900-01-01', 'YYYY-MM-DD')
		     , #{accClRejctId}
		     , #{accClAccTName}
		     , #{accClAccNric}
		     , #{accClSplClmAmt}
		     , #{accClSoNo}
		     , #{accClUserName}
		     , #{accClPayMode}
		     , #{accClPayModeId}
		     , #{accClBankId}
		     , #{accClClmLimit}
		     , #{accClBillDt}
		     , SYSDATE
		     )
    </insert>
    
    <insert id="insertRentalScheme" parameterType="rentalSchemeVO">
      <selectKey keyProperty="renSchId" resultType="Integer" order="BEFORE">
        SELECT SAL0071D_REN_SCH_ID_SEQ.NEXTVAL FROM DUAL
      </selectKey>
		INSERT
		  INTO SAL0071D
		     ( REN_SCH_ID
		     , SALES_ORD_ID
		     , STUS_CODE_ID
		     , REN_SCH_DT
		     , REN_SCH_TERMS
		     , IS_SYNC
		     )
		VALUES
		     ( #{renSchId}
		     , #{salesOrdId}
		     , #{stusCodeId}
		     , SYSDATE
		     , #{renSchTerms}
		     , #{isSync}
		     )
    </insert>
    
    <select id="selectBankById" parameterType="Map" resultType="egovMap">
        SELECT T1.BANK_ID
             , T1.CODE
             , T1.NAME
             , T1.AREA_ID
             , T1.BIC
             , T1.STUS_CODE_ID
             , T1.IS_ALLOW_FOR_DD
             , T1.IS_MY_CL_EAR
          FROM SYS0004M T1
         WHERE T1.BANK_ID = #{bankId}
    </select>
    
    <insert id="insertCcpDecisionM" parameterType="ccpDecisionMVO">
      <selectKey keyProperty="ccpId" resultType="Integer" order="BEFORE">
        SELECT SAL0102D_CCP_ID_SEQ.NEXTVAL FROM DUAL
      </selectKey>
		INSERT
		  INTO SAL0102D
		     ( CCP_ID
		     , CCP_SALES_ORD_ID
		     , CCP_SCHEME_TYPE_ID
		     , CCP_TYPE_ID
		     , CCP_INCOME_RANGE_ID
		     , CCP_TOT_SCRE_POINT
		     , CCP_STUS_ID
		     , CCP_RESN_ID
		     , CCP_REM
		     , CCP_RJ_STUS_ID
		     , CCP_UPD_USER_ID
		     , CCP_UPD_DT
		     , CCP_IS_LOU
		     , CCP_IS_SAMAN
		     , CCP_IS_SYNC
		     , CCP_PNC_REM
		     , CCP_HAS_GRNT
		     , CCP_IS_HOLD
		     , CCP_IS_CURR
		     , CCP_FICO
		     , CCP_FICO_LOK
		     , CCP_CTOS_BATCH_NO
		     )
		VALUES
		     ( #{ccpId}
		     , #{ccpSalesOrdId}
		     , #{ccpSchemeTypeId}
		     , #{ccpTypeId}
		     , #{ccpIncomeRangeId}
		     , #{ccpTotScrePoint}
		     , #{ccpStusId}
		     , #{ccpResnId}
		     , #{ccpRem}
		     , #{ccpRjStusId}
		     , #{ccpUpdUserId}
		     , SYSDATE
		     , #{ccpIsLou}
		     , #{ccpIsSaman}
		     , #{ccpIsSync}
		     , #{ccpPncRem}
		     , #{ccpHasGrnt}
		     , #{ccpIsHold}
		     , #{ccpIsCurr}
		     , #{ccpFico}
		     , #{ccpFicoLok}
		     , #{ccpCtosBatchNo}
		     )
    </insert>
    
    <insert id="insertDocSubmission" parameterType="docSubmissionVO">
      <selectKey keyProperty="docSubId" resultType="Integer" order="BEFORE">
        SELECT ORG0010D_DOC_SUB_ID_SEQ.NEXTVAL FROM DUAL
      </selectKey>
		INSERT
		  INTO ORG0010D
		     ( DOC_SUB_ID
		     , DOC_SUB_TYPE_ID
		     , DOC_TYPE_ID
		     , DOC_SO_ID
		     , DOC_MEM_ID
		     , DOC_SUB_DT
		     , DOC_COPY_QTY
		     , STUS_ID
		     , CRT_USER_ID
		     , CRT_DT
		     , UPD_USER_ID
		     , UPD_DT
		     , DOC_SUB_BATCH_ID
		     )
		VALUES
		     ( #{docSubId}
		     , #{docSubTypeId}
		     , #{docTypeId}
		     , #{docSoId}
		     , #{docMemId}
		     , SYSDATE
		     , #{docCopyQty}
		     , #{stusId}
		     , #{crtUserId}
		     , SYSDATE
		     , #{updUserId}
		     , SYSDATE
		     , #{docSubBatchId}
		     )
    </insert>
    
    <insert id="insertSrvMembershipSales" parameterType="srvMembershipSalesVO">
      <selectKey keyProperty="srvMemId" resultType="Integer" order="BEFORE">
        SELECT SAL0095D_SRV_MEM_ID_SEQ.NEXTVAL FROM DUAL
      </selectKey>
		INSERT
		  INTO SAL0095D
		     ( SRV_MEM_ID
		     , SRV_MEM_QUOT_ID
		     , SRV_SALES_ORD_ID
		     , SRV_MEM_NO
		     , SRV_MEM_BILL_NO
		     , SRV_MEM_PAC_ID
		     , SRV_MEM_PAC_AMT
		     , SRV_MEM_BS_AMT
		     , SRV_MEM_PV
		     , SRV_FREQ
		     , SRV_START_DT
		     , SRV_EXPR_DT
		     , SRV_DUR
		     , SRV_STUS_CODE_ID
		     , SRV_REM
		     , SRV_CRT_DT
		     , SRV_CRT_USER_ID
		     , SRV_UPD_DT
		     , SRV_UPD_USER_ID
		     , SRV_MEM_BS12_AMT
		     , SRV_MEM_IS_SYNCH
		     , SRV_MEM_SALES_MEM_ID
		     , SRV_MEM_CUST_CNT_ID
		     , SRV_MEM_QTY
		     , SRV_BS_QTY
		     , SRV_MEM_PROMO_ID
		     , SRV_MEM_PV_MONTH
		     , SRV_MEM_PV_YEAR
		     , SRV_MEM_IS_MNL
		     , SRV_MEM_BRNCH_ID
		     , SRV_MEM_PAC_PROMO_ID
		     , SRV_MEM_FORM_NO
		     )
		VALUES
		     ( #{srvMemId}
		     , #{srvMemQuotId}
		     , #{srvSalesOrdId}
		     , #{srvMemNo}
		     , #{srvMemBillNo}
		     , #{srvMemPacId}
		     , #{srvMemPacAmt}
		     , #{srvMemBsAmt}
		     , #{srvMemPv}
		     , #{srvFreq}
		     , TO_DATE(TO_CHAR(SYSDATE, 'YYYY-MM')||'-01', 'YYYY-MM-DD')
		     , TO_DATE(TO_CHAR(LAST_DAY(SYSDATE), 'YYYY-MM-DD'), 'YYYY-MM-DD')
		     , #{srvDur}
		     , #{srvStusCodeId}
		     , #{srvRem}
		     , SYSDATE
		     , #{srvCrtUserId}
		     , SYSDATE
		     , #{srvUpdUserId}
		     , #{srvMemBs12Amt}
		     , #{srvMemIsSynch}
		     , #{srvMemSalesMemId}
		     , #{srvMemCustCntId}
		     , #{srvMemQty}
		     , #{srvBsQty}
		     , #{srvMemPromoId}
		     , #{srvMemPvMonth}
		     , #{srvMemPvYear}
		     , #{srvMemIsMnl}
		     , #{srvMemBrnchId}
		     , #{srvMemPacPromoId}
		     , #{srvMemFormNo}
		     )
    </insert>
    
    <insert id="insertSrvConfiguration" parameterType="srvConfigurationVO">
      <selectKey keyProperty="srvConfigId" resultType="Integer" order="BEFORE">
        SELECT SAL0090D_SRV_CONFIG_ID_SEQ.NEXTVAL FROM DUAL
      </selectKey>
		INSERT
		  INTO SAL0090D
		     ( SRV_CONFIG_ID
		     , SRV_SO_ID
		     , SRV_CODY_ID
		     , SRV_PREV_DT
		     , SRV_REM
		     , SRV_BS_GEN
		     , SRV_CRT_DT
		     , SRV_CRT_USER_ID
		     , SRV_UPD_DT
		     , SRV_UPD_USER_ID
		     , SRV_STUS_ID
		     , SRV_BS_WEEK
		     )
		VALUES
		     ( #{srvConfigId}
		     , #{srvSoId}
		     , #{srvCodyId}
		     , #{srvPrevDt}
		     , #{srvRem}
		     , #{srvBsGen}
		     , SYSDATE
		     , #{srvCrtUserId}
		     , SYSDATE
		     , #{srvUpdUserId}
		     , #{srvStusId}
		     , #{srvBsWeek}
		     )
    </insert>
    
    <insert id="insertSrvConfigSetting" parameterType="srvConfigSettingVO">
      <selectKey keyProperty="srvSettId" resultType="Integer" order="BEFORE">
        SELECT SAL0089D_SRV_SETT_ID_SEQ.NEXTVAL FROM DUAL
      </selectKey>
		INSERT
		  INTO SAL0089D
		     ( SRV_SETT_ID
		     , SRV_CONFIG_ID
		     , SRV_SETT_TYPE_ID
		     , SRV_SETT_STUS_ID
		     , SRV_SETT_REM
		     , SRV_SETT_CRT_DT
		     , SRV_SETT_CRT_USER_ID
		     )
		VALUES
		     ( #{srvSettId}
		     , #{srvConfigId}
		     , #{srvSettTypeId}
		     , #{srvSettStusId}
		     , #{srvSettRem}
		     , SYSDATE
		     , #{srvSettCrtUserId}
		     )
    </insert>

    <insert id="insertSrvConfigPeriod" parameterType="srvConfigPeriodVO">
      <selectKey keyProperty="srvPrdId" resultType="Integer" order="BEFORE">
        SELECT SAL0088D_SRV_PRD_ID_SEQ.NEXTVAL FROM DUAL
      </selectKey>
		INSERT
		  INTO SAL0088D
		     ( SRV_PRD_ID
		     , SRV_CONFIG_ID
		     , SRV_MBRSH_ID
		     , SRV_PRD_START_DT
		     , SRV_PRD_EXPR_DT
		     , SRV_PRD_DUR
		     , SRV_PRD_STUS_ID
		     , SRV_PRD_REM
		     , SRV_PRD_CRT_DT
		     , SRV_PRD_CRT_USER_ID
		     , SRV_PRD_UPD_DT
		     , SRV_PRD_UPD_USER_ID
		     , SRV_PRD_CNTRCT_ID
		     )
		VALUES
		     ( #{srvPrdId}
		     , #{srvConfigId}
		     , #{srvMbrshId}
		     , TO_DATE(TO_CHAR(SYSDATE, 'YYYY-MM')||'-01', 'YYYY-MM-DD')
		     , TO_DATE(TO_CHAR(LAST_DAY(SYSDATE), 'YYYY-MM-DD'), 'YYYY-MM-DD')
		     , #{srvPrdDur}
		     , #{srvPrdStusId}
		     , #{srvPrdRem}
		     , SYSDATE
		     , #{srvPrdCrtUserId}
		     , SYSDATE
		     , #{srvPrdUpdUserId}
		     , #{srvPrdCntrctId}
		     )
    </insert>
    
    <insert id="insertSrvConfigFilter" parameterType="srvConfigFilterVO">
      <selectKey keyProperty="srvFilterId" resultType="Integer" order="BEFORE">
        SELECT SAL0087D_SRV_FILTER_ID_SEQ.NEXTVAL FROM DUAL
      </selectKey>
		INSERT
		  INTO SAL0087D
		     ( SRV_FILTER_ID
		     , SRV_CONFIG_ID
		     , SRV_FILTER_STK_ID
		     , SRV_FILTER_PRIOD
		     , SRV_FILTER_PRV_CHG_DT
		     , SRV_FILTER_STUS_ID
		     , SRV_FILTER_REM
		     , SRV_FILTER_CRT_DT
		     , SRV_FILTER_CRT_USER_ID
		     , SRV_FILTER_UPD_DT
		     , SRV_FILTER_UPD_USER_ID
		     , SRV_FILTER_EXPR_DT
		     )
		VALUES
		     ( #{srvFilterId}
		     , #{srvConfigId}
		     , #{srvFilterStkId}
		     , #{srvFilterPriod}
		     , #{srvFilterPrvChgDt}
		     , #{srvFilterStusId}
		     , #{srvFilterRem}
		     , SYSDATE
		     , #{srvFilterCrtUserId}
		     , SYSDATE
		     , #{srvFilterUpdUserId}
		     , #{srvFilterExprDt}
		     )
    </insert>
    
    <insert id="insertCallEntry" parameterType="callEntryVO">
      <selectKey keyProperty="callEntryId" resultType="Integer" order="BEFORE">
        SELECT CCR0006D_CALL_ENTRY_ID_SEQ.NEXTVAL FROM DUAL
      </selectKey>
		INSERT
		  INTO CCR0006D
		     ( CALL_ENTRY_ID
		     , SALES_ORD_ID
		     , TYPE_ID
		     , STUS_CODE_ID
		     , RESULT_ID
		     , DOC_ID
		     , CRT_USER_ID
		     , CRT_DT
		     , CALL_DT
		     , IS_WAIT_FOR_CANCL
		     , HAPY_CALLER_ID
		     , UPD_DT
		     , UPD_USER_ID
		     , ORI_CALL_DT
		     )
		VALUES
		     ( #{callEntryId}
		     , #{salesOrdId}
		     , #{typeId}
		     , #{stusCodeId}
		     , #{resultId}
		     , #{docId}
		     , #{crtUserId}
		     , SYSDATE
		     , TO_DATE(#{callDt}, 'YYYY-MM-DD')
		     , #{isWaitForCancl}
		     , #{hapyCallerId}
		     , SYSDATE
		     , #{updUserId}
		     , TO_DATE(#{callDt}, 'YYYY-MM-DD')
		     )
    </insert>
    
    <insert id="insertCallResult" parameterType="callResultVO">
      <selectKey keyProperty="callResultId" resultType="Integer" order="BEFORE">
        SELECT CCR0007D_CALL_RESULT_ID_SEQ.NEXTVAL FROM DUAL
      </selectKey>
		INSERT
		  INTO CCR0007D
		     ( CALL_RESULT_ID
		     , CALL_ENTRY_ID
		     , CALL_STUS_ID
		     , CALL_DT
		     , CALL_ACTN_DT
		     , CALL_FDBCK_ID
		     , CALL_CT_ID
		     , CALL_REM
		     , CALL_CRT_USER_ID
		     , CALL_CRT_DT
		     , CALL_CRT_USER_ID_DEPT
		     , CALL_HC_ID
		     , CALL_ROS_AMT
		     , CALL_SMS
		     , CALL_SMS_REM
		     )
		VALUES
		     ( #{callResultId}
		     , #{callEntryId}
		     , #{callStusId}
		     , #{callDt}
		     , #{callActnDt}
		     , #{callFdbckId}
		     , #{callCtId}
		     , #{callRem}
		     , #{callCrtUserId}
		     , SYSDATE
		     , #{callCrtUserIdDept}
		     , #{callHcId}
		     , #{callRosAmt}
		     , #{callSms}
		     , #{callSmsRem}
		     )
    </insert>
    
    <insert id="insertInstallEntry" parameterType="installEntryVO">
      <selectKey keyProperty="installEntryId" resultType="Integer" order="BEFORE">
        SELECT SAL0046D_INSTALL_ENTRY_ID_SEQ.NEXTVAL FROM DUAL
      </selectKey>
		INSERT
		  INTO SAL0046D
		     ( INSTALL_ENTRY_ID
		     , INSTALL_ENTRY_NO
		     , SALES_ORD_ID
		     , STUS_CODE_ID
		     , CT_ID
		     , INSTALL_DT
		     , CALL_ENTRY_ID
		     , INSTALL_STK_ID
		     , INSTALL_RESULT_ID
		     , CRT_USER_ID
		     , CRT_DT
		     , ALLOW_COMM
		     , IS_TRADE_IN
		     , CT_GRP
		     , UPD_DT
		     , UPD_USER_ID
		     , REV_ID
		     )
		VALUES
		     ( #{installEntryId}
		     , #{installEntryNo}
		     , #{salesOrdId}
		     , #{stusCodeId}
		     , #{ctId}
		     , #{installDt}
		     , #{callEntryId}
		     , #{installStkId}
		     , #{installResultId}
		     , #{crtUserId}
		     , SYSDATE
		     , #{allowComm}
		     , #{isTradeIn}
		     , #{ctGrp}
		     , SYSDATE
		     , #{updUserId}
		     , #{revId}
		     )
    </insert>

    <insert id="insertInstallResult" parameterType="installResultVO">
      <selectKey keyProperty="resultId" resultType="Integer" order="BEFORE">
        SELECT SAL0047D_RESULT_ID_SEQ.NEXTVAL FROM DUAL
      </selectKey>
		INSERT
		  INTO SAL0047D
		     ( RESULT_ID
		     , ENTRY_ID
		     , STUS_CODE_ID
		     , CT_ID
		     , INSTALL_DT
		     , REM
		     , GL_POST
		     , CRT_USER_ID
		     , CRT_DT
		     , SIRIM_NO
		     , SERIAL_NO
		     , FAIL_ID
		     , NEXT_CALL_DT
		     , ALLOW_COMM
		     , IS_TRADE_IN
		     , REQUIRE_SMS
		     , DOC_REF_NO1
		     , DOC_REF_NO2
		     , UPD_DT
		     , UPD_USER_ID
		     , ADJ_AMT
		     , MOBILE_ID
		     )
		VALUES
		     ( #{resultId}
		     , #{entryId}
		     , #{stusCodeId}
		     , #{ctId}
		     , #{installDt}
		     , #{rem}
		     , #{glPost}
		     , #{crtUserId}
		     , SYSDATE
		     , #{sirimNo}
		     , #{serialNo}
		     , #{failId}
		     , TO_DATE(#{callDt}, 'YYYY-MM-DD')
		     , #{allowComm}
		     , #{isTradeIn}
		     , #{requireSms}
		     , #{docRefNo1}
		     , #{docRefNo2}
		     , SYSDATE
		     , #{updUserId}
		     , #{adjAmt}
		     , #{mobileId}
		     )
    </insert>

    <insert id="insertSalesOrderLog" parameterType="salesOrderLogVO">
      <selectKey keyProperty="logId" resultType="Integer" order="BEFORE">
        SELECT SAL0009D_LOG_ID_SEQ.NEXTVAL FROM DUAL
      </selectKey>
		INSERT
		  INTO SAL0009D
		     ( LOG_ID
		     , SALES_ORD_ID
		     , PRGRS_ID
		     , LOG_DT
		     , REF_ID
		     , IS_LOK
		     , LOG_CRT_USER_ID
		     , LOG_CRT_DT
		     )
		VALUES
		     ( #{logId}
		     , #{salesOrdId}
		     , #{prgrsId}
		     , SYSDATE
		     , #{refId}
		     , #{isLok}
		     , #{logCrtUserId}
		     , SYSDATE
		     )
    </insert>
    
    <insert id="insertGSTEURCertificate" parameterType="gSTEURCertificateVO">
      <selectKey keyProperty="eurcId" resultType="Integer" order="BEFORE">
        SELECT SAL0042D_EURC_ID_SEQ.NEXTVAL FROM DUAL
      </selectKey>
		INSERT
		  INTO SAL0042D
		     ( EURC_ID
		     , EURC_REF_NO
		     , EURC_REF_DT
		     , EURC_RLIEF_TYPE_ID
		     , EURC_RLIEF_APP_TYPE_ID
		     , EURC_SALES_ORD_ID
		     , EURC_CUST_ID
		     , EURC_CUST_RGS_NO
		     , EURC_REM
		     , EURC_FILE_PATH_NAME
		     , EURC_STUS_CODE_ID
		     , EURC_CRT_USER_ID
		     , EURC_CRT_DT
		     , EURC_UPD_USER_ID
		     , EURC_UPD_DT
		     )
		VALUES
		     ( #{eurcId}
		     , #{eurcRefNo}
		     , #{eurcRefDt}
		     , #{eurcRliefTypeId}
		     , #{eurcRliefAppTypeId}
		     , #{eurcSalesOrdId}
		     , #{eurcCustId}
		     , #{eurcCustRgsNo}
		     , #{eurcRem}
		     , #{eurcFilePathName}
		     , #{eurcStusCodeId}
		     , #{eurcCrtUserId}
		     , #{eurcCrtDt}
		     , #{eurcUpdUserId}
		     , #{eurcUpdDt}
		     )
    </insert>
    
    <insert id="insertSalesOrderContract" parameterType="salesOrderContractVO">
      <selectKey keyProperty="callResultId" resultType="Integer" order="BEFORE">
        SELECT SAL0003D_CNTRCT_ID_SEQ.NEXTVAL FROM DUAL
      </selectKey>
		INSERT
		  INTO SAL0003D
		     ( CNTRCT_ID
		     , CNTRCT_SALES_ORD_ID
		     , CNTRCT_RENTAL_PRIOD
		     , CNTRCT_OBLIGT_PRIOD
		     , CNTRCT_STUS_ID
		     , CNTRCT_REM
		     , CNTRCT_CRT_DT
		     , CNTRCT_CRT_USER_ID
		     , CNTRCT_UPD_DT
		     , CNTRCT_UPD_USER_ID
		     )
		VALUES
		     ( #{cntrctId}
		     , #{cntrctSalesOrdId}
		     , #{cntrctRentalPriod}
		     , #{cntrctObligtPriod}
		     , #{cntrctStusId}
		     , #{cntrctRem}
		     , SYSDATE
		     , #{cntrctCrtUserId}
		     , SYSDATE
		     , #{cntrctUpdUserId}
		     )
    </insert>
    
</mapper>