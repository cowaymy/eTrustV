<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.coway.trust.biz.sales.order.impl.OrderModifyMapper">

    <update id="updateSalesOrderM" parameterType="Map">
        UPDATE SAL0001D
           SET REF_NO           = #{ordRefNo}
             , MEM_ID           = #{salesmanId}
             , BRNCH_ID         = #{keyInBranch}
             <if test='modBndlId == null or modBndlId == 0 or modBndlId == ""'>
                , APP_TYPE_ID      = #{appTypeId}
             </if>
             , REM              = #{ordRem}
             , UPD_DT           = SYSDATE
             , UPD_USER_ID      = #{updUserId}
             , CUST_PO_NO       = #{ordPoNo}
             , INST_PRIOD       = #{installDur}
             , DEPT_CODE        = #{orderDeptCode}
             , GRP_CODE         = #{orderGrpCode}
             , ORG_CODE         = #{orderOrgCode}
             , SALES_HM_ID      = #{deptMemId}
             , SALES_SM_ID      = #{grpMemId}
             , SALES_GM_ID      = #{orgMemId}
             , CORP_CUST_TYPE = #{corpCustType}
             , AGREEMENT_TYPE = #{agreementType}
        WHERE 1 = 1
        <choose>
            <when test='modBndlId != null and modBndlId !=0 and modBndlId != ""'>
                AND BNDL_ID = #{modBndlId}
            </when>
            <otherwise>
                AND SALES_ORD_ID = #{salesOrdId}
            </otherwise>
        </choose>
    </update>

    <select id="selectBillGroupByBillGroupID" parameterType="Map" resultType="egovMap">
        SELECT T1.CUST_BILL_ID
             , T1.CUST_BILL_SO_ID
             , T1.CUST_BILL_CUST_ID
             , T1.CUST_BILL_CNT_ID
             , T1.CUST_BILL_ADD_ID
             , T1.CUST_BILL_REM
             , T1.CUST_BILL_GRP_NO
             , T1.CUST_BILL_CRT_USER_ID
             , T1.CUST_BILL_EMAIL
             , T1.CUST_BILL_IS_ESTM
             , T1.CUST_BILL_IS_SMS
             , T1.CUST_BILL_IS_POST
             , T2.NAME
             , T2.NRIC
             , T2.TYPE_ID
             , T3.SALES_ORD_NO
             , T4.CODE_NAME
             , T1.CUST_BILL_CRT_DT
             , T5.USER_NAME
             , T1.CUST_BILL_EMAIL_ADD
          FROM SAL0024D T1
          JOIN SAL0029D T2 ON T2.CUST_ID = T1.CUST_BILL_CUST_ID
          JOIN SAL0001D T3 ON T3.SALES_ORD_ID = T1.CUST_BILL_SO_ID
          JOIN SYS0013M T4 ON T4.CODE_ID = T2.TYPE_ID
          LEFT
          JOIN SYS0047M T5 ON T5.USER_ID = T1.CUST_BILL_CRT_USER_ID
         WHERE T1.CUST_BILL_ID = #{custBillId}
    </select>

    <select id="selectBillGroupOrder" parameterType="Map" resultType="egovMap">
		SELECT TT.SALES_ORD_ID
		     , TT.SALES_ORD_NO
		     , TT.CODE CODE
		     , TT.SALES_DT
		     , TT.STK
		     , TT.STUS_CODE_ID
		     , TT.MTH_RENT_AMT
		     , TT.CUST_ID
		  FROM
		     ( SELECT T.SALES_ORD_ID
		            , T.SALES_ORD_NO
		            , T.CODE CODE
		            , T.SALES_DT
		            , T.STK
		            , T.STUS_CODE_ID
		            , T.MTH_RENT_AMT
		            , T.CUST_ID
		         FROM
		            ( SELECT DISTINCT T2.SALES_ORD_ID
		                   , T2.SALES_ORD_NO
		                   , T5.CODE
		                   , T2.SALES_DT
		                   , T4.STK_CODE || ' - ' || T4.STK_DESC stk
		                   , T2.STUS_CODE_ID
		                   , T2.MTH_RENT_AMT
		                   , T2.CUST_ID
		                FROM SAL0024D T1
		                JOIN SAL0001D T2
		                  ON T2.CUST_BILL_ID = T1.CUST_BILL_ID
		                 AND 8 != T2.STUS_CODE_ID
		                JOIN SAL0002D T3 ON T3.SALES_ORD_ID = T2.SALES_ORD_ID
		                JOIN SYS0026M T4 ON T4.STK_ID = T3.ITM_STK_ID
		                JOIN SYS0038M T5 ON T5.STUS_CODE_ID = T2.STUS_CODE_ID
		               WHERE T1.CUST_BILL_ID = #{custBillId}
		            ) T
		     ) TT
		 ORDER BY SALES_ORD_NO ASC
    </select>

    <insert id="insertCustBillMasterHistory" parameterType="custBillMasterHistoryVO">
      <selectKey keyProperty="histId" resultType="Integer" order="BEFORE">
        SELECT SAL0025D_HIST_ID_SEQ.NEXTVAL FROM DUAL
      </selectKey>
		INSERT
		  INTO SAL0025D
		     ( HIST_ID
		     , CUST_BILL_ID
		     , HIST_CRT_DT
		     , HIST_CRT_USER_ID
		     , USER_HIST_REM
		     , SALES_ORD_ID_OLD
		     , SALES_ORD_ID_NW
		     , CNTC_ID_OLD
		     , CNTC_ID_NW
		     , ADDR_ID_OLD
		     , ADDR_ID_NW
		     , STUS_ID_OLD
		     , STUS_ID_NW
		     , REM_OLD
		     , REM_NW
		     , EMAIL_OLD
		     , EMAIL_NW
		     , IS_E_STATE_OLD
		     , IS_E_STATE_NW
		     , IS_SMS_OLD
		     , IS_SMS_NW
		     , IS_POST_OLD
		     , IS_POST_NW
		     , TYPE_ID
		     , SYS_HIST_REM
		     , EMAIL_ADD_OLD
		     , EMAIL_ADD_NW
		     )
		VALUES
		     ( #{histId}
		     , #{custBillId}
		     , SYSDATE
		     , #{histCrtUserId}
		     , #{userHistRem}
		     , #{salesOrdIdOld}
		     , #{salesOrdIdNw}
		     , #{cntcIdOld}
		     , #{cntcIdNw}
		     , #{addrIdOld}
		     , #{addrIdNw}
		     , #{stusIdOld}
		     , #{stusIdNw}
		     , #{remOld}
		     , #{remNw}
		     , #{emailOld}
		     , #{emailNw}
		     , #{isEStateOld}
		     , #{isEStateNw}
		     , #{isSmsOld}
		     , #{isSmsNw}
		     , #{isPostOld}
		     , #{isPostNw}
		     , #{typeId}
		     , #{sysHistRem}
		     , #{emailAddOld}
		     , #{emailAddNw}
		     )
    </insert>

    <update id="updateCustBillMaster" parameterType="Map">
        UPDATE SAL0024D
           SET CUST_BILL_UPD_USER_ID = #{updUserId}
             , CUST_BILL_UPD_DT      = SYSDATE
           <if test='custBillAddId != null and custBillAddId !=0'>
             , CUST_BILL_ADD_ID      = #{custBillAddId}
           </if>
           <if test='custBillCntId != null and custBillCntId !=0'>
             , CUST_BILL_CNT_ID      = #{custBillCntId}
           </if>
         WHERE CUST_BILL_ID          = #{custBillId}
    </update>

    <update id="updateCustAddId" parameterType="Map">
        UPDATE SAL0001D
           SET UPD_USER_ID  = #{updUserId}
             , UPD_DT       = SYSDATE
           <if test='custBillAddId != null and custBillAddId !=0'>
             , CUST_ADD_ID  = #{custBillAddId}
           </if>
           <if test='custBillCntId != null and custBillCntId !=0'>
             , CUST_CNT_ID  = #{custBillCntId}
           </if>
         WHERE SALES_ORD_ID = #{salesOrdId}
    </update>

    <update id="updateNric" parameterType="Map">
        UPDATE SAL0029D
           SET NRIC = #{custNric}
           <if test='custType == 964'>
             , DOB = TO_DATE(#{custDob}, 'DD/MM/YYYY')
           </if>
             , UPD_DT = SYSDATE
             , UPD_USER_ID = #{updUserId}
         WHERE CUST_ID = #{custId}
    </update>

    <select id="selectNricCheckCnt" parameterType="Map" resultType="int">
        SELECT COUNT(1) AS CNT
          FROM SAL0001D T1
         WHERE T1.CUST_ID = #{custId}
           AND T1.APP_TYPE_ID = 66
    </select>

    <select id="selectNricCheckCnt2" parameterType="Map" resultType="int">
        SELECT COUNT(1) AS CNT
          FROM SAL0001D T1
          JOIN SAL0102D T2
            ON T2.CCP_STUS_ID != 5
           AND T2.CCP_SALES_ORD_ID = T1.SALES_ORD_ID
         WHERE T1.CUST_ID = #{custId}
           AND T1.STUS_CODE_ID != 4
           AND T1.APP_TYPE_ID = 66
    </select>

    <select id="selectCustInfo" parameterType="Map" resultType="egovMap">
        SELECT T1.CUST_ID
             , T1.NAME
             , T1.NRIC
             , T1.NATION
             , T1.DOB
             , T1.GENDER
             , T1.RACE_ID
             , T1.EMAIL
             , T1.REM
             , T1.STUS_CODE_ID
             , T1.UPD_USER_ID
             , T1.UPD_DT
             , T1.REN_GRP
             , T1.PST_TERMS
             , T1.ID_OLD
             , T1.CRT_USER_ID
             , T1.CRT_DT
             , T1.TYPE_ID
             , T1.PAS_SPORT_EXPR
             , T1.VISA_EXPR
             , T1.CUST_VA_NO
             , T1.CORP_TYPE_ID
             , T1.GST_RGIST_NO
          FROM SAL0029D T1
         WHERE T1.CUST_ID = #{custId}
    </select>

    <select id="selectNricExist" parameterType="Map" resultType="egovMap">
        SELECT T1.CUST_ID
             , T1.NAME
             , T1.NRIC
             , T1.NATION
             , T1.DOB
             , T1.GENDER
             , T1.RACE_ID
             , T1.EMAIL
             , T1.REM
             , T1.STUS_CODE_ID
             , T1.UPD_USER_ID
             , T1.UPD_DT
             , T1.REN_GRP
             , T1.PST_TERMS
             , T1.ID_OLD
             , T1.CRT_USER_ID
             , T1.CRT_DT
             , T1.TYPE_ID
             , T1.PAS_SPORT_EXPR
             , T1.VISA_EXPR
             , T1.CUST_VA_NO
             , T1.CORP_TYPE_ID
             , T1.GST_RGIST_NO
          FROM SAL0029D T1
         WHERE 1 = 1
         AND T1.STUS_CODE_ID IN ('1', '9')
         <if test='custType != null and custType !=0 and custType !=""'>
           AND T1.TYPE_ID = #{custType}
         </if>
         <if test='custNric != null and custNric !=0 and custNric !=""'>
           AND T1.NRIC = #{custNric}
         </if>
         <if test='nationality != null and nationality !=0 and nationality !=""'>
           AND T1.NATION = #{nationality}
         </if>
         <if test='custNricOld != null and custNricOld !=0 and custNricOld !=""'>
           AND T1.NRIC != #{custNricOld}
         </if>
    </select>

    <select id="selectInstRsltCount" parameterType="Map" resultType="egovMap">
        SELECT COUNT(1) AS CNT
          FROM SAL0045D T1
         WHERE T1.SALES_ORD_ID = #{salesOrdId}
    </select>

    <select id="selectGSTZRLocationCount" parameterType="Map" resultType="egovMap">
		SELECT COUNT(1) AS CNT
		  FROM SYS0064M T1
		 WHERE T1.STATUS_ID = 1
		   AND T1.GST_CHK = 1
         <if test='zrLocAreaId != null and zrLocAreaId !=0 and zrLocAreaId !=""'>
		   AND T1.AREA_ID = #{areaId}
         </if>
    </select>

    <select id="selectGSTZRLocationByAddrIdCount" parameterType="Map" resultType="egovMap">
        SELECT COUNT(1) AS CNT
          FROM SAL0023D T1
          JOIN SYS0064M T2
            ON T2.AREA_ID = T1.AREA_ID
           AND T2.STATUS_ID = 1
           AND T2.GST_CHK = 1
         WHERE T1.STUS_CODE_ID != 8
           And T1.CUST_ADD_ID = #{custAddId}
    </select>

    <update id="updateInstallInfo" parameterType="Map">
        UPDATE SAL0045D
           SET ADD_ID       = #{custAddId}
             , CNT_ID       = #{custCntcId}
             , PRE_CALL_DT  = TO_DATE(#{preDt}, 'DD/MM/YYYY') - 1
             , PRE_DT       = TO_DATE(#{preDt}, 'DD/MM/YYYY')
             , PRE_TM       = #{preTm}
             , INSTCT       = #{instct}
             , UPD_DT       = SYSDATE
             , UPD_USER_ID  = #{updUserId}
             , BRNCH_ID     = #{dscBrnchId}
         WHERE INSTALL_ID   = #{installId}
    </update>

    <update id="updateInstallUpdateInfo" parameterType="Map">
        UPDATE SAL0001D
           SET UPD_USER_ID  = #{updUserId}
             , UPD_DT       = SYSDATE
         WHERE SALES_ORD_ID = #{salesOrdId}
    </update>

    <update id="updatePaymentChannel" parameterType="rentPaySetVO">
		UPDATE SAL0074D
		   SET MODE_ID         = #{modeId}
		     , CUST_CRC_ID     = #{custCrcId}
		     , BANK_ID         = #{bankId}
		     , CUST_ACC_ID     = #{custAccId}
		     , DD_APPLY_DT     = TO_DATE(#{ddApplyDt}, 'DD/MM/YYYY')
		     , DD_SUBMIT_DT    = TO_DATE(#{ddSubmitDt}, 'DD/MM/YYYY')
		     , DD_START_DT     = TO_DATE(#{ddStartDt}, 'DD/MM/YYYY')
		     , DD_REJCT_DT     = TO_DATE(#{ddRejctDt}, 'DD/MM/YYYY')
		     , UPD_USER_ID     = #{updUserId}
		     , UPD_DT          = SYSDATE
		     , IS_3RD_PARTY    = #{is3rdParty}
		     , CUST_ID         = #{custId}
		     , NRIC_OLD        = #{nricOld}
		     , FAIL_RESN_ID    = #{failResnId}
		     , ISSU_NRIC       = #{issuNric}
		     , LAST_APPLY_USER = #{lastApplyUser}
		     , PAY_TRM         = #{payTrm}
		     , GRACE_PERIOD = 0
		 WHERE RENT_PAY_ID     = #{rentPayId}
    </update>

    <update id="saveDocSubmission" parameterType="docSubmissionVO">
        MERGE
         INTO ORG0010D T1
        USING DUAL
           ON (T1.DOC_SUB_TYPE_ID = 248
          AND  T1.DOC_TYPE_ID     = #{docTypeId}
          AND  T1.DOC_SO_ID       = #{docSoId})
         WHEN MATCHED THEN
       UPDATE
          SET T1.DOC_COPY_QTY    = #{docCopyQty}
            , T1.UPD_USER_ID     = #{updUserId}
            , T1.DOC_SUB_BRNCH_ID     = #{docSubBrnchId}
            , T1.UPD_DT          = SYSDATE
            , T1.STUS_ID         = 1
         WHEN NOT MATCHED THEN
       INSERT
            ( T1.DOC_SUB_ID
            , T1.DOC_SUB_TYPE_ID
            , T1.DOC_TYPE_ID
            , T1.DOC_SO_ID
            , T1.DOC_MEM_ID
            , T1.DOC_SUB_DT
            , T1.DOC_COPY_QTY
            , T1.STUS_ID
            , T1.CRT_USER_ID
            , T1.CRT_DT
            , T1.UPD_USER_ID
            , T1.UPD_DT
            , T1.DOC_SUB_BATCH_ID
            , T1.DOC_SUB_BRNCH_ID
            )
       VALUES
            ( ORG0010D_DOC_SUB_ID_SEQ.NEXTVAL
            , #{docSubTypeId}
            , #{docTypeId}
            , #{docSoId}
            , #{docMemId}
            , SYSDATE
            , #{docCopyQty}
            , 1
            , #{crtUserId}
            , SYSDATE
            , #{updUserId}
            , SYSDATE
            , #{docSubBatchId}
            , #{docSubBrnchId}
            )
    </update>

    <update id="updateDocSubmissionDel" parameterType="docSubmissionVO">
       UPDATE ORG0010D
          SET STUS_ID     = 8
            , UPD_USER_ID = #{updUserId}
            , UPD_DT      = SYSDATE
        WHERE DOC_TYPE_ID = #{docTypeId}
          AND DOC_SO_ID   = #{docSoId}
    </update>

    <select id="selectReferralList" parameterType="Map" resultType="egovMap">
		SELECT TT2.SALES_ORD_ID
		     , TT2.ORD_REF_ID
		     , TT2.SALESORDERID1
		     , TT2.SALES_ORD_NO
		     , TT2.CRT_DT
		     , TT2.STUS_CODE
		     , TT2.REF_STATE_ID
		     , TT2.USER_ID
		     , TT2.USER_NAME
		     , TT2.REF_NAME
		     , TT2.NAME
		     , TT2.REF_CNTC
		     , TT2.REF_REM
		     , ROW_NUMBER() OVER ( ORDER BY TT2.CRT_DT DESC  ) ROW_NUMBER
		  FROM
		     ( SELECT TT1.SALESORDERID2 SALES_ORD_ID
		            , TT1.ORD_REF_ID ORD_REF_ID
		            , TT1.SALESORDERID3 SALESORDERID1
		            , TT1.SALESORDERNO1 SALES_ORD_NO
		            , TO_CHAR(TT1.CREATED1, 'yyyy-MM-dd HH24:MI:SS') CRT_DT
		            , TT1.STUS_CODE
		            , TT1.REF_STATE_ID
		            , T4.USER_ID
		            , T4.USER_NAME
		            , TT1.REF_NAME
		            , TT1.NAME
		            , TT1.REF_CNTC
		            , TT1.REF_REM
		            , TT1.CREATED1 CREATED
		         FROM
		            ( SELECT T1.SALES_ORD_ID SALESORDERID2
		                   , T1.SALES_ORD_NO SALESORDERNO2
		                   , T2.ORD_REF_ID ORD_REF_ID
		                   , T2.SALES_ORD_ID SALESORDERID3
		                   , T2.SALES_ORD_NO SALESORDERNO1
		                   , T2.REF_NAME REF_NAME
		                   , T2.REF_CNTC REF_CNTC
		                   , T2.REF_REM REF_REM
		                   , T2.CRT_DT CREATED1
		                   , T2.CRT_USER_ID CREATOR1
		                   , T2.STUS_CODE STUS_CODE
		                   , T2.REF_STATE_ID
		                   , T3.NAME NAME
		                FROM SAL0001D T1
		                JOIN SAL0069D T2 ON T2.SALES_ORD_ID = T1.SALES_ORD_ID
		                JOIN SYS0035M T3 ON T3.STATE_ID = T2.REF_STATE_ID
		               WHERE 8 != T2.STUS_CODE
		            ) TT1
		         JOIN SYS0047M T4 ON T4.USER_ID = TT1.CREATOR1
		        WHERE TT1.SALESORDERNO2 = #{salesOrdNo}
		     ) TT2
		 ORDER BY ORD_REF_ID DESC
    </select>

    <select id="selectStateCodeList" parameterType="Map" resultType="egovMap">
		SELECT T.STATE_ID
		     , T.CODE
		     , T.NAME
		     , T.CNTY_ID
		     , T.STUS_CODE_ID
		     , T.CRT_DT
		     , T.CRT_USER_ID
		     , T.UPD_DT
		     , T.UPD_USER_ID
		  FROM SYS0035M T
		 ORDER BY T.STATE_ID
    </select>

    <insert id="insertReferral" parameterType="referralVO">
		INSERT
		  INTO SAL0069D
		     ( ORD_REF_ID
		     , SALES_ORD_ID
		     , SALES_ORD_NO
		     , REF_NAME
		     , REF_CNTC
		     , REF_STATE_ID
		     , REF_REM
		     , CRT_DT
		     , CRT_USER_ID
		     , STUS_CODE
		     , NW_KEYIN_DT
		     , CURR_ORD_NO
		     , PV_MONTH
		     , PV_YEAR
		     )
		VALUES
		     ( SAL0069D_ORD_REF_ID_SEQ.NEXTVAL
		     , #{salesOrdId}
		     , #{salesOrdNo}
		     , #{refName}
		     , #{refCntc}
		     , #{refStateId}
		     , #{refRem}
		     , SYSDATE
		     , #{crtUserId}
		     , #{stusCode}
		     , #{nwKeyinDt}
		     , #{currOrdNo}
		     , #{pvMonth}
		     , #{pvYear}
		     )
    </insert>

    <update id="updateReferral" parameterType="referralVO">
        UPDATE SAL0069D
           SET REF_NAME     = #{refName}
             , REF_CNTC     = #{refCntc}
             , REF_STATE_ID = #{refStateId}
             , REF_REM      = #{refRem}
         WHERE ORD_REF_ID   = #{ordRefId}
    </update>


    <update id="updatePromoPriceInfo" parameterType="salesOrderMVO">
        UPDATE SAL0001D
           SET TOT_AMT              = #{totAmt}
             , PROMO_ID             = #{promoId}
             , TOT_PV               = #{totPv}
             , UPD_DT               = SYSDATE
             , UPD_USER_ID          = #{updUserId}
             , MTH_RENT_AMT         = #{mthRentAmt}
             , PROMO_DISC_PERIOD_TP = #{promoDiscPeriodTp}
             , PROMO_DISC_PERIOD    = #{promoDiscPeriod}
             , DISC_RNT_FEE         = #{discRntFee}
         WHERE SALES_ORD_ID         = #{salesOrdId}
    </update>

    <update id="updateRental" parameterType="salesOrderMVO">
        MERGE INTO SAL0070D A USING (
		    SELECT A.ROWID R, C.MTH_RENT_AMT FROM SAL0070D A
		    LEFT JOIN PAY1002V B ON A.SALES_ORD_ID = B.SALES_ORD_ID AND B.INSTALLMENT = A.RENT_INST_NO
		    JOIN SAL0001D C ON A.SALES_ORD_ID = C.SALES_ORD_ID
		    WHERE C.SALES_ORD_ID = #{salesOrdId}
		    AND B.BILLING_STUS = 'Active'
		) B ON (A.ROWID = B.R)
		WHEN MATCHED THEN UPDATE SET RENT_INST_AMT = MTH_RENT_AMT, UPD_USER_ID = #{updUserId}, UPD_DT = SYSDATE
    </update>

    <update id="updateGSTEURCertificate" parameterType="gSTEURCertificateVO">
		UPDATE SAL0042D
		   SET EURC_REF_NO            = #{eurcRefNo}
		     , EURC_REF_DT            = TO_DATE(#{eurcRefDt}, 'DD/MM/YYYY')
		     , EURC_CUST_RGS_NO       = #{eurcCustRgsNo}
		     , EURC_REM               = #{eurcRem}
		     , EURC_UPD_USER_ID       = #{eurcUpdUserId}
		     , EURC_UPD_DT            = SYSDATE
		     , ATCH_FILE_GRP_ID       = #{atchFileGrpId}
		 WHERE EURC_ID                = #{eurcId}
    </update>

    <update id="updateECashInfo" parameterType="salesOrderMVO">
		UPDATE SAL0001D
		   SET UPD_DT       = SYSDATE
		     , UPD_USER_ID  = #{updUserId}
		     , ECASH        = #{ecash}
		 WHERE SALES_ORD_ID = #{salesOrdId}
    </update>

    <select id="getInstallDetail" parameterType="Map" resultType="egovMap">
    <![CDATA[
        SELECT SOM.SALES_ORD_ID SALES_ORD_ID,
                   SOM.SALES_ORD_NO SALES_ORD_NO,
                   NVL(SM.STUS_CODE_ID, 0) STUS_CODE_ID,
                   RPS.MODE_ID MODE_ID
        FROM SAL0001D SOM
        LEFT JOIN (select * from SAL0046D SM
                        where SM.INSTALL_ENTRY_ID = (SELECT MAX(aa.INSTALL_ENTRY_ID)
                                               from SAL0046D aa
                                                where
                                                aa.SALES_ORD_ID = SM.SALES_ORD_ID))SM
                                                on (SM.SALES_ORD_ID = SOM.SALES_ORD_ID)
        LEFT JOIN SAL0074D RPS  ON RPS.SALES_ORD_ID = SOM.SALES_ORD_ID
        WHERE  SOM.SALES_ORD_ID = #{ordId} AND ROWNUM <= 1
        ]]>
        </select>

    <select id="selectPayModeId" parameterType="rentPaySetVO"
    resultType="Integer">

    SELECT MODE_ID

    FROM SAL0074D
    WHERE 1=1
    AND RENT_PAY_ID = #{rentPayId}


  </select>

  <insert id="insertDeductSAL0236D" parameterType="Map">
        INSERT INTO SAL0236D(DEDUCTION_ACC_ID, SALES_ORD_ID, SRV_CNTRCT_ID, CRC_ID, BANK_ID, ACC_ID, DD_APPLY_DT,
        DD_SUBMIT_DT, DD_START_DT, DD_REJCT_DT, STUS_ID, REMARK, CRT_USER_ID, CRT_DT, UPD_USER_ID, UPD_DT)
        SELECT #{deductId},
                   SALES_ORD_ID,
                   SVC_CNTRCT_ID,
                   CUST_CRC_ID,
                   BANK_ID,
                   CUST_ACC_ID,
                   DD_APPLY_DT,
                   DD_SUBMIT_DT,
                   DD_START_DT,
                   DD_REJCT_DT,
                   STUS_CODE_ID,
                   REM,
                   #{userId},
                   SYSDATE,
                   #{userId},
                   SYSDATE
        FROM SAL0074D
        WHERE RENT_PAY_ID = #{rentPayId}
      </insert>

    <select id="crtSeqSAL0236D" resultType="Integer">
        SELECT SAL0236D_DEDUCTION_ID_SEQ.NEXTVAL FROM DUAL
    </select>

    <update id="updatePaymentChannelvRescue" parameterType="Map">
        UPDATE SAL0074D
           SET MODE_ID  = #{modeId},
                   CUST_CRC_ID  = 0,
                   CUST_ACC_ID  = 0,
                   BANK_ID = 0,
                   DD_APPLY_DT = SYSDATE,
                   DD_SUBMIT_DT = null,
                   DD_START_DT = null,
                   DD_REJCT_DT = null,
                   FAIL_RESN_ID = null,
                   UPD_USER_ID     = #{userId},
                   UPD_DT          = SYSDATE,
                   GRACE_PERIOD = 1,
                   DEDUCT_ACC_ID = #{deductId}
         WHERE RENT_PAY_ID     = #{rentPayId}
    </update>

    <update id="updateCcpSalesOrderM" parameterType="Map">
        UPDATE SAL0001D
           SET CORP_CUST_TYPE = #{corpCustType}
             , AGREEMENT_TYPE = #{agreementType}
         WHERE SALES_ORD_ID     = #{salesOrdId}
    </update>

  <select id="chkCboPromPck" parameterType="Map" resultType="int">
    SELECT COUNT(PROMO) FROM (SELECT DISTINCT A.PROMO_ID AS PROMO
                              FROM SAL0252M A
                              JOIN SAL0253D B ON A.CONF_ID = B.CONF_ID
                              UNION
                              SELECT DISTINCT B.SUB_PROMO_ID AS PROMO
                              FROM SAL0252M A
                              JOIN SAL0253D B ON A.CONF_ID = B.CONF_ID
                             )
    WHERE PROMO IN (SELECT PROMO_ID
                   FROM SAL0017D
                   WHERE PROMO_CODE = #{promo})
  </select>

  <select id="chkCboPromCanPck" parameterType="Map" resultType="int">
    SELECT COUNT(PROMO_CAN_ID) FROM (SELECT DISTINCT A.PROMO_CAN_ID AS PROMO_CAN_ID
                              FROM SAL0252M A
                              JOIN SAL0253D B ON A.CONF_ID = B.CONF_ID
                              UNION
                              SELECT DISTINCT B.PROMO_CAN_ID AS PROMO_CAN_ID
                              FROM SAL0252M A
                              JOIN SAL0253D B ON A.CONF_ID = B.CONF_ID
                             )
    WHERE PROMO_CAN_ID = (SELECT PROMO_ID
                          FROM SAL0017D
                          WHERE PROMO_CODE = #{promo})
  </select>



<select id="selectMatOrFra" parameterType="Map" resultType="egovMap">
/* [com.coway.trust.biz.sales.order.impl.OrderModifyMapper.selectMatOrFra] 20200113 - KR JAEMAJEM */
SELECT  SALES_ORD_ID
    ,   CUST_BILL_ID
FROM    SAL0001D
WHERE   SALES_ORD_NO = (
                              SELECT  CASE WHEN MAT_ORD_NO = B.SALES_ORD_NO THEN FRA_ORD_NO
                                           WHEN FRA_ORD_NO = B.SALES_ORD_NO THEN MAT_ORD_NO
                                           ELSE NULL
                                           END AS ORD_NO
                              FROM    HMC0011D A
                                      INNER JOIN SAL0001D B
                                          ON  (
                                                  A.MAT_ORD_NO = B.SALES_ORD_NO
                                                  OR
                                                  A.FRA_ORD_NO = B.SALES_ORD_NO
                                              )
                              WHERE   B.SALES_ORD_ID = #{salesOrdId}
                        )
</select>

<select id="getExistSofNo" parameterType="Map" resultType="int">
        SELECT SUM(CNT) AS CNT
          FROM
             ( SELECT COUNT(1) CNT
                 FROM SAL0213M
                WHERE SOF_NO = #{ordRefNo}
                  AND STUS_ID NOT IN (10, 98)
                  AND '1' = #{selType}

             )
    </select>

    <insert id="updateMcoRem" parameterType="Map">
        INSERT INTO SAL0295D
        VALUES (
            SAL0295D_ID_SEQ.nextval,
            #{salesOrdId},
            #{agreeFlg},
            1,
            #{remark},
            #{userId},
            SYSDATE,
            #{userId},
            SYSDATE
        )
    </insert>


<select id="selectFraPayId" parameterType="Map" resultType="egovMap">
SELECT FRA.SALES_ORD_ID,
       B.RENT_PAY_ID
        FROM SAL0001D MAT JOIN HMC0011D B ON MAT.SALES_ORD_NO = B.MAT_ORD_NO
        JOIN SAL0001D FRA ON FRA.SALES_ORD_NO = B.FRA_ORD_NO
        JOIN SAL0074D B ON FRA.SALES_ORD_ID = B.SALES_ORD_ID
        WHERE FRA.SALES_ORD_ID = #{salesOrdId}


</select>

	<update id="updateMarketingMessageStatus" parameterType="Map">
		UPDATE SAL0029D SET RECEIVING_MARKETING_MSG_STATUS = #{modMarketingMessageSelection}, UPD_DT = SYSDATE, UPD_USER_ID = #{updUserId} WHERE CUST_ID = #{custId}
	</update>

	<select id="selectSalesOrdDetail" parameterType="Map" resultType="egovMap">
		SELECT * FROM SAL0001D WHERE SALES_ORD_ID = #{salesOrdId}
	</select>
</mapper>