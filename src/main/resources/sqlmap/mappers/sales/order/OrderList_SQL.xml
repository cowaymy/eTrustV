<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.coway.trust.biz.sales.order.impl.OrderListMapper">

  <!-- BACKUP AFTER PERFORMANCE TUNING -->
  <select id="selectOrderList_bak" parameterType="Map" resultType="egovMap">
    SELECT DISTINCT T.APP_TYPE_CODE
                  , T.APP_TYPE_NAME
                  , T.CRT_USER_ID
                  , T.CUST_IC
                  , T.CUST_NAME
                  , T.CUST_VA_NO
                  , T.DSC_BRNCH_ID
                  , T.KEYIN_BRNCH_ID
                  , T.ORD_ID
                  , T.ORD_NO
                  , T.ORD_STUS_CODE
                  , T.PO_NO
                  , T.PRODUCT_CODE
                  , T.PRODUCT_NAME
                  , T.REF_NO
                  , T.RENT_STUS
                  , T.SALESMAN_MEM_ID
                  , T.SALESMAN_CODE
                  , T.SALESMAN_MEM_TYPE_ID
                  , T.BILLING_GRP_ID
                  , T.MAIL_TEL_MOB
                  , T.MAIL_TEL_FAX
                  , T.MAIL_TEL_OFF
                  , T.MAIL_TEL_RES
                  , T.INST_TEL_FAX
                  , T.INST_TEL_MOB
                  , T.INST_TEL_OFF
                  , T.INST_TEL_RES
                  , T.SIRIM_NO
                  , T.SERIAL_NO
                  , T.PROMO_CODE
                  , T.PROMO_DESC
                  , T.RELATED_NO
                  , T.RELATED_ID
                  , 1 C1
                  , NVL(T.APP_TYPE_ID, 0) AS APP_TYPE_ID
                  , NVL(T.CUST_ID, 0) AS CUST_ID
                  , TO_CHAR(T.ORD_DT, 'DD/MM/YYYY') AS ORD_DT
                  , NVL(T.ORD_STUS_ID, 0) AS ORD_STUS_ID
                  , NVL(T.PRODUCT_ID, 0) AS PRODUCT_ID
                  , T.PV_MONTH
                  , T.PV_YEAR
    FROM ( SELECT /*+ use_nl( V1.som V1.ir V1.ie V1.ei V1.i V1.sod V1.cp3 V1.cp2 V1.rs V1.c V1.u V1.mem V1.cd V1.stk V1.pm V1.S ) */
                        V1.APP_TYPE_CODE
                      , V1.APP_TYPE_ID
                      , V1.APP_TYPE_NAME
                      , V1.CRT_USER_ID
                      , V1.CUST_IC
                      , V1.CUST_NAME
                      , V1.CUST_ID
                      , V1.CUST_VA_NO
                      , V1.DSC_BRNCH_ID
                      , V1.KEYIN_BRNCH_ID
                      , V1.ORD_DT
                      , V1.ORD_ID
                      , V1.ORD_NO
                      , V1.ORD_STUS_CODE
                      , V1.ORD_STUS_ID
                      , V1.PO_NO
                      , V1.PRODUCT_ID
                      , V1.PRODUCT_CODE
                      , V1.PRODUCT_NAME
                      , V1.REF_NO
                      , V1.RENT_STUS
                      , V1.SALESMAN_MEM_ID
                      , V1.SALESMAN_CODE
                      , V1.SALESMAN_MEM_TYPE_ID
                      , V1.BILLING_GRP_ID
                      , V1.MAIL_TEL_MOB
                      , V1.MAIL_TEL_FAX
                      , V1.MAIL_TEL_OFF
                      , V1.MAIL_TEL_RES
                      , V1.INST_TEL_FAX
                      , V1.INST_TEL_MOB
                      , V1.INST_TEL_OFF
                      , V1.INST_TEL_RES
                      , V1.SIRIM_NO
                      , V1.SERIAL_NO
                      , V1.ITM_PRC_ID
                      , V1.PV_MONTH
                      , V1.PV_YEAR
                      , V1.PROMO_CODE
                      , V1.PROMO_DESC
                      , V1.RELATED_NO
                      , V1.RELATED_ID
                 FROM SAL1013V  V1
                 WHERE 1 = 1
                 <if test='ordDt == null || ordDt == ""'>
                   AND V1.SALES_DT BETWEEN TO_DATE(#{ordStartDt}, 'YYYY-MM-DD') AND TO_DATE(#{ordEndDt}||' 23:59:59', 'YYYY-MM-DD HH24:MI:SS')
                 </if>
                 <if test='ordDt != null and ordDt != ""'>
                   AND V1.SALES_DT BETWEEN TO_DATE(#{ordDt}, 'DD/MM/YYYY') AND TO_DATE(#{ordDt}||' 23:59:59', 'DD/MM/YYYY HH24:MI:SS')
                 </if>
                 <if test='ordNo != null and ordNo != ""'>
                   AND V1.ORD_NO = #{ordNo}
                 </if>
                 <if test='arrAppType != null and arrAppType != ""'>
                   AND V1.APP_TYPE_ID IN
                   <foreach item="item" collection="arrAppType" index="index" open="(" separator="," close=")">
                     #{item}
                   </foreach>
                 </if>
                 <if test='arrOrdStusId != null and arrOrdStusId != ""'>
                   AND V1.ORD_STUS_ID IN
                   <foreach item="item" collection="arrOrdStusId" index="index" open="(" separator="," close=")">
                     #{item}
                   </foreach>
                 </if>
                 <if test='arrKeyinBrnchId != null and arrKeyinBrnchId != ""'>
                   AND V1.KEYIN_BRNCH_ID IN
                   <foreach item="item" collection="arrKeyinBrnchId" index="index" open="(" separator="," close=")">
                     #{item}
                   </foreach>
                 </if>
                 <if test='arrDscBrnchId != null and arrDscBrnchId != ""'>
                   AND V1.DSC_BRNCH_ID IN
                   <foreach item="item" collection="arrDscBrnchId" index="index" open="(" separator="," close=")">
                     #{item}
                   </foreach>
                 </if>
                 <if test='custId != null and custId != ""'>
                   AND V1.CUST_ID = #{custId}
                 </if>
                 <if test='custName != null and custName != ""'>
                   AND UPPER(V1.CUST_NAME) LIKE '%'||UPPER(#{custName})||'%'
                 </if>
                 <if test='custIc != null and custIc != ""'>
                   AND UPPER(V1.CUST_IC) LIKE '%'||UPPER(#{custIc})||'%'
                 </if>
                 <if test='productId != null and productId != ""'>
                   AND V1.PRODUCT_ID = #{productId}
                 </if>
                 <if test='salesmanCode != null and salesmanCode != ""'>
                   AND UPPER(V1.SALESMAN_CODE) = UPPER(#{salesmanCode})
                 </if>
                 <if test='arrRentStus != null and arrRentStus != ""'>
                   AND V1.RENT_STUS IN
                   <foreach item="item" collection="arrRentStus" index="index" open="(" separator="," close=")">
                     #{item}
                   </foreach>
                 </if>
                 <if test='refNo != null and refNo != ""'>
                   AND UPPER(V1.REF_NO) = UPPER(#{refNo})
                 </if>
                 <if test='poNo != null and poNo != ""'>
                   AND UPPER(V1.PO_NO) = UPPER(#{poNo})
                 </if>
                 <if test='contactNo != null and contactNo != ""'>
                   AND #{contactNo} IN (V1.MAIL_TEL_MOB, V1.MAIL_TEL_OFF, V1.MAIL_TEL_RES)
                 </if>
                 <if test='vaNo != null and vaNo != ""'>
                   AND UPPER(V1.CUST_VA_NO) = UPPER(#{vaNo})
                 </if>
                 <if test='serialNo != null and serialNo != ""'>
                   AND UPPER(V1.SERIAL_NO) = UPPER(#{serialNo})
                 </if>
                 <if test='sirimNo != null and sirimNo != ""'>
                   AND UPPER(V1.SIRIM_NO) = UPPER(#{sirimNo})
                 </if>
                 <if test='crtUserId != null and crtUserId != ""'>
                   AND UPPER(V1.CRT_USER_ID) = UPPER(#{crtUserId})
                 </if>
                 <if test='promoCode != null and promoCode != ""'>
                   AND UPPER(V1.PROMO_CODE) = UPPER(#{promoCode})
                 </if>
                 <if test='relatedNo != null and relatedNo != ""'>
                   AND UPPER(V1.RELATED_NO) = UPPER(#{relatedNo})
                 </if>
                 <if test='invoicePoNo != null and invoicePoNo != ""'>
                   AND V1.ORD_ID IN (SELECT DISTINCT PO_ORD_ID
                                     FROM PAY0015D
                                     WHERE PO_REF_NO = #{invoicePoNo})
                 </if>
                 <if test='isEKeyin != null and isEKeyin != ""'>
                   AND EKEY_IN_ID IS NOT NULL
                 </if>
    ) T
    ORDER BY T.ORD_NO ASC
  </select>

  <select id="selectOrderList" parameterType="Map" resultType="egovMap">
    SELECT T.APP_TYPE_CODE
         , T.APP_TYPE_NAME
         , T.CRT_USER_ID
         , T.CUST_IC
         , T.CUST_NAME
         , T.CUST_VA_NO
         , T.DSC_BRNCH_ID
         , T.KEYIN_BRNCH_ID
         , T.ORD_ID
         , T.ORD_NO
         , T.ORD_STUS_CODE
         , T.PO_NO
         , T.PRODUCT_CODE
         , T.PRODUCT_NAME
         , T.REF_NO
         , T.RENT_STUS
         , T.SALESMAN_MEM_ID
         , T.SALESMAN_CODE
         , T.SALESMAN_MEM_TYPE_ID
         , T.BILLING_GRP_ID
         , T.MAIL_TEL_MOB
         , T.MAIL_TEL_FAX
         , T.MAIL_TEL_OFF
         , T.MAIL_TEL_RES
         , T.INST_TEL_FAX
         , T.INST_TEL_MOB
         , T.INST_TEL_OFF
         , T.INST_TEL_RES
         , T.SIRIM_NO
         , T.SERIAL_NO
         , T.PROMO_CODE
         , T.PROMO_DESC
         , T.RELATED_NO
         , T.RELATED_ID
         , 1 C1
         , NVL(T.APP_TYPE_ID, 0) AS APP_TYPE_ID
         , NVL(T.CUST_ID, 0) AS CUST_ID
         , TO_CHAR(T.ORD_DT, 'DD/MM/YYYY') AS ORD_DT
         , NVL(T.ORD_STUS_ID, 0) AS ORD_STUS_ID
         , NVL(T.PRODUCT_ID, 0) AS PRODUCT_ID
         , T.PV_MONTH
         , T.PV_YEAR
    FROM ( SELECT /*+ use_nl( V1.som V1.ir V1.ie V1.ei V1.i V1.sod V1.cp3 V1.cp2 V1.rs V1.c V1.u V1.mem V1.cd V1.stk V1.pm V1.S ) */
                  V1.APP_TYPE_CODE
                , V1.APP_TYPE_ID
                , V1.APP_TYPE_NAME
                , V1.CRT_USER_ID
                , V1.CUST_IC
                , V1.CUST_NAME
                , V1.CUST_ID
                , V1.CUST_VA_NO
                , V1.DSC_BRNCH_ID
                , V1.KEYIN_BRNCH_ID
                , V1.ORD_DT
                , V1.ORD_ID
                , V1.ORD_NO
                , V1.ORD_STUS_CODE
                , V1.ORD_STUS_ID
                , V1.PO_NO
                , V1.PRODUCT_ID
                , V1.PRODUCT_CODE
                , V1.PRODUCT_NAME
                , V1.REF_NO
                , V1.RENT_STUS
                , V1.SALESMAN_MEM_ID
                , V1.SALESMAN_CODE
                , V1.SALESMAN_MEM_TYPE_ID
                , V1.BILLING_GRP_ID
                , V1.MAIL_TEL_MOB
                , V1.MAIL_TEL_FAX
                , V1.MAIL_TEL_OFF
                , V1.MAIL_TEL_RES
                , V1.INST_TEL_FAX
                , V1.INST_TEL_MOB
                , V1.INST_TEL_OFF
                , V1.INST_TEL_RES
                , V1.SIRIM_NO
                , V1.SERIAL_NO
                , V1.ITM_PRC_ID
                , V1.PV_MONTH
                , V1.PV_YEAR
                , V1.PROMO_CODE
                , V1.PROMO_DESC
                , V1.RELATED_NO
                , V1.RELATED_ID
           FROM SAL1013V  V1

           <if test='(serialNo != null and serialNo != "") || sirimNo != null and sirimNo != ""'>
             INNER JOIN ( SELECT IE.SALES_ORD_ID
                          FROM SAL0047D IR
                          LEFT OUTER JOIN SAL0046D IE ON IE.INSTALL_ENTRY_ID = IR.ENTRY_ID WHERE
                          <choose>
                            <when test='serialNo != null and serialNo != ""'>
                              UPPER(IR.SERIAL_NO) = UPPER(#{serialNo})
                              <if test='sirimNo != null and sirimNo != ""'>
                                AND UPPER(IR.SIRIM_NO) = UPPER(#{sirimNo})
                              </if>
                            </when>
                            <otherwise>
                              <if test='sirimNo != null and sirimNo != ""'>
                                IR.SIRIM_NO = UPPER(#{sirimNo})
                              </if>
                            </otherwise>
                          </choose>
                        ) A on V1.ORD_ID = A.SALES_ORD_ID
           </if>

           WHERE 1 = 1
           <if test='ordDt == null || ordDt == ""'>
             AND V1.SALES_DT BETWEEN TO_DATE(#{ordStartDt}, 'YYYY-MM-DD') AND TO_DATE(#{ordEndDt}||' 23:59:59', 'YYYY-MM-DD HH24:MI:SS')
           </if>
           <if test='ordDt != null and ordDt != ""'>
             AND V1.SALES_DT BETWEEN TO_DATE(#{ordDt}, 'DD/MM/YYYY') AND TO_DATE(#{ordDt}||' 23:59:59', 'DD/MM/YYYY HH24:MI:SS')
           </if>
           <if test='ordNo != null and ordNo != ""'>
             AND V1.ORD_NO = #{ordNo}
           </if>
           <if test='arrAppType != null and arrAppType != ""'>
             AND V1.APP_TYPE_ID IN
             <foreach item="item" collection="arrAppType" index="index" open="(" separator="," close=")">
               #{item}
             </foreach>
           </if>
           <if test='arrOrdStusId != null and arrOrdStusId != ""'>
             AND V1.ORD_STUS_ID IN
             <foreach item="item" collection="arrOrdStusId" index="index" open="(" separator="," close=")">
               #{item}
             </foreach>
           </if>
           <if test='arrKeyinBrnchId != null and arrKeyinBrnchId != ""'>
             AND V1.KEYIN_BRNCH_ID IN
             <foreach item="item" collection="arrKeyinBrnchId" index="index" open="(" separator="," close=")">
               #{item}
             </foreach>
           </if>
           <if test='arrDscBrnchId != null and arrDscBrnchId != ""'>
             AND V1.DSC_BRNCH_ID IN
             <foreach item="item" collection="arrDscBrnchId" index="index" open="(" separator="," close=")">
               #{item}
             </foreach>
           </if>
           <if test='custId != null and custId != ""'>
             AND V1.CUST_ID = #{custId}
           </if>
           <if test='custName != null and custName != ""'>
             AND V1.CUST_NAME LIKE '%'||UPPER(#{custName})||'%'
           </if>
           <if test='custIc != null and custIc != ""'>
             AND V1.CUST_IC LIKE '%'||UPPER(#{custIc})||'%'
           </if>
           <if test='productId != null and productId != ""'>
             AND V1.PRODUCT_ID = #{productId}
           </if>
           <if test='salesmanCode != null and salesmanCode != ""'>
             AND V1.SALESMAN_CODE = UPPER(#{salesmanCode})
           </if>
           <if test='arrRentStus != null and arrRentStus != ""'>
             AND V1.RENT_STUS IN
             <foreach item="item" collection="arrRentStus" index="index" open="(" separator="," close=")">
               #{item}
             </foreach>
           </if>
           <if test='refNo != null and refNo != ""'>
             AND V1.REF_NO = UPPER(#{refNo})
           </if>
           <if test='poNo != null and poNo != ""'>
             AND V1.PO_NO = UPPER(#{poNo})
           </if>
           <if test='contactNo != null and contactNo != ""'>
             AND #{contactNo} IN (V1.MAIL_TEL_MOB, V1.MAIL_TEL_OFF, V1.MAIL_TEL_RES)
           </if>
           <if test='vaNo != null and vaNo != ""'>
             AND V1.CUST_VA_NO = UPPER(#{vaNo})
           </if>
           <if test='crtUserId != null and crtUserId != ""'>
             AND V1.CRT_USER_ID = UPPER(#{crtUserId})
           </if>
           <if test='promoCode != null and promoCode != ""'>
             AND V1.PROMO_CODE = UPPER(#{promoCode})
           </if>
           <if test='relatedNo != null and relatedNo != ""'>
             AND V1.RELATED_NO = UPPER(#{relatedNo})
           </if>
           <if test='invoicePoNo != null and invoicePoNo != ""'>
             AND V1.ORD_ID IN (SELECT DISTINCT PO_ORD_ID
                         FROM PAY0015D
                         WHERE PO_REF_NO = #{invoicePoNo})
           </if>
           <if test='isEKeyin != null and isEKeyin != ""'>
             AND EKEY_IN_ID IS NOT NULL
           </if>
    ) T
    ORDER BY T.ORD_NO ASC
  </select>

  <select id="getApplicationTypeList" parameterType="Map" resultType="egovMap">
    SELECT Project1.CODE_ID CODE_ID ,
           Project1.CODE_MASTER_ID CODE_MASTER_ID ,
           Project1.CODE CODE ,
           Project1.CODE_NAME CODE_NAME ,
           Project1.DISAB DISAB ,
           Project1.CRT_DT CRT_DT ,
           Project1.CRT_USER_ID CRT_USER_ID ,
           Project1.UPD_DT UPD_DT ,
           Project1.UPD_USER_ID UPD_USER_ID ,
           Project1.OLD_CODE_ID OLD_CODE_ID
    FROM ( SELECT Extent1.CODE_ID CODE_ID ,
                  Extent1.CODE_MASTER_ID CODE_MASTER_ID ,
                  Extent1.CODE CODE ,
                  Extent1.CODE_NAME CODE_NAME ,
                  Extent1.DISAB DISAB ,
                  Extent1.CRT_DT CRT_DT ,
                  Extent1.CRT_USER_ID CRT_USER_ID ,
                  Extent1.UPD_DT UPD_DT ,
                  Extent1.UPD_USER_ID UPD_USER_ID ,
                  Extent1.OLD_CODE_ID OLD_CODE_ID
            FROM SYS0013M Extent1
            WHERE ( Extent1.CODE_MASTER_ID = #{codeId} )
              AND ( 0 = Extent1.DISAB )
    ) Project1
    ORDER BY Project1.CODE_NAME ASC
  </select>

  <select id="getUserCodeList" resultType="egovMap">
    SELECT USER_ID CODE_ID,
           USER_NAME CODE_NAME
    FROM SYS0047M
    WHERE USER_STUS_ID = 1
      AND USER_TYPE_ID != 1
      AND USER_TYPE_ID != 2
      AND USER_TYPE_ID != 3
    ORDER BY USER_NAME
  </select>

  <select id="getOrgCodeList" parameterType="Map" resultType="egovMap">
    SELECT Extent1.MEM_ID CODE_ID ,
           Extent1.MEM_CODE || ' - '  || Extent1.NAME CODE_NAME
    FROM ORG0001D Extent1
    JOIN (SELECT vMemberOrg.MEM_ID MEM_ID ,
                 vMemberOrg.MEM_CODE MEM_CODE ,
                 vMemberOrg.MEM_LVL MEM_LVL ,
                 vMemberOrg.DEPT_CODE DEPT_CODE ,
                 vMemberOrg.GRP_CODE GRP_CODE ,
                 vMemberOrg.ORG_CODE ORG_CODE ,
                 vMemberOrg.TOP_ORG_CODE TOP_ORG_CODE ,
                 vMemberOrg.MEM_UP_ID MEM_UP_ID ,
                 vMemberOrg.LVL3_UP_ID LVL3_UP_ID ,
                 vMemberOrg.LVL2_UP_ID LVL2_UP_ID ,
                 vMemberOrg.LVL1_UP_ID LVL1_UP_ID ,
                 vMemberOrg.LVL0_UP_ID LVL0_UP_ID
          FROM ORG1001V vMemberOrg ) Extent2 ON ( Extent2.MEM_ID = Extent1.MEM_ID )
          AND ( Extent2.MEM_LVL  = #{memLvl} )
    WHERE ( 1 = Extent1.STUS )
      AND ( Extent1.MEM_TYPE = #{memType} )
  </select>

  <select id="getGrpCodeList" parameterType="Map" resultType="egovMap">
    SELECT Extent1.MEM_ID CODE_ID ,
           Extent1.MEM_CODE MEM_CODE ,
           Extent1.NAME NAME ,
           Extent1.MEM_CODE || ' - '  || Extent1.NAME CODE_NAME ,
           Extent2.DEPT_CODE DEPT_CODE ,
           Extent2.GRP_CODE GRP_CODE ,
           Extent2.ORG_CODE ORG_CODE
    FROM ORG0001D Extent1
    JOIN (SELECT vMemberOrg.MEM_ID MEM_ID ,
                 vMemberOrg.MEM_CODE MEM_CODE ,
                 vMemberOrg.MEM_LVL MEM_LVL ,
                 vMemberOrg.DEPT_CODE DEPT_CODE ,
                 vMemberOrg.GRP_CODE GRP_CODE ,
                 vMemberOrg.ORG_CODE ORG_CODE ,
                 vMemberOrg.TOP_ORG_CODE TOP_ORG_CODE ,
                 vMemberOrg.MEM_UP_ID MEM_UP_ID ,
                 vMemberOrg.LVL3_UP_ID LVL3_UP_ID ,
                 vMemberOrg.LVL2_UP_ID LVL2_UP_ID ,
                 vMemberOrg.LVL1_UP_ID LVL1_UP_ID ,
                 vMemberOrg.LVL0_UP_ID LVL0_UP_ID
          FROM ORG1001V vMemberOrg ) Extent2 ON ( Extent2.MEM_ID    = Extent1.MEM_ID )
                                            AND ( Extent2.MEM_LVL  = #{memLvl} )
          WHERE ( 1 = Extent1.STUS )
            AND ( Extent1.MEM_TYPE = #{memType} )
            AND ( Extent2.MEM_UP_ID = #{upperLineMemberID} )
  </select>

  <select id="getMemberOrgInfo" parameterType="Map" resultType="egovMap">
    SELECT ORG_CODE,
           GRP_CODE,
           DEPT_CODE
    FROM ORG1001V
    WHERE MEM_ID = #{cmbCode}
  </select>

  <select id="getBankCodeList" parameterType="Map" resultType="egovMap">
    SELECT BANK_ID CODE_ID,
           CODE||' : '||NAME CODE_NAME
    FROM SYS0004M
    WHERE STUS_CODE_ID = 1
    ORDER BY CODE
  </select>


  <select id="selectInstallParam" parameterType="Map" resultType="egovMap">
    SELECT MAX(INSTALL_ENTRY_ID) INSTALL_ENTRY_ID
    FROM SAL0046D
    WHERE STUS_CODE_ID = 4
      AND SALES_ORD_ID = #{salesOrderId}
    GROUP BY SALES_ORD_ID
  </select>

  <select id="selectProductReturnView" parameterType="Map" resultType="egovMap">
    SELECT A.RETN_NO,
           C.CODE,
           TO_CHAR(A.REQST_DT, 'YYYY/MM/DD' ) REQST_DT,
           D.MEM_CODE,
           D.NAME
    FROM LOG0038D A,
         SAL0001D B,
         SYS0038M C,
         ORG0001D D
    WHERE A.SALES_ORD_ID = B.SALES_ORD_ID
      AND A.STUS_CODE_ID = C.STUS_CODE_ID
      AND A.CT_ID = D.MEM_ID
      AND B.SALES_ORD_NO = #{salesOrdNo}
  </select>

  <select id="selectPReturnParam" parameterType="Map" resultType="egovMap">
  <!--KV old code
    select  a.SO_REQ_RESN_ID ,  b.RETN_NO
    from sal0020d a  , log0038d b
    where 1=1
    and a.SO_REQ_CUR_CALL_ENTRY_ID = b.CALL_ENTRY_ID
    and STUS_CODE_ID = 1
    and b.CALL_ENTRY_ID = #{callEntryId}-->

    SELECT a.SO_REQ_RESN_ID ,
           b.RETN_NO
    FROM SAL0020D a
    JOIN LOG0038D b ON a.SO_REQ_CUR_CALL_ENTRY_ID = b.CALL_ENTRY_ID
                   AND STK_RETN_ID = (SELECT MAX(STK_RETN_ID) FROM LOG0038D WHERE a.SO_REQ_CUR_CALL_ENTRY_ID = CALL_ENTRY_ID)
    WHERE 1=1
      AND STUS_CODE_ID = 1
      AND b.CALL_ENTRY_ID = #{callEntryId}
  </select>

  <select id="getPrCTInfo" parameterType="Map" resultType="egovMap">
    SELECT DISTINCT b.MEM_ID,
                    b.MEM_CODE,
                    b.NAME
    FROM LOG0038D a
       , ORG0001D b
    WHERE CT_ID = MEM_ID
      AND a.CALL_ENTRY_ID = #{callEntryId}
      AND a.STUS_CODE_ID = 1
  </select>

  <insert id="insert_LOG0039D" parameterType="Map">
    INSERT INTO LOG0039D ( STK_RETN_RESULT_ID,
                           STK_RETN_ID,
                           STK_RETN_STUS_ID,
                           STK_RETN_STK_IS_RET,
                           STK_RETN_DT,
                           STK_RETN_REM,
                           STK_RETN_RESN_ID,
                           STK_RETN_CC_ID,
                           STK_RETN_CRT_DT,
                           STK_RETN_CRT_USER_ID,
                           STK_RETN_UPD_DT,
                           STK_RETN_UPD_USER_ID,
                           STK_RETN_RESULT_IS_SYNCH,
                           STK_RETN_ALLOW_COMM,
                           STK_RETN_CT_MEM_ID,
                           CHECKIN_DT,
                           CHECKIN_TM,
                           CHECKIN_GPS,
                           SIGN_DATA,
                           SIGN_REG_DT,
                           SIGN_REG_TM,
                           OWNER_CODE,
                           RESULT_CUST_NAME,
                           RESULT_ICMOBILE_NO,
                           RESULT_RPT_EMAIL_NO,
                           RESULT_ACEPT_NAME
    ) VALUES ( LOG0039D_STK_RETN_RESULT_ID.nextval,
               (SELECT STK_RETN_ID FROM LOG0038D WHERE retn_no = #{serviceNo}),
               #{stkRetnStusId},
               #{stkRetnStkIsRet},
               SYSDATE,
               #{stkRetnRem},
               #{stkRetnResnId},
               #{stkRetnCcId},
               SYSDATE,
               #{stkRetnCrtUserId} ,
               SYSDATE,
               #{stkRetnCrtUserId} ,
               #{stkRetnResultIsSynch},
               #{stkRetnAllowComm},
               #{stkRetnCtMemId},
               TO_CHAR( to_date(#{checkinDt},'DD/MM/YYYY') ,'yyyymmdd'),
               #{checkinTm},
               #{checkinGps},
               #{signData},
               TO_CHAR( to_date( #{signRegDt},'DD/MM/YYYY') ,'yyyymmdd'),
               #{signRegTm},
               #{ownerCode},
               #{resultCustName},
               #{resultIcmobileNo},
               #{resultRptEmailNo},
               #{resultAceptName}
    )
  </insert>

  <update id="updateState_LOG0038D" parameterType="Map">
    UPDATE LOG0038D
    SET STUS_CODE_ID  = '4',
        UPD_DT  = sysdate,
        UPD_USER_ID = #{userId}
    WHERE retn_no = #{serviceNo}
  </update>

  <insert id="insert_SAL0009D" parameterType="Map">
    INSERT INTO SAL0009D ( LOG_ID,
                           SALES_ORD_ID,
                           PRGRS_ID,
                           LOG_DT,
                           REF_ID,
                           IS_LOK,
                           LOG_CRT_USER_ID,
                           LOG_CRT_DT
    ) VALUES ( SAL0009D_LOG_ID_SEQ.NEXTVAL,
              (SELECT SALES_ORD_ID FROM SAL0001D WHERE SALES_ORD_NO = #{salesOrderNo}),
              '13',
              SYSDATE,
              '0',
              '0',
               #{userId},
              SYSDATE )
  </insert>

  <update id="updateState_SAL0020D" parameterType="Map">
    UPDATE SAL0020D
    SET SO_REQ_STUS_ID = '32'
    WHERE SO_REQ_SO_ID = (SELECT SALES_ORD_ID
                          FROM SAL0001D
                          WHERE SALES_ORD_NO = #{salesOrderNo})
  </update>

  <update id="updateState_SAL0071D" parameterType="Map">
    UPDATE SAL0071D
    SET STUS_CODE_ID = 'TER'
    WHERE SALES_ORD_ID = (SELECT SALES_ORD_ID
                          FROM SAL0001D
                          WHERE SALES_ORD_NO = #{salesOrderNo})
  </update>

  <select id="SP_RETURN_BILLING_EARLY_TERMI" parameterType="Map"  statementType="CALLABLE" >
    {
      call SP_RETURN_BILLING_EARLY_TERMI( #{P_SALES_ORD_NO},#{P_USER_ID},#{P_RETN_NO})
    }
  </select>

  <update id="updateState_SAL0001D" parameterType="Map">
    UPDATE SAL0001D A
    SET STUS_CODE_ID = '10'
    WHERE A.SALES_ORD_NO = #{salesOrderNo}
  </update>

  <select id="select_SeqCCR0006D" parameterType="Map" resultType="java.lang.String">
    select CCR0006D_CALL_ENTRY_ID_SEQ.NEXTVAL
    FROM DUAL
   </select>

   <select id="select_SeqCCR0007D" parameterType="Map" resultType="java.lang.String">
    SELECT CCR0007D_CALL_RESULT_ID_SEQ.NEXTVAL
    FROM DUAL
   </select>

   <insert id="insert_CCR0006D" parameterType="Map">
     INSERT INTO CCR0006D ( CALL_ENTRY_ID ,
                            SALES_ORD_ID ,
                            TYPE_ID,
                            STUS_CODE_ID ,
                            RESULT_ID ,
                            DOC_ID,
                            CRT_USER_ID ,
                            CRT_DT ,
                            CALL_DT,
                            IS_WAIT_FOR_CANCL ,
                            HAPY_CALLER_ID,
                            UPD_DT ,
                            UPD_USER_ID ,
                            ORI_CALL_DT
     ) VALUES ( #{callEntryID} ,
                (SELECT SALES_ORD_ID FROM SAL0001D WHERE SALES_ORD_NO = #{salesOrderNo}) ,
                 259 ,
                 19 ,
                 #{callResultID} ,
                 0 ,
                 #{userId} ,
                 SYSDATE ,
                 TO_DATE (#{nextCallDate} , 'DD/MM/YYYY'),
                 0 ,
                 0 ,
                 SYSDATE ,
                 #{userId} ,
                 TO_DATE (#{nextCallDate} , 'DD/MM/YYYY')
     )
  </insert>

  <insert id="insert_CCR0007D" parameterType="Map">
    INSERT INTO CCR0007D ( CALL_RESULT_ID ,
                           CALL_ENTRY_ID ,
                           CALL_STUS_ID ,
                           CALL_DT ,
                           CALL_ACTN_DT ,
                           CALL_FDBCK_ID ,
                           CALL_CT_ID ,
                           CALL_REM ,
                           CALL_CRT_USER_ID ,
                           CALL_CRT_DT ,
                           CALL_CRT_USER_ID_DEPT ,
                           CALL_HC_ID ,
                           CALL_ROS_AMT ,
                           CALL_SMS ,
                           CALL_SMS_REM
    ) VALUES ( #{callResultID},
               #{callEntryID} ,
               19 ,
               TO_DATE (#{nextCallDate} , 'DD/MM/YYYY') ,
               TO_DATE('1900/01/01', 'YYYY/MM/DD' ) ,
               0 ,
               0 ,
               ' ' ,
               #{userId} ,
               SYSDATE ,
               0 ,
               0 ,
               0 ,
               0 ,
               ' '
    )
  </insert>

  <insert id="insertFailed_LOG0039D" parameterType="Map">
    INSERT INTO LOG0039D ( STK_RETN_RESULT_ID,
                           STK_RETN_ID,
                           STK_RETN_STUS_ID,
                           STK_RETN_CT_MEM_ID,
                           STK_RETN_CRT_DT,
                           STK_RETN_CRT_USER_ID
    ) VALUES ( LOG0039D_STK_RETN_RESULT_ID.nextval,
               (SELECT STK_RETN_ID FROM LOG0038D WHERE retn_no = #{serviceNo}) ,
               '21',
               #{userId},
               SYSDATE,
               #{userId}
   )
  </insert>

  <update id="updateFailed_LOG0038D" parameterType="Map">
    UPDATE LOG0038D
    SET STUS_CODE_ID = '21',
        UPD_DT = SYSDATE,
        UPD_USER_ID = #{userId},
        FAIL_RESN_ID =#{failReasonCode},
        CALL_ENTRY_ID = #{callEntryID}
    WHERE  retn_no = #{serviceNo}
  </update>

  <update id="updateFailed_SAL0020D" parameterType="Map">
     UPDATE SAL0020D
     SET SO_REQ_UPD_USER_ID = #{userId}
       , SO_REQ_UPD_DT = SYSDATE
       , SO_REQ_STUS_ID = 1
       , SO_REQ_CUR_CALL_ENTRY_ID = #{callEntryID}
     WHERE SO_REQ_SO_ID = (SELECT SALES_ORD_ID FROM SAL0001D WHERE SALES_ORD_NO = #{salesOrderNo})
  </update>
</mapper>