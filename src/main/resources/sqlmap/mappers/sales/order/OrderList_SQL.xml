<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.coway.trust.biz.sales.order.impl.OrderListMapper">

  <!-- BACKUP AFTER PERFORMANCE TUNING -->
  <select id="selectOrderList_bak" parameterType="Map" resultType="egovMap">
    SELECT DISTINCT T.APP_TYPE_CODE
                  , T.APP_TYPE_NAME
                  , T.CRT_USER_ID
                  , T.CUST_IC
                  , T.CUST_NAME
                  , T.CUST_VA_NO
                  , T.DSC_BRNCH_ID
                  , T.KEYIN_BRNCH_ID
                  , T.ORD_ID
                  , T.ORD_NO
                  , T.ORD_STUS_CODE
                  , T.PO_NO
                  , T.PRODUCT_CODE
                  , T.PRODUCT_NAME
                  , T.REF_NO
                  , T.RENT_STUS
                  , T.SALESMAN_MEM_ID
                  , T.SALESMAN_CODE
                  , T.SALESMAN_MEM_TYPE_ID
                  , T.BILLING_GRP_ID
                  , T.MAIL_TEL_MOB
                  , T.MAIL_TEL_FAX
                  , T.MAIL_TEL_OFF
                  , T.MAIL_TEL_RES
                  , T.INST_TEL_FAX
                  , T.INST_TEL_MOB
                  , T.INST_TEL_OFF
                  , T.INST_TEL_RES
                  , T.SIRIM_NO
                  , T.SERIAL_NO
                  , T.PROMO_CODE
                  , T.PROMO_DESC
                  , T.RELATED_NO
                  , T.RELATED_ID
                  , 1 C1
                  , NVL(T.APP_TYPE_ID, 0) AS APP_TYPE_ID
                  , NVL(T.CUST_ID, 0) AS CUST_ID
                  , TO_CHAR(T.ORD_DT, 'DD/MM/YYYY') AS ORD_DT
                  , NVL(T.ORD_STUS_ID, 0) AS ORD_STUS_ID
                  , NVL(T.PRODUCT_ID, 0) AS PRODUCT_ID
                  , T.PV_MONTH
                  , T.PV_YEAR
    FROM ( SELECT /*+ use_nl( V1.som V1.ir V1.ie V1.ei V1.i V1.sod V1.cp3 V1.cp2 V1.rs V1.c V1.u V1.mem V1.cd V1.stk V1.pm V1.S ) */
                        V1.APP_TYPE_CODE
                      , V1.APP_TYPE_ID
                      , V1.APP_TYPE_NAME
                      , V1.CRT_USER_ID
                      , V1.CUST_IC
                      , V1.CUST_NAME
                      , V1.CUST_ID
                      , V1.CUST_VA_NO
                      , V1.DSC_BRNCH_ID
                      , V1.KEYIN_BRNCH_ID
                      , V1.ORD_DT
                      , V1.ORD_ID
                      , V1.ORD_NO
                      , V1.ORD_STUS_CODE
                      , V1.ORD_STUS_ID
                      , V1.PO_NO
                      , V1.PRODUCT_ID
                      , V1.PRODUCT_CODE
                      , V1.PRODUCT_NAME
                      , V1.REF_NO
                      , V1.RENT_STUS
                      , V1.SALESMAN_MEM_ID
                      , V1.SALESMAN_CODE
                      , V1.SALESMAN_MEM_TYPE_ID
                      , V1.BILLING_GRP_ID
                      , V1.MAIL_TEL_MOB
                      , V1.MAIL_TEL_FAX
                      , V1.MAIL_TEL_OFF
                      , V1.MAIL_TEL_RES
                      , V1.INST_TEL_FAX
                      , V1.INST_TEL_MOB
                      , V1.INST_TEL_OFF
                      , V1.INST_TEL_RES
                      , V1.SIRIM_NO
                      , V1.SERIAL_NO
                      , V1.ITM_PRC_ID
                      , V1.PV_MONTH
                      , V1.PV_YEAR
                      , V1.PROMO_CODE
                      , V1.PROMO_DESC
                      , V1.RELATED_NO
                      , V1.RELATED_ID
                 FROM SAL1013V  V1
                 WHERE 1 = 1
                 <if test='ordDt == null || ordDt == ""'>
                   AND V1.SALES_DT BETWEEN TO_DATE(#{ordStartDt}, 'YYYY-MM-DD') AND TO_DATE(#{ordEndDt}||' 23:59:59', 'YYYY-MM-DD HH24:MI:SS')
                 </if>
                 <if test='ordDt != null and ordDt != ""'>
                   AND V1.SALES_DT BETWEEN TO_DATE(#{ordDt}, 'DD/MM/YYYY') AND TO_DATE(#{ordDt}||' 23:59:59', 'DD/MM/YYYY HH24:MI:SS')
                 </if>
                 <if test='ordNo != null and ordNo != ""'>
                   AND V1.ORD_NO = #{ordNo}
                 </if>
                 <if test='arrAppType != null and arrAppType != ""'>
                   AND V1.APP_TYPE_ID IN
                   <foreach item="item" collection="arrAppType" index="index" open="(" separator="," close=")">
                     #{item}
                   </foreach>
                 </if>
                 <if test='arrOrdStusId != null and arrOrdStusId != ""'>
                   AND V1.ORD_STUS_ID IN
                   <foreach item="item" collection="arrOrdStusId" index="index" open="(" separator="," close=")">
                     #{item}
                   </foreach>
                 </if>
                 <if test='arrKeyinBrnchId != null and arrKeyinBrnchId != ""'>
                   AND V1.KEYIN_BRNCH_ID IN
                   <foreach item="item" collection="arrKeyinBrnchId" index="index" open="(" separator="," close=")">
                     #{item}
                   </foreach>
                 </if>
                 <if test='arrDscBrnchId != null and arrDscBrnchId != ""'>
                   AND V1.DSC_BRNCH_ID IN
                   <foreach item="item" collection="arrDscBrnchId" index="index" open="(" separator="," close=")">
                     #{item}
                   </foreach>
                 </if>
                 <if test='custId != null and custId != ""'>
                   AND V1.CUST_ID = #{custId}
                 </if>
                 <if test='custName != null and custName != ""'>
                   AND UPPER(V1.CUST_NAME) LIKE '%'||UPPER(#{custName})||'%'
                 </if>
                 <if test='custIc != null and custIc != ""'>
                   AND UPPER(V1.CUST_IC) LIKE '%'||UPPER(#{custIc})||'%'
                 </if>
                 <if test='productId != null and productId != ""'>
                   AND V1.PRODUCT_ID = #{productId}
                 </if>
                 <if test='salesmanCode != null and salesmanCode != ""'>
                   AND UPPER(V1.SALESMAN_CODE) = UPPER(#{salesmanCode})
                 </if>
                 <if test='arrRentStus != null and arrRentStus != ""'>
                   AND V1.RENT_STUS IN
                   <foreach item="item" collection="arrRentStus" index="index" open="(" separator="," close=")">
                     #{item}
                   </foreach>
                 </if>
                 <if test='refNo != null and refNo != ""'>
                   AND UPPER(V1.REF_NO) = UPPER(#{refNo})
                 </if>
                 <if test='poNo != null and poNo != ""'>
                   AND UPPER(V1.PO_NO) = UPPER(#{poNo})
                 </if>
                 <if test='contactNo != null and contactNo != ""'>
                   AND #{contactNo} IN (V1.MAIL_TEL_MOB, V1.MAIL_TEL_OFF, V1.MAIL_TEL_RES)
                 </if>
                 <if test='vaNo != null and vaNo != ""'>
                   AND V1.CUST_VA_NO = #{vaNo}
                 </if>
                 <if test='serialNo != null and serialNo != ""'>
                   AND V1.SERIAL_NO = #{serialNo}
                 </if>
                 <if test='sirimNo != null and sirimNo != ""'>
                   AND V1.SIRIM_NO = #{sirimNo}
                 </if>
                 <if test='crtUserId != null and crtUserId != ""'>
                   AND V1.CRT_USER_ID = #{crtUserId}
                 </if>
                 <if test='promoCode != null and promoCode != ""'>
                   AND V1.PROMO_CODE = #{promoCode}
                 </if>
                 <if test='relatedNo != null and relatedNo != ""'>
                   AND V1.RELATED_NO = #{relatedNo}
                 </if>
                 <if test='invoicePoNo != null and invoicePoNo != ""'>
                   AND V1.ORD_ID IN (SELECT DISTINCT PO_ORD_ID
                                     FROM PAY0015D
                                     WHERE PO_REF_NO = #{invoicePoNo})
                 </if>
                 <if test='isEKeyin != null and isEKeyin != ""'>
                   AND EKEY_IN_ID IS NOT NULL
                 </if>
    ) T
    ORDER BY T.ORD_NO ASC
  </select>

  <select id="selectOrderList" parameterType="Map" resultType="egovMap">
    SELECT T.APP_TYPE_CODE
         , T.APP_TYPE_NAME
         , T.CRT_USER_ID
         , CASE WHEN LENGTH(T.CUST_IC) = 12 THEN REGEXP_REPLACE(SUBSTR(T.CUST_IC, 0,8),'[A-Za-z0-9]','x') || SUBSTR(T.CUST_IC, 9,12)
            ELSE T.CUST_IC
            END CUST_IC
         , T.CUST_NAME
         , T.CUST_VA_NO
         , T.DSC_BRNCH_ID
         , T.KEYIN_BRNCH_ID
         , T.ORD_ID
         , T.ORD_NO
         , T.ORD_STUS_CODE
         , T.PO_NO
         , T.PRODUCT_CODE
         , T.PRODUCT_NAME
         , T.REF_NO
         , T.RENT_STUS
         , T.SALESMAN_MEM_ID
         , T.SALESMAN_CODE
         , T.SALESMAN_MEM_TYPE_ID
         , T.BILLING_GRP_ID
         , T.MAIL_TEL_MOB
         , T.MAIL_TEL_FAX
         , T.MAIL_TEL_OFF
         , T.MAIL_TEL_RES
         , T.INST_TEL_FAX
         , T.INST_TEL_MOB
         , T.INST_TEL_OFF
         , T.INST_TEL_RES
         , T.SIRIM_NO
         , T.SERIAL_NO
         , T.PROMO_CODE
         , T.PROMO_DESC
         , T.RELATED_NO
         , T.RELATED_ID
         , 1 C1
         , NVL(T.APP_TYPE_ID, 0) AS APP_TYPE_ID
         , NVL(T.CUST_ID, 0) AS CUST_ID
         , TO_CHAR(T.ORD_DT, 'DD/MM/YYYY') AS ORD_DT
         , NVL(T.ORD_STUS_ID, 0) AS ORD_STUS_ID
         , NVL(T.PRODUCT_ID, 0) AS PRODUCT_ID
         , T.PV_MONTH
         , T.PV_YEAR
         , T.BNDL_ID
         , T.ECOMM_ORD_ID
         , T.STK_CTGRY_ID
         , T.HOMECARE
    FROM ( SELECT /*+ use_nl( V1.som V1.ir V1.ie V1.ei V1.i V1.sod V1.cp3 V1.cp2 V1.rs V1.c V1.u V1.mem V1.cd V1.stk V1.pm V1.S ) */
                  V1.APP_TYPE_CODE
                , V1.APP_TYPE_ID
                , V1.APP_TYPE_NAME
                , V1.CRT_USER_ID
                , V1.CUST_IC
                , V1.CUST_NAME
                , V1.CUST_ID
                , V1.CUST_VA_NO
                , V1.DSC_BRNCH_ID
                , V1.KEYIN_BRNCH_ID
                , V1.ORD_DT
                , V1.ORD_ID
                , V1.ORD_NO
                , V1.ORD_STUS_CODE
                , V1.ORD_STUS_ID
                , V1.PO_NO
                , V1.PRODUCT_ID
                , V1.PRODUCT_CODE
                , V1.PRODUCT_NAME
                , V1.REF_NO
                , V1.RENT_STUS
                , V1.SALESMAN_MEM_ID
                , V1.SALESMAN_CODE
                , V1.SALESMAN_MEM_TYPE_ID
                , V1.BILLING_GRP_ID
                , V1.MAIL_TEL_MOB
                , V1.MAIL_TEL_FAX
                , V1.MAIL_TEL_OFF
                , V1.MAIL_TEL_RES
                , V1.INST_TEL_FAX
                , V1.INST_TEL_MOB
                , V1.INST_TEL_OFF
                , V1.INST_TEL_RES
                , V1.SIRIM_NO
                , V1.SERIAL_NO
                , V1.ITM_PRC_ID
                , V1.PV_MONTH
                , V1.PV_YEAR
                , V1.PROMO_CODE
                , V1.PROMO_DESC
                , V1.RELATED_NO
                , V1.RELATED_ID
                , V1.BNDL_ID
                , NVL(S1.ECOMM_ORD_ID,0) AS ECOMM_ORD_ID
                , M1.STK_CTGRY_ID
                , GET_HOMECARE_FLAG_YN(M1.STK_CTGRY_ID) AS HOMECARE
           FROM SAL1013V  V1
             JOIN SYS0026M M1 ON V1.PRODUCT_CODE = M1.STK_CODE
             JOIN sal0001d s1 ON v1.ORD_NO = s1.SALES_ORD_NO
            /*
             INNER JOIN ( SELECT IE.SALES_ORD_ID
                          FROM SAL0047D IR
                          LEFT OUTER JOIN SAL0046D IE ON IE.INSTALL_ENTRY_ID = IR.ENTRY_ID WHERE
                          <choose>
                            <when test='serialNo != null and serialNo != ""'>
                              UPPER(IR.SERIAL_NO) = serialNo
                              <if test='sirimNo != null and sirimNo != ""'>
                                AND UPPER(IR.SIRIM_NO) = sirimNo
                              </if>
                            </when>
                            <otherwise>
                              <if test='sirimNo != null and sirimNo != ""'>
                                IR.SIRIM_NO = sirimNo
                              </if>
                            </otherwise>
                          </choose>
                        ) A on V1.ORD_ID = A.SALES_ORD_ID
           */
           <choose>
            <when test='memType != null and memType != "" '>
            JOIN(
                SELECT DISTINCT S1.CUST_ID , S1.SALES_ORD_ID
                FROM SAL0001D S
                JOIN SAL0001D S1 on S1.CUST_ID = S.CUST_ID
                JOIN SAL0090D G ON S.SALES_ORD_ID = G.SRV_SO_ID
                JOIN SAL0029D C ON S.CUST_ID = C.CUST_ID
                LEFT JOIN ORG1001V V ON V.MEM_ID = G.SRV_CODY_ID
                WHERE 1=1 AND NVL(S.BNDL_ID,0) = 0
                <if test='ordId != null and ordId != ""'>
                AND S.SALES_ORD_ID = #{ordId}
                </if>
                <if test='ordNo != null and ordNo != ""'>
                AND S.SALES_ORD_NO = #{ordNo}
                </if>
                <if test='ordDt == null || ordDt == ""'>
                AND S.SALES_DT BETWEEN TO_DATE(#{ordStartDt}, 'YYYY-MM-DD') AND TO_DATE(#{ordEndDt}||' 23:59:59', 'YYYY-MM-DD HH24:MI:SS')
                </if>
                <if test='ordDt != null and ordDt != ""'>
                AND S.SALES_DT BETWEEN TO_DATE(#{ordDt}, 'DD/MM/YYYY') AND TO_DATE(#{ordDt}||' 23:59:59', 'DD/MM/YYYY HH24:MI:SS')
                </if>
                <if test='memId != null and memId != ""'>
                AND (V.MEM_ID = #{memId})
                </if>
                <if test='deptCode != null and deptCode != " " and deptCode != ""'>
                AND (V.DEPT_CODE = #{deptCode})
                </if>
                <if test='grpCode != null and grpCode != " " and grpCode != ""'>
                AND (V.GRP_CODE = #{grpCode})
                </if>
                <if test='orgCode != null and orgCode != " " and orgCode != ""'>
                AND (V.ORG_CODE = #{orgCode})
                </if>
                UNION
                SELECT DISTINCT S.CUST_ID , S.SALES_ORD_ID
                FROM SAL0001D S
                JOIN ORG1001V V ON V.MEM_ID = S.MEM_ID
                WHERE 1=1 AND NVL(S.BNDL_ID,0) = 0
                <if test='ordId != null and ordId != ""'>
                AND S.SALES_ORD_ID = #{ordId}
                </if>
                <if test='ordNo != null and ordNo != ""'>
                AND S.SALES_ORD_NO = #{ordNo}
                </if>
                <if test='ordDt == null || ordDt == ""'>
                AND S.SALES_DT BETWEEN TO_DATE(#{ordStartDt}, 'YYYY-MM-DD') AND TO_DATE(#{ordEndDt}||' 23:59:59', 'YYYY-MM-DD HH24:MI:SS')
                </if>
                <if test='ordDt != null and ordDt != ""'>
                AND S.SALES_DT BETWEEN TO_DATE(#{ordDt}, 'DD/MM/YYYY') AND TO_DATE(#{ordDt}||' 23:59:59', 'DD/MM/YYYY HH24:MI:SS')
                </if>
                <if test='memId != null and memId != ""'>
                AND (V.MEM_ID = #{memId})
                </if>
                <if test='deptCode != null and deptCode != " " and deptCode != ""'>
                AND (V.DEPT_CODE = #{deptCode})
                </if>
                <if test='grpCode != null and grpCode != " " and grpCode != ""'>
                AND (V.GRP_CODE = #{grpCode})
                </if>
                <if test='orgCode != null and orgCode != " " and orgCode != ""'>
                AND (V.ORG_CODE = #{orgCode})
                </if>
            ) SVC
            ON V1.ORD_ID = SVC.SALES_ORD_ID
            </when>
            <otherwise>
             JOIN(
                SELECT DISTINCT S.CUST_ID , S.SALES_ORD_ID
                FROM SAL0001D S
                LEFT JOIN ORG1001V V ON V.MEM_ID = S.MEM_ID
                WHERE 1=1
                <if test='memId != null and memId != ""'>
                AND (V.MEM_ID = #{memId})
                </if>
                <if test='deptCode != null and deptCode != " " and deptCode != ""'>
                AND (V.DEPT_CODE = #{deptCode})
                </if>
                <if test='grpCode != null and grpCode != " " and grpCode != ""'>
                AND (V.GRP_CODE = #{grpCode})
                </if>
                <if test='orgCode != null and orgCode != " " and orgCode != ""'>
                AND (V.ORG_CODE = #{orgCode})
                </if>
                 ) SVC
            ON V1.ORD_ID = SVC.SALES_ORD_ID
            </otherwise>
            </choose>
           WHERE 1 = 1
           <if test='ordDt == null || ordDt == ""'>
             AND V1.SALES_DT BETWEEN TO_DATE(#{ordStartDt}, 'YYYY-MM-DD') AND TO_DATE(#{ordEndDt}||' 23:59:59', 'YYYY-MM-DD HH24:MI:SS')
           </if>
           <if test='ordDt != null and ordDt != ""'>
             AND V1.SALES_DT BETWEEN TO_DATE(#{ordDt}, 'DD/MM/YYYY') AND TO_DATE(#{ordDt}||' 23:59:59', 'DD/MM/YYYY HH24:MI:SS')
           </if>
           <if test='invoicePoNo != null and invoicePoNo != ""'>
             AND V1.ORD_ID IN (SELECT DISTINCT PO_ORD_ID
                         FROM PAY0015D
                         WHERE PO_REF_NO = #{invoicePoNo})
           </if>
           <if test='isEKeyin != null and isEKeyin != ""'>
             AND EKEY_IN_ID IS NOT NULL
           </if>
           <if test='isECommerce != null and isECommerce != ""'>
             AND S1.ECOMM_ORD_ID > 0
           </if>
           <if test='isSelectAll == null or isSelectAll == ""'>

		  <!--
          AND M1.STK_CTGRY_ID NOT IN (SELECT AA.CODE_ID FROM SYS0013M AA, SYS0094M BB
                                                          WHERE AA.CODE = BB.CODE
                                                             AND AA.CODE_MASTER_ID = 11 AND BB.IND = 'HOMECARE'
                                                             AND BB.CODE = 'FRM')
            --> -- Mattress, Frame

                  AND v1.APP_TYPE_ID  in (1412,144,66,141,68,143,140,142,145,67)
           </if>
           <if test = 'memID != null and memID != ""'>
           AND V1.SALESMAN_MEM_ID = #{memID}
           </if>
           <if test='arrAppType != null and arrAppType != ""'>
                 AND V1.APP_TYPE_ID IN
                 <foreach item="item" collection="arrAppType" index="index" open="(" separator="," close=")">
               #{item}
             </foreach>
           </if>
           <if test='arrOrdStusId != null and arrOrdStusId != ""'>
             AND V1.ORD_STUS_ID IN
             <foreach item="item" collection="arrOrdStusId" index="index" open="(" separator="," close=")">
               #{item}
             </foreach>
           </if>
            <if test='billGroupNo != null and billGroupNo != ""'>
             AND V1.BILLING_GRP_ID = #{billGroupNo}
           </if>
    ) T
     WHERE 1=1
           <if test='ordNo != null and ordNo != ""'>
             AND T.ORD_NO = #{ordNo}
             AND EXISTS(
             SELECT
				A.SALES_ORD_ID
             FROM SAL0001D A
             WHERE
             A.SALES_ORD_NO = #{ordNo}
             <if test='isSelectAll == null or isSelectAll == ""'>
             AND A.APP_TYPE_ID  in (1412,144,66,141,68,143,140,142,145,67)
             </if>
             <if test='arrAppType != null and arrAppType != ""'>
                 AND A.APP_TYPE_ID IN
                 <foreach item="item" collection="arrAppType" index="index" open="(" separator="," close=")">
               #{item}
             </foreach>
           </if>
           <if test='arrKeyinBrnchId != null and arrKeyinBrnchId != ""'>
             AND A.BRNCH_ID IN
             <foreach item="item" collection="arrKeyinBrnchId" index="index" open="(" separator="," close=")">
               #{item}
             </foreach>
           </if>

             )
           </if>
           <if test='ordId != null and ordId != ""'>
           /*29-12-2022 - Chou Jia Cheng - edited serial number to be able to view more than one result at a time*/
             AND T.ORD_ID IN
             <foreach item="item" collection="ordId" index="index" open="(" separator="," close=")">
               #{item}
             </foreach>
           </if>

           <!-- <if test='arrKeyinBrnchId != null and arrKeyinBrnchId != ""'>
             AND T.KEYIN_BRNCH_ID IN
             <foreach item="item" collection="arrKeyinBrnchId" index="index" open="(" separator="," close=")">
               #{item}
             </foreach>
           </if> -->
           <if test='arrDscBrnchId != null and arrDscBrnchId != ""'>
             AND T.DSC_BRNCH_ID IN
             <foreach item="item" collection="arrDscBrnchId" index="index" open="(" separator="," close=")">
               #{item}
             </foreach>
           </if>
           <if test='custId != null and custId != ""'>
             AND T.CUST_ID = #{custId}
           </if>
           <if test='productId != null and productId != ""'>
             AND T.PRODUCT_ID = #{productId}
           </if>

             /*AND T.SALESMAN_CODE = salesmanCode*/

           <if test='arrRentStus != null and arrRentStus != ""'>
             AND T.RENT_STUS IN
             <foreach item="item" collection="arrRentStus" index="index" open="(" separator="," close=")">
               #{item}
             </foreach>
           </if>
           <if test='refNo != null and refNo != ""'>
             AND T.REF_NO = #{refNo}
           </if>
           <if test='poNo != null and poNo != ""'>
             AND T.PO_NO = #{poNo}
           </if>
           <if test='promoCode != null and promoCode != ""'>
             AND T.PROMO_CODE = #{promoCode}
           </if>
           <if test='relatedNo != null and relatedNo != ""'>
             AND T.RELATED_NO = #{relatedNo}
           </if>

           <if test='arrayCustId != null and arrayCustId != ""'>
             AND T.CUST_ID IN
             <foreach item="item" collection="arrayCustId" index="index" open="(" separator="," close=")">
               #{item}
             </foreach>
           </if>


    ORDER BY T.ORD_NO ASC
  </select>

  <select id="getApplicationTypeList" parameterType="Map" resultType="egovMap">
    SELECT Project1.CODE_ID CODE_ID ,
           Project1.CODE_MASTER_ID CODE_MASTER_ID ,
           Project1.CODE CODE ,
           Project1.CODE_NAME CODE_NAME ,
           Project1.DISAB DISAB ,
           Project1.CRT_DT CRT_DT ,
           Project1.CRT_USER_ID CRT_USER_ID ,
           Project1.UPD_DT UPD_DT ,
           Project1.UPD_USER_ID UPD_USER_ID ,
           Project1.OLD_CODE_ID OLD_CODE_ID
    FROM ( SELECT Extent1.CODE_ID CODE_ID ,
                  Extent1.CODE_MASTER_ID CODE_MASTER_ID ,
                  Extent1.CODE CODE ,
                  Extent1.CODE_NAME CODE_NAME ,
                  Extent1.DISAB DISAB ,
                  Extent1.CRT_DT CRT_DT ,
                  Extent1.CRT_USER_ID CRT_USER_ID ,
                  Extent1.UPD_DT UPD_DT ,
                  Extent1.UPD_USER_ID UPD_USER_ID ,
                  Extent1.OLD_CODE_ID OLD_CODE_ID
            FROM SYS0013M Extent1
            WHERE ( Extent1.CODE_MASTER_ID = #{codeId} )
              AND ( 0 = Extent1.DISAB )
    ) Project1
    ORDER BY Project1.CODE_NAME ASC
  </select>

  <select id="getUserCodeList" resultType="egovMap">
    SELECT USER_ID CODE_ID,
           USER_NAME CODE_NAME
    FROM SYS0047M
    WHERE USER_STUS_ID = 1
      AND USER_TYPE_ID != 1
      AND USER_TYPE_ID != 2
      AND USER_TYPE_ID != 3
    ORDER BY USER_NAME
  </select>

  <select id="getOrgCodeList" parameterType="Map" resultType="egovMap">
    SELECT Extent1.MEM_ID CODE_ID ,
           Extent1.MEM_CODE || ' - '  || Extent1.NAME CODE_NAME
    FROM ORG0001D Extent1
    JOIN (SELECT vMemberOrg.MEM_ID MEM_ID ,
                 vMemberOrg.MEM_CODE MEM_CODE ,
                 vMemberOrg.MEM_LVL MEM_LVL ,
                 vMemberOrg.DEPT_CODE DEPT_CODE ,
                 vMemberOrg.GRP_CODE GRP_CODE ,
                 vMemberOrg.ORG_CODE ORG_CODE ,
                 vMemberOrg.TOP_ORG_CODE TOP_ORG_CODE ,
                 vMemberOrg.MEM_UP_ID MEM_UP_ID ,
                 vMemberOrg.LVL3_UP_ID LVL3_UP_ID ,
                 vMemberOrg.LVL2_UP_ID LVL2_UP_ID ,
                 vMemberOrg.LVL1_UP_ID LVL1_UP_ID ,
                 vMemberOrg.LVL0_UP_ID LVL0_UP_ID
          FROM ORG1001V vMemberOrg ) Extent2 ON ( Extent2.MEM_ID = Extent1.MEM_ID )
          AND ( Extent2.MEM_LVL  = #{memLvl} )
    WHERE ( 1 = Extent1.STUS )
      AND ( Extent1.MEM_TYPE = #{memType} )
  </select>

  <select id="getGrpCodeList" parameterType="Map" resultType="egovMap">
    SELECT Extent1.MEM_ID CODE_ID ,
           Extent1.MEM_CODE MEM_CODE ,
           Extent1.NAME NAME ,
           Extent1.MEM_CODE || ' - '  || Extent1.NAME CODE_NAME ,
           Extent2.DEPT_CODE DEPT_CODE ,
           Extent2.GRP_CODE GRP_CODE ,
           Extent2.ORG_CODE ORG_CODE
    FROM ORG0001D Extent1
    JOIN (SELECT vMemberOrg.MEM_ID MEM_ID ,
                 vMemberOrg.MEM_CODE MEM_CODE ,
                 vMemberOrg.MEM_LVL MEM_LVL ,
                 vMemberOrg.DEPT_CODE DEPT_CODE ,
                 vMemberOrg.GRP_CODE GRP_CODE ,
                 vMemberOrg.ORG_CODE ORG_CODE ,
                 vMemberOrg.TOP_ORG_CODE TOP_ORG_CODE ,
                 vMemberOrg.MEM_UP_ID MEM_UP_ID ,
                 vMemberOrg.LVL3_UP_ID LVL3_UP_ID ,
                 vMemberOrg.LVL2_UP_ID LVL2_UP_ID ,
                 vMemberOrg.LVL1_UP_ID LVL1_UP_ID ,
                 vMemberOrg.LVL0_UP_ID LVL0_UP_ID
          FROM ORG1001V vMemberOrg ) Extent2 ON ( Extent2.MEM_ID    = Extent1.MEM_ID )
                                            AND ( Extent2.MEM_LVL  = #{memLvl} )
          WHERE ( 1 = Extent1.STUS )
            AND ( Extent1.MEM_TYPE = #{memType} )
            AND ( Extent2.MEM_UP_ID = #{upperLineMemberID} )
  </select>

  <select id="getMemberOrgInfo" parameterType="Map" resultType="egovMap">
    SELECT ORG_CODE,
           GRP_CODE,
           DEPT_CODE
    FROM ORG1001V
    WHERE MEM_ID = #{cmbCode}
  </select>

  <select id="getBankCodeList" parameterType="Map" resultType="egovMap">
    SELECT BANK_ID CODE_ID,
           CODE||' : '||NAME CODE_NAME
    FROM SYS0004M
    WHERE STUS_CODE_ID = 1
    ORDER BY CODE
  </select>


  <select id="selectInstallParam" parameterType="Map" resultType="egovMap">
    SELECT MAX(INSTALL_ENTRY_ID) INSTALL_ENTRY_ID
    FROM SAL0046D
    WHERE STUS_CODE_ID = 4
      AND SALES_ORD_ID = #{salesOrderId}
    GROUP BY SALES_ORD_ID
  </select>

  <select id="selectProductReturnView" parameterType="Map" resultType="egovMap">
    SELECT A.RETN_NO,
           C.CODE,
           TO_CHAR(A.REQST_DT, 'YYYY/MM/DD' ) REQST_DT,
           D.MEM_CODE,
           D.NAME,
           E.SERIAL_REQUIRE_CHK_YN,
           E.WH_LOC_GB,
           E.WH_LOC_ID CT_WH_LOC_ID
    FROM LOG0038D A,
         SAL0001D B,
         SYS0038M C,
         ORG0001D D,
         SYS0028M E
    WHERE A.SALES_ORD_ID = B.SALES_ORD_ID
      AND A.STUS_CODE_ID = C.STUS_CODE_ID
      AND A.CT_ID = D.MEM_ID
      AND D.MEM_CODE = E.WH_LOC_CODE(+)
      AND B.SALES_ORD_NO = #{salesOrdNo}
  </select>

  <select id="selectPReturnParam" parameterType="Map" resultType="egovMap">
  <!--KV old code
    select  a.SO_REQ_RESN_ID ,  b.RETN_NO
    from sal0020d a  , log0038d b
    where 1=1
    and a.SO_REQ_CUR_CALL_ENTRY_ID = b.CALL_ENTRY_ID
    and STUS_CODE_ID = 1
    and b.CALL_ENTRY_ID = #{callEntryId}-->

    SELECT a.SO_REQ_RESN_ID ,
           b.RETN_NO,
           a.SO_REQ_CUR_STUS_ID,
           b.CT_ID,
           d.MEM_CODE
    FROM SAL0020D a
    JOIN LOG0038D b ON a.SO_REQ_CUR_CALL_ENTRY_ID = b.CALL_ENTRY_ID
                   AND STK_RETN_ID = (SELECT MAX(STK_RETN_ID) FROM LOG0038D WHERE a.SO_REQ_CUR_CALL_ENTRY_ID = CALL_ENTRY_ID)
    LEFT JOIN ORG0001D d ON b.CT_ID = d.MEM_ID
    WHERE 1=1
      AND b.STUS_CODE_ID = 1
      AND b.CALL_ENTRY_ID = #{callEntryId}
  </select>

  <select id="getPrCTInfo" parameterType="Map" resultType="egovMap">
    SELECT DISTINCT b.MEM_ID,
                    b.MEM_CODE,
                    b.NAME
    FROM LOG0038D a
       , ORG0001D b
    WHERE CT_ID = MEM_ID
      AND a.CALL_ENTRY_ID = #{callEntryId}
      AND a.STUS_CODE_ID = 1
  </select>

  <insert id="insert_LOG0039D" parameterType="Map">
    INSERT INTO LOG0039D ( STK_RETN_RESULT_ID,
                           STK_RETN_ID,
                           STK_RETN_STUS_ID,
                           STK_RETN_STK_IS_RET,
                           STK_RETN_DT,
                           STK_RETN_REM,
                           STK_RETN_RESN_ID,
                           STK_RETN_CC_ID,
                           STK_RETN_CRT_DT,
                           STK_RETN_CRT_USER_ID,
                           STK_RETN_UPD_DT,
                           STK_RETN_UPD_USER_ID,
                           STK_RETN_RESULT_IS_SYNCH,
                           STK_RETN_ALLOW_COMM,
                           STK_RETN_CT_MEM_ID,
                           CHECKIN_DT,
                           CHECKIN_TM,
                           CHECKIN_GPS,
                           SIGN_DATA,
                           SIGN_REG_DT,
                           SIGN_REG_TM,
                           OWNER_CODE,
                           RESULT_CUST_NAME,
                           RESULT_ICMOBILE_NO,
                           RESULT_RPT_EMAIL_NO,
                           RESULT_ACEPT_NAME,
                           PARTNER_CODE
    ) VALUES ( LOG0039D_STK_RETN_RESULT_ID.nextval,
               (SELECT STK_RETN_ID FROM LOG0038D WHERE retn_no = #{serviceNo}),
               #{stkRetnStusId},
               #{stkRetnStkIsRet},
               SYSDATE,
               #{stkRetnRem},
               #{stkRetnResnId},
               #{stkRetnCcId},
               SYSDATE,
               #{stkRetnCrtUserId} ,
               SYSDATE,
               #{stkRetnCrtUserId} ,
               #{stkRetnResultIsSynch},
               #{stkRetnAllowComm},
               #{stkRetnCtMemId},
               TO_CHAR( to_date(#{checkinDt},'DD/MM/YYYY') ,'yyyymmdd'),
               #{checkinTm},
               #{checkinGps},
               #{signData},
               TO_CHAR( to_date( #{signRegDt},'DD/MM/YYYY') ,'yyyymmdd'),
               #{signRegTm},
               #{ownerCode},
               #{resultCustName},
               #{resultIcmobileNo},
               #{resultRptEmailNo},
               #{resultAceptName},
               #{partnerCode}
    )
  </insert>

  <update id="updateState_LOG0038D" parameterType="Map">
    UPDATE LOG0038D
    SET STUS_CODE_ID  = '4',
        UPD_DT  = sysdate,
        UPD_USER_ID = #{userId}
    WHERE retn_no = #{serviceNo}
  </update>

  <insert id="insert_SAL0009D" parameterType="Map">
    INSERT INTO SAL0009D ( LOG_ID,
                           SALES_ORD_ID,
                           PRGRS_ID,
                           LOG_DT,
                           REF_ID,
                           IS_LOK,
                           LOG_CRT_USER_ID,
                           LOG_CRT_DT
    ) VALUES ( SAL0009D_LOG_ID_SEQ.NEXTVAL,
              (SELECT SALES_ORD_ID FROM SAL0001D WHERE SALES_ORD_NO = #{salesOrderNo}),
              '13',
              SYSDATE,
              '0',
              '0',
               #{userId},
              SYSDATE )
  </insert>

  <update id="updateState_SAL0020D" parameterType="Map">
    UPDATE SAL0020D
    SET SO_REQ_STUS_ID = '32'
    WHERE SO_REQ_SO_ID = (SELECT SALES_ORD_ID
                          FROM SAL0001D
                          WHERE SALES_ORD_NO = #{salesOrderNo})
  </update>

  <update id="updateState_SAL0071D" parameterType="Map">
    UPDATE SAL0071D
    SET STUS_CODE_ID = 'TER'
    WHERE SALES_ORD_ID = (SELECT SALES_ORD_ID
                          FROM SAL0001D
                          WHERE SALES_ORD_NO = #{salesOrderNo})
  </update>

  <select id="SP_RETURN_BILLING_EARLY_TERMI" parameterType="Map"  statementType="CALLABLE" >
    {
      call SP_RETURN_BILLING_EARLY_TERMI( #{P_SALES_ORD_NO},#{P_USER_ID},#{P_RETN_NO})
    }
  </select>

  <update id="updateState_SAL0001D" parameterType="Map">
    UPDATE SAL0001D A
    SET STUS_CODE_ID = '10'
    WHERE A.SALES_ORD_NO = #{salesOrderNo}
  </update>

  <select id="select_SeqCCR0006D" parameterType="Map" resultType="java.lang.String">
    select CCR0006D_CALL_ENTRY_ID_SEQ.NEXTVAL
    FROM DUAL
   </select>

   <select id="select_SeqCCR0007D" parameterType="Map" resultType="java.lang.String">
    SELECT CCR0007D_CALL_RESULT_ID_SEQ.NEXTVAL
    FROM DUAL
   </select>

   <insert id="insert_CCR0006D" parameterType="Map">
     INSERT INTO CCR0006D ( CALL_ENTRY_ID ,
                            SALES_ORD_ID ,
                            TYPE_ID,
                            STUS_CODE_ID ,
                            RESULT_ID ,
                            DOC_ID,
                            CRT_USER_ID ,
                            CRT_DT ,
                            CALL_DT,
                            IS_WAIT_FOR_CANCL ,
                            HAPY_CALLER_ID,
                            UPD_DT ,
                            UPD_USER_ID ,
                            ORI_CALL_DT
     ) VALUES ( #{callEntryID} ,
                (SELECT SALES_ORD_ID FROM SAL0001D WHERE SALES_ORD_NO = #{salesOrderNo}) ,
                 259 ,
                 19 ,
                 #{callResultID} ,
                 0 ,
                 #{userId} ,
                 SYSDATE ,
                 TO_DATE (#{nextCallDate} , 'DD/MM/YYYY'),
                 0 ,
                 0 ,
                 SYSDATE ,
                 #{userId} ,
                 TO_DATE (#{nextCallDate} , 'DD/MM/YYYY')
     )
  </insert>

  <insert id="insert_CCR0007D" parameterType="Map">
    INSERT INTO CCR0007D ( CALL_RESULT_ID ,
                           CALL_ENTRY_ID ,
                           CALL_STUS_ID ,
                           CALL_DT ,
                           CALL_ACTN_DT ,
                           CALL_FDBCK_ID ,
                           CALL_CT_ID ,
                           CALL_REM ,
                           CALL_CRT_USER_ID ,
                           CALL_CRT_DT ,
                           CALL_CRT_USER_ID_DEPT ,
                           CALL_HC_ID ,
                           CALL_ROS_AMT ,
                           CALL_SMS ,
                           CALL_SMS_REM
    ) VALUES ( #{callResultID},
               #{callEntryID} ,
               19 ,
               TO_DATE (#{nextCallDate} , 'DD/MM/YYYY') ,
               TO_DATE('1900/01/01', 'YYYY/MM/DD' ) ,
               0 ,
               0 ,
               ' ' ,
               #{userId} ,
               SYSDATE ,
               0 ,
               0 ,
               0 ,
               0 ,
               ' '
    )
  </insert>

  <insert id="insertFailed_LOG0039D" parameterType="Map">
    INSERT INTO LOG0039D ( STK_RETN_RESULT_ID,
                           STK_RETN_ID,
                           STK_RETN_STUS_ID,
                           STK_RETN_CT_MEM_ID,
                           STK_RETN_CRT_DT,
                           STK_RETN_CRT_USER_ID
    ) VALUES ( LOG0039D_STK_RETN_RESULT_ID.nextval,
               (SELECT STK_RETN_ID FROM LOG0038D WHERE retn_no = #{serviceNo}) ,
               '21',
               #{userId},
               SYSDATE,
               #{userId}
   )
  </insert>

  <update id="updateFailed_LOG0038D" parameterType="Map">
    UPDATE LOG0038D
    SET STUS_CODE_ID = '21',
        UPD_DT = SYSDATE,
        UPD_USER_ID = #{userId},
        FAIL_RESN_ID =#{failReasonCode}
    WHERE  retn_no = #{serviceNo}
  </update>

  <update id="updateFailed_SAL0020D" parameterType="Map">
     UPDATE SAL0020D
     SET SO_REQ_UPD_USER_ID = #{userId}
       , SO_REQ_UPD_DT = SYSDATE
       , SO_REQ_STUS_ID = 1
       , SO_REQ_CUR_CALL_ENTRY_ID = #{callEntryID}
     WHERE SO_REQ_ID = ( SELECT MAX (B.SO_REQ_ID)
     FROM SAL0001D A
      JOIN SAL0020D B ON B.SO_REQ_SO_ID = A.SALES_ORD_ID
     WHERE A.SALES_ORD_NO = #{salesOrderNo})

  </update>

  <update id="chkRcdTms" parameterType="Map">
    UPDATE SAL0020D
    SET RCD_TMS = TO_CHAR(SYSTIMESTAMP,'ddmmyyyyHH24miss')
    WHERE SO_REQ_SO_ID = #{orderId}
      AND SO_REQ_CUR_CALL_ENTRY_ID = #{callEntryId}
      AND RCD_TMS = #{rcdTms}
  </update>

  <select id="selectOrderListVRescue" parameterType="Map" resultType="egovMap">
        SELECT DISTINCT T.APP_TYPE_CODE
             , T.APP_TYPE_NAME
             , T.CRT_USER_ID
             , T.CUST_IC
             , T.CUST_NAME
             , T.CUST_VA_NO
             , T.DSC_BRNCH_ID
             , T.KEYIN_BRNCH_ID
             , T.ORD_ID
             , T.ORD_NO
             , T.ORD_STUS_CODE
             , T.PO_NO
             , T.PRODUCT_CODE
             , T.PRODUCT_NAME
             , T.REF_NO
             , T.RENT_STUS
             , T.SALESMAN_MEM_ID
             , T.SALESMAN_CODE
             , T.SALESMAN_MEM_TYPE_ID
             , T.BILLING_GRP_ID
             , T.MAIL_TEL_MOB
             , T.MAIL_TEL_FAX
             , T.MAIL_TEL_OFF
             , T.MAIL_TEL_RES
             , T.INST_TEL_FAX
             , T.INST_TEL_MOB
             , T.INST_TEL_OFF
             , T.INST_TEL_RES
             , T.SIRIM_NO
             , T.SERIAL_NO
             , T.PROMO_CODE
             , T.PROMO_DESC
             , T.RELATED_NO
             , T.RELATED_ID
             , 1 C1
             , NVL(T.APP_TYPE_ID, 0) AS APP_TYPE_ID
             , NVL(T.CUST_ID, 0) AS CUST_ID
             , TO_CHAR(T.ORD_DT, 'DD/MM/YYYY') AS ORD_DT
             , NVL(T.ORD_STUS_ID, 0) AS ORD_STUS_ID
             , NVL(T.PRODUCT_ID, 0) AS PRODUCT_ID
             , T.PV_MONTH
             , T.PV_YEAR
             , T.PAYMODE
             , T.RENT_PAY_ID
          FROM
             ( SELECT /*+ use_nl( V1.som V1.ir V1.ie V1.ei V1.i V1.sod V1.cp3 V1.cp2 V1.rs V1.c V1.u V1.mem V1.cd V1.stk V1.pm V1.S ) */
                      V1.APP_TYPE_CODE
                    , V1.APP_TYPE_ID
                    , V1.APP_TYPE_NAME
                    , V1.CRT_USER_ID
                    , V1.CUST_IC
                    , V1.CUST_NAME
                    , V1.CUST_ID
                    , V1.CUST_VA_NO
                    , V1.DSC_BRNCH_ID
                    , V1.KEYIN_BRNCH_ID
                    , V1.ORD_DT
                    , V1.ORD_ID
                    , V1.ORD_NO
                    , V1.ORD_STUS_CODE
                    , V1.ORD_STUS_ID
                    , V1.PO_NO
                    , V1.PRODUCT_ID
                    , V1.PRODUCT_CODE
                    , V1.PRODUCT_NAME
                    , V1.REF_NO
                    , V1.RENT_STUS
                    , V1.SALESMAN_MEM_ID
                    , V1.SALESMAN_CODE
                    , V1.SALESMAN_MEM_TYPE_ID
                    , V1.BILLING_GRP_ID
                    , V1.MAIL_TEL_MOB
                    , V1.MAIL_TEL_FAX
                    , V1.MAIL_TEL_OFF
                    , V1.MAIL_TEL_RES
                    , V1.INST_TEL_FAX
                    , V1.INST_TEL_MOB
                    , V1.INST_TEL_OFF
                    , V1.INST_TEL_RES
                    , V1.SIRIM_NO
                    , V1.SERIAL_NO
                    , V1.ITM_PRC_ID
                    , V1.PV_MONTH
                    , V1.PV_YEAR
                    , V1.PROMO_CODE
                    , V1.PROMO_DESC
                    , V1.RELATED_NO
                    , V1.RELATED_ID
                    , CASE WHEN V3.CRC_ID != 0 THEN 'Credit Card' WHEN V3.ACC_ID != 0 THEN 'Direct Debit' ELSE ' ' END PAYMODE
                    , V2.RENT_PAY_ID
                 FROM SAL1013V  V1
                 JOIN SAL0074D V2 ON V2.SALES_ORD_ID = V1.ORD_ID
                 JOIN SAL0236D V3 ON V3.DEDUCTION_ACC_ID = V2.DEDUCT_ACC_ID
                WHERE 1 = 1
                <if test='ordDt == null || ordDt == ""'>
                  AND V1.SALES_DT BETWEEN TO_DATE(#{ordStartDt}, 'YYYY-MM-DD') AND TO_DATE(#{ordEndDt}||' 23:59:59', 'YYYY-MM-DD HH24:MI:SS')
                </if>
                <if test='ordDt != null and ordDt != ""'>
                  AND V1.SALES_DT BETWEEN TO_DATE(#{ordDt}, 'DD/MM/YYYY') AND TO_DATE(#{ordDt}||' 23:59:59', 'DD/MM/YYYY HH24:MI:SS')
                </if>
                <if test='ordNo != null and ordNo != ""'>
                  AND V1.ORD_NO = #{ordNo}
                </if>
                <if test='arrAppType != null and arrAppType != ""'>
                  AND V1.APP_TYPE_ID IN
                  <foreach item="item" collection="arrAppType" index="index" open="(" separator="," close=")">
                    #{item}
                  </foreach>
                </if>
                <if test='arrOrdStusId != null and arrOrdStusId != ""'>
                  AND V1.ORD_STUS_ID IN
                  <foreach item="item" collection="arrOrdStusId" index="index" open="(" separator="," close=")">
                    #{item}
                  </foreach>
                </if>
                <if test='arrKeyinBrnchId != null and arrKeyinBrnchId != ""'>
                  AND V1.KEYIN_BRNCH_ID IN
                  <foreach item="item" collection="arrKeyinBrnchId" index="index" open="(" separator="," close=")">
                    #{item}
                  </foreach>
                </if>
                <if test='arrDscBrnchId != null and arrDscBrnchId != ""'>
                  AND V1.DSC_BRNCH_ID IN
                  <foreach item="item" collection="arrDscBrnchId" index="index" open="(" separator="," close=")">
                    #{item}
                  </foreach>
                </if>
                <if test='custId != null and custId != ""'>
                  AND V1.CUST_ID = #{custId}
                </if>
                <if test='custName != null and custName != ""'>
                  AND V1.CUST_NAME LIKE '%'||#{custName}||'%'
                </if>
                <if test='custIc != null and custIc != ""'>
                  AND UPPER(V1.CUST_IC) LIKE '%'||#{custIc}||'%'
                </if>
                <if test='productId != null and productId != ""'>
                  AND V1.PRODUCT_ID = #{productId}
                </if>
                <if test='salesmanCode != null and salesmanCode != ""'>
                  AND V1.SALESMAN_CODE = #{salesmanCode}
                </if>
                <if test='arrRentStus != null and arrRentStus != ""'>
                  AND V1.RENT_STUS IN
                  <foreach item="item" collection="arrRentStus" index="index" open="(" separator="," close=")">
                    #{item}
                  </foreach>
                </if>
                <if test='refNo != null and refNo != ""'>
                  AND V1.REF_NO = #{refNo}
                </if>
                <if test='poNo != null and poNo != ""'>
                  AND V1.PO_NO = #{poNo}
                </if>
                <if test='contactNo != null and contactNo != ""'>
                  AND #{contactNo} IN (V1.MAIL_TEL_MOB, V1.MAIL_TEL_OFF, V1.MAIL_TEL_RES)
                </if>
                <if test='vaNo != null and vaNo != ""'>
                  AND V1.CUST_VA_NO = #{vaNo}
                </if>
                <if test='serialNo != null and serialNo != ""'>
                  AND V1.SERIAL_NO = #{serialNo}
                </if>
                <if test='sirimNo != null and sirimNo != ""'>
                  AND V1.SIRIM_NO = #{sirimNo}
                </if>
                <if test='crtUserId != null and crtUserId != ""'>
                  AND V1.CRT_USER_ID = #{crtUserId}
                </if>
                <if test='promoCode != null and promoCode != ""'>
                  AND V1.PROMO_CODE = #{promoCode}
                </if>
                <if test='relatedNo != null and relatedNo != ""'>
                  AND V1.RELATED_NO = #{relatedNo}
                </if>
                <if test='invoicePoNo != null and invoicePoNo != ""'>
                  AND V1.ORD_ID IN (SELECT DISTINCT PO_ORD_ID
                                      FROM PAY0015D
                                     WHERE PO_REF_NO = #{invoicePoNo})
                </if>
                <if test='isEKeyin != null and isEKeyin != ""'>
                  AND EKEY_IN_ID IS NOT NULL
                </if>
               ) T
           ORDER BY T.ORD_NO ASC
    </select>

  <select id="newSearchCancelSAL0001D" parameterType="Map" resultType="egovMap">
    SELECT Extent1.SALES_ORD_ID SALES_ORD_ID ,
           Extent1.SALES_ORD_NO SALES_ORD_NO ,
           Extent1.REF_NO REF_NO ,
           Extent1.SALES_DT SALES_DT ,
           Extent1.CUST_ID CUST_ID ,
           Extent1.CUST_CNT_ID CUST_CNT_ID ,
           Extent1.CUST_ADD_ID CUST_ADD_ID ,
           Extent1.MEM_ID MEM_ID ,
           Extent1.BRNCH_ID BRNCH_ID ,
           Extent1.APP_TYPE_ID APP_TYPE_ID ,
           Extent1.TOT_AMT TOT_AMT ,
           Extent1.PROMO_ID PROMO_ID ,
           Extent1.BINDING_NO BINDING_NO ,
           Extent1.CC_PROMO_ID CC_PROMO_ID ,
           Extent1.TOT_PV TOT_PV ,
           Extent1.REM REM ,
           Extent1.PV_MONTH PV_MONTH ,
           Extent1.PV_YEAR PV_YEAR ,
           Extent1.STUS_CODE_ID STUS_CODE_ID ,
           Extent1.UPD_DT UPD_DT ,
           Extent1.UPD_USER_ID UPD_USER_ID ,
           Extent1.SYNC_CHK SYNC_CHK ,
           Extent1.CUST_PO_NO CUST_PO_NO ,
           Extent1.REN_CHK_ID REN_CHK_ID ,
           Extent1.INST_PRIOD INST_PRIOD ,
           Extent1.DO_NO DO_NO ,
           Extent1.DEPT_CODE DEPT_CODE ,
           Extent1.GRP_CODE GRP_CODE ,
           Extent1.ORG_CODE ORG_CODE ,
           Extent1.SALES_ORD_ID_OLD SALES_ORD_ID_OLD ,
           Extent1.EDIT_TYPE_ID EDIT_TYPE_ID ,
           Extent1.CUST_BILL_ID CUST_BILL_ID ,
           Extent1.MTH_RENT_AMT MTH_RENT_AMT ,
           Extent1.LOK LOK ,
           Extent1.AEON_STUS_ID AEON_STUS_ID ,
           Extent1.COMM_DT COMM_DT ,
           Extent1.CRT_USER_ID CRT_USER_ID ,
           Extent1.CRT_DT CRT_DT ,
           Extent1.PAY_COM_DT PAY_COM_DT ,
           Extent1.DEF_RENT_AMT DEF_RENT_AMT ,
           Extent1.REF_DOC_ID REF_DOC_ID ,
           Extent1.SALES_HM_ID SALES_HM_ID ,
           Extent1.SALES_SM_ID SALES_SM_ID ,
           Extent1.SALES_GM_ID SALES_GM_ID ,
           Extent1.ADV_BILL ADV_BILL ,
           Extent1.CNVR_SCHEME_ID CNVR_SCHEME_ID ,
           Extent1.CUST_CARE_CNT_ID CUST_CARE_CNT_ID ,
           Extent1.PCKAGE_BINDING_NO ,
           Extent1.SRV_PAC_ID ,
           Extent2.ITM_STK_ID ITM_STK_ID
    FROM SAL0001D Extent1
    JOIN SAL0002D Extent2 ON Extent1.SALES_ORD_ID = Extent2.SALES_ORD_ID
    WHERE Extent1.SALES_ORD_NO = #{salesOrderNo}
    <![CDATA[
      AND ROWNUM <= 1
    ]]>
  </select>

  <select id="chkSubPromo" parameterType="Map" resultType="int">
    SELECT COUNT(*)
    FROM SAL0253D
    WHERE SUB_PROD_ID = #{itmStkId}
      AND SUB_PROMO_ID = #{promoId}
      AND DISB = 0
      AND SYSDATE BETWEEN EFF_DT AND EXP_DT
  </select>

  <select id="chkMainPromo" parameterType="Map" resultType="int">
    SELECT COUNT(*)
    FROM SAL0252M
    WHERE PROD_CDE = #{itmStkId}
      AND PROMO_ID = #{promoId}
      AND DISB = 0
      AND SYSDATE BETWEEN EFF_DT AND EXP_DT
  </select>

  <select id="revSubCboPckage" parameterType="Map" resultType="egovMap">
    SELECT A.SALES_ORD_ID AS ORD_ID,
           A.SALES_ORD_NO AS ORD_NO,
           A.PROMO_ID AS OLD_PROMO,
           C.PROMO_CAN_ID AS NEW_PROMO,
           A.TOT_PV AS OLD_PV,
           D.PROMO_ITM_PV AS NEW_PV,
           A.MTH_RENT_AMT AS OLD_MTH_RENT_AMT,
           CASE WHEN C.CHG_RENT_AMT = 1
           THEN CASE WHEN F.APP_TYPE_ID IN (67,68)
             THEN TRUNC(FLOOR(F.AMT - DECODE(E.PROMO_DISC_TYPE, 0, F.AMT*(E.PROMO_PRC_PRCNT/100), E.PROMO_PRC_PRCNT) - E.PROMO_ADD_DISC_PRC),-1)
             ELSE FLOOR(F.AMT - DECODE(E.PROMO_DISC_TYPE, 0, F.AMT*(E.PROMO_PRC_PRCNT/100), E.PROMO_PRC_PRCNT) - E.PROMO_ADD_DISC_PRC) END
           ELSE A.MTH_RENT_AMT END AS PROMO_AMT,
           C.CHG_RENT_AMT
    FROM SAL0001D A
    JOIN SAL0002D B ON A.SALES_ORD_ID = B.SALES_ORD_ID
    JOIN SAL0252M C ON A.PROMO_ID = C.PROMO_ID AND B.ITM_STK_ID = C.PROD_CDE
    JOIN SAL0018D D ON C.PROMO_CAN_ID = D.PROMO_ID AND B.ITM_STK_ID = D.PROMO_ITM_STK_ID
    JOIN SAL0017D E ON C.PROMO_CAN_ID = E.PROMO_ID
    LEFT OUTER JOIN SAL0016M F ON F.STK_ID = D.PROMO_ITM_STK_ID
                              AND F.APP_TYPE_ID = DECODE(E.PROMO_APP_TYPE_ID, 2284, 66, 2285, 67, 2286, 68, 2287, 1412)
                              AND F.MEM_PAC_ID = A.SRV_PAC_ID
    WHERE A.SALES_ORD_ID = ( SELECT PCKAGE_BINDING_NO
                             FROM SAL0001D
                             WHERE SALES_ORD_ID = #{salesOrdId} )
      AND D.PROMO_ITM_STUS_ID = 1
  </select>

  <select id="revMainCboPckage" parameterType="Map" resultType="egovMap">
    SELECT A.SALES_ORD_ID AS ORD_ID,
           A.SALES_ORD_NO AS ORD_NO,
           A.PROMO_ID AS OLD_PROMO,
           C.PROMO_CAN_ID AS NEW_PROMO,
           A.TOT_PV AS OLD_PV,
           D.PROMO_ITM_PV AS NEW_PV,
           A.MTH_RENT_AMT AS OLD_MTH_RENT_AMT,
           CASE WHEN C.CHG_RENT_AMT = 1
           THEN CASE WHEN F.APP_TYPE_ID IN (67,68)
             THEN TRUNC(FLOOR(F.AMT - DECODE(E.PROMO_DISC_TYPE, 0, F.AMT*(E.PROMO_PRC_PRCNT/100), E.PROMO_PRC_PRCNT) - E.PROMO_ADD_DISC_PRC),-1)
             ELSE FLOOR(F.AMT - DECODE(E.PROMO_DISC_TYPE, 0, F.AMT*(E.PROMO_PRC_PRCNT/100), E.PROMO_PRC_PRCNT) - E.PROMO_ADD_DISC_PRC) END
           ELSE A.MTH_RENT_AMT END AS PROMO_AMT,
           C.CHG_RENT_AMT
    FROM SAL0001D A
    JOIN SAL0002D B ON A.SALES_ORD_ID = B.SALES_ORD_ID
    JOIN SAL0253D C ON A.PROMO_ID = C.SUB_PROMO_ID AND B.ITM_STK_ID = C.SUB_PROD_ID
    JOIN SAL0018D D ON C.PROMO_CAN_ID = D.PROMO_ID AND B.ITM_STK_ID = D.PROMO_ITM_STK_ID
    JOIN SAL0017D E ON C.PROMO_CAN_ID = E.PROMO_ID
    LEFT OUTER JOIN SAL0016M F ON F.STK_ID = D.PROMO_ITM_STK_ID
                              AND F.APP_TYPE_ID = DECODE(E.PROMO_APP_TYPE_ID, 2284, 66, 2285, 67, 2286, 68, 2287, 1412)
                              AND F.MEM_PAC_ID = A.SRV_PAC_ID
    WHERE A.PCKAGE_BINDING_NO = #{salesOrdId}
      AND D.PROMO_ITM_STUS_ID = 1
  </select>


  <insert id="insertSAL0254D" parameterType="Map">
    INSERT INTO SAL0254D (SEQ_NO,
                          SALES_ORD_ID,
                          PROMO_OLD,
                          PROMO_NEW,
                          PV_OLD,
                          PV_NEW,
                          MTH_RENT_AMT_OLD,
                          MTH_RENT_AMT_NEW,
                          REMARK,
                          DISB,
                          CRT_DT,
                          UPD_DT,
                          CRT_BY,
                          UPD_BY,
                          CHG_RENT_AMT
    ) VALUES (SAL0254D_SEQ_ID.NEXTVAL,
              #{ordId},
              #{oldPromo},
              #{newPromo},
              #{oldPv},
              #{newPv},
              #{oldMthRentAmt},
              #{promoAmt},
              #{reqStageId},
              0,
              SYSDATE,
              SYSDATE,
              349,
              349,
              #{chgRentAmt}
    )
  </insert>

<!--   <resultMap id="BARCODECHANGERETURNDATA" type="egovMap" />
  <select id="updateBarcodeChange"  statementType="CALLABLE" parameterType="Map">
      /* [com.coway.trust.biz.sales.order.impl.OrderListMapper.updateBarcodeChange] KR_HAN */
           { call SP_SVC_BARCODE_CHANGE
                   (#{pSerialNo}, #{pBeforeSerialNo}, #{pSalesOrdId}, #{pItmCode}, #{pRefDocNo}, #{pCallGbn}, #{pMobileYn}, #{pUserId}
                    , #{errCode, mode=OUT, jdbcType=VARCHAR, javaType=String, resultMap=BARCODECHANGERETURNDATA}
                    , #{errMsg, mode=OUT, jdbcType=VARCHAR, javaType=String, resultMap=BARCODECHANGERETURNDATA}
                    )
           }
  </select> -->

  <select id="SP_RETURN_BILLING_EARLY_TERMI_SERIAL" parameterType="Map"  statementType="CALLABLE" >
    /* [com.coway.trust.biz.sales.order.impl.OrderListMapper.SP_RETURN_BILLING_EARLY_TERMI_SERIAL] KR_HAN */
    {
      call SP_RETURN_BILLING_EARLY_TERMIS( #{P_SALES_ORD_NO},#{P_USER_ID},#{P_RETN_NO})
    }
  </select>

  <select id="selectOrderSerial" parameterType="Map" resultType="egovMap">
    SELECT  /* [com.coway.trust.biz.sales.order.impl.OrderListMapper.selectOrderSerial] KR_HAN */
                FN_GET_ORDER_SERIAL( #{pSalesOrdId} , #{pItmCode} ) ORDER_SERIAL
    FROM    DUAL
  </select>

  <select id="selectDelvryNo" parameterType="Map" resultType="egovMap">
    SELECT
                DISTINCT Y.DELVRY_NO DELVRY_NO
    FROM    LOG0047M X
                    INNER JOIN LOG0055D Y ON X.REQST_NO = Y.REQST_NO
    WHERE  X.REF_DOC_NO = #{refDocNo}
  </select>

 <select id="selectCboPckLinkOrdSub" parameterType="Map" resultType="egovMap">
    SELECT T.APP_TYPE_CODE
         , T.APP_TYPE_NAME
         , T.CRT_USER_ID
         , T.CUST_IC
         , T.CUST_NAME
         , T.CUST_VA_NO
         , T.DSC_BRNCH_ID
         , T.KEYIN_BRNCH_ID
         , T.ORD_ID
         , T.ORD_NO
         , T.ORD_STUS_CODE
         , T.PO_NO
         , T.PRODUCT_CODE
         , T.PRODUCT_NAME
         , T.REF_NO
         , T.RENT_STUS
         , T.SALESMAN_MEM_ID
         , T.SALESMAN_CODE
         , T.SALESMAN_MEM_TYPE_ID
         , T.BILLING_GRP_ID
         , T.MAIL_TEL_MOB
         , T.MAIL_TEL_FAX
         , T.MAIL_TEL_OFF
         , T.MAIL_TEL_RES
         , T.INST_TEL_FAX
         , T.INST_TEL_MOB
         , T.INST_TEL_OFF
         , T.INST_TEL_RES
         , T.SIRIM_NO
         , T.SERIAL_NO
         , T.PROMO_CODE
         , T.PROMO_DESC
         , T.RELATED_NO
         , T.RELATED_ID
         , 1 C1
         , NVL(T.APP_TYPE_ID, 0) AS APP_TYPE_ID
         , NVL(T.CUST_ID, 0) AS CUST_ID
         , TO_CHAR(T.ORD_DT, 'DD/MM/YYYY') AS ORD_DT
         , NVL(T.ORD_STUS_ID, 0) AS ORD_STUS_ID
         , NVL(T.PRODUCT_ID, 0) AS PRODUCT_ID
         , T.PV_MONTH
         , T.PV_YEAR
    FROM ( SELECT /*+ use_nl( V1.som V1.ir V1.ie V1.ei V1.i V1.sod V1.cp3 V1.cp2 V1.rs V1.c V1.u V1.mem V1.cd V1.stk V1.pm V1.S ) */
                  V1.APP_TYPE_CODE
                , V1.APP_TYPE_ID
                , V1.APP_TYPE_NAME
                , V1.CRT_USER_ID
                , V1.CUST_IC
                , V1.CUST_NAME
                , V1.CUST_ID
                , V1.CUST_VA_NO
                , V1.DSC_BRNCH_ID
                , V1.KEYIN_BRNCH_ID
                , V1.ORD_DT
                , V1.ORD_ID
                , V1.ORD_NO
                , V1.ORD_STUS_CODE
                , V1.ORD_STUS_ID
                , V1.PO_NO
                , V1.PRODUCT_ID
                , V1.PRODUCT_CODE
                , V1.PRODUCT_NAME
                , V1.REF_NO
                , V1.RENT_STUS
                , V1.SALESMAN_MEM_ID
                , V1.SALESMAN_CODE
                , V1.SALESMAN_MEM_TYPE_ID
                , V1.BILLING_GRP_ID
                , V1.MAIL_TEL_MOB
                , V1.MAIL_TEL_FAX
                , V1.MAIL_TEL_OFF
                , V1.MAIL_TEL_RES
                , V1.INST_TEL_FAX
                , V1.INST_TEL_MOB
                , V1.INST_TEL_OFF
                , V1.INST_TEL_RES
                , V1.SIRIM_NO
                , V1.SERIAL_NO
                , V1.ITM_PRC_ID
                , V1.PV_MONTH
                , V1.PV_YEAR
                , V1.PROMO_CODE
                , V1.PROMO_DESC
                , V1.RELATED_NO
                , V1.RELATED_ID
           FROM SAL1013V  V1
           WHERE 1 = 1 AND V1.ORD_ID = (SELECT PCKAGE_BINDING_NO FROM SAL0001D WHERE SALES_ORD_NO = #{ordNo_1})
    ) T
    ORDER BY T.ORD_NO ASC
  </select>

  <select id="selectCboPckLinkOrdSub2" parameterType="Map" resultType="egovMap">
    SELECT T.APP_TYPE_CODE
         , T.APP_TYPE_NAME
         , T.CRT_USER_ID
         , T.CUST_IC
         , T.CUST_NAME
         , T.CUST_VA_NO
         , T.DSC_BRNCH_ID
         , T.KEYIN_BRNCH_ID
         , T.ORD_ID
         , T.ORD_NO
         , T.ORD_STUS_CODE
         , T.PO_NO
         , T.PRODUCT_CODE
         , T.PRODUCT_NAME
         , T.REF_NO
         , T.RENT_STUS
         , T.SALESMAN_MEM_ID
         , T.SALESMAN_CODE
         , T.SALESMAN_MEM_TYPE_ID
         , T.BILLING_GRP_ID
         , T.MAIL_TEL_MOB
         , T.MAIL_TEL_FAX
         , T.MAIL_TEL_OFF
         , T.MAIL_TEL_RES
         , T.INST_TEL_FAX
         , T.INST_TEL_MOB
         , T.INST_TEL_OFF
         , T.INST_TEL_RES
         , T.SIRIM_NO
         , T.SERIAL_NO
         , T.PROMO_CODE
         , T.PROMO_DESC
         , T.RELATED_NO
         , T.RELATED_ID
         , 1 C1
         , NVL(T.APP_TYPE_ID, 0) AS APP_TYPE_ID
         , NVL(T.CUST_ID, 0) AS CUST_ID
         , TO_CHAR(T.ORD_DT, 'DD/MM/YYYY') AS ORD_DT
         , NVL(T.ORD_STUS_ID, 0) AS ORD_STUS_ID
         , NVL(T.PRODUCT_ID, 0) AS PRODUCT_ID
         , T.PV_MONTH
         , T.PV_YEAR
    FROM ( SELECT /*+ use_nl( V1.som V1.ir V1.ie V1.ei V1.i V1.sod V1.cp3 V1.cp2 V1.rs V1.c V1.u V1.mem V1.cd V1.stk V1.pm V1.S ) */
                  V1.APP_TYPE_CODE
                , V1.APP_TYPE_ID
                , V1.APP_TYPE_NAME
                , V1.CRT_USER_ID
                , V1.CUST_IC
                , V1.CUST_NAME
                , V1.CUST_ID
                , V1.CUST_VA_NO
                , V1.DSC_BRNCH_ID
                , V1.KEYIN_BRNCH_ID
                , V1.ORD_DT
                , V1.ORD_ID
                , V1.ORD_NO
                , V1.ORD_STUS_CODE
                , V1.ORD_STUS_ID
                , V1.PO_NO
                , V1.PRODUCT_ID
                , V1.PRODUCT_CODE
                , V1.PRODUCT_NAME
                , V1.REF_NO
                , V1.RENT_STUS
                , V1.SALESMAN_MEM_ID
                , V1.SALESMAN_CODE
                , V1.SALESMAN_MEM_TYPE_ID
                , V1.BILLING_GRP_ID
                , V1.MAIL_TEL_MOB
                , V1.MAIL_TEL_FAX
                , V1.MAIL_TEL_OFF
                , V1.MAIL_TEL_RES
                , V1.INST_TEL_FAX
                , V1.INST_TEL_MOB
                , V1.INST_TEL_OFF
                , V1.INST_TEL_RES
                , V1.SIRIM_NO
                , V1.SERIAL_NO
                , V1.ITM_PRC_ID
                , V1.PV_MONTH
                , V1.PV_YEAR
                , V1.PROMO_CODE
                , V1.PROMO_DESC
                , V1.RELATED_NO
                , V1.RELATED_ID
           FROM SAL1013V  V1
           WHERE 1 = 1 AND V1.ORD_ID IN (SELECT SALES_ORD_ID FROM SAL0001D WHERE PCKAGE_BINDING_NO = #{salesOrdId})
    ) T
    ORDER BY T.ORD_NO ASC
  </select>




  <select id="getCustIdOfOrderList" parameterType="Map" resultType="egovMap">
          SELECT CUST_ID
            FROM SAL0029D  T
        WHERE 1=1
        <if test='custName != null and custName != ""'>
             AND T.NAME LIKE '%'||UPPER(#{custName})||'%'
           </if>
           <if test='custIc != null and custIc != ""'>
             AND T.NRIC  LIKE '%'||UPPER(#{custIc})||'%'
           </if>
            <if test='contactNo != null and contactNo != ""'>
             AND EXISTS   (
                 SELECT  CUST_CNTC_ID
                     FROM  SAL0027D  TT
                 WHERE  1=1
                    AND #{contactNo}   IN (TT.TEL_M1, TT.TEL_O, TT.TEL_R)
                    AND TT.CUST_ID  =T.CUST_ID
             )
           </if>
           <if test='vaNo != null and vaNo != ""'>
             AND REPLACE(T.CUST_VA_NO,' ')= REPLACE(#{vaNo},' ')
           </if>

           <if test='crtUserId != null and crtUserId != ""'>
             AND T.CRT_USER_ID = UPPER(#{crtUserId})
           </if>

            <if test='refNo != null and refNo != ""'>
             AND EXISTS   (
                      SELECT CUST_ID  FROM SAL0001D  AA WHERE AA.CUST_ID = T.CUST_ID AND AA. REF_NO = UPPER(#{refNo})
             )
         </if>

           <if test='poNo != null and poNo != ""'>
             AND EXISTS   (
                      SELECT CUST_ID  FROM SAL0001D  AA WHERE AA.CUST_ID = T.CUST_ID AND AA. CUST_PO_NO = UPPER(#{poNo})
             )
         </if>

 </select>

 <select id="selectOrderListCody" parameterType="Map" resultType="egovMap">
    SELECT T.APP_TYPE_CODE
         , T.APP_TYPE_NAME
         , T.CRT_USER_ID
         , CASE WHEN LENGTH(T.CUST_IC) = 12 THEN REGEXP_REPLACE(SUBSTR(T.CUST_IC, 0,8),'[A-Za-z0-9]','x') || SUBSTR(T.CUST_IC, 9,12)
            ELSE T.CUST_IC
            END CUST_IC
         , T.CUST_NAME
         , T.CUST_VA_NO
         , T.DSC_BRNCH_ID
         , T.KEYIN_BRNCH_ID
         , T.ORD_ID
         , T.ORD_NO
         , T.ORD_STUS_CODE
         , T.PO_NO
         , T.PRODUCT_CODE
         , T.PRODUCT_NAME
         , T.REF_NO
         , T.RENT_STUS
         , T.SALESMAN_MEM_ID
         , T.SALESMAN_CODE
         , T.SALESMAN_MEM_TYPE_ID
         , T.BILLING_GRP_ID
         , T.MAIL_TEL_MOB
         , T.MAIL_TEL_FAX
         , T.MAIL_TEL_OFF
         , T.MAIL_TEL_RES
         , T.INST_TEL_FAX
         , T.INST_TEL_MOB
         , T.INST_TEL_OFF
         , T.INST_TEL_RES
         , T.SIRIM_NO
         , T.SERIAL_NO
         , T.PROMO_CODE
         , T.PROMO_DESC
         , T.RELATED_NO
         , T.RELATED_ID
         , 1 C1
         , NVL(T.APP_TYPE_ID, 0) AS APP_TYPE_ID
         , NVL(T.CUST_ID, 0) AS CUST_ID
         , TO_CHAR(T.ORD_DT, 'DD/MM/YYYY') AS ORD_DT
         , NVL(T.ORD_STUS_ID, 0) AS ORD_STUS_ID
         , NVL(T.PRODUCT_ID, 0) AS PRODUCT_ID
         , T.PV_MONTH
         , T.PV_YEAR

    FROM ( SELECT
                  V1.APP_TYPE_CODE
                , V1.APP_TYPE_ID
                , V1.APP_TYPE_NAME
                , V1.CRT_USER_ID
                , V1.CUST_IC
                , V1.CUST_NAME
                , V1.CUST_ID
                , V1.CUST_VA_NO
                , V1.DSC_BRNCH_ID
                , V1.KEYIN_BRNCH_ID
                , V1.ORD_DT
                , V1.ORD_ID
                , V1.ORD_NO
                , V1.ORD_STUS_CODE
                , V1.ORD_STUS_ID
                , V1.PO_NO
                , V1.PRODUCT_ID
                , V1.PRODUCT_CODE
                , V1.PRODUCT_NAME
                , V1.REF_NO
                , V1.RENT_STUS
                , V1.SALESMAN_MEM_ID
                , V1.SALESMAN_CODE
                , V1.SALESMAN_MEM_TYPE_ID
                , V1.BILLING_GRP_ID
                , V1.MAIL_TEL_MOB
                , V1.MAIL_TEL_FAX
                , V1.MAIL_TEL_OFF
                , V1.MAIL_TEL_RES
                , V1.INST_TEL_FAX
                , V1.INST_TEL_MOB
                , V1.INST_TEL_OFF
                , V1.INST_TEL_RES
                , V1.SIRIM_NO
                , V1.SERIAL_NO
                , V1.ITM_PRC_ID
                , V1.PV_MONTH
                , V1.PV_YEAR
                , V1.PROMO_CODE
                , V1.PROMO_DESC
                , V1.RELATED_NO
                , V1.RELATED_ID
           FROM SAL1013V  V1
             JOIN SYS0026M M1 ON V1.PRODUCT_CODE = M1.STK_CODE

           /*
             INNER JOIN ( SELECT IE.SALES_ORD_ID
                          FROM SAL0047D IR
                          LEFT OUTER JOIN SAL0046D IE ON IE.INSTALL_ENTRY_ID = IR.ENTRY_ID WHERE
                          <choose>
                            <when test='serialNo != null and serialNo != ""'>
                              UPPER(IR.SERIAL_NO) = serialNo
                              <if test='sirimNo != null and sirimNo != ""'>
                                AND UPPER(IR.SIRIM_NO) = sirimNo
                              </if>
                            </when>
                            <otherwise>
                              <if test='sirimNo != null and sirimNo != ""'>
                                IR.SIRIM_NO = sirimNo
                              </if>
                            </otherwise>
                          </choose>
                        ) A on V1.ORD_ID = A.SALES_ORD_ID
           */
            <if test='memType != null and memType != "" '>
            JOIN(
                /*
                SELECT DISTINCT S1.CUST_ID , S1.SALES_ORD_ID
                FROM SAL0090D G
                LEFT JOIN ORG1001V V ON V.MEM_ID = G.SRV_CODY_ID
                JOIN SAL0001D S ON S.SALES_ORD_ID = G.SRV_SO_ID
                JOIN SAL0001D S1 on S1.CUST_ID = S.CUST_ID
                JOIN SAL0029D C ON S.CUST_ID = C.CUST_ID
                WHERE 1=1
                */
                SELECT DISTINCT S1.CUST_ID , S1.SALES_ORD_ID
                FROM SAL0001D S
                JOIN SAL0001D S1 on S1.CUST_ID = S.CUST_ID
                JOIN SAL0090D G ON S.SALES_ORD_ID = G.SRV_SO_ID
                JOIN SAL0029D C ON S.CUST_ID = C.CUST_ID
                LEFT JOIN ORG1001V V ON V.MEM_ID = G.SRV_CODY_ID
                WHERE 1=1
                <if test='ordId != null and ordId != ""'>
                AND S.SALES_ORD_ID = #{ordId}
                </if>
                <if test='ordNo != null and ordNo != ""'>
                AND S.SALES_ORD_NO = #{ordNo}
                </if>
                <if test='ordDt == null || ordDt == ""'>
                AND S.SALES_DT BETWEEN TO_DATE(#{ordStartDt}, 'YYYY-MM-DD') AND TO_DATE(#{ordEndDt}||' 23:59:59', 'YYYY-MM-DD HH24:MI:SS')
                </if>
                <if test='ordDt != null and ordDt != ""'>
                AND S.SALES_DT BETWEEN TO_DATE(#{ordDt}, 'DD/MM/YYYY') AND TO_DATE(#{ordDt}||' 23:59:59', 'DD/MM/YYYY HH24:MI:SS')
                </if>
                <if test="memlvl == 4">
                AND (V.MEM_ID = #{memId}
                OR C.TYPE_ID = 965)
                </if>
                <if test="memlvl == 3">
                AND (V.DEPT_CODE = #{deptCode}
                OR C.TYPE_ID = 965)
                </if>
                <if test="memlvl == 2">
                AND (V.GRP_CODE = #{grpCode}
                OR C.TYPE_ID = 965)
                </if>
                <if test="memlvl == 1">
                AND (V.ORG_CODE = #{orgCode}
                OR C.TYPE_ID = 965)
                </if>
            ) SVC
            ON V1.ORD_ID = SVC.SALES_ORD_ID
            </if>
           WHERE 1 = 1
           <if test='ordDt == null || ordDt == ""'>
             AND V1.SALES_DT BETWEEN TO_DATE(#{ordStartDt}, 'YYYY-MM-DD') AND TO_DATE(#{ordEndDt}||' 23:59:59', 'YYYY-MM-DD HH24:MI:SS')
           </if>
           <if test='ordDt != null and ordDt != ""'>
             AND V1.SALES_DT BETWEEN TO_DATE(#{ordDt}, 'DD/MM/YYYY') AND TO_DATE(#{ordDt}||' 23:59:59', 'DD/MM/YYYY HH24:MI:SS')
           </if>
           <if test='invoicePoNo != null and invoicePoNo != ""'>
             AND V1.ORD_ID IN (SELECT DISTINCT PO_ORD_ID
                         FROM PAY0015D
                         WHERE PO_REF_NO = #{invoicePoNo})
           </if>
           <if test='isEKeyin != null and isEKeyin != ""'>
             AND EKEY_IN_ID IS NOT NULL
           </if>
           <if test='isSelectAll == null or isSelectAll == ""'>

            <!--
            AND M1.STK_CTGRY_ID NOT IN (SELECT AA.CODE_ID FROM SYS0013M AA, SYS0094M BB
                                                          WHERE AA.CODE = BB.CODE
                                                             AND AA.CODE_MASTER_ID = 11 AND BB.IND = 'HOMECARE'
                                                             AND BB.CODE = 'FRM')
            --> -- Mattress, Frame
                  AND V1.APP_TYPE_ID NOT IN (5764)
           </if>
           <if test = 'memID != null and memID != ""'>
           AND V1.SALESMAN_MEM_ID = #{memID}
           </if>
    ) T
     WHERE 1=1

           <if test='ordNo != null and ordNo != ""'>
             AND T.ORD_NO = #{ordNo}
           </if>
           <if test='ordId != null and ordId != ""'>
           /*29-12-2022 - Chou Jia Cheng - edited serial number to be able to view more than one result at a time*/
             AND T.ORD_ID IN
             <foreach item="item" collection="ordId" index="index" open="(" separator="," close=")">
               #{item}
             </foreach>
           </if>
           <if test='arrAppType != null and arrAppType != ""'>
             AND T.APP_TYPE_ID IN
             <foreach item="item" collection="arrAppType" index="index" open="(" separator="," close=")">
               #{item}
             </foreach>
           </if>
           <if test='arrOrdStusId != null and arrOrdStusId != ""'>
             AND T.ORD_STUS_ID IN
             <foreach item="item" collection="arrOrdStusId" index="index" open="(" separator="," close=")">
               #{item}
             </foreach>
           </if>
           <if test='arrKeyinBrnchId != null and arrKeyinBrnchId != ""'>
             AND T.KEYIN_BRNCH_ID IN
             <foreach item="item" collection="arrKeyinBrnchId" index="index" open="(" separator="," close=")">
               #{item}
             </foreach>
           </if>
           <if test='arrDscBrnchId != null and arrDscBrnchId != ""'>
             AND T.DSC_BRNCH_ID IN
             <foreach item="item" collection="arrDscBrnchId" index="index" open="(" separator="," close=")">
               #{item}
             </foreach>
           </if>
           <if test='custId != null and custId != ""'>
             AND T.CUST_ID = #{custId}
           </if>
           <if test='productId != null and productId != ""'>
             AND T.PRODUCT_ID = #{productId}
           </if>

             /*AND T.SALESMAN_CODE = salesmanCode*/

           <if test='arrRentStus != null and arrRentStus != ""'>
             AND T.RENT_STUS IN
             <foreach item="item" collection="arrRentStus" index="index" open="(" separator="," close=")">
               #{item}
             </foreach>
           </if>
           <if test='refNo != null and refNo != ""'>
             AND T.REF_NO = #{refNo}
           </if>
           <if test='poNo != null and poNo != ""'>
             AND T.PO_NO = #{poNo}
           </if>
           <if test='promoCode != null and promoCode != ""'>
             AND T.PROMO_CODE = #{promoCode}
           </if>
           <if test='relatedNo != null and relatedNo != ""'>
             AND T.RELATED_NO = #{relatedNo}
           </if>

           <if test='arrayCustId != null and arrayCustId != ""'>
             AND T.CUST_ID IN
             <foreach item="item" collection="arrayCustId" index="index" open="(" separator="," close=")">
               #{item}
             </foreach>
           </if>
    ORDER BY T.ORD_NO ASC
  </select>

  <select id="getSirimOrdID" parameterType="Map" resultType="egovMap">
      SELECT IE.SALES_ORD_ID
      FROM SAL0047D IR
      LEFT OUTER JOIN SAL0046D IE
        ON IE.INSTALL_ENTRY_ID = IR.ENTRY_ID
      WHERE 1=1
      <if test='sirimNo != null and sirimNo != "" '>
        AND UPPER(IR.SIRIM_NO) = #{sirimNo}
      </if>
      <if test='serialNo != null and serialNo != "" '>
        AND UPPER(IR.SERIAL_NO) = #{serialNo}
      </if>
  </select>

  <select id="getMemberID" parameterType="Map" resultType="int">
      SELECT MEM_ID
      FROM ORG0001D
      WHERE 1=1
      <if test='salesmanCode != null and salesmanCode != "" '>
        AND MEM_CODE = #{salesmanCode}
      </if>
  </select>

  <insert id="insert_SAL0299D" parameterType="Map">
    INSERT INTO SAL0299D (
        REF_ID ,
        RETN_REF_ID ,
        SALES_ORD_ID ,
        APP_TYPE_ID ,
        CUST_ID ,
        STK_ID ,
        STK_CTGRY_ID ,
        UPD_USER_BRNCH_ID ,
        UPD_USER_ID ,
        STK_RETN_COOLING_START_DT ,
        STK_RETN_COOLING_END_DT ,
        REM ,
        STUS_CODE_ID ,
        CRT_USER_ID ,
        CRT_DT
      ) VALUES (
        SAL0299D_REF_ID_SEQ.nextval,
        (SELECT STK_RETN_ID FROM LOG0038D WHERE retn_no = #{serviceNo}) ,
        #{salesOrderId} ,
        #{appTypeId} ,
        #{custId} ,
        #{productId} ,
        #{categoryId} ,
        #{brnchId} ,
        #{userId} ,
        TO_DATE(#{signRegDt},'DD/MM/YYYY') ,
        TO_DATE(#{signRegDt},'DD/MM/YYYY')+91 ,
        NULL ,
        1 ,
        #{userId} ,
        SYSDATE
      )
  </insert>

  <select id="selectPRFailReason" parameterType="Map" resultType="egovMap">
    SELECT RESN_ID,
           CODE,
           RESN_DESC
    FROM  SYS0032M
    WHERE 1=1
      AND RESN_ID = #{failReasonCode}
  </select>

  <select id="selectCustBillId" parameterType="Map" resultType="int">
       SELECT
            Extent1.CUST_BILL_ID CUST_BILL_ID
        FROM SAL0024D Extent1
        WHERE  Extent1.CUST_BILL_GRP_NO = #{billGroupNo}
    </select>

    <select id="selectOrderId" parameterType="Map" resultType="egovMap">
    SELECT A.SALES_ORD_ID AS ORD_ID
     ,A.SALES_ORD_NO AS SALES_ORD_NO
     ,C.NAME AS CUST_NAME
     ,NVL (E.ADDR_DTL, ' ') AS INST_ADDR_DTL
     ,NVL (E.STREET, ' ') AS INST_STREET
     ,NVL (J.AREA_NAME, ' ') AS INST_AREA
     ,NVL (F.POSTCODE, ' ') AS INST_POSTCODE
     ,NVL (F.CITY, ' ') AS INST_CITY
     ,NVL (F.STATE, ' ') AS INST_STATE
     ,NVL (F.COUNTRY, ' ') AS INST_COUNTRY
     ,H.STK_DESC AS PRODUCT_TYPE
     ,C.CUST_VA_NO AS VA_NO
     ,I.cust_bill_pay_ref_no1 AS JOMPAY
     ,A.APP_TYPE_ID AS APP_TYPE_ID
     ,B.STUS_CODE_ID AS CURR_RENTAL_STUS
    FROM SAL0001D A
    JOIN SAL0002D G ON G.SALES_ORD_ID = A.SALES_ORD_ID
    LEFT JOIN SAL0071D B ON B.SALES_ORD_ID = A.SALES_ORD_ID
    JOIN SAL0029D C ON C.CUST_ID = A.CUST_ID
    JOIN SAL0045D D ON D.SALES_ORD_ID = A.SALES_ORD_ID
    JOIN SAL0024D I ON I.CUST_BILL_ID = A.CUST_BILL_ID
    LEFT JOIN SAL0023D E ON E.CUST_ADD_ID = D.ADD_ID
    LEFT JOIN SYS0064M F ON F.AREA_ID = E.AREA_ID
    LEFT JOIN SYS0026M H ON H.STK_ID = G.ITM_STK_ID
    LEFT JOIN SYS0039M J ON J.AREA_ID = E.AREAID
    WHERE
    A.SALES_ORD_NO = #{otOrdNo}
    </select>

    <resultMap id="outStndInfoList" type="egovMap" ></resultMap>
    <select id="getOderOutsInfo"  statementType="CALLABLE"   parameterType="Map">
        <![CDATA[
        {
              call SP_GET_ORD_OTSTND_INFO ( #{ordId} , #{p1, mode=OUT, jdbcType=CURSOR, javaType=ResultSet, resultMap=outStndInfoList})
        }
        ]]>
    </select>

    <select id="selectHeaderInfo" parameterType="Map" resultType="egovMap">
        SELECT
        <!-- =================== -->
        <!--       ORDER INFO -->
        <!--      =================== -->
            C.NAME AS CUST_NAME
            , SOM.SALES_ORD_NO AS ORD_NO
            , CUSTTYPE.CODE_NAME CUST_TYPE
            , STK.STK_CODE STOCK_CODE
            , STK.STK_DESC STOCK_DESC
        <!--     =================== -->
        <!--      INST INFO -->
        <!--     =================== -->
            , NVL (MADD.CITY, ' ') AS INST_CITY
            , NVL (MADD.POSTCODE, ' ') AS INST_POSTCODE
            , DECODE (INSTR.INSTALL_DT,
                  NULL, '01/01/1900',
                  TO_CHAR (INSTR.Install_Dt, 'DD/MM/YYYY'))
            FIRST_INSTALL_DT
        <!--     =================== -->
        <!--      MAIL INFO -->
        <!--     =================== -->
            , CASE
                WHEN SOM.APP_TYPE_ID = 66 THEN NVL (CP1.TEL_M1, ' ')
                ELSE NVL (CP2.TEL_M1, ' ')
             END MAIL_CNT_TEL_M
            , CASE
                WHEN SOM.APP_TYPE_ID = 66 THEN NVL (CP1.TEL_O, ' ')
                ELSE NVL (CP2.TEL_O, ' ')
             END MAIL_CNT_TEL_O
            , CASE
                WHEN SOM.APP_TYPE_ID = 66 THEN NVL (CP1.TEL_R, ' ')
                ELSE NVL (CP2.TEL_R, ' ')
             END MAIL_CNT_TEL_R
            , CASE
                WHEN SOM.APP_TYPE_ID = 66 THEN NVL (CP1.TELF, ' ')
                ELSE NVL (CP2.TELF, ' ')
             END MAIL_CNT_TEL_F
        <!-- ==================================================================== -->
        <!--  M2 STATUS + OPENING & CURRENT PAYMODE + OPENING & CURRENT CARD TYPE -->
        <!--==================================================================== -->
            , NVL(CD1.CODE, ' ') AS OPEN_ODR_PAYMODE
            , NVL(CD2.CODE, ' ') AS CURR_ODR_PAYMODE
            , NVL(CD3.CODE_NAME, ' ') AS OPEN_CRC_TYPE
            , NVL(CD4.CODE_NAME, ' ') AS CURR_CRC_TYPE,
            CASE WHEN CA.MONTH_TYPE = 'M2' AND A.TARGET <![CDATA[ <> ]]> A.COLLECTION THEN CA.MONTH_TYPE
                ELSE 'No'
            END AS M2_STUS
        FROM SAL0001D SOM
        JOIN SAL0029D C ON C.CUST_ID = SOM.CUST_ID
        LEFT JOIN SYS0013M CUSTTYPE ON CUSTTYPE.CODE_ID = C.TYPE_ID
        JOIN SAL0002D SOD ON SOD.SALES_ORD_ID = SOM.SALES_ORD_ID
        JOIN SYS0026M STK ON STK.STK_ID = SOD.ITM_STK_ID
        <!-- =========== -->
        <!-- INST INFO -->
        <!-- =========== -->
        JOIN SAL0045D INST ON INST.SALES_ORD_ID = SOM.SALES_ORD_ID <!-- INSTALLATION STATUS-->
        LEFT JOIN SAL0023D CADD ON CADD.CUST_ADD_ID = INST.ADD_ID <!-- CUSTOMER ADDRESS-->
        LEFT JOIN SYS0064M MADD ON MADD.AREA_ID = CADD.AREA_ID <!-- MAGIC ADDRESS (STREETS)-->
        LEFT JOIN (
            SELECT SALES_ORD_ID, INSTALL_ENTRY_ID,INSTALL_RESULT_ID
            FROM (SELECT
                      SALES_ORD_ID,
                      INSTALL_ENTRY_ID,INSTALL_RESULT_ID,
                      RANK () OVER (
                         PARTITION BY SALES_ORD_ID ORDER BY INSTALL_ENTRY_ID ASC)
                      RANK
                 FROM SAL0046D <!-- SALES ORDER INSTALLATION APPOINTMENT-->
                WHERE STUS_CODE_ID = 4)
            WHERE RANK = 1
        )EIMIN ON EIMIN.SALES_ORD_ID = SOM.SALES_ORD_ID
        LEFT JOIN SAL0047D INSTR ON INSTR.ENTRY_ID = EIMIN.INSTALL_ENTRY_ID <!-- INSTALLATION RESULT-->
                                AND INSTR.RESULT_ID = EIMIN.INSTALL_RESULT_ID
                                AND INSTR.STUS_CODE_ID = 4
        <!--=========== -->
        <!--  MAIL INFO -->
        <!--=========== -->
        LEFT JOIN SAL0024D BM ON BM.CUST_BILL_ID = SOM.CUST_BILL_ID AND SOM.APP_TYPE_ID = 66 <!-- RENTAL BILL GROUPING MASTER-->
        LEFT JOIN SAL0027D CP1 ON CP1.CUST_CNTC_ID = BM.CUST_BILL_CNT_ID AND SOM.APP_TYPE_ID = 66
        LEFT JOIN SAL0027D CP2 ON CP2.CUST_CNTC_ID = SOM.CUST_CNT_ID AND SOM.APP_TYPE_ID <![CDATA[ <> ]]> 66
        <!-- ==================================================================== -->
        <!--  M2 STATUS + OPENING & CURRENT PAYMODE + OPENING & CURRENT CARD TYPE -->
        <!-- ==================================================================== -->
        LEFT JOIN PAY0052S P52 ON P52.ACC_DEBT_ORD_ID = SOM.SALES_ORD_ID
        LEFT JOIN REP0087S A ON A.SALES_ORD_ID = som.SALES_ORD_ID
        LEFT JOIN PAY0042D CA ON A.SALES_ORD_ID = CA.SALES_ORD_ID AND A.THSMNTH = CA.BANK_DTL_ID
        LEFT JOIN SYS0013M CD1 ON CD1.CODE_ID = P52.ACC_DEBT_OPNG_PAY_MODE_ID AND CD1.CODE_MASTER_ID = 19
        LEFT JOIN SYS0013M CD2 ON CD2.CODE_ID = P52.ACC_DEBT_CURR_PAY_MODE_ID AND CD2.CODE_MASTER_ID = 19
        LEFT JOIN SYS0013M CD3 ON CD3.CODE_ID = P52.ACC_DEBT_OPNG_CRC_TYPE_ID AND CD3.CODE_MASTER_ID = 115
        LEFT JOIN SYS0013M CD4 ON CD4.CODE_ID = P52.ACC_DEBT_CURR_CRC_TYPE_ID AND CD3.CODE_MASTER_ID = 115
        WHERE   SOM.STUS_CODE_ID <![CDATA[ <>  ]]> 8
        <!--        AND SOM.APP_TYPE_ID = 66 -->
        AND SOM.SALES_ORD_ID = #{ordId}
    </select>

    <select id="selectHistInfo" parameterType="Map" resultType="egovMap">
		SELECT * FROM (
		    <!--===============================-->
		    <!--        AUTO DEBIT RESULT      -->
		    <!--===============================-->
		    SELECT * FROM (
		        SELECT
		              T.CRT_DT_DD AS DT
		              , T.CUST_ACC_NO
		              , T.EXP_DT
		              , T6.CODE AS PAYMODE <!-- PAYMODE-->
		              , T.CODE AS ISSUER_BANK
		              , T.CARD_TYPE
		              , 'Recurring' AS TRANSACTION_TYPE
		              , CASE WHEN T.CTRL_STUS_ID   <![CDATA[ <> ]]> 4 THEN '-'
		                   ELSE T.CODE_NAME
		              END AS RESULT <!--IS_APPROVE_STR -->
		              , T.BANK_DTL_AMT AS TRX_AMT
		              , CASE WHEN BANK_DTL_APPR_CODE = '00' THEN
		                     CASE WHEN T9.PAY_ITM_APPV_NO IS NOT NULL AND T9.OR_NO IS NOT NULL THEN
                                T9.PAY_ITM_APPV_NO ||'/'|| T9.OR_NO
		                  ELSE '-'
		                  END
		                ELSE '-'
		              END AS APPROVAL_CODE_RECEIPT_NO
		              , T.CRT_DT
		        FROM (
		            SELECT
		                T1.BANK_DTL_ID
		                , T1.BANK_DTL_AMT
		                , T2.CTRL_ID
		                , TO_CHAR(T2.CRT_DT, 'MM/YY') CRT_DT_MM
		                , TO_CHAR(T2.CRT_DT, 'DD/MM/YYYY') CRT_DT_DD
		                , CASE WHEN T2.CTRL_IS_CRC = 1 THEN 'CRC'
		                          WHEN T2.CTRL_IS_CRC = 0 THEN 'DD'
		                          ELSE 'FPX'
		                  END BATCH_MODE
                        , NVL(T3.CODE, '') CODE
		                , NVL(T2.CTRL_STUS_ID, 1) CTRL_STUS_ID
		                , NVL(T1.BANK_APPV, 0) BANK_APPV
		                , NVL(t1.BANK_DTL_APPR_CODE,0) BANK_DTL_APPR_CODE
		                , T2.CTRL_IS_CRC CTRL_IS_CRC
                        , CASE
                                WHEN T3.BANK_ID = 23 AND LENGTH(T1.BANK_DTL_APPR_CODE) = 6 THEN 'Success'
                                ELSE GBSLCVD.FN_GET_DDT_RMK(T1.BANK_DTL_APPR_CODE,1)
                          END CODE_NAME
		                , LPAD(SUBSTR(T4.CUST_ORI_CRC_NO,-4),LENGTH(T4.CUST_ORI_CRC_NO),'*') CUST_ACC_NO
		                , TO_CHAR(TO_DATE(T4.CUST_CRC_EXPR,'MM/YY'),'MM/YY') AS EXP_DT
		                , T5.CODE_NAME CARD_TYPE
		                , T2.CRT_DT
		                , T1.SALES_ORD_ID
		           FROM PAY0042D T1
		           JOIN PAY0041D T2 ON T2.CTRL_ID = T1.BANK_DTL_CTRL_ID AND 8 != T2.CTRL_STUS_ID
		           LEFT JOIN SYS0004M T3 ON T3.BANK_ID = T2.CTRL_BANK_ID
		           LEFT JOIN SAL0028D T4 ON T4.CUST_CRC_ID = T1.CUST_CRC_ID
		           LEFT JOIN SYS0013M T5 ON T5.CODE_ID = T4.CARD_TYPE_ID
		           LEFT JOIN SYS0094M T6 ON T6.CODE = T1.BANK_DTL_APPR_CODE AND T6.IND IN ('SUCCESS','INSFUNDS','INVCARD','CHGCARD','TRXNOTALW')
		           WHERE T1.SALES_ORD_ID = #{ordId}
		           AND T2.CRT_DT BETWEEN ADD_MONTHS (SYSDATE, -6) AND T2.CRT_DT

		           UNION

		           SELECT
				        T1.BANK_DTL_ID
				        , T1.BANK_DTL_AMT
				        , T2.CTRL_ID
				        , TO_CHAR(T2.CRT_DT, 'MM/YY') CRT_DT_MM
				        , TO_CHAR(T2.CRT_DT, 'DD/MM/YYYY') CRT_DT_DD
				        , CASE WHEN T2.CTRL_IS_CRC = 1 THEN 'CRC'
				                  WHEN T2.CTRL_IS_CRC = 0 THEN 'DD'
				                  ELSE 'FPX'
				          END BATCH_MODE
                        , NVL(T3.CODE, '') CODE
				        , NVL(T2.CTRL_STUS_ID, 1) CTRL_STUS_ID
				        , NVL(T1.BANK_APPV, 0) BANK_APPV
				        , NVL(t1.BANK_DTL_APPR_CODE,0) BANK_DTL_APPR_CODE
				        , T2.CTRL_IS_CRC CTRL_IS_CRC
                        , CASE
                                WHEN T3.BANK_ID = 23 AND LENGTH(T1.BANK_DTL_APPR_CODE) = 6 THEN 'Success'
                                ELSE GBSLCVD.FN_GET_DDT_RMK(T1.BANK_DTL_APPR_CODE,1)
                          END CODE_NAME
				        , LPAD(SUBSTR(T4.CUST_ORI_CRC_NO,-4),LENGTH(T4.CUST_ORI_CRC_NO),'*') CUST_ACC_NO
				        , TO_CHAR(TO_DATE(T4.CUST_CRC_EXPR,'MM/YY'),'MM/YY') AS EXP_DT
				        , T5.CODE_NAME CARD_TYPE
				        , T2.CRT_DT
				        , T1.SALES_ORD_ID
				    FROM PAY0102D T1
				    LEFT JOIN PAY0041D T2 ON T2.CTRL_ID = T1.BANK_DTL_CTRL_ID
				    LEFT JOIN SYS0004M T3 ON T3.BANK_ID = T2.CTRL_BANK_ID
				    LEFT JOIN SAL0028D T4 ON  T4.CUST_CRC_TOKEN = T1.BANK_DTL_DR_ACC_NO AND
				                            T4.CUST_CRC_OWNER = T1.BANK_DTL_DR_NAME AND
				                            T4.CUST_CRC_BANK_ID = T1.BANK_DTL_DR_BANK_TYPE_ID AND
				                            T4.CUST_CRC_EXPR = T1.BANK_DTL_CRC_EXPR
				    LEFT JOIN SYS0013M T5 ON T5.CODE_ID = T4.CARD_TYPE_ID
				    LEFT JOIN SYS0094M T6 ON T6.CODE = T1.BANK_DTL_APPR_CODE AND T6.IND IN ('SUCCESS','INSFUNDS','INVCARD','CHGCARD','TRXNOTALW')
				    WHERE T1.SALES_ORD_ID = #{ordId}
				    AND T2.CRT_DT BETWEEN ADD_MONTHS (SYSDATE, -6) AND T2.CRT_DT

		        ) T
		        LEFT JOIN SYS0013M T6 ON T6.CODE = T.BATCH_MODE AND T6.CODE_MASTER_ID = 19
		        LEFT JOIN (
                    SELECT
                            P65.PAY_ITM_APPV_NO,
                            P64.OR_NO,
                            P64.SALES_ORD_ID,
                            P65.PAY_ITM_REF_NO
                        FROM PAY0064D P64
                        JOIN PAY0065D P65 ON P65.PAY_ID = P64.PAY_ID
                        WHERE P64.SALES_ORD_ID = #{ordId}
                )T9 ON T9.SALES_ORD_ID = T.SALES_ORD_ID AND T9.PAY_ITM_REF_NO = TO_CHAR(T.CTRL_ID)
		        ORDER BY T.BANK_DTL_ID DESC
		    ) A

		    UNION ALL

		    <!--===============================-->
		    <!--         ECASH RESULT          -->
		    <!--===============================-->
		    SELECT * FROM (
		        SELECT
		        TO_CHAR(A.FILE_ITM_CRT, 'DD/MM/YYYY') AS DT <!-- DATE (DEDUCTION DATE)-->
		        , CASE WHEN D.CUST_ORI_CRC_NO IS NULL THEN ''
		            ELSE '************' || SUBSTR (D.CUST_ORI_CRC_NO, 13, 4) END  CUST_ACC_NO
		        , TO_CHAR(TO_DATE(A.FILE_ITM_ACC_EXPR,'MM/YY'),'MM/YY') AS EXP_DT <!-- CARD EXP DT-->
		        , E.CODE AS PAYMODE
		        , F.CODE AS ISSUER_BANK
		        , G.CODE_NAME AS CARD_TYPE
		        , 'eCash' AS TRANSACTION_TYPE
		        , CASE WHEN A.FILE_ITM_STUS_ID = 4 THEN 'Success'
		            WHEN A.FILE_ITM_STUS_ID IN (6,8) THEN 'Fail'
		            ELSE '-'
		          END RESULT
		        , A.FILE_ITM_AMT AS TRX_AMT
		        , CASE WHEN A.FILE_ITM_STUS_ID = 4 THEN
		              A.FILE_ITM_APPR_CODE ||'/'|| A.FILE_ITM_OR_NO
		            ELSE '-'
		          END AS APPROVAL_CODE_RECEIPT_NO,
		          A.FILE_ITM_CRT
		    FROM SAL0152M A
		    JOIN SAL0001D B ON B.SALES_ORD_ID = A.FILE_ITM_ORD_ID
		    LEFT JOIN SAL0074D C ON C.SALES_ORD_ID = B.SALES_ORD_ID AND C.CUST_ID = B.CUST_ID
		    LEFT JOIN SAL0028D D ON D.CUST_CRC_ID = C.CUST_CRC_ID
		    LEFT JOIN SYS0013M E ON E.CODE_ID = C.MODE_ID
		    LEFT JOIN SYS0004M F ON F.BANK_ID = C.BANK_ID
		    LEFT JOIN SYS0013M G ON G.CODE_ID = D.CARD_TYPE_ID
		    WHERE 1=1
		        AND A.FILE_ITM_ORD_ID = #{ordId}
		        AND C.MODE_ID = 131
		        AND A.FILE_ITM_STUS_ID != 8
		        AND A.FILE_ITM_CRT BETWEEN ADD_MONTHS (SYSDATE, -6) AND A.FILE_ITM_CRT
		    ) B

		   <!--===============================-->
		    <!--        PAYMENT LISTING        -->
		    <!--===============================-->
		    <!-- N/A-->

		    UNION

		    <!--===============================-->
		    <!--  RENTAL PAY SETTING HISTORY   -->
		    <!--===============================-->
		    SELECT * FROM (
		         SELECT
		            CASE
		                WHEN (Extent1.DD_APPLY_DT <![CDATA[ > ]]> TO_DATE('1900-01-01', 'yyyy/MM/dd'))
                        THEN
                            CASE
                                WHEN (Extent1.DD_REJCT_DT <![CDATA[ > ]]> TO_DATE('1900-01-01', 'yyyy/MM/dd')) THEN TO_CHAR(Extent1.DD_REJCT_DT, 'DD/MM/YYYY')
                                WHEN (Extent1.DD_START_DT <![CDATA[ > ]]> TO_DATE('1900-01-01', 'yyyy/MM/dd')) THEN TO_CHAR(Extent1.DD_START_DT, 'DD/MM/YYYY')
                                WHEN (Extent1.DD_SUBMIT_DT <![CDATA[ > ]]> TO_DATE('1900-01-01', 'yyyy/MM/dd')) THEN TO_CHAR(Extent1.DD_SUBMIT_DT, 'DD/MM/YYYY')
                            ELSE TO_CHAR(Extent1.DD_APPLY_DT, 'DD/MM/YYYY') END
		            ELSE '-'
		            END DT,
		             CASE WHEN (131 <![CDATA[ <> ]]> Extent1.MODE_ID) THEN
		               CASE WHEN (NOT ( (Extent3.CUST_ACC_NO IS NULL) OR ( (LENGTH (Extent3.CUST_ACC_NO)) = 0)))
		                  THEN LPAD(SUBSTR(Extent3.CUST_ACC_NO,-4),LENGTH(Extent3.CUST_ACC_NO),'*')
		                  ELSE ' '
		               END
		             ELSE
		                  LPAD(SUBSTR(Extent4.CUST_ORI_CRC_NO,-4),LENGTH(Extent4.CUST_ORI_CRC_NO),'*')
		             END CUST_ACC_NO,
		             CASE WHEN (131 = Extent1.MODE_ID) THEN
		                CASE WHEN (Extent4.CUST_CRC_EXPR IS NOT NULL) THEN TO_CHAR(TO_DATE(Extent4.CUST_CRC_EXPR,'MM/YY'),'MM/YY')
		                ELSE ' '
		                END
		             ELSE ' '
		             END EXP_DT,
		             Extent2.CODE AS PAYMODE,
		             CASE WHEN (131 <![CDATA[ <> ]]> Extent1.MODE_ID) THEN
		                   CASE WHEN (Extent5.BANK_ID IS NOT NULL) THEN Extent5.CODE
		                   ELSE ' '
		                   END
		                WHEN (Extent6.BANK_ID IS NOT NULL) THEN Extent6.CODE
		                ELSE ' '
		             END ISSUER_BANK,
                     CASE WHEN (131 <![CDATA[ <> ]]> Extent1.MODE_ID) THEN ' '
                        ELSE Extent10.CODE_NAME
                     END CARD_TYPE,
		             'Update' AS TRANSACTION_TYPE,
		             '' AS RESULT,
		             NULL AS TRX_AMT,
		             '' AS APPROVAL_CODE_RECEIPT_NO,
		              Extent1.UPD_DT
		        FROM  SAL0074D Extent1
		        JOIN SYS0013M Extent2 ON Extent2.CODE_ID = Extent1.MODE_ID
		        LEFT JOIN SAL0022D Extent3 ON (Extent3.CUST_ACC_ID = Extent1.CUST_ACC_ID)
		                                  AND (131 <![CDATA[ <> ]]> Extent1.MODE_ID)
		                                  AND (Extent1.CUST_ACC_ID <![CDATA[ > ]]> 0)
		        LEFT JOIN SAL0028D Extent4 ON (Extent4.CUST_CRC_ID = Extent1.CUST_CRC_ID)
		                               AND (131 = Extent1.MODE_ID)
		                               AND (Extent1.CUST_CRC_ID <![CDATA[ > ]]> 0)
		        LEFT JOIN SYS0004M Extent5 ON  (Extent5.BANK_ID = Extent3.CUST_ACC_BANK_ID)
		                            AND (131 <![CDATA[ <> ]]> Extent1.MODE_ID)
		                            AND (Extent1.CUST_ACC_ID <![CDATA[ > ]]> 0)
		                            AND (Extent3.CUST_ACC_ID <![CDATA[ > ]]> 0)
		        LEFT JOIN SYS0004M Extent6 ON (Extent6.BANK_ID = Extent4.CUST_CRC_BANK_ID)
		                         AND (131 = Extent1.MODE_ID)
		                         AND (Extent1.CUST_CRC_ID <![CDATA[ > ]]> 0)
		                         AND (Extent4.CUST_CRC_ID <![CDATA[ > ]]> 0)
		        LEFT JOIN SYS0013M Extent10 ON Extent10.CODE_ID = Extent1.MODE_ID
		        WHERE (Extent1.SALES_ORD_ID = #{ordId})
		         AND (Extent1.SVC_CNTRCT_ID = '0')
		         AND Extent1.UPD_DT BETWEEN ADD_MONTHS (SYSDATE, -6) AND Extent1.UPD_DT

		        UNION ALL

		        SELECT * FROM (
		            SELECT
		               CASE
		                  WHEN (Ext1.DD_APPLY_DT <![CDATA[ > ]]> TO_DATE('1900-01-01', 'yyyy/MM/dd'))
                          THEN
                              CASE
                                  WHEN (Ext1.DD_REJCT_DT <![CDATA[ > ]]> TO_DATE('1900-01-01', 'yyyy/MM/dd')) THEN TO_CHAR(Ext1.DD_REJCT_DT, 'DD/MM/YYYY')
                                  WHEN (Ext1.DD_START_DT <![CDATA[ > ]]> TO_DATE('1900-01-01', 'yyyy/MM/dd')) THEN TO_CHAR(Ext1.DD_START_DT, 'DD/MM/YYYY')
                                  WHEN (Ext1.DD_SUBMIT_DT <![CDATA[ > ]]> TO_DATE('1900-01-01', 'yyyy/MM/dd')) THEN TO_CHAR(Ext1.DD_SUBMIT_DT, 'DD/MM/YYYY')
                              ELSE TO_CHAR(Ext1.DD_APPLY_DT, 'DD/MM/YYYY') END
		               ELSE '-'
		               END DT,
		               CASE WHEN (131 <![CDATA[ <> ]]> Ext1.MODE_ID) THEN
		                     CASE WHEN (NOT ( (Ext3.CUST_ACC_NO IS NULL) OR ( (LENGTH (Ext3.CUST_ACC_NO)) = 0))) THEN LPAD(SUBSTR(Ext3.CUST_ACC_NO,-4),LENGTH(Ext3.CUST_ACC_NO),'*')
		                        ELSE ' '
		                     END
		                  ELSE LPAD(SUBSTR(Ext4.CUST_ORI_CRC_NO,-4),LENGTH(Ext4.CUST_ORI_CRC_NO),'*')
		               END CUST_ACC_NO,
		               CASE WHEN (131 = Ext1.MODE_ID) THEN
		                     CASE WHEN (Ext4.CUST_CRC_EXPR IS NOT NULL) THEN TO_CHAR(TO_DATE(Ext4.CUST_CRC_EXPR,'MM/YY'),'MM/YY')
		                        ELSE ' '
		                     END
		                  ELSE ' '
		               END EXP_DT,
		               Ext2.CODE AS PAYMODE,
		               CASE WHEN (131 <![CDATA[ <> ]]> Ext1.MODE_ID) THEN
		                CASE WHEN (Ext5.BANK_ID IS NOT NULL) THEN Ext5.CODE
		                    ELSE ' '
		                END
		                WHEN (Ext6.BANK_ID IS NOT NULL)THEN Ext6.CODE
		                  ELSE ' '
		               END ISSUER_BANK,
                       CASE WHEN (131 <![CDATA[ <> ]]> Ext1.MODE_ID) THEN ' '
                        ELSE Ext10.CODE_NAME
                       END CARD_TYPE,
		               'Update' AS TRANSACTION_TYPE,
		               '' AS RESULT,
		               NULL AS TRX_AMT,
		               '' AS APPROVAL_CODE_RECEIPT_NO,
		               Ext1.UPD_DT
		            FROM SAL0076D Ext1
		            JOIN SYS0013M Ext2 ON Ext2.CODE_ID = Ext1.MODE_ID
		            LEFT JOIN SAL0022D Ext3 ON (Ext3.CUST_ACC_ID = Ext1.CUST_ACC_ID)
		                                        AND (131 <![CDATA[ <> ]]> Ext1.MODE_ID)
		                                        AND (Ext1.CUST_ACC_ID > 0)
		            LEFT JOIN SAL0028D Ext4  ON  (Ext4.CUST_CRC_ID = Ext1.CUST_CRC_ID)
		                                     AND (131 = Ext1.MODE_ID)
		                                     AND (Ext1.CUST_CRC_ID <![CDATA[ > ]]> 0)
		            LEFT JOIN SYS0004M Ext5 ON  (Ext5.BANK_ID = Ext3.CUST_ACC_BANK_ID)
		                                  AND (131 <![CDATA[ <> ]]> Ext1.MODE_ID)
		                                  AND (Ext1.CUST_ACC_ID <![CDATA[ > ]]> 0)
		                                  AND (Ext3.CUST_ACC_ID <![CDATA[ > ]]> 0)
		            LEFT JOIN SYS0004M Ext6 ON (Ext6.BANK_ID = Ext4.CUST_CRC_BANK_ID)
		                               AND (131 = Ext1.MODE_ID)
		                               AND (Ext1.CUST_CRC_ID <![CDATA[ > ]]> 0)
		                               AND (Ext4.CUST_CRC_ID <![CDATA[ > ]]> 0)
		            LEFT JOIN SYS0013M Ext10 ON Ext10.CODE_ID = Ext1.MODE_ID
		            WHERE (Ext1.SALES_ORD_ID = #{ordId})
		               AND (Ext1.SVC_CNTRCT_ID = '0')
		               AND Ext1.UPD_DT BETWEEN ADD_MONTHS (SYSDATE, -6) AND Ext1.UPD_DT
		        )
		    )C

		)
		ORDER BY TO_DATE(DT,'DD/MM/YYYY') DESC
    </select>

    <select id="selectMatrixInfo" parameterType="Map" resultType="egovMap">
        WITH DUMMY_TITLE AS (
		      SELECT '1' AS TYPE FROM DUAL
		    ),
		    INFO AS(
		        SELECT * FROM (
		            SELECT * FROM (
		                SELECT
		                      T.CRT_DT_MM AS DT
		                      , CASE WHEN T.CTRL_STUS_ID = 4 AND T.CODE_NAME = 'Success' THEN 'Success'
		                           ELSE ''
		                        END AS DEDUCTION
		                      , T6.CODE AS PAYMODE
		                      , T.CRT_DT
		                      , T.SALES_ORD_ID
		                      , 'AUTO DEBIT' TYPE
		                FROM (
		                    SELECT
		                        T2.CTRL_ID
		                        , TO_CHAR(T2.CRT_DT, 'MM/YYYY') CRT_DT_MM
		                        , CASE WHEN T2.CTRL_IS_CRC = 1 THEN 'CRC'
		                                  WHEN T2.CTRL_IS_CRC = 0 THEN 'DD'
		                                  ELSE 'FPX'
		                          END BATCH_MODE
		                        , NVL(T2.CTRL_STUS_ID, 1) CTRL_STUS_ID
		                        , T2.CRT_DT
		                        , T1.SALES_ORD_ID
		                        , T1.BANK_DTL_ID
		                        , T1.BANK_APPV
		                        , CASE WHEN T6.IND = 'SUCCESS' OR BANK_DTL_APPR_CODE IS NULL THEN 'Success'
		                            WHEN T6.IND = 'INSFUNDS' THEN 'Insufficient Funds'
		                            WHEN T6.IND = 'INVCARD' THEN 'Return pin/Invalid Card'
		                            WHEN T6.IND = 'CHGCARD' THEN
		                                                        CASE WHEN T2.CTRL_IS_CRC = 1 THEN
		                                                            CASE WHEN T1.BANK_DTL_APPR_CODE = '54' THEN 'Transaction Not Allowed' ELSE 'Change Card' END
		                                                        ELSE  'Change Account' END
		                            WHEN T6.IND = 'TRXNOTALW' AND T2.CTRL_IS_CRC = 1 THEN 'Transaction Not Allowed'
		                            ELSE (CASE WHEN T2.CTRL_IS_CRC = 1 THEN 'Change Card' ELSE 'Change Account' END)
		                            END CODE_NAME
		                   FROM PAY0042D T1
		                   JOIN PAY0041D T2 ON T2.CTRL_ID = T1.BANK_DTL_CTRL_ID AND 8 != T2.CTRL_STUS_ID
		                   LEFT JOIN SYS0094M T6 ON T6.CODE = T1.BANK_DTL_APPR_CODE AND T6.IND IN ('SUCCESS','INSFUNDS','INVCARD','CHGCARD','TRXNOTALW')
		                   WHERE 1=1
		                   AND T1.SALES_ORD_ID = #{ordId}
		                   AND T2.CRT_DT BETWEEN ADD_MONTHS (SYSDATE, -6) AND T2.CRT_DT
		                ) T
		                LEFT JOIN SYS0013M T6 ON T6.CODE = T.BATCH_MODE AND T6.CODE_MASTER_ID = 19
		                ORDER BY T.BANK_DTL_ID DESC
		            ) A

		            UNION ALL

		            SELECT * FROM (
		                SELECT
		                TO_CHAR(A.FILE_ITM_CRT, 'MM/YYYY') AS DT
		                ,  CASE WHEN A.FILE_ITM_STUS_ID = 4 THEN 'Success'
		                    ELSE ''
		                  END DEDUCTION
		                , E.CODE AS PAYMODE
		                , A.FILE_ITM_CRT
		                , A.FILE_ITM_ORD_ID
		                , 'ECASH' TYPE
		            FROM SAL0152M A
		            JOIN SAL0001D B ON B.SALES_ORD_ID = A.FILE_ITM_ORD_ID
		            LEFT JOIN SAL0074D C ON C.SALES_ORD_ID = B.SALES_ORD_ID AND C.CUST_ID = B.CUST_ID
		            LEFT JOIN SYS0013M E ON E.CODE_ID = C.MODE_ID
		            WHERE 1=1
		                AND A.FILE_ITM_ORD_ID = #{ordId}
		                AND C.MODE_ID = 131
		                AND A.FILE_ITM_CRT BETWEEN ADD_MONTHS (SYSDATE, -6) AND A.FILE_ITM_CRT
		            ) B
		        ) D
		    ),
		    PAYMODE AS(
		        SELECT * FROM (
		            SELECT
		                MODE_ID
		                , SALES_ORD_ID
		                , DD_APPLY_DT
		            FROM SAL0074D

		            UNION

		            SELECT
		                MODE_ID
		                , SALES_ORD_ID
		                , DD_APPLY_DT
		            FROM SAL0076D
		        )A
		        WHERE A.SALES_ORD_ID = #{ordId}
		    )
		    SELECT
		        'Month' AS TYPE
		        , 'Current' AS CUR_MONTH
		        , TO_CHAR(ADD_MONTHS(SYSDATE, - 1), 'MM/YYYY') AS PREV_1_MONTH
		        , TO_CHAR(ADD_MONTHS(SYSDATE, - 2), 'MM/YYYY') AS PREV_2_MONTH
		        , TO_CHAR(ADD_MONTHS(SYSDATE, - 3), 'MM/YYYY') AS PREV_3_MONTH
		        , TO_CHAR(ADD_MONTHS(SYSDATE, - 4), 'MM/YYYY') AS PREV_4_MONTH
		        , TO_CHAR(ADD_MONTHS(SYSDATE, - 5), 'MM/YYYY') AS PREV_5_MONTH
		        , TO_CHAR(ADD_MONTHS(SYSDATE, - 6), 'MM/YYYY') AS PREV_6_MONTH
		    FROM DUAL

		    UNION ALL

		    SELECT
		        TYPE
		        , NVL(MAX(CUR_MONTH), '') AS CUR_MONTH
		        , NVL(MAX(PREV_1_MONTH), '') AS PREV_1_MONTH
		        , NVL(MAX(PREV_2_MONTH), '') AS PREV_2_MONTH
		        , NVL(MAX(PREV_3_MONTH), '') AS PREV_3_MONTH
		        , NVL(MAX(PREV_4_MONTH), '') AS PREV_4_MONTH
		        , NVL(MAX(PREV_5_MONTH), '') AS PREV_5_MONTH
		        , NVL(MAX(PREV_6_MONTH), '') AS PREV_6_MONTH
		    FROM (
		    SELECT * FROM (
		        SELECT 'Deduction' AS TYPE
		               , CASE WHEN TO_CHAR(TO_DATE(I.DT,'MM-YYYY'), 'MM-YYYY') = TO_CHAR(SYSDATE, 'MM-YYYY') THEN MAX(I.DEDUCTION)
		                          ELSE '' END AS CUR_MONTH
		                , CASE WHEN TO_CHAR(TO_DATE(I.DT,'MM-YYYY'), 'MM-YYYY') = TO_CHAR(ADD_MONTHS(SYSDATE, - 1), 'MM-YYYY') THEN MAX(I.DEDUCTION)
		                          ELSE '' END AS PREV_1_MONTH
		                , CASE WHEN TO_CHAR(TO_DATE(I.DT,'MM-YYYY'), 'MM-YYYY') = TO_CHAR(ADD_MONTHS(SYSDATE, - 2), 'MM-YYYY') THEN MAX(I.DEDUCTION)
		                          ELSE '' END AS PREV_2_MONTH
		                , CASE WHEN TO_CHAR(TO_DATE(I.DT,'MM-YYYY'), 'MM-YYYY') = TO_CHAR(ADD_MONTHS(SYSDATE, - 3), 'MM-YYYY') THEN MAX(I.DEDUCTION)
		                          ELSE '' END AS PREV_3_MONTH
		                , CASE WHEN TO_CHAR(TO_DATE(I.DT,'MM-YYYY'), 'MM-YYYY') = TO_CHAR(ADD_MONTHS(SYSDATE, - 4), 'MM-YYYY') THEN MAX(I.DEDUCTION)
		                          ELSE '' END AS PREV_4_MONTH
		                , CASE WHEN TO_CHAR(TO_DATE(I.DT,'MM-YYYY'), 'MM-YYYY') = TO_CHAR(ADD_MONTHS(SYSDATE, - 5), 'MM-YYYY') THEN MAX(I.DEDUCTION)
		                          ELSE '' END AS PREV_5_MONTH
		                , CASE WHEN TO_CHAR(TO_DATE(I.DT,'MM-YYYY'), 'MM-YYYY') = TO_CHAR(ADD_MONTHS(SYSDATE, - 6), 'MM-YYYY') THEN MAX(I.DEDUCTION)
		                          ELSE '' END AS PREV_6_MONTH
		        FROM INFO I
		        GROUP BY I.DT, 'Deduction'
		        ORDER BY TO_DATE(I.DT,'MM/YYYY') DESC
		    ) AA

		    UNION

		        SELECT NVL('Deduction','Deduction') AS TYPE
		                ,  ''  AS CUR_MONTH
		                ,  ''  AS PREV_1_MONTH
		                , ''  AS PREV_2_MONTH
		                ,  ''  AS PREV_3_MONTH
		                , ''  AS PREV_4_MONTH
		                ,  ''  AS PREV_5_MONTH
		                ,  ''  AS PREV_6_MONTH
		        FROM DUAL

		    ) GROUP  BY TYPE

		    UNION ALL

		     SELECT
		        TYPE
		        , NVL(MAX(CUR_MONTH), '') AS CUR_MONTH
		        , NVL(MAX(PREV_1_MONTH), '') AS PREV_1_MONTH
		        , NVL(MAX(PREV_2_MONTH), '') AS PREV_2_MONTH
		        , NVL(MAX(PREV_3_MONTH), '') AS PREV_3_MONTH
		        , NVL(MAX(PREV_4_MONTH), '') AS PREV_4_MONTH
		        , NVL(MAX(PREV_5_MONTH), '') AS PREV_5_MONTH
		        , NVL(MAX(PREV_6_MONTH), '') AS PREV_6_MONTH
		    FROM (
		        SELECT 'Rental Paymode' AS TYPE
		            , CASE WHEN TO_CHAR(PAY.DD_APPLY_DT, 'YYYY-MM') = TO_CHAR(SYSDATE, 'YYYY-MM')
		                THEN CASE WHEN PAY.MODE_ID = '130' THEN 'Converted Regular'
		                          WHEN PAY.MODE_ID IN ('131','132','135') THEN 'Update'
		                            ELSE '' END
		                END AS CUR_MONTH
		            , CASE WHEN TO_CHAR(PAY.DD_APPLY_DT, 'YYYY-MM') = TO_CHAR(ADD_MONTHS(SYSDATE, - 1), 'YYYY-MM')
		                THEN CASE WHEN PAY.MODE_ID = '130' THEN 'Converted Regular'
		                          WHEN PAY.MODE_ID IN ('131','132','135') THEN 'Update'
		                            ELSE '' END
		                END AS PREV_1_MONTH
		            , CASE WHEN TO_CHAR(PAY.DD_APPLY_DT, 'YYYY-MM') = TO_CHAR(ADD_MONTHS(SYSDATE, - 2), 'YYYY-MM')
		                THEN CASE WHEN PAY.MODE_ID = '130' THEN 'Converted Regular'
		                          WHEN PAY.MODE_ID IN ('131','132','135') THEN 'Update'
		                            ELSE '' END
		                END AS PREV_2_MONTH
		            , CASE WHEN TO_CHAR(PAY.DD_APPLY_DT, 'YYYY-MM') = TO_CHAR(ADD_MONTHS(SYSDATE, - 3), 'YYYY-MM')
		                THEN CASE WHEN PAY.MODE_ID = '130' THEN 'Converted Regular'
		                          WHEN PAY.MODE_ID IN ('131','132','135') THEN 'Update'
		                            ELSE '' END
		                END AS PREV_3_MONTH
		            , CASE WHEN TO_CHAR(PAY.DD_APPLY_DT, 'YYYY-MM') = TO_CHAR(ADD_MONTHS(SYSDATE, - 4), 'YYYY-MM')
		                THEN CASE WHEN PAY.MODE_ID = '130' THEN 'Converted Regular'
		                          WHEN PAY.MODE_ID IN ('131','132','135') THEN 'Update'
		                            ELSE '' END
		                END AS PREV_4_MONTH
		            , CASE WHEN TO_CHAR(PAY.DD_APPLY_DT, 'YYYY-MM') = TO_CHAR(ADD_MONTHS(SYSDATE, - 5), 'YYYY-MM')
		                THEN CASE WHEN PAY.MODE_ID = '130' THEN 'Converted Regular'
		                          WHEN PAY.MODE_ID IN ('131','132','135') THEN 'Update'
		                            ELSE '' END
		                END AS PREV_5_MONTH
		            , CASE WHEN TO_CHAR(PAY.DD_APPLY_DT, 'YYYY-MM') = TO_CHAR(ADD_MONTHS(SYSDATE, - 6), 'YYYY-MM')
		                THEN CASE WHEN PAY.MODE_ID = '130' THEN 'Converted Regular'
		                          WHEN PAY.MODE_ID IN ('131','132','135') THEN 'Update'
		                            ELSE '' END
		                END AS PREV_6_MONTH
		        FROM PAYMODE PAY
		    )
		    GROUP BY TYPE
    </select>

    <select id="selectAccLinkInfo" parameterType="Map" resultType="egovMap">
		SELECT * FROM (
			SELECT
				EXT2.CUST_CRC_TOKEN CUST_TOKEN_ID
				,EXT3.SALES_ORD_NO ORDER_NO
				,EXT10.CODE ORDER_STATUS
				,EXT4.NAME CUSTOMER_NAME
				,CASE WHEN EXT1.MODE_ID = '131' THEN LPAD(SUBSTR(EXT2.CUST_ORI_CRC_NO,-4),LENGTH(EXT2.CUST_ORI_CRC_NO),'*')
				        ELSE ' '
				     END AS CUST_ACC_NO
				,EXT7.AREA AREA
				,CASE WHEN EXT1.IS_3RD_PARTY = 1 THEN 'YES' WHEN EXT1.IS_3RD_PARTY = 0 THEN 'NO' END THIRD_PARTY
				, EXT12.STK_DESC
				,'RM ' || EXT3.MTH_RENT_AMT RENTAL_FEE
				,CASE WHEN (EXT1.UPD_DT > TO_DATE('1900-01-01', 'yyyy/MM/dd'))
				    THEN TO_CHAR(EXT1.UPD_DT, 'DD/MM/YYYY')
				      ELSE '-'
				 END PAYMODE_UPD_DT
				 , EXT1.SALES_ORD_ID
			FROM SAL0074D EXT1
			JOIN SAL0028D EXT2 ON EXT1.CUST_CRC_ID = EXT2.CUST_CRC_ID
			JOIN SAL0001D EXT3 ON EXT1.SALES_ORD_ID = EXT3.SALES_ORD_ID
			JOIN SAL0029D EXT4 ON EXT3.CUST_ID = EXT4.CUST_ID
			JOIN SAL0045D EXT5 ON EXT3.SALES_ORD_ID = EXT5.SALES_ORD_ID
			JOIN SAL0023D EXT6 ON EXT5.ADD_ID = EXT6.CUST_ADD_ID
			LEFT JOIN SYS0064M EXT7 ON EXT6.AREA_ID = EXT7.AREA_ID
			LEFT JOIN SYS0038M EXT10 ON EXT10.STUS_CODE_ID = EXT3.STUS_CODE_ID
			JOIN SAL0002D EXT11 ON EXT11.SALES_ORD_ID = EXT3.SALES_ORD_ID
			JOIN SYS0026M EXT12 ON EXT12.STK_ID = EXT11.ITM_STK_ID
			WHERE 1 = 1
				AND EXT2.CUST_CRC_TOKEN = (SELECT CUST_CRC_TOKEN
				FROM SAL0074D A
				JOIN SAL0028D B ON B.CUST_CRC_ID = A.CUST_CRC_ID
				WHERE A.SALES_ORD_ID = #{ordId})
				AND EXT1.MODE_ID = 131
				AND EXT3.APP_TYPE_ID = 66
				AND EXT3.STUS_CODE_ID = 4
			ORDER BY EXT3.SALES_ORD_NO ASC
		) A
        WHERE A.SALES_ORD_ID <![CDATA[ <> ]]> #{ordId}
    </select>

</mapper>