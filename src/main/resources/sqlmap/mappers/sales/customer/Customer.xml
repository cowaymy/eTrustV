<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.coway.trust.biz.sales.customer.impl.CustomerMapper">
    
    <!-- 
        CLOB 컬럼을 사용하기 위해서는 아래와 같이 resultMap을 선언 후
         <select id="selectClobData" parameterType="Map"  resultMap="clobMap"> 와 같이
          resultMap="clobMap" 을 사용해야 함.
    -->
    <!-- Customer Contact List   -->
    <resultMap type="EgovMap" id="contactClobMap">
        <result property="c3" column="c3" jdbcType="CLOB" javaType="java.lang.String"/>
    </resultMap>
    
    <!-- Customer Bank Account List  -->
    <resultMap type="EgovMap" id="bankClobMap">
            <result property="c2" column="c2" jdbcType="CLOB" javaType="java.lang.String"/>
            <result property="c7" column="c7" jdbcType="CLOB" javaType="java.lang.String"/>
            <result property="c6" column="c6" jdbcType="CLOB" javaType="java.lang.String"/>
            <result property="c11" column="c11" jdbcType="CLOB" javaType="java.lang.String"/>
    </resultMap>
    <!--Customer Card Account List -->
    <resultMap type="egovMap" id="cardClobMap">
           <result property="c7" column="c7" jdbcType="CLOB" javaType="java.lang.String"/>
           <result property="c8" column="c8" jdbcType="CLOB" javaType="java.lang.String"/>
           <result property="c14" column="c14" jdbcType="CLOB" javaType="java.lang.String"/>
    </resultMap>
    
    <select id="selectCustomerList" parameterType="Map" resultType="egovMap">
        <![CDATA[
        SELECT  
				P2.C1 AS C1, 
				P2.CUST_ID AS CUST_ID, 
				P2.CRT_USER_ID AS CRT_USER_ID, 
				P2.USER_NAME1 AS USER_NAME1, 
				P2.CRT_DT AS CRT_DT, 
				P2.CORP_TYPE_ID AS CORP_TYPE_ID, 
				P2.CODE AS CODE, 
				P2.CODE_NAME AS CODE_NAME, 
				P2.Name1 AS Name, 
				P2.NRIC AS NRIC, 
				P2.CODE_NAME1 AS CODE_NAME1, 
				P2.TYPE_ID AS TYPE_ID, 
				P2.DOB AS DOB, 
				P2.EMAIL AS EMAIL, 
				P2.GENDER AS GENDER, 
				P2.NATION AS NATION, 
				P2.Name2 AS Name2, 
				P2.RACE_ID AS RACE_ID, 
				P2.CODE_NAME2 AS CODE_NAME2, 
				P2.REM AS REM, 
				P2.STUS_CODE_ID AS STUS_CODE_ID, 
				P2.UPD_USER_ID AS UPD_USER_ID, 
				P2.UPD_DT AS UPD_DT, 
				P2.USER_NAME2 AS USER_NAME2, 
				P2.CUST_ADD_ID AS CUST_ADD_ID, 
				P2.CUST_CNTC_ID AS CUST_CNTC_ID, 
				P2.CUST_CARE_CNT_ID AS CUST_CARE_CNT_ID, 
				P2.PAS_SPORT_EXPR AS PAS_SPORT_EXPR, 
				P2.VISA_EXPR AS VISA_EXPR, 
				P2.CUST_VA_NO AS CUST_VA_NO, 
				P2.GST_RGIST_NO AS GST_RGIST_NO
				FROM ( SELECT P1.CUST_ID, P1.Name1, P1.NRIC, P1.REM, P1.TYPE_ID, P1.PAS_SPORT_EXPR, 
				                P1.VISA_EXPR, P1.C1, P1.CRT_USER_ID, P1.USER_NAME1, 
				                P1.CRT_DT, P1.CORP_TYPE_ID, P1.CODE, P1.CODE_NAME, 
				                P1.CODE_NAME1, P1.DOB, P1.EMAIL, P1.GENDER, 
				                P1.NATION, P1.Name2, P1.RACE_ID, P1.CODE_NAME2, 
				                P1.STUS_CODE_ID, P1.UPD_USER_ID, P1.UPD_DT, P1.USER_NAME2, 
				                P1.CUST_ADD_ID, P1.CUST_CNTC_ID, P1.CUST_CARE_CNT_ID, P1.CUST_VA_NO, 
				                P1.GST_RGIST_NO, row_number() OVER (ORDER BY P1.CUST_ID ASC) AS row_number
				        FROM ( SELECT 
				                D1.CUST_ID AS CUST_ID, 
				                D1.Name1 AS Name1, 
				                D1.NRIC AS NRIC, 
				                D1.REM AS REM, 
				                D1.TYPE_ID AS TYPE_ID, 
				                D1.PAS_SPORT_EXPR AS PAS_SPORT_EXPR, 
				                D1.VISA_EXPR AS VISA_EXPR, 
				                D1.C1 AS C1, 
				                D1.CRT_USER_ID AS CRT_USER_ID, 
				                D1.USER_NAME1 AS USER_NAME1, 
				                D1.CRT_DT AS CRT_DT, 
				                D1.CORP_TYPE_ID AS CORP_TYPE_ID, 
				                D1.CODE AS CODE, 
				                D1.CODE_NAME AS CODE_NAME, 
				                D1.CODE_NAME1 AS CODE_NAME1, 
				                D1.DOB AS DOB, 
				                D1.EMAIL AS EMAIL, 
				                D1.GENDER AS GENDER, 
				                D1.NATION AS NATION, 
				                D1.Name2 AS Name2, 
				                D1.RACE_ID AS RACE_ID, 
				                D1.CODE_NAME2 AS CODE_NAME2, 
				                D1.STUS_CODE_ID AS STUS_CODE_ID, 
				                D1.UPD_USER_ID AS UPD_USER_ID, 
				                D1.UPD_DT AS UPD_DT, 
				                D1.USER_NAME2 AS USER_NAME2, 
				                D1.CUST_ADD_ID AS CUST_ADD_ID, 
				                D1.CUST_CNTC_ID AS CUST_CNTC_ID, 
				                D1.CUST_CARE_CNT_ID AS CUST_CARE_CNT_ID, 
				                D1.CUST_VA_NO AS CUST_VA_NO, 
				                D1.GST_RGIST_NO AS GST_RGIST_NO
				                FROM ( SELECT DISTINCT 
				                            S1.CUST_ID1 AS CUST_ID, 
				                            S1.Name1 AS Name1, 
				                            S1.NRIC1 AS NRIC, 
				                            S1.REM, 
				                            S1.TYPE_ID AS TYPE_ID, 
				                            S1.PAS_SPORT_EXPR AS PAS_SPORT_EXPR, 
				                            S1.VISA_EXPR AS VISA_EXPR, 
				                            1 AS C1, 
				                            CASE WHEN (S1.CRT_USER_ID1 IS NOT NULL) THEN S1.CRT_USER_ID1 ELSE 0 END AS CRT_USER_ID, 
				                            CASE WHEN (S1.USER_ID1 IS NOT NULL) THEN S1.USER_NAME1 ELSE '' END AS USER_NAME1, 
				                            CASE WHEN ((S1.CRT_DT1 IS NOT NULL) AND (S1.CRT_DT1 > '1900-01-01 00:00:00')) THEN   S1.CRT_DT1 ELSE '1900-01-01 00:00:00' END AS CRT_DT, 
				                            CASE WHEN (S1.CORP_TYPE_ID IS NOT NULL) THEN S1.CORP_TYPE_ID ELSE 0 END AS CORP_TYPE_ID, 
				                            CASE WHEN (T10.CODE_ID IS NOT NULL) THEN T10.Code ELSE '' END AS CODE, 
				                            CASE WHEN (T10.CODE_ID IS NOT NULL) THEN T10.CODE_NAME ELSE '' END AS CODE_NAME, 
				                            CASE WHEN (S1.CODE_ID1 IS NOT NULL) THEN S1.CODE_NAME1 ELSE '' END AS CODE_NAME1, 
				                            CASE WHEN (964 <> S1.TYPE_ID) THEN '1900-01-01 00:00:00' WHEN ((S1.DOB1 IS NOT NULL) AND (S1.DOB1 > '1900-01-01 00:00:00')) THEN   S1.DOB1 ELSE '1900-01-01 00:00:00' END AS DOB, 
				                            CASE WHEN (S1.Email1 IS NOT NULL) THEN S1.Email1 ELSE '' END AS EMAIL, 
				                            CASE WHEN (964 <> S1.TYPE_ID) THEN '' WHEN (S1.Gender1 IS NOT NULL) THEN S1.Gender1 ELSE '' END AS GENDER, 
				                            CASE WHEN (964 <> S1.TYPE_ID) THEN 0 WHEN (S1.NATION IS NOT NULL) THEN   S1.NATION ELSE 0 END AS NATION, 
				                            CASE WHEN (964 <> S1.TYPE_ID) THEN '' WHEN (S1.CNTY_ID1 IS NOT NULL) THEN S1.Name2 ELSE '' END AS Name2, 
				                            CASE WHEN (964 <> S1.TYPE_ID) THEN 0 WHEN (S1.RACE_ID1 IS NOT NULL) THEN   S1.RACE_ID1 ELSE 0 END AS RACE_ID, 
				                            CASE WHEN (964 <> S1.TYPE_ID) THEN '' WHEN (S1.CODE_ID2 IS NOT NULL) THEN S1.CODE_NAME2 ELSE '' END AS CODE_NAME2, 
				                            CASE WHEN (S1.STUS_CODE_ID1 IS NOT NULL) THEN   S1.STUS_CODE_ID1 ELSE 0 END AS STUS_CODE_ID, 
				                            CASE WHEN (S1.UPD_USER_ID1 IS NOT NULL) THEN S1.UPD_USER_ID1 ELSE 0 END AS UPD_USER_ID, 
				                            CASE WHEN ((S1.UPD_DT1 IS NOT NULL) AND (S1.UPD_DT1 > '1900-01-01 00:00:00')) THEN   S1.UPD_DT1 ELSE '1900-01-01 00:00:00' END AS UPD_DT, 
				                            CASE WHEN (S1.USER_ID2 IS NOT NULL) THEN S1.USER_NAME2 ELSE '' END AS USER_NAME2, 
				                            CASE WHEN (S1.CUST_ADD_ID IS NOT NULL) THEN S1.CUST_ADD_ID ELSE 0 END AS CUST_ADD_ID, 
				                            CASE WHEN (S1.CUST_CNTC_ID IS NOT NULL) THEN S1.CUST_CNTC_ID ELSE 0 END AS CUST_CNTC_ID, 
				                            CASE WHEN (S1.CUST_CARE_CNT_ID IS NOT NULL) THEN S1.CUST_CARE_CNT_ID ELSE 0 END AS CUST_CARE_CNT_ID, 
				                            CASE WHEN (S1.CUST_VA_NO IS NOT NULL) THEN S1.CUST_VA_NO ELSE '' END AS CUST_VA_NO, 
				                            CASE WHEN (S1.GST_RGIST_NO IS NOT NULL) THEN S1.GST_RGIST_NO ELSE '' END AS GST_RGIST_NO
				                            FROM   (SELECT T1.CUST_ID AS CUST_ID1, T1.Name AS Name1, T1.NRIC AS NRIC1, DBMS_LOB.SUBSTR (T1.REM, 4000) AS REM, T1.TYPE_ID AS TYPE_ID, T1.PAS_SPORT_EXPR AS PAS_SPORT_EXPR, 
				                                        T1.VISA_EXPR AS VISA_EXPR, --C1, 
				                                        T1.CRT_USER_ID AS CRT_USER_ID1, T2.USER_ID AS USER_ID1, T2.USER_NAME AS USER_NAME1, TO_CHAR(T1.CRT_DT, 'YYYYMMDD') AS CRT_DT1, T1.CORP_TYPE_ID AS CORP_TYPE_ID, T9.CODE_ID AS CODE_ID1, 
				                                        T9.CODE_NAME AS CODE_NAME1, T1.DOB AS DOB1, T1.Email AS Email1, T1.Gender AS Gender1, T1.NATION AS NATION, T4.Name AS Name2, T4.CNTY_ID AS CNTY_ID1, T1.RACE_ID AS RACE_ID1, 
				                                        T5.CODE_ID AS CODE_ID2, T5.CODE_NAME AS CODE_NAME2, T1.STUS_CODE_ID AS STUS_CODE_ID1, T1.UPD_DT AS UPD_DT1, T1.UPD_USER_ID AS UPD_USER_ID1, T3.USER_ID AS USER_ID2, T3.USER_NAME AS USER_NAME2, 
				                                        T6.CUST_ADD_ID AS CUST_ADD_ID, T7.CUST_CNTC_ID AS CUST_CNTC_ID, T8.CUST_CARE_CNT_ID AS CUST_CARE_CNT_ID, T1.CUST_VA_NO AS CUST_VA_NO, T1.GST_RGIST_NO AS GST_RGIST_NO
				                                    FROM SAL0029D T1
				                                    LEFT OUTER 
				                                    JOIN SYS0047M T2 
				                                      ON T2.USER_ID = T1.CRT_USER_ID
				                                    LEFT OUTER 
				                                    JOIN SYS0047M T3 
				                                      ON T3.USER_ID = T1.UPD_USER_ID
				                                    LEFT OUTER 
				                                    JOIN SYS0015M T4 
				                                      ON T4.CNTY_ID =  T1.NATION
				                                    LEFT OUTER 
				                                    JOIN SYS0013M T5 
				                                      ON T5.CODE_ID =  T1.RACE_ID
				                                    LEFT OUTER 
				                                    JOIN SAL0023D T6 
				                                      ON T6.CUST_ID = T1.CUST_ID 
				                                     AND (9 =   T6.STUS_CODE_ID)
				                                    LEFT OUTER 
				                                    JOIN SAL0027D T7 
				                                      ON T7.CUST_ID = T1.CUST_ID 
				                                     AND (9 =   T7.STUS_CODE_ID)
				                                    LEFT OUTER 
				                                    JOIN SAL0026D T8 
				                                      ON T8.CUST_ID = T1.CUST_ID AND (9 =   T8.STUS_CODE_ID)
				                                    LEFT OUTER 
				                                    JOIN SYS0013M T9 
				                                      ON T9.CODE_ID = T1.TYPE_ID
				                                   WHERE (8 <>   T1.STUS_CODE_ID) 
				                                     --AND (T1.TYPE_ID IN (965,964)) 
				                                     --AND ( (1154 = (CASE WHEN (T1.CORP_TYPE_ID IS NOT NULL) THEN T1.CORP_TYPE_ID ELSE 0 END)) OR (1174 = (CASE WHEN (T1.CORP_TYPE_ID IS NOT NULL) THEN T1.CORP_TYPE_ID ELSE 0 END))) 
				                                   ) S1
				                            LEFT OUTER 
				                            JOIN SYS0013M T10 
				                              ON T10.CODE_ID = S1.CORP_TYPE_ID 
				                             AND S1.CORP_TYPE_ID IS NOT NULL
				                         WHERE 1=1
				                          
				                            --AND (CASE WHEN (964 <> S1.TYPE_ID) THEN 0 WHEN (S1.NATION IS NOT NULL) THEN   S1.NATION ELSE 0 END) = 1    --MALAYSIA
				                            ]]>

				                                
				                            <if test="typeIdList != null and typeIdList != ''">
								                AND S1.TYPE_ID in 
									            <foreach item="item" collection="typeIdList" index="index" open="(" separator="," close=")">
									                #{item}
									            </foreach>
								            </if>
								            <if test="cmbCorpTypeIdList != null and cmbCorpTypeIdList != ''">
                                                AND S1.CORP_TYPE_ID in 
                                                <foreach item="item" collection="cmbCorpTypeIdList" index="index" open="(" separator="," close=")">
                                                    #{item}
                                                </foreach>
                                            </if>
								            <if test="nation != null and nation != ''">
                                                AND S1.NATION = #{nation}
                                            </if>
				                            <if test="custId != null and custId !=''">
                                                AND S1.CUST_ID1 = #{custId}
                                            </if>
                                            <if test="nric != null and nric !=''">
                                                AND S1.NRIC1 = #{nric}
                                            </if>
                                            <if test="name != null and name !=''">
                                                AND S1.Name1 like '%'|| #{name} || '%'
                                            </if>
                                            <if test="custVaNo != null and custVaNo !=''">
                                                AND S1.CUST_VA_NO = #{custVaNo}
                                            </if>
                                            <if test="dob != null and dob !=''">
                                                AND S1.DOB1 = #{dob}
                                            </if>
                                            
				                            
				                     ) D1
				            ) P1
				        ) P2
				WHERE P2.row_number > 0
				ORDER BY P2.CUST_ID ASC
		
    </select>
    <!-- Customer basic Info(Customer View)  -->
    <select id="selectCustomerViewBasicInfo" parameterType="Map" resultType="egovMap">
       <![CDATA[
      SELECT 
            Extent1.CUST_ID AS CustomerID,
            Extent1.NAME AS NAME,
            Extent1.NRIC AS NRIC,
            Extent1.REM AS Remark,
            Extent1.TYPE_ID AS TypeID,
            TO_CHAR(TO_DATE(Extent1.PAS_SPORT_EXPR, 'YYYY-MM-DD'), 'DD-MM-YYYY') AS PassportExpire,
            TO_CHAR(TO_DATE(Extent1.VISA_EXPR, 'YYYY-MM-DD'), 'DD-MM-YYYY') AS VisaExpire,            
            CASE WHEN Extent1.CRT_USER_ID IS NOT NULL THEN Extent1.CRT_USER_ID ELSE 0 END AS C1,
            CASE WHEN Extent2.USER_ID IS NOT NULL THEN Extent2.USER_NAME ELSE '' END AS C2,
            CASE WHEN Extent1.CRT_DT IS NOT NULL AND Extent1.CRT_DT > TO_DATE('1900-01-01', 'YYYY-MM-DD') THEN TO_CHAR(Extent1.CRT_DT, 'DD-MM-YYYY')  ELSE TO_CHAR(TO_DATE('1900-01-01', 'YYYY-MM-DD'), 'DD-MM-YYYY') END AS C3,
            CASE WHEN Extent1.CORP_TYPE_ID IS NOT NULL THEN Extent1.CORP_TYPE_ID ELSE 0 END AS C4,
            CASE WHEN Extent10.CODE_ID IS NOT NULL THEN Extent10.CODE ELSE '' END AS C5,
            CASE WHEN Extent10.CODE_ID IS NOT NULL THEN Extent10.CODE_NAME ELSE '' END AS C6,
            CASE WHEN Extent9.CODE_ID IS NOT NULL THEN Extent9.CODE_NAME ELSE '' END AS C7,            
            CASE WHEN 964 <> Extent1.TYPE_ID THEN TO_CHAR(TO_DATE('1900-01-01', 'YYYY-MM-DD'), 'DD-MM-YYYY') WHEN Extent1.DOB IS NOT NULL AND TO_DATE(Extent1.DOB, 'YYYY-MM-DD') > TO_DATE('1900-01-01', 'YYYY-MM-DD') THEN TO_CHAR(TO_DATE(Extent1.DOB, 'YYYY-MM-DD'), 'DD-MM-YYYY') ELSE TO_CHAR(TO_DATE('1900-01-01', 'YYYY-MM-DD'), 'DD-MM-YYYY') END AS C8,            
            CASE WHEN Extent1.EMAIL IS NOT NULL THEN Extent1.EMAIL ELSE '' END AS C9,
            CASE WHEN 964 <> Extent1.TYPE_ID THEN '' WHEN Extent1.GENDER IS NOT NULL THEN Extent1.GENDER ELSE '' END AS C10,
            CASE WHEN 964 <> Extent1.TYPE_ID THEN 0 WHEN Extent1.NATION IS NOT NULL THEN Extent1.NATION ELSE 0 END AS C11,
            CASE WHEN 964 <> Extent1.TYPE_ID THEN '' WHEN Extent4.CNTY_ID IS NOT NULL THEN Extent4.NAME ELSE '' END AS C12,
            CASE WHEN 964 <> Extent1.TYPE_ID THEN 0 WHEN Extent1.RACE_ID IS NOT NULL THEN Extent1.RACE_ID ELSE 0 END AS C13,
            CASE WHEN 964 <> Extent1.TYPE_ID THEN '' WHEN Extent5.CODE_ID IS NOT NULL THEN Extent5.CODE_NAME ELSE '' END AS C14,
            CASE WHEN Extent1.STUS_CODE_ID IS NOT NULL THEN Extent1.STUS_CODE_ID ELSE 0 END AS C15,
            CASE WHEN Extent1.UPD_USER_ID IS NOT NULL THEN Extent1.UPD_USER_ID ELSE 0 END AS C16,
            CASE WHEN Extent1.UPD_DT IS NOT NULL AND Extent1.UPD_DT > '19000101'  THEN TO_CHAR(TO_DATE(Extent1.UPD_DT, 'YYYY-MM-DD'), 'DD-MM-YYYY') ELSE TO_CHAR(TO_DATE('1900-01-01', 'YYYY-MM-DD'), 'DD-MM-YYYY') END AS C17, -- date
            CASE WHEN Extent3.USER_ID IS NOT NULL THEN Extent3.USER_NAME ELSE '' END AS C18,
            CASE WHEN Extent6.CUST_ADD_ID IS NOT NULL THEN Extent6.CUST_ADD_ID ELSE 0 END AS C19,
            CASE WHEN Extent7.CUST_CNTC_ID IS NOT NULL THEN Extent7.CUST_CNTC_ID ELSE 0 END AS C20,
            CASE WHEN Extent8.CUST_CARE_CNT_ID IS NOT NULL THEN Extent8.CUST_CARE_CNT_ID ELSE 0 END AS C21,
            CASE WHEN Extent1.CUST_VA_NO IS NOT NULL THEN Extent1.CUST_VA_NO ELSE '' END AS C22,
            CASE WHEN Extent1.GST_RGIST_NO IS NOT NULL THEN Extent1.GST_RGIST_NO ELSE '' END AS C23
        
        FROM 
            SAL0029D Extent1
            LEFT OUTER JOIN SYS0047M Extent2 ON Extent2.USER_ID = Extent1.CRT_USER_ID
            LEFT OUTER JOIN SYS0047M Extent3 ON Extent3.USER_ID = Extent1.UPD_USER_ID
            LEFT OUTER JOIN SYS0015M Extent4 ON Extent4.CNTY_ID = Extent1.NATION
            LEFT OUTER JOIN SYS0013M Extent5 ON Extent5.CODE_ID = Extent1.RACE_ID
            LEFT OUTER JOIN SAL0023D Extent6 ON Extent6.CUST_ID = Extent1.CUST_ID AND (9 = Extent6.STUS_CODE_ID)
            LEFT OUTER JOIN SAL0027D Extent7 ON Extent7.CUST_ID = Extent1.CUST_ID AND (9 = Extent7.STUS_CODE_ID)
            LEFT OUTER JOIN SAL0026D Extent8 ON Extent8.CUST_ID = Extent1.CUST_ID AND (9 = Extent8.STUS_CODE_ID)
            LEFT OUTER JOIN SYS0013M Extent9 ON Extent9.CODE_ID = Extent1.TYPE_ID
            LEFT OUTER JOIN SYS0013M Extent10 ON Extent10.CODE_ID = Extent1.CORP_TYPE_ID AND Extent1.CORP_TYPE_ID IS NOT NULL
        WHERE 
            8 <> Extent1.STUS_CODE_ID AND Extent1.CUST_ID =${testparam}
       ]]>
    </select>
    <!--  Customer Main Address(Customer View) -->
    <select id="selectCustomerViewMainAddress" parameterType="Map" resultType="egovMap">
      <![CDATA[ 
			  SELECT Limit1.CUST_ADD_ID CUST_ADD_ID  ,
			       Limit1.C1 C1  ,
			       Limit1.C2 C2  ,
			       Limit1.C3 C3  ,
			       Limit1.C4 C4  ,-- unnecessary?
			       Limit1.C5 C5  ,
			       Limit1.C6 C6  ,-- unnecessary?
			       Limit1.C7 C7  ,
			       Limit1.C8 C8  ,-- unnecessary?
			       Limit1.C9 C9  ,
			       Limit1.C10 C10  ,-- unnecessary?
			       Limit1.C11 C11  ,
			       Limit1.C12 C12  ,-- unnecessary?
			       Limit1.C13 C13  ,-- unnecessary?
			       Limit1.NAME NAME  ,
			       Limit1.CUST_ID CUST_ID  ,
			       Limit1.CRT_USER_ID CRT_USER_ID  ,
			       Limit1.C14 C14  ,
			       TO_CHAR(Limit1.C15,'DD-MM-YYYY') C15  ,
			       TO_CHAR(TO_DATE(Limit1.C16, 'YYYY-MM-DD'), 'DD-MM-YYYY') C16  ,
			       Limit1.C17 C17  ,
			       Limit1.C18 C18  
			  FROM ( SELECT Extent1.CUST_ADD_ID CUST_ADD_ID  ,
			                Extent1.CUST_ID CUST_ID  ,
			                Extent1.CRT_USER_ID CRT_USER_ID  ,
			                Extent2.NAME NAME  ,
			                CASE WHEN ( Extent1.ADD1 IS NOT NULL ) THEN LTRIM(RTRIM(Extent1.ADD1)) ELSE '' END C1  ,
			                CASE WHEN ( Extent1.ADD2 IS NOT NULL ) THEN LTRIM(RTRIM(Extent1.ADD2))ELSE '' END C2  ,
			                CASE WHEN ( Extent1.ADD3 IS NOT NULL ) THEN LTRIM(RTRIM(Extent1.ADD3)) ELSE '' END C3  ,
			                CASE WHEN ( Extent1.POST_CODE_ID IS NOT NULL ) THEN Extent1.POST_CODE_ID ELSE 0 END C4  ,
			                CASE WHEN ( Extent3.POST_CODE_ID IS NOT NULL ) THEN Extent3.POST_CODE ELSE ''END C5  ,
			                CASE WHEN ( Extent1.AREA_ID IS NOT NULL ) THEN Extent1.AREA_ID   ELSE 0 END C6  ,
			                CASE WHEN ( Extent4.AREA_ID IS NOT NULL ) THEN Extent4.AREA_NAME  ELSE '' END C7  ,
			                CASE WHEN ( Extent1.STATE_ID IS NOT NULL ) THEN Extent1.STATE_ID    ELSE 0 END C8  ,
			                CASE WHEN ( Extent5.STATE_ID IS NOT NULL ) THEN Extent5.NAME     ELSE '' END C9  ,
			                CASE WHEN ( Extent1.CNTY_ID IS NOT NULL ) THEN Extent1.CNTY_ID  ELSE 0 END C10  ,
			                CASE WHEN ( Extent6.CNTY_ID IS NOT NULL ) THEN Extent6.NAME  ELSE '' END C11  ,
			                CASE WHEN ( Extent1.REM IS NOT NULL ) THEN Extent1.REM   ELSE '' END C12  ,
			                CASE WHEN ( Extent1.STUS_CODE_ID IS NOT NULL ) THEN Extent1.STUS_CODE_ID  ELSE 0  END C13  ,
			                CASE WHEN ( Extent7.USER_ID IS NOT NULL ) THEN Extent7.USER_NAME ELSE ''  END C14  ,
			                CASE WHEN ( ( Extent1.CRT_DT IS NOT NULL ) AND ( Extent1.CRT_DT > TO_DATE('1900-01-01', 'YYYY-MM-DD') ) ) THEN Extent1.CRT_DT  ELSE TO_DATE('1900-01-01', 'YYYY-MM-DD') END C15  , 
			                CASE WHEN ( ( Extent1.UPD_DT IS NOT NULL ) AND ( Extent1.UPD_DT > TO_DATE('1900-01-01', 'YYYY-MM-DD') ) ) THEN Extent1.UPD_DT  ELSE '1900-01-01'  END C16  ,
			                CASE WHEN ( Extent1.UPD_USER_ID IS NOT NULL ) THEN Extent1.UPD_USER_ID  ELSE 0 END C17  ,
			                CASE WHEN ( Extent8.USER_ID IS NOT NULL ) THEN Extent8.USER_NAME  ELSE ''  END C18  
			         FROM SAL0023D Extent1
			                JOIN SYS0038M Extent2   ON Extent2.STUS_CODE_ID = Extent1.STUS_CODE_ID
			                LEFT JOIN SYS0030C Extent3   ON Extent3.POST_CODE_ID = Extent1.POST_CODE_ID
			                LEFT JOIN SYS0039M Extent4   ON Extent4.AREA_ID = Extent1.AREA_ID
			                LEFT JOIN SYS0035M Extent5   ON Extent5.STATE_ID = Extent1.STATE_ID
			                LEFT JOIN SYS0015M Extent6   ON Extent6.CNTY_ID = Extent1.CNTY_ID
			                LEFT JOIN SYS0047M Extent7   ON Extent7.USER_ID = Extent1.CRT_USER_ID
			                LEFT JOIN SYS0047M Extent8   ON Extent8.USER_ID = Extent1.UPD_USER_ID
			          WHERE  ( 8 <> Extent1.STUS_CODE_ID )
			                   AND ( Extent1.CUST_ADD_ID = #{testparam} ) AND ROWNUM <= 1 ) Limit1
     ]]>
    </select>
    <!-- customer main Contact(Customer View) -->
    <select id="selectCustomerViewMainContact" parameterType="Map" resultType="egovMap">
        <![CDATA[
			SELECT Limit1.CUST_CNTC_ID CUST_CNTC_ID  ,
			       Limit1.CUST_ID CUST_ID  ,
			       TO_CHAR(Limit1.C1, 'DD-MM-YYYY') C1  , -- DATE
			       Limit1.CRT_USER_ID CRT_USER_ID  ,
			       Limit1.C2 C2  ,
			       Limit1.C3 C3  ,
			       TO_CHAR(Limit1.C4, 'DD-MM-YYYY') C4  , -- DATE
			       Limit1.C5 C5  ,
			       Limit1.C6 C6  ,
			       Limit1.C7 C7  ,
			       Limit1.C8 C8  ,
			       Limit1.C9 C9  ,
			       Limit1.C10 C10  ,
			       Limit1.C11 C11  ,
			       Limit1.C12 C12  ,
			       Limit1.C13 C13  ,
			       Limit1.C14 C14  ,
			       Limit1.NAME NAME  ,
			       Limit1.C15 C15  ,
			       Limit1.C16 C16  ,
			       Limit1.C17 C17  ,
			       Limit1.C18 C18  ,
			       Limit1.C19 C19  ,
			       Limit1.C20 C20  ,
			       Limit1.C21 C21  ,
			       TO_CHAR(Limit1.C22, 'DD-MM-YYYY') C22   -- DATE
			FROM ( SELECT Extent1.CUST_CNTC_ID CUST_CNTC_ID  ,
			                Extent1.CUST_ID CUST_ID  ,
			                Extent1.CRT_USER_ID CRT_USER_ID  ,
			                Extent2.NAME NAME  ,
			                CASE  WHEN ( ( Extent1.CRT_DT IS NOT NULL ) AND ( Extent1.CRT_DT > '1900-01-01' ) ) THEN TO_DATE(Extent1.CRT_DT, 'YYYY-MM-DD') ELSE TO_DATE('1900-01-01', 'YYYY-MM-DD') END C1  , -- DATE
			                CASE WHEN ( Extent3.USER_ID IS NOT NULL ) THEN Extent3.USER_NAME ELSE '' END C2  ,
			                CASE WHEN ( Extent1.DEPT IS NOT NULL ) THEN LTRIM(RTRIM(Extent1.DEPT)) ELSE NULL END C3  , --CLOB TYPE >> ELSE 처리 NULL or EMPTY_CLOB()
			                CASE WHEN ( ( Extent1.DOB IS NOT NULL ) AND ( Extent1.DOB >'1900-01-01' ) ) THEN Extent1.DOB ELSE TO_DATE('1900-01-01', 'YYYY-MM-DD')  END C4  , -- DATE
			                CASE WHEN ( Extent1.EMAIL IS NOT NULL ) THEN LTRIM(RTRIM(Extent1.EMAIL)) ELSE '' END C5  ,
			                CASE WHEN ( Extent1.GENDER IS NOT NULL ) THEN LTRIM(RTRIM(Extent1.GENDER)) ELSE '' END C6  ,
			                CASE WHEN ( Extent1.CUST_INITIAL IS NOT NULL ) THEN Extent1.CUST_INITIAL ELSE 0  END C7  ,
			                CASE WHEN ( Extent5.CODE_ID IS NOT NULL ) THEN Extent5.CODE ELSE ' ' END C8  ,
			                CASE WHEN ( Extent1.NAME IS NOT NULL ) THEN LTRIM(RTRIM(Extent1.NAME)) ELSE '' END C9  ,
			                CASE WHEN ( Extent1.NRIC IS NOT NULL ) THEN LTRIM(RTRIM(Extent1.NRIC))ELSE '' END C10  ,
			                CASE WHEN ( Extent1.POS IS NOT NULL ) THEN LTRIM(RTRIM(Extent1.POS)) ELSE '' END C11  ,
			                CASE WHEN ( Extent1.RACE_ID IS NOT NULL ) THEN Extent1.RACE_ID ELSE 0  END C12  ,
			                CASE WHEN ( Extent6.CODE_ID IS NOT NULL ) THEN Extent6.CODE_NAME ELSE ''END C13  ,
			                CASE WHEN ( Extent1.STUS_CODE_ID IS NOT NULL ) THEN Extent1.STUS_CODE_ID ELSE 0 END C14  ,
			                CASE WHEN ( Extent1.TELF IS NOT NULL ) THEN LTRIM(RTRIM(Extent1.TELF)) ELSE '' END C15  ,
			                CASE WHEN ( Extent1.TEL_M1 IS NOT NULL ) THEN LTRIM(RTRIM(Extent1.TEL_M1)) ELSE ''  END C16  ,
			                CASE WHEN ( Extent1.TEL_O IS NOT NULL ) THEN LTRIM(RTRIM(Extent1.TEL_O))  ELSE '' END C17  ,
			                CASE WHEN ( Extent1.TEL_R IS NOT NULL ) THEN LTRIM(RTRIM(Extent1.TEL_R))ELSE '' END C18  ,
			                CASE WHEN ( Extent1.EXT IS NOT NULL ) THEN LTRIM(RTRIM(Extent1.EXT)) ELSE '' END C19  ,
			                CASE WHEN ( Extent1.UPD_USER_ID IS NOT NULL ) THEN Extent1.UPD_USER_ID  ELSE 0 END C20  ,
			                CASE WHEN ( Extent4.USER_ID IS NOT NULL ) THEN Extent4.USER_NAME  ELSE '' END C21  ,
			                CASE WHEN ( ( Extent1.UPD_DT IS NOT NULL ) AND ( Extent1.UPD_DT > '1900-01-01' ) ) THEN Extent1.UPD_DT ELSE TO_DATE('1900-01-01', 'YYYY-MM-DD')  END C22  -- DATE
			         FROM SAL0027D Extent1
			                JOIN SYS0038M Extent2   ON Extent2.STUS_CODE_ID = Extent1.STUS_CODE_ID
			                LEFT JOIN SYS0047M Extent3   ON Extent3.USER_ID = Extent1.CRT_USER_ID
			                LEFT JOIN SYS0047M Extent4   ON Extent4.USER_ID = Extent1.UPD_USER_ID
			                LEFT JOIN SYS0013M Extent5   ON Extent5.CODE_ID = Extent1.CUST_INITIAL 
			                LEFT JOIN SYS0013M Extent6   ON Extent6.CODE_ID = Extent1.RACE_ID
			          WHERE  ( 8 <> Extent1.STUS_CODE_ID )
			                   AND ( Extent1.CUST_CNTC_ID = #{testparam} ) AND ROWNUM <= 1 ) Limit1
          ]]>
    </select>
   
    <select id="selectCustomerAddressJsonList" parameterType="Map" resultType="egovMap">
       <![CDATA[    
        SELECT Project1.CUST_ADD_ID CUST_ADD_ID  ,
                        Project1.CUST_ID CUST_ID  ,
                        Project1.CRT_USER_ID CRT_USER_ID  ,
                        Project1.NAME NAME  ,
                        Project1.C1 C1  ,
                        Project1.C2 C2  ,
                        Project1.C3 C3  ,
                        Project1.C4 C4  ,
                        Project1.C5 C5  ,
                        Project1.C6 C6  ,
                        Project1.C7 C7  ,
                        Project1.C8 C8  ,
                        Project1.C9 C9  ,
                        Project1.C10 C10  ,
                        Project1.C11 C11  ,
                        Project1.C12 C12  ,
                        Project1.C13 C13  ,
                        Project1.C14 C14  ,
                        Project1.C15 C15  ,
                        Project1.C16 C16  ,
                        Project1.C17 C17  ,
                        Project1.C18 C18
                        
                 FROM ( SELECT Extent1.CUST_ADD_ID CUST_ADD_ID  ,
                               Extent1.CUST_ID CUST_ID  ,
                               Extent1.CRT_USER_ID CRT_USER_ID  ,
                               Extent2.NAME NAME  ,
                               CASE 
                                    WHEN ( Extent1.ADD1 IS NOT NULL ) THEN LTRIM(RTRIM(Extent1.ADD1))
                               ELSE ' '
                                  END C1  ,
                               CASE 
                                    WHEN ( Extent1.ADD2 IS NOT NULL ) THEN LTRIM(RTRIM(Extent1.ADD2))
                               ELSE ' '
                                  END C2  ,
                               CASE 
                                    WHEN ( Extent1.ADD3 IS NOT NULL ) THEN LTRIM(RTRIM(Extent1.ADD3))
                               ELSE ' '
                                  END C3  ,
                               CASE 
                                    WHEN ( Extent1.POST_CODE_ID IS NOT NULL ) THEN Extent1.POST_CODE_ID
                               ELSE 0
                                  END C4  ,
                               CASE 
                                    WHEN ( Extent3.POST_CODE_ID IS NOT NULL ) THEN Extent3.POST_CODE
                               ELSE ' '
                                  END C5  ,
                               CASE 
                                    WHEN ( Extent1.AREA_ID IS NOT NULL ) THEN Extent1.AREA_ID
                               ELSE 0
                                  END C6  ,
                               CASE 
                                    WHEN ( Extent4.AREA_ID IS NOT NULL ) THEN Extent4.AREA_NAME
                               ELSE ' '
                                  END C7  ,
                               CASE 
                                    WHEN ( Extent1.STATE_ID IS NOT NULL ) THEN Extent1.STATE_ID
                               ELSE 0
                                  END C8  ,
                               CASE 
                                    WHEN ( Extent5.STATE_ID IS NOT NULL ) THEN Extent5.NAME
                               ELSE ' '
                                  END C9  ,
                               CASE 
                                    WHEN ( Extent1.CNTY_ID IS NOT NULL ) THEN Extent1.CNTY_ID
                               ELSE 0
                                  END C10  ,
                               CASE 
                                    WHEN ( Extent6.CNTY_ID IS NOT NULL ) THEN Extent6.NAME
                               ELSE ' '
                                  END C11  ,
                               CASE 
                                    WHEN ( Extent1.REM IS NOT NULL ) THEN Extent1.REM
                               ELSE ' '
                                  END C12  ,
                               CASE 
                                    WHEN ( Extent1.STUS_CODE_ID IS NOT NULL ) THEN Extent1.STUS_CODE_ID
                               ELSE 0
                                  END C13  ,
                               CASE 
                                    WHEN ( Extent7.USER_ID IS NOT NULL ) THEN Extent7.USER_NAME
                               ELSE ' '
                                  END C14  ,
                               CASE 
                                    WHEN ( ( Extent1.CRT_DT IS NOT NULL )
                                      AND ( Extent1.CRT_DT > TO_DATE('19000101','YYYYMMDD') ) ) THEN Extent1.CRT_DT
                               ELSE TO_DATE('19000101','YYYYMMDD')
                                  END C15  ,
                               CASE 
                                    WHEN ( ( Extent1.UPD_DT IS NOT NULL )
                                      AND ( Extent1.UPD_DT > TO_DATE('19000101','YYYYMMDD') ) ) THEN Extent1.UPD_DT
                               ELSE '1900-01-01 00:00:00'
                                  END C16  ,
                               CASE 
                                    WHEN ( Extent1.UPD_USER_ID IS NOT NULL ) THEN Extent1.UPD_USER_ID
                               ELSE 0
                                  END C17  ,
                               CASE 
                                    WHEN ( Extent8.USER_ID IS NOT NULL ) THEN Extent8.USER_NAME
                               ELSE ' '
                                  END C18  
                        FROM SAL0023D Extent1
                               JOIN SYS0038M Extent2   ON Extent2.STUS_CODE_ID = Extent1.STUS_CODE_ID
                               LEFT JOIN SYS0030C Extent3   ON Extent3.POST_CODE_ID = Extent1.POST_CODE_ID
                               LEFT JOIN SYS0039M Extent4   ON Extent4.AREA_ID = Extent1.AREA_ID
                               LEFT JOIN SYS0035M Extent5   ON Extent5.STATE_ID = Extent1.STATE_ID
                               LEFT JOIN SYS0015M Extent6   ON Extent6.CNTY_ID = Extent1.CNTY_ID
                               LEFT JOIN SYS0047M Extent7   ON Extent7.USER_ID = Extent1.CRT_USER_ID
                               LEFT JOIN SYS0047M Extent8   ON Extent8.USER_ID = Extent1.UPD_USER_ID
                         WHERE  ( 8 <> Extent1.STUS_CODE_ID )
                                  AND ( Extent1.CUST_ID = #{testparam} ) ) Project1
         
         ORDER BY Project1.Name DESC
		 ]]>
    </select>
    <select id="selectCustomerContactJsonList" parameterType="Map" resultMap="contactClobMap">
        <![CDATA[   
          SELECT Project1.CUST_CNTC_ID CUST_CNTC_ID  ,
                     Project1.CUST_ID CUST_ID  ,
                     Project1.CRT_USER_ID CRT_USER_ID  ,
                     Project1.NAME NAME  ,
                     Project1.C1 C1  ,
                     Project1.C2 C2  ,
                     Project1.C3 C3  ,
                     Project1.C4 C4  ,
                     Project1.C5 C5  ,
                     Project1.C6 C6  ,
                     Project1.C7 C7  ,
                     Project1.C8 C8  ,
                     Project1.C9 C9  ,
                     Project1.C10 C10  ,
                     Project1.C11 C11  ,
                     Project1.C12 C12  ,
                     Project1.C13 C13  ,
                     Project1.C14 C14  ,
                     Project1.C15 C15  ,
                     Project1.C16 C16  ,
                     Project1.C17 C17  ,
                     Project1.C18 C18  ,
                     Project1.C19 C19  ,
                     Project1.C20 C20  ,
                     Project1.C21 C21  ,
                     Project1.C22 C22                       
            FROM ( SELECT   Extent1.CUST_CNTC_ID CUST_CNTC_ID  ,
                                    Extent1.CUST_ID CUST_ID  ,
                                    Extent1.CRT_USER_ID CRT_USER_ID  ,
                                    Extent2.NAME NAME  ,
                                    CASE WHEN ( ( Extent1.CRT_DT IS NOT NULL ) AND ( Extent1.CRT_DT > TO_DATE('1900-01-01', 'YYYY-MM-DD') ) ) THEN Extent1.CRT_DT ELSE TO_DATE('1900-01-01', 'YYYY-MM-DD') END C1  ,
                                    CASE WHEN ( Extent3.USER_ID IS NOT NULL ) THEN Extent3.USER_NAME ELSE '' END C2  ,
                                    CASE WHEN ( Extent1.DEPT IS NOT NULL ) THEN LTRIM(RTRIM(Extent1.DEPT)) ELSE NULL END C3  ,  -- CLOB NULL 
                                    CASE WHEN ( ( Extent1.DOB IS NOT NULL ) AND ( Extent1.DOB > TO_DATE('1900-01-01', 'YYYY-MM-DD') ) ) THEN Extent1.DOB ELSE TO_DATE('1900-01-01', 'YYYY-MM-DD') END C4 ,
                                    CASE WHEN ( Extent1.EMAIL IS NOT NULL ) THEN LTRIM(RTRIM(Extent1.EMAIL)) ELSE '' END C5,
                                    CASE WHEN ( Extent1.GENDER IS NOT NULL ) THEN LTRIM(RTRIM(Extent1.GENDER)) ELSE '' END C6,
                                    CASE WHEN ( Extent1.CUST_INITIAL IS NOT NULL ) THEN Extent1.CUST_INITIAL ELSE 0 END C7  , 
                                    CASE WHEN ( Extent5.CODE_ID IS NOT NULL ) THEN Extent5.CODE ELSE '' END C8  ,
                                    CASE WHEN ( Extent1.NAME IS NOT NULL ) THEN LTRIM(RTRIM(Extent1.NAME))ELSE '' END C9  ,
                                    CASE WHEN ( Extent1.NRIC IS NOT NULL ) THEN LTRIM(RTRIM(Extent1.NRIC)) ELSE '' END C10  ,
                                    CASE WHEN ( Extent1.POS IS NOT NULL ) THEN LTRIM(RTRIM(Extent1.POS)) ELSE '' END C11  ,
                                    CASE WHEN ( Extent1.RACE_ID IS NOT NULL ) THEN Extent1.RACE_ID ELSE 0 END C12  ,
                                    CASE WHEN ( Extent6.CODE_ID IS NOT NULL ) THEN Extent6.CODE_NAME ELSE '' END C13  ,
                                    CASE WHEN ( Extent1.STUS_CODE_ID IS NOT NULL ) THEN Extent1.STUS_CODE_ID ELSE 0 END C14  ,
                                    CASE WHEN ( Extent1.TELF IS NOT NULL ) THEN LTRIM(RTRIM(Extent1.TELF)) ELSE '' END C15  ,
                                    CASE WHEN ( Extent1.TEL_M1 IS NOT NULL ) THEN LTRIM(RTRIM(Extent1.TEL_M1)) ELSE '' END C16  ,
                                    CASE WHEN ( Extent1.TEL_O IS NOT NULL ) THEN LTRIM(RTRIM(Extent1.TEL_O)) ELSE '' END C17  ,
                                    CASE WHEN ( Extent1.TEL_R IS NOT NULL ) THEN LTRIM(RTRIM(Extent1.TEL_R)) ELSE '' END C18  ,
                                    CASE WHEN ( Extent1.EXT IS NOT NULL ) THEN LTRIM(RTRIM(Extent1.EXT)) ELSE '' END C19  ,
                                    CASE WHEN ( Extent1.UPD_USER_ID IS NOT NULL ) THEN Extent1.UPD_USER_ID ELSE 0 END C20  ,
                                    CASE WHEN ( Extent4.USER_ID IS NOT NULL ) THEN Extent4.USER_NAME ELSE '' END C21  ,
                                    CASE WHEN ( ( Extent1.UPD_DT IS NOT NULL ) AND ( Extent1.UPD_DT > TO_DATE('1900-01-01', 'YYYY-MM-DD') ) ) THEN Extent1.UPD_DT ELSE TO_DATE('1900-01-01', 'YYYY-MM-DD') END C22  
                           FROM SAL0027D Extent1
                                JOIN SYS0038M Extent2   ON Extent2.STUS_CODE_ID = Extent1.STUS_CODE_ID
                                LEFT JOIN SYS0047M Extent3   ON Extent3.USER_ID = Extent1.CRT_USER_ID
                                LEFT JOIN SYS0047M Extent4   ON Extent4.USER_ID = Extent1.UPD_USER_ID
                                LEFT JOIN SYS0013M Extent5   ON Extent5.CODE_ID = Extent1.CUST_INITIAL
                                LEFT JOIN SYS0013M Extent6   ON Extent6.CODE_ID = Extent1.RACE_ID
                          WHERE 8 <> Extent1.STUS_CODE_ID
                            AND  Extent1.CUST_ID = #{testparam}  
                    ) Project1
                ORDER BY Project1.Name DESC
                ]]>
    </select>
    <select id="selectCustomerBankAccJsonList" parameterType="Map" resultMap="bankClobMap">
        <![CDATA[   
        SELECT  Project1.CUST_ACC_ID CUST_ACC_ID  ,
			        Project1.CUST_ID CUST_ID  ,
			        Project1.C1 C1  ,
			        Project1.C2 C2  ,
			        Project1.C3 C3  ,
			        Project1.C4 C4  ,
			        Project1.C5 C5  ,
			        Project1.C6 C6  ,
			        Project1.C7 C7  ,
			        Project1.C8 C8  ,
			        Project1.C9 C9  ,
			        Project1.C10 C10  ,
			        Project1.C11 C11  ,
			        Project1.C12 C12  ,
			        Project1.C13 C13  ,
			        Project1.C14 C14  ,
			        Project1.C15 C15  ,
			        Project1.C16 C16  ,
			        Project1.C17 C17  
		FROM   ( SELECT Project1.CUST_ACC_ID CUST_ACC_ID  ,
				                Project1.CUST_ID CUST_ID  ,
				                Project1.C1 C1  ,
				                Project1.C2 C2  ,
				                Project1.C3 C3  ,
				                Project1.C4 C4  ,
				                Project1.C5 C5  ,
				                Project1.C6 C6  ,
				                Project1.C7 C7  ,
				                Project1.C8 C8  ,
				                Project1.C9 C9  ,
				                Project1.C10 C10  ,
				                Project1.C11 C11  ,
				                Project1.C12 C12  ,
				                Project1.C13 C13  ,
				                Project1.C14 C14  ,
				                Project1.C15 C15  ,
				                Project1.C16 C16  ,
				                Project1.C17 C17  
		            
		          FROM ( SELECT Extent1.CUST_ACC_ID CUST_ACC_ID  ,
				                        Extent1.CUST_ID CUST_ID  ,
				                        CASE WHEN ( Extent1.CUST_ACC_NO IS NOT NULL ) THEN Extent1.CUST_ACC_NO ELSE ''  END C1  ,
				                        CASE WHEN ( Extent1.CUST_ENCRYPT_ACC_NO IS NOT NULL ) THEN Extent1.CUST_ENCRYPT_ACC_NO ELSE NULL  END C2  , --NULL
				                        CASE WHEN ( Extent1.CUST_ACC_BANK_ID IS NOT NULL ) THEN Extent1.CUST_ACC_BANK_ID  ELSE 0  END C3  ,
				                        CASE WHEN ( Extent2.BANK_ID IS NOT NULL ) THEN Extent2.CODE  ELSE '' END C4  ,
				                        CASE WHEN ( Extent2.BANK_ID IS NOT NULL ) THEN Extent2.NAME ELSE ''  END C5  ,
				                        CASE WHEN ( Extent1.CUST_ACC_BANK_BRNCH IS NOT NULL ) THEN Extent1.CUST_ACC_BANK_BRNCH   ELSE NULL END C6  , -- NULL
				                        CASE WHEN ( Extent1.CUST_ACC_OWNER IS NOT NULL ) THEN Extent1.CUST_ACC_OWNER ELSE NULL END C7  , -- NULL
				                        CASE WHEN ( Extent1.CUST_ACC_STUS_ID IS NOT NULL ) THEN Extent1.CUST_ACC_STUS_ID  ELSE 0  END C8  ,
				                        CASE WHEN ( Extent1.CUST_ACC_TYPE_ID IS NOT NULL ) THEN Extent1.CUST_ACC_TYPE_ID  ELSE 0 END C9  ,
				                        CASE WHEN ( Extent3.CODE_ID IS NOT NULL ) THEN Extent3.CODE_NAME ELSE '' END C10  ,
				                        CASE WHEN ( Extent1.CUST_ACC_REM IS NOT NULL ) THEN Extent1.CUST_ACC_REM ELSE NULL END C11  , -- NULL
				                        CASE WHEN ( Extent1.CUST_ACC_CRT_USER_ID IS NOT NULL ) THEN Extent1.CUST_ACC_CRT_USER_ID ELSE 0 END C12  ,
				                        CASE WHEN ( Extent1.CUST_ACC_UPD_USER_ID IS NOT NULL ) THEN Extent1.CUST_ACC_UPD_USER_ID ELSE 0 END C13  ,
				                        CASE WHEN ( Extent1.CUST_ACC_CRT_DT IS NOT NULL ) THEN Extent1.CUST_ACC_CRT_DT ELSE TO_DATE('1900-01-01', 'YYYY-MM-DD')  END C14  ,
				                        CASE WHEN ( Extent1.CUST_ACC_UPD_DT IS NOT NULL ) THEN Extent1.CUST_ACC_UPD_DT ELSE TO_DATE('1900-01-01', 'YYYY-MM-DD')  END C15  ,
				                        CASE WHEN ( Extent4.USER_ID IS NOT NULL ) THEN Extent4.USER_NAME ELSE '' END C16  ,
				                        CASE WHEN ( Extent5.USER_ID IS NOT NULL ) THEN Extent5.USER_NAME ELSE '' END C17  
		                   FROM SAL0022D Extent1
			                        LEFT JOIN SYS0004M Extent2   ON Extent2.BANK_ID = Extent1.CUST_ACC_BANK_ID
			                        LEFT JOIN SYS0013M Extent3   ON Extent3.CODE_ID = Extent1.CUST_ACC_TYPE_ID
			                        LEFT JOIN SYS0047M Extent4   ON Extent4.USER_ID = Extent1.CUST_ACC_CRT_USER_ID
			                        LEFT JOIN SYS0047M Extent5   ON Extent5.USER_ID = Extent1.CUST_ACC_UPD_USER_ID
		                  WHERE  8 <> Extent1.CUST_ACC_STUS_ID 
		                      AND  Extent1.CUST_ID = #{testparam}) Project1 
		         ) Project1 
		ORDER BY Project1.CUST_ACC_ID ASC 
		 ]]>   
    </select>
    <select id="selectCustomerCreditCardJsonList" parameterType="Map" resultMap="cardClobMap">
   <![CDATA[   
		SELECT   Project1.CUST_CRC_ID CUST_CRC_ID  ,
		                Project1.C1 C1  ,
		                Project1.C2 C2  ,
		                Project1.C3 C3  ,
		                Project1.C4 C4  ,
		                Project1.C5 C5  ,
		                Project1.C6 C6  ,
		                Project1.C7 C7  ,
		                Project1.C8 C8  ,
		                Project1.CUST_ENCRYPT_CRC_NO CUST_ENCRYPT_CRC_NO  ,
		                Project1.C9 C9  ,
		                Project1.C10 C10  ,
		                Project1.C11 C11  ,
		                Project1.C12 C12  ,
		                Project1.C13 C13  ,
		                Project1.C14 C14  ,
		                Project1.C15 C15  ,
		                Project1.C16 C16  ,
		                Project1.C17 C17  ,
		                Project1.C18 C18  ,
		                Project1.C19 C19  ,
		                Project1.CODE_NAME CODE_NAME  
		FROM (  SELECT  Project1.CUST_CRC_ID CUST_CRC_ID  ,
		                Project1.CUST_ENCRYPT_CRC_NO CUST_ENCRYPT_CRC_NO  ,
		                Project1.CODE_NAME CODE_NAME  ,
		                Project1.C1 C1  ,
		                Project1.C2 C2  ,
		                Project1.C3 C3  ,
		                Project1.C4 C4  ,
		                Project1.C5 C5  ,
		                Project1.C6 C6  ,
		                Project1.C7 C7  ,
		                Project1.C8 C8  ,
		                Project1.C9 C9  ,
		                Project1.C10 C10  ,
		                Project1.C11 C11  ,
		                Project1.C12 C12  ,
		                Project1.C13 C13  ,
		                Project1.C14 C14  ,
		                Project1.C15 C15  ,
		                Project1.C16 C16  ,
		                Project1.C17 C17  ,
		                Project1.C18 C18  ,
		                Project1.C19 C19                    
		         FROM ( SELECT Extent1.CUST_CRC_ID CUST_CRC_ID  ,
		                       Extent1.CUST_ENCRYPT_CRC_NO CUST_ENCRYPT_CRC_NO  ,
		                       Extent6.CODE_NAME CODE_NAME  ,
		                       CASE WHEN ( Extent1.CUST_ID IS NOT NULL ) THEN Extent1.CUST_ID ELSE 0 END C1  ,
		                       CASE WHEN ( Extent1.CUST_CRC_BANK_ID IS NOT NULL ) THEN Extent1.CUST_CRC_BANK_ID ELSE 0 END C2  ,
		                       CASE WHEN ( Extent2.BANK_ID IS NOT NULL ) THEN Extent2.CODE ELSE '' END C3  ,
		                       CASE WHEN ( Extent2.BANK_ID IS NOT NULL ) THEN Extent2.NAME ELSE '' END C4  ,
		                       CASE WHEN ( Extent1.CUST_CRC_EXPR IS NOT NULL ) THEN Extent1.CUST_CRC_EXPR ELSE '' END C5  ,
		                       CASE WHEN ( Extent1.CUST_CRC_OWNER IS NOT NULL ) THEN Extent1.CUST_CRC_OWNER ELSE '' END C6  ,
		                       CASE WHEN ( Extent1.CUST_CRC_NO IS NOT NULL ) THEN Extent1.CUST_CRC_NO ELSE NULL END C7  ,
		                       CASE WHEN ( Extent1.CUST_ORI_CRC_NO IS NOT NULL ) THEN Extent1.CUST_ORI_CRC_NO ELSE NULL END C8  ,
		                       CASE WHEN ( Extent1.CUST_CRC_TYPE_ID IS NOT NULL ) THEN Extent1.CUST_CRC_TYPE_ID ELSE 0 END C9  ,
		                       CASE WHEN ( Extent3.CODE_ID IS NOT NULL ) THEN Extent3.CODE_NAME ELSE '' END C10  ,
		                       CASE WHEN ( Extent1.CUST_CRC_STUS_ID IS NOT NULL ) THEN Extent1.CUST_CRC_STUS_ID ELSE 0 END C11  ,
		                       CASE WHEN ( Extent1.CUST_CRC_CRT_DT IS NOT NULL ) THEN Extent1.CUST_CRC_CRT_DT ELSE TO_DATE('1900-01-01', 'YYYY-MM-DD') END C12  ,
		                       CASE WHEN ( Extent1.CUST_CRC_UPD_DT IS NOT NULL ) THEN Extent1.CUST_CRC_UPD_DT ELSE TO_DATE('1900-01-01', 'YYYY-MM-DD') END C13  ,
		                       CASE WHEN ( Extent1.CUST_CRC_REM IS NOT NULL ) THEN Extent1.CUST_CRC_REM ELSE NULL END C14  ,
		                       CASE WHEN ( Extent1.CUST_CRC_CRT_USER_ID IS NOT NULL ) THEN Extent1.CUST_CRC_CRT_USER_ID ELSE 0 END C15  ,
		                       CASE WHEN ( Extent1.CUST_CRC_UPD_USER_ID IS NOT NULL ) THEN Extent1.CUST_CRC_UPD_USER_ID ELSE 0 END C16  ,
		                       CASE WHEN ( Extent4.USER_ID IS NOT NULL ) THEN Extent4.USER_NAME ELSE '' END C17  ,
		                       CASE WHEN ( Extent5.USER_ID IS NOT NULL ) THEN Extent5.USER_NAME ELSE '' END C18  ,
		                       CASE WHEN ( Extent1.CARD_TYPE_ID IS NOT NULL ) THEN Extent1.CARD_TYPE_ID ELSE 0 END C19  
		                FROM SAL0028D Extent1
		                       LEFT JOIN SYS0004M Extent2 ON Extent2.BANK_ID = Extent1.CUST_CRC_BANK_ID
		                       LEFT JOIN SYS0013M Extent3 ON Extent3.CODE_ID = Extent1.CUST_CRC_TYPE_ID
		                       LEFT JOIN SYS0047M Extent4 ON Extent4.USER_ID = Extent1.CUST_CRC_CRT_USER_ID
		                       LEFT JOIN SYS0047M Extent5 ON Extent5.USER_ID = Extent1.CUST_CRC_UPD_USER_ID
		                       JOIN SYS0013M Extent6 ON Extent6.CODE_ID = Extent1.CARD_TYPE_ID
		                 WHERE  8 <> Extent1.CUST_CRC_STUS_ID
		                          AND  CASE WHEN Extent1.CUST_ID IS NOT NULL THEN Extent1.CUST_ID ELSE 0 END = #{testparam}
		                ) Project1 
		    ) Project1 
		  ORDER BY Project1.CUST_CRC_ID ASC
         ]]>   
    </select>
    <select id="selectCustomerOwnOrderJsonList" parameterType="Map" resultType="egovMap">
	    <![CDATA[  
		    SELECT   Project6.C1 C1  ,
	                Project6.C2 C2  ,
	                Project6.C3 C3  ,
	                Project6.C4 C4  ,
	                Project6.C5 C5  ,
	                Project6.C6 C6  ,
	                Project6.C7 C7  ,
	                Project6.C8 C8  ,
	                Project6.C9 C9  ,
	                Project6.C10 C10  ,
	                Project6.C11 C11  ,
	                Project6.C12 C12  ,
	                Project6.C13 C13  ,
	                Project6.C14 C14  ,
	                Project6.C15 C15  ,
	                Project6.C16 C16  
	         FROM ( SELECT  Project6.C1 C1  ,
	                        Project6.C2 C2  ,
	                        Project6.C3 C3  ,
	                        Project6.C4 C4  ,
	                        Project6.C5 C5  ,
	                        Project6.C6 C6  ,
	                        Project6.C7 C7  ,
	                        Project6.C8 C8  ,
	                        Project6.C9 C9  ,
	                        Project6.C10 C10  ,
	                        Project6.C11 C11  ,
	                        Project6.C12 C12  ,
	                        Project6.C13 C13  ,
	                        Project6.C14 C14  ,
	                        Project6.C15 C15  ,
	                        Project6.C16 C16                  
	                 FROM ( SELECT Distinct1.C1 C1  ,
	                               Distinct1.C2 C2  ,
	                               Distinct1.C3 C3  ,
	                               Distinct1.C4 C4  ,
	                               Distinct1.C5 C5  ,
	                               Distinct1.C6 C6  ,
	                               Distinct1.C7 C7  ,
	                               Distinct1.C8 C8  ,
	                               Distinct1.C9 C9  ,
	                               Distinct1.C10 C10  ,
	                               Distinct1.C11 C11  ,
	                               Distinct1.C12 C12  ,
	                               Distinct1.C13 C13  ,
	                               Distinct1.C14 C14  ,
	                               Distinct1.C15 C15  ,
	                               Distinct1.C16 C16  
	                        FROM ( SELECT DISTINCT UnionAll1.C1 C1  ,
	                                               UnionAll1.SALES_ORD_ID C2  ,
	                                               UnionAll1.SALES_ORD_NO C3  ,
	                                               UnionAll1.C2 C4  ,
	                                               UnionAll1.C3 C5  ,
	                                               UnionAll1.Code C6  , 
	                                               UnionAll1.CODE_NAME C7  , 
	                                               UnionAll1.C4 C8  ,
	                                               UnionAll1.Code1 C9  ,
	                                               UnionAll1.C5 C10  ,
	                                               UnionAll1.STK_CODE C11  , 
	                                               UnionAll1.STK_DESC C12  ,
	                                               UnionAll1.C6 C13  ,
	                                               UnionAll1.Code2 C14  ,
	                                               UnionAll1.C7 C15  ,
	                                               UnionAll1.C8 C16  
	                               FROM ( 
	                                    SELECT 1 C1  ,
	                                             GroupBy1.K1 SALES_ORD_ID  ,
	                                             GroupBy1.K2 SALES_ORD_NO  ,
	                                             GroupBy1.K9 C2  ,
	                                             GroupBy1.K10 C3  ,
	                                             GroupBy1.K5 CODE  ,
	                                             GroupBy1.K6 CODE_NAME  ,
	                                             GroupBy1.K11 C4  ,
	                                             GroupBy1.K7 CODE1  ,
	                                             GroupBy1.K12 C5  ,
	                                             GroupBy1.K3 STK_CODE  ,
	                                             GroupBy1.K4 STK_DESC  ,
	                                             GroupBy1.K13 C6  ,
	                                             GroupBy1.K8 CODE2  ,
	                                             GroupBy1.K14 C7  ,
	                                             CASE WHEN ( GroupBy1.A1 IS NOT NULL ) THEN GroupBy1.A2 ELSE UTILS.CONVERT_TO_FLOAT(0,53) END C8  
	                                      FROM ( SELECT Project1.SALES_ORD_ID K1  ,
	                                                    Project1.SALES_ORD_NO K2  ,
	                                                    Project1.STK_CODE K3  ,
	                                                    Project1.STK_DESC K4  ,
	                                                    Project1.CODE K5  ,
	                                                    Project1.CODE_NAME K6  ,
	                                                    Project1.CODE1 K7  ,
	                                                    Project1.CODE2 K8  ,
	                                                    Project1.C1 K9  ,
	                                                    Project1.C2 K10  ,
	                                                    Project1.C3 K11  ,
	                                                    Project1.C4 K12  ,
	                                                    Project1.C5 K13  ,
	                                                    Project1.C6 K14  ,
	                                                    SUM(Project1.RENT_AMT)  A1  ,
	                                                    SUM(Project1.RENT_AMT)  A2  
	                                             FROM ( SELECT Extent1.SALES_ORD_ID SALES_ORD_ID  ,
	                                                           Extent1.SALES_ORD_NO SALES_ORD_NO  ,
	                                                           Extent3.STK_CODE STK_CODE  ,
	                                                           Extent3.STK_DESC STK_DESC  ,
	                                                           Extent4.CODE CODE  ,
	                                                           Extent4.CODE_NAME CODE_NAME  ,
	                                                           Extent5.CODE CODE1  ,
	                                                           Extent7.CODE CODE2  ,
	                                                           Extent9.RENT_AMT RENT_AMT  ,
	                                                           CASE WHEN ( Extent1.SALES_DT IS NOT NULL ) THEN Extent1.SALES_DT ELSE TO_DATE('1900-01-01' , 'YYYY-MM-DD') END C1  ,
	                                                           CASE  WHEN ( Extent1.APP_TYPE_ID IS NOT NULL ) THEN Extent1.APP_TYPE_ID ELSE 0 END C2  ,
	                                                           CASE  WHEN ( Extent1.STUS_CODE_ID IS NOT NULL ) THEN Extent1.STUS_CODE_ID ELSE 0 END C3  ,
	                                                           CASE  WHEN ( Extent2.ITM_STK_ID IS NOT NULL ) THEN Extent2.ITM_STK_ID ELSE 0 END C4  ,
	                                                           CASE  WHEN ( Extent6.MODE_ID IS NOT NULL ) THEN Extent6.MODE_ID ELSE 0 END C5  ,
	                                                           CASE  WHEN ( Extent8.BANK_ID IS NOT NULL ) THEN Extent8.CODE ELSE '' END C6  
	                                                    FROM SAL0001D Extent1
	                                                           JOIN SAL0002D Extent2   ON Extent2.SALES_ORD_ID = Extent1.SALES_ORD_ID
	                                                           JOIN SYS0026M Extent3   ON Extent3.STK_ID = Extent2.ITM_STK_ID
	                                                           JOIN SYS0013M Extent4   ON Extent4.CODE_ID = Extent1.APP_TYPE_ID
	                                                           JOIN SYS0038M Extent5   ON Extent5.STUS_CODE_ID = Extent1.STUS_CODE_ID
	                                                           JOIN SAL0074D Extent6   ON Extent6.SALES_ORD_ID = Extent1.SALES_ORD_ID
	                                                           JOIN SYS0013M Extent7   ON Extent7.CODE_ID = Extent6.MODE_ID
	                                                           LEFT JOIN SYS0004M Extent8   ON Extent8.BANK_ID = Extent6.BANK_ID
	                                                           LEFT JOIN PAY0022D Extent9   ON Extent9.RENT_SO_ID = Extent1.SALES_ORD_ID
	                                                     WHERE  ( 8 <> Extent1.STUS_CODE_ID )
	                                                              AND ( Extent1.CUST_ID = #{testparam} ) -- CUST_ID
	                                                              AND ( 66 = Extent1.APP_TYPE_ID ) ) Project1
	                                               GROUP BY Project1.SALES_ORD_ID,Project1.SALES_ORD_NO,Project1.STK_CODE,Project1.STK_DESC,Project1.CODE,Project1.CODE_NAME,Project1.CODE1,Project1.CODE2,Project1.C1,Project1.C2,Project1.C3,Project1.C4,Project1.C5,Project1.C6 ) GroupBy1
	        UNION ALL
					        SELECT 1 C1  ,
					                 GroupBy2.K1 SALES_ORD_ID  ,
					                 GroupBy2.K2 SALES_ORD_NO  ,
					                 GroupBy2.K8 C2  ,
					                 GroupBy2.K9 C3  ,
					                 GroupBy2.K5 CODE  ,
					                 GroupBy2.K6 CODE_NAME  ,
					                 GroupBy2.K10 C4  ,
					                 GroupBy2.K7 CODE1  ,
					                 GroupBy2.K11 C5  ,
					                 GroupBy2.K3 STK_CODE  ,
					                 GroupBy2.K4 STK_DESC  ,
					                 GroupBy2.K12 C6  ,
					                 GroupBy2.K13 C7  ,
					                 GroupBy2.K14 C8  ,
					                 CASE  WHEN ( GroupBy2.A1 IS NOT NULL ) THEN GroupBy2.A2 ELSE UTILS.CONVERT_TO_FLOAT(0,53) END C9    -- UTILS.CONVERT_TO_FLOAT(0,53) // AS IS // 
					          FROM ( SELECT Project3.SALES_ORD_ID K1  ,
					                        Project3.SALES_ORD_NO K2  ,
					                        Project3.STK_CODE K3  ,
					                        Project3.STK_DESC K4  ,
					                        Project3.CODE K5  ,
					                        Project3.CODE_NAME K6  ,
					                        Project3.CODE1 K7  ,
					                        Project3.C1 K8  ,
					                        Project3.C2 K9  ,
					                        Project3.C3 K10  ,
					                        Project3.C4 K11  ,
					                        Project3.C5 K12  ,
					                        Project3.C6 K13  ,
					                        Project3.C7 K14  ,
					                        SUM(Project3.TRADE_AMT)  A1  ,
					                        SUM(Project3.TRADE_AMT)  A2  
					                 FROM ( SELECT Extent10.SALES_ORD_ID SALES_ORD_ID  ,
					                               Extent10.SALES_ORD_NO SALES_ORD_NO  ,
					                               Extent12.STK_CODE STK_CODE  ,
					                               Extent12.STK_DESC STK_DESC  ,
					                               Extent13.CODE CODE  ,
					                               Extent13.CODE_NAME CODE_NAME  ,
					                               Extent14.CODE CODE1  ,
					                               Extent15.TRADE_AMT TRADE_AMT  , 
					                               CASE WHEN ( Extent10.SALES_DT IS NOT NULL ) THEN Extent10.SALES_DT ELSE TO_DATE('1900-01-01', 'YYYY-MM-DD') END C1  ,
					                               CASE WHEN ( Extent10.APP_TYPE_ID IS NOT NULL ) THEN Extent10.APP_TYPE_ID ELSE 0 END C2  ,
					                               CASE WHEN ( Extent10.STUS_CODE_ID IS NOT NULL ) THEN Extent10.STUS_CODE_ID ELSE 0 END C3  ,
					                               CASE WHEN ( Extent11.ITM_STK_ID IS NOT NULL ) THEN Extent11.ITM_STK_ID ELSE 0 END C4  ,
					                               0 C5,
					                               ''C6,
					                               ''C7  
					                        FROM SAL0001D Extent10
					                               JOIN SAL0002D Extent11   ON Extent11.SALES_ORD_ID = Extent10.SALES_ORD_ID
					                               JOIN SYS0026M Extent12   ON Extent12.STK_ID = Extent11.ITM_STK_ID
					                               JOIN SYS0013M Extent13   ON Extent13.CODE_ID = Extent10.APP_TYPE_ID
					                               JOIN SYS0038M Extent14   ON Extent14.STUS_CODE_ID = Extent10.STUS_CODE_ID
					                               LEFT JOIN PAY0035D Extent15   ON Extent15.TRADE_SO_ID = Extent10.SALES_ORD_ID
					                         WHERE  ( 8 <> Extent10.STUS_CODE_ID )
					                                  AND ( Extent10.CUST_ID =#{testparam} ) -- CUST_ID
					                                  AND ( 66 <> Extent10.APP_TYPE_ID ) 
					                        ) Project3
					                        GROUP BY Project3.SALES_ORD_ID,Project3.SALES_ORD_NO,Project3.STK_CODE,Project3.STK_DESC,Project3.CODE,Project3.CODE_NAME,Project3.CODE1,Project3.C1,Project3.C2,Project3.C3,Project3.C4,Project3.C5,Project3.C6,Project3.C7 )
					                                 GroupBy2 ) UnionAll1 ) Distinct1 ) Project6 ) Project6            
					 ORDER BY Project6.C3 ASC	    
	     ]]>
    </select>
</mapper>