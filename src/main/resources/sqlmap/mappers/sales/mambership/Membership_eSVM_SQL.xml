<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.coway.trust.biz.sales.mambership.impl.MembershipESvmMapper">

    <select id="selectESvmListAjax" parameterType="Map" resultType="egovMap">
         SELECT ESVM.PSM_ID
		, ESVM.PSM_NO
		,COVQOU.REF_NO SA_REF_NO
		,SAL.SALES_ORD_NO
		,TO_CHAR(ESVM.CRT_DT, 'DD/MM/YYYY') CRT_DT
		,TO_CHAR( ESVM.CRT_DT, 'HH24:MI:SS AM') CRT_TM
		,ESVM.STUS
		,STS.NAME STATUS
		,CASE WHEN (ESVM.STUS = 1) THEN COVQOU.SRV_MEM_NO ELSE '' END SRV_MEM_NO
		--,ESVM.PSM_SRV_MEM_NO
		,CUST.NAME CUST_NAME
		,CRTUSR.USER_NAME CRT_USER
		,UPDUSR.USER_NAME UPD_USER
		,TO_CHAR( ESVM.UPD_DT, 'dd/mm/yyyy HH24:MI:SS AM') || ' (' || UPDUSR.USER_NAME || ')' UPD_DT
		,ESVM.STUS_REM
		,ESVM.ATCH_FILE_GRP_ID
		FROM SAL0298D ESVM
		LEFT JOIN SAL0093D QUO ON QUO.SRV_MEM_QUOT_ID = ESVM.SVM_QUOT_ID
		LEFT JOIN SAL0001D SAL ON SAL.SALES_ORD_ID = ESVM.PSM_SALES_ORD_ID
		LEFT JOIN SAL0029D CUST ON CUST.CUST_ID = SAL.CUST_ID
		LEFT JOIN SYS0047M CRTUSR ON CRTUSR.USER_ID = ESVM.CRT_USER_ID
		LEFT JOIN SYS0038M STS ON STS.STUS_CODE_ID = ESVM.STUS
		left join SYS0047M UPDUSR ON UPDUSR.USER_ID = ESVM.UPD_USER_ID
		LEFT JOIN SAL0095D COVQOU ON COVQOU.SRV_MEM_QUOT_ID = QUO.SRV_MEM_QUOT_ID
		LEFT JOIN ORG1001V T9 ON T9.MEM_CODE = CRTUSR.USER_NAME
		WHERE 1 = 1
        <if test='_memCode != null and _memCode != ""'>
           AND CRTUSR.user_name = #{_memCode}
         </if>
         <if test='arrKeyinBrnchId != null and arrKeyinBrnchId != ""'>
           AND CRTUSR.user_brnch_id IN
             <foreach item="item" collection="arrKeyinBrnchId" index="index" open="(" separator="," close=")">
               #{item}
             </foreach>
         </if>
         <if test='_reqstStartDt != null and _reqstStartDt != "" and _reqstEndDt != null and _reqstEndDt != ""'>
           AND ESVM.CRT_DT BETWEEN TO_DATE(#{_reqstStartDt}, 'DD/MM/YYYY')  AND TO_DATE(#{_reqstEndDt}, 'DD/MM/YYYY')+1
         </if>
         <if test='arrESvmStusId != null and arrESvmStusId != ""'>
           AND ESVM.STUS IN
             <foreach item="item" collection="arrESvmStusId" index="index" open="(" separator="," close=")">
               #{item, jdbcType=VARCHAR}
             </foreach>
         </if>
         <if test='arrCustType != null and arrCustType != ""'>
           AND CUST.TYPE_ID IN
             <foreach item="item" collection="arrCustType" index="index" open="(" separator="," close=")">
               #{item}
             </foreach>
         </if>
         <if test='_nric != null and _nric != ""'>
           AND UPPER(CUST.NRIC) = UPPER(#{_nric})
         </if>
         <if test='saRefNo != null and saRefNo != ""'>
           AND UPPER(COVQOU.REF_NO) = UPPER(#{saRefNo})
         </if>
         <if test='_reqstStartDt != null and _reqstStartDt != "" and _reqstEndDt != null and _reqstEndDt != "" and _reqstStartTime != null and _reqstStartTime != "" and _reqstEndTime != null and _reqstEndTime != ""'>
           AND ESVM.CRT_DT BETWEEN TO_DATE(#{_reqstStartDt} || #{_reqstStartTime}, 'dd/mm/yyyy hh24:mi')  AND TO_DATE(#{_reqstEndDt} || #{_reqstEndTime}, 'dd/mm/yyyy hh24:mi')
         </if>

         <if test='_name != null and _name != ""'>
           AND UPPER(CUST.NAME) LIKE UPPER(#{custName})||'%'
         </if>
         <if test="ordNo != '' ">
           AND SAL.SALES_ORD_NO = #{ordNo}
         </if>
         <if test="grpCode != '' ">
           AND T9.GRP_CODE = #{grpCode}
         </if>
         <if test="preSalesNopsm != '' ">
           AND ESVM.PSM_NO = #{preSalesNopsm}
         </if>
         <if test="orgCode != '' ">
           AND T9.ORG_CODE = #{orgCode}
         </if>
         <if test="deptCode != '' ">
           AND T9.DEPT_CODE = #{deptCode}
         </if>
         <if test="quotationNo != '' ">
           AND QUO.SRV_MEM_QUOT_NO = #{quotationNo}
         </if>
         <if test='memType != null and memType != ""'>
            AND CRTUSR.USER_TYPE_ID = #{memType}
         </if>
         <if test="membershipNo != '' ">
           AND COVQOU.SRV_MEM_NO = #{membershipNo}
         </if>
         order by ESVM.PSM_NO
    </select>

    <select id="selectMemberByMemberID" parameterType="Map" resultType="egovMap">
        SELECT T.MEM_ID
             , T.MEM_CODE
             , T.NAME
             , T.NRIC
             , T.MEM_TYPE
             , T.CODE_NAME
             , T.DEPT_CODE
             , T.GRP_CODE
             , T.ORG_CODE
             , T.MEM_LVL
             , T.LVL3_UP_ID
             , T.LVL2_UP_ID
             , T.LVL1_UP_ID
          FROM (
             SELECT T1.MEM_ID
                  , T1.MEM_CODE
                  , T1.MEM_TYPE
                  , T1.NAME
                  , T1.NRIC
                  , T2.CODE_NAME
                  , CASE WHEN (NOT((T3.MEM_ID IS NULL)
                               AND (T3.MEM_CODE IS NULL)
                               AND (T3.MEM_LVL IS NULL)
                               AND (T3.DEPT_CODE IS NULL)
                               AND (T3.GRP_CODE IS NULL)
                               AND (T3.ORG_CODE IS NULL)
                               AND (T3.TOP_ORG_CODE IS NULL)
                               AND (T3.MEM_UP_ID IS NULL)
                               AND (T3.LVL3_UP_ID IS NULL)
                               AND (T3.LVL2_UP_ID IS NULL)
                               AND (T3.LVL1_UP_ID IS NULL)
                               AND (T3.LVL0_UP_ID IS NULL))) THEN T3.DEPT_CODE
                         ELSE ''
                    END DEPT_CODE
                  , CASE WHEN (NOT((T3.MEM_ID IS NULL)
                               AND (T3.MEM_CODE IS NULL)
                               AND (T3.MEM_LVL IS NULL)
                               AND (T3.DEPT_CODE IS NULL)
                               AND (T3.GRP_CODE IS NULL)
                               AND (T3.ORG_CODE IS NULL)
                               AND (T3.TOP_ORG_CODE IS NULL)
                               AND (T3.MEM_UP_ID IS NULL)
                               AND (T3.LVL3_UP_ID IS NULL)
                               AND (T3.LVL2_UP_ID IS NULL)
                               AND (T3.LVL1_UP_ID IS NULL)
                               AND (T3.LVL0_UP_ID IS NULL))) THEN T3.GRP_CODE
                         ELSE ''
                    END GRP_CODE
                  , CASE WHEN (NOT((T3.MEM_ID       IS NULL)
                               AND (T3.MEM_CODE     IS NULL)
                               AND (T3.MEM_LVL      IS NULL)
                               AND (T3.DEPT_CODE    IS NULL)
                               AND (T3.GRP_CODE     IS NULL)
                               AND (T3.ORG_CODE     IS NULL)
                               AND (T3.TOP_ORG_CODE IS NULL)
                               AND (T3.MEM_UP_ID    IS NULL)
                               AND (T3.LVL3_UP_ID   IS NULL)
                               AND (T3.LVL2_UP_ID   IS NULL)
                               AND (T3.LVL1_UP_ID   IS NULL)
                               AND (T3.LVL0_UP_ID   IS NULL))) THEN T3.ORG_CODE
                         ELSE ''
                    END ORG_CODE
                  , CASE WHEN (NOT((T3.MEM_ID       IS NULL)
                               AND (T3.MEM_CODE     IS NULL)
                               AND (T3.MEM_LVL      IS NULL)
                               AND (T3.DEPT_CODE    IS NULL)
                               AND (T3.GRP_CODE     IS NULL)
                               AND (T3.ORG_CODE     IS NULL)
                               AND (T3.TOP_ORG_CODE IS NULL)
                               AND (T3.MEM_UP_ID    IS NULL)
                               AND (T3.LVL3_UP_ID   IS NULL)
                               AND (T3.LVL2_UP_ID   IS NULL)
                               AND (T3.LVL1_UP_ID   IS NULL)
                               AND (T3.LVL0_UP_ID   IS NULL))) THEN T3.MEM_LVL
                        ELSE 0
                           END MEM_LVL
                  , CASE WHEN (NOT((T3.MEM_ID       IS NULL)
                               AND (T3.MEM_CODE     IS NULL)
                               AND (T3.MEM_LVL      IS NULL)
                               AND (T3.DEPT_CODE    IS NULL)
                               AND (T3.GRP_CODE     IS NULL)
                               AND (T3.ORG_CODE     IS NULL)
                               AND (T3.TOP_ORG_CODE IS NULL)
                               AND (T3.MEM_UP_ID    IS NULL)
                               AND (T3.LVL3_UP_ID   IS NULL)
                               AND (T3.LVL2_UP_ID   IS NULL)
                               AND (T3.LVL1_UP_ID   IS NULL)
                               AND (T3.LVL0_UP_ID   IS NULL))) THEN T3.LVL3_UP_ID
                         ELSE 0
                    END LVL3_UP_ID
                  , CASE WHEN (NOT((T3.MEM_ID       IS NULL)
                               AND (T3.MEM_CODE     IS NULL)
                               AND (T3.MEM_LVL      IS NULL)
                               AND (T3.DEPT_CODE    IS NULL)
                               AND (T3.GRP_CODE     IS NULL)
                               AND (T3.ORG_CODE     IS NULL)
                               AND (T3.TOP_ORG_CODE IS NULL)
                               AND (T3.MEM_UP_ID    IS NULL)
                               AND (T3.LVL3_UP_ID   IS NULL)
                               AND (T3.LVL2_UP_ID   IS NULL)
                               AND (T3.LVL1_UP_ID   IS NULL)
                               AND (T3.LVL0_UP_ID   IS NULL))) THEN T3.LVL2_UP_ID
                         ELSE 0
                    END LVL2_UP_ID
                  , CASE WHEN (NOT((T3.MEM_ID       IS NULL)
                               AND (T3.MEM_CODE     IS NULL)
                               AND (T3.MEM_LVL      IS NULL)
                               AND (T3.DEPT_CODE    IS NULL)
                               AND (T3.GRP_CODE     IS NULL)
                               AND (T3.ORG_CODE     IS NULL)
                               AND (T3.TOP_ORG_CODE IS NULL)
                               AND (T3.MEM_UP_ID    IS NULL)
                               AND (T3.LVL3_UP_ID   IS NULL)
                               AND (T3.LVL2_UP_ID   IS NULL)
                               AND (T3.LVL1_UP_ID   IS NULL)
                               AND (T3.LVL0_UP_ID   IS NULL))) THEN T3.LVL1_UP_ID
                         ELSE 0
                    END LVL1_UP_ID
               FROM ORG0001D T1
               JOIN SYS0013M T2
                 ON T2.CODE_ID = T1.MEM_TYPE
               LEFT
               JOIN (SELECT V1.MEM_ID
                          , V1.MEM_CODE
                          , V1.MEM_LVL
                          , V1.DEPT_CODE
                          , V1.GRP_CODE
                          , V1.ORG_CODE
                          , V1.TOP_ORG_CODE
                          , V1.MEM_UP_ID
                          , V1.LVL3_UP_ID
                          , V1.LVL2_UP_ID
                          , V1.LVL1_UP_ID
                          , V1.LVL0_UP_ID
                              FROM ORG1001V V1 ) T3
                 ON T3.MEM_ID = T1.MEM_ID
              WHERE 1 = 1
              <if test='memId != null and memId !=0'>
                AND T1.MEM_ID = #{memId}
              </if>
              <if test='memCode != null and memCode !=""'>
                AND T1.MEM_CODE = #{memCode}
              </if>
              <if test='stus != null and stus !=""'>
                AND T1.STUS = #{stus}
              </if>
              <if test='salesMen != null and salesMen !=""'>
                AND (MEM_LVL = 4
                AND MEM_TYPE IN (1,2,7) OR MEM_TYPE IN (4,6) )
              </if>
                AND ROWNUM &lt;= 1 ) T
    </select>

    <select id="selectESvmInfo" parameterType="Map" resultType="egovMap">
        select
		ESVM.PSM_ID,
		ESVM.PSM_NO,
		ESVM.SVM_QUOT_ID,
		ESVM.PSM_SALES_ORD_ID,
		ESVM.PSM_SRV_MEM_NO,
		ESVM.STUS,
		ESVM.STUS_REM,
		ESVM.APPV_USER_ID,
		ESVM.APPV_DT,
		ESVM.APPV_REM,
		ESVM.REM,
		ESVM.CRT_USER_ID,
		TO_CHAR(ESVM.CRT_DT, 'DD/MM/YYYY') CRT_DT,
		ESVM.UPD_USER_ID,
		TO_CHAR(ESVM.UPD_DT, 'DD/MM/YYYY') UPD_DT,
		ESVM.ATCH_FILE_GRP_ID,
		QUO.SRV_MEM_QUOT_NO SMQ_NO,
		SAL.SALES_ORD_NO,
		TO_CHAR(QUO.SRV_CRT_DT, 'DD/MM/YYYY') QUO_CRT_DT,
		TO_CHAR(SAL.SALES_DT, 'DD/MM/YYYY') ORD_CRT_DT
		from SAL0298D ESVM
		LEFT JOIN SAL0093D QUO ON QUO.SRV_MEM_QUOT_ID = ESVM.SVM_QUOT_ID
		LEFT JOIN SAL0001D SAL ON SAL.SALES_ORD_ID = ESVM.PSM_SALES_ORD_ID
		WHERE PSM_ID = #{psmId}
    </select>

    <select id="selectESvmAttachList" parameterType="Map" resultType="egovMap">
            SELECT T1.ATCH_FILE_GRP_ID
                   ,T1.ATCH_FILE_ID
                   ,T2.ATCH_FILE_NAME
                   ,T2.FILE_SUB_PATH
                   ,T2.PHYSICL_FILE_NAME
                   ,T2.FILE_EXTSN
                   ,T2.FILE_SIZE
                   ,T2.FILE_KEY_SEQ
          FROM SYS0070M T1
          LEFT JOIN SYS0071D T2
          ON T1.ATCH_FILE_ID = T2.ATCH_FILE_ID
          WHERE T1.ATCH_FILE_GRP_ID = #{atchFileGrpId}
          ORDER BY T2.FILE_KEY_SEQ
    </select>

    <select id="selectNextFileId" resultType="int">
        SELECT SYS0071D_ATCH_FILE_ID_SEQ.NEXTVAL atchFileId FROM DUAL
    </select>

    <insert id="insertFileDetail" parameterType="Map">
        INSERT INTO SYS0071D (
        ATCH_FILE_ID
        , ATCH_FILE_NAME
        , FILE_SUB_PATH
        , PHYSICL_FILE_NAME
        , FILE_EXTSN
        , FILE_SIZE
        , FILE_PASSWORD
        , FILE_UNQ_KEY
        , FILE_KEY_SEQ
        )VALUES (
        #{atchFileId}
        ,#{atchFileName}
        ,#{fileSubPath}
        ,#{physiclFileName}
        ,#{fileExtsn}
        ,#{fileSize}
        ,#{filePassword}
        ,#{fileUnqKey}
        ,#{fileKeySeq}
        )
    </insert>
</mapper>