<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.coway.trust.biz.supplement.payment.service.impl.SupplementBatchRefundMapper">

  <select id="selectBatchRefundList" parameterType="Map" resultType="egovMap">
    SELECT Project1.BATCH_ID AS BATCH_ID  ,
               Project1.BATCH_STUS_ID AS BATCH_STUS_ID  ,
               Project1.NAME AS NAME  ,
               Project1.CNFM_USER_ID AS CNFM_USER_ID  ,
               Project1.C1 AS C1  ,
               (CASE Project1.CNFM_DT
                        WHEN '01/01/1900' THEN '-'
                        ELSE Project1.CNFM_DT END) AS CNFM_DT  ,
               Project1.CNFM_STUS_ID AS CNFM_STUS_ID  ,
               Project1.NAME1 AS NAME1  ,
               Project1.CNVR_USER_ID AS CNVR_USER_ID  ,
               Project1.C2 AS C2  ,
               (CASE Project1.CNVR_DT
                        WHEN '01/01/1900' THEN '-'
                        ELSE Project1.CNVR_DT END) AS CNVR_DT  ,
               Project1.CRT_DT AS CRT_DT  ,
               Project1.CRT_USER_ID AS CRT_USER_ID  ,
               Project1.USER_NAME AS USER_NAME  ,
               Project1.REFUND_MODE_ID AS REFUND_MODE_ID  ,
               Project1.CODE_NAME AS CODE_NAME  ,
               Project1.UPD_DT AS UPD_DT  ,
               Project1.USERNAME1 AS USERNAME1  ,
               Project1.UPD_USER_ID AS UPD_USER_ID  ,
               Project1.BATCH_REFUND_TYPE AS BATCH_REFUND_TYPE  ,
               Project1.BATCH_REFUND_CUST_TYPE AS BATCH_REFUND_CUST_TYPE
    FROM ( SELECT Project1.BATCH_ID AS BATCH_ID  ,
                          Project1.REFUND_MODE_ID AS REFUND_MODE_ID  ,
                          Project1.BATCH_STUS_ID AS BATCH_STUS_ID  ,
                          Project1.CNFM_STUS_ID AS CNFM_STUS_ID  ,
                          Project1.CRT_USER_ID AS CRT_USER_ID  ,
                          Project1.CRT_DT AS CRT_DT  ,
                          Project1.UPD_USER_ID AS UPD_USER_ID  ,
                          Project1.UPD_DT AS UPD_DT  ,
                          Project1.CNFM_DT AS CNFM_DT  ,
                          Project1.CNVR_DT AS CNVR_DT  ,
                          Project1.CNFM_USER_ID AS CNFM_USER_ID  ,
                          Project1.CNVR_USER_ID AS CNVR_USER_ID  ,
                          Project1.BATCH_REFUND_TYPE AS BATCH_REFUND_TYPE  ,
                          Project1.BATCH_REFUND_CUST_TYPE AS BATCH_REFUND_CUST_TYPE  ,
                          Project1.CODE_NAME AS CODE_NAME  ,
                          Project1.NAME AS NAME  ,
                          Project1.USER_NAME AS USER_NAME  ,
                          Project1.USERNAME1 AS USERNAME1  ,
                          Project1.NAME1 AS NAME1  ,
                          Project1.C1 AS C1  ,
                          Project1.C2 AS C2  ,
                          ROW_NUMBER() OVER (ORDER BY Project1.BATCH_ID ASC) ROW_NUMBER
               FROM ( SELECT Extent1.BATCH_ID AS BATCH_ID  ,
                                     Extent1.REFUND_MODE_ID AS REFUND_MODE_ID  ,
                                     Extent1.BATCH_STUS_ID AS BATCH_STUS_ID  ,
                                     Extent1.CNFM_STUS_ID AS CNFM_STUS_ID  ,
                                     Extent1.CRT_USER_ID AS CRT_USER_ID  ,
                                     Extent1.CRT_DT AS CRT_DT  ,
                                     Extent1.UPD_USER_ID AS UPD_USER_ID  ,
                                     Extent1.UPD_DT AS UPD_DT  ,
                                     TO_CHAR(Extent1.CNFM_DT, 'DD/MM/YYYY') AS CNFM_DT  ,
                                     TO_CHAR(Extent1.CNVR_DT, 'DD/MM/YYYY') AS CNVR_DT  ,
                                     Extent1.CNFM_USER_ID AS CNFM_USER_ID  ,
                                     Extent1.CNVR_USER_ID AS CNVR_USER_ID  ,
                                     Extent1.BATCH_REFUND_TYPE AS BATCH_REFUND_TYPE  ,
                                     Extent1.BATCH_REFUND_CUST_TYPE AS BATCH_REFUND_CUST_TYPE  ,
                                     Extent2.CODE_NAME AS CODE_NAME  ,
                                     Extent3.NAME AS NAME  ,
                                     Extent4.USER_NAME AS USER_NAME  ,
                                     Extent5.USER_NAME AS USERNAME1  ,
                                     Extent7.NAME AS NAME1  ,
                                     CASE WHEN ( Extent6.USER_ID IS NOT NULL )
                                             THEN Extent6.USER_NAME
                                             ELSE '-' END AS C1  ,
                                     CASE WHEN ( Extent8.USER_ID IS NOT NULL )
                                             THEN Extent8.USER_NAME
                                             ELSE '-' END AS C2
                          FROM PAY0364M Extent1
                          JOIN SYS0013M Extent2 ON Extent2.CODE_ID = Extent1.REFUND_MODE_ID
                          JOIN SYS0038M Extent3 ON Extent3.STUS_CODE_ID = Extent1.BATCH_STUS_ID
                          JOIN SYS0047M Extent4 ON Extent4.USER_ID = Extent1.CRT_USER_ID
                          JOIN SYS0047M Extent5 ON Extent5.USER_ID = Extent1.UPD_USER_ID
                          LEFT JOIN SYS0047M Extent6 ON Extent6.USER_ID = Extent1.CNFM_USER_ID
                          JOIN SYS0038M Extent7 ON Extent7.STUS_CODE_ID = Extent1.CNFM_STUS_ID
                          LEFT JOIN SYS0047M Extent8 ON Extent8.USER_ID = Extent1.CNVR_USER_ID
                          WHERE 1=1

                          <if test="payMode != null and payMode != ''">
                            AND Extent1.REFUND_MODE_ID IN
                            <foreach collection="payMode" item="item" open="(" close=")" separator="," >
                              #{item}
                            </foreach>
                          </if>

                          <if test="cnfmStus != null and cnfmStus != ''">
                            AND Extent1.CNFM_STUS_ID IN
                            <foreach collection="cnfmStus" item="item" open="(" close=")" separator="," >
                              #{item}
                            </foreach>
                          </if>

                          <if test="batchStus != null and batchStus != ''">
                            AND Extent1.BATCH_STUS_ID IN
                            <foreach collection="batchStus" item="item" open="(" close=")" separator="," >
                              #{item}
                            </foreach>
                          </if>

                          <if test="crtUserName != null and crtUserName != ''">
                            AND Extent4.USER_NAME = #{crtUserName}
                          </if>

                          <if test="batchId != null and batchId != ''">
                            AND Extent1.BATCH_ID = #{batchId}
                          </if>

                          <if test="startDt != null and startDt != ''">
                            <![CDATA[
                              AND Extent1.CRT_DT >= TO_DATE(#{startDt}, 'DD/MM/YYYY')
                            ]]>
                          </if>

                          <if test="endDt != null and endDt != ''">
                            <![CDATA[
                              AND Extent1.CRT_DT < TO_DATE(#{endDt}, 'DD/MM/YYYY') + 1
                             ]]>
                          </if>

                          AND (Extent1.BATCH_REFUND_TYPE = 577)
                          AND (Extent1.BATCH_REFUND_CUST_TYPE = 1368)
                ) Project1
    ) Project1
    WHERE Project1.ROW_NUMBER <![CDATA[ > ]]> 0
    ORDER BY Project1.BATCH_ID ASC
  </select>

  <select id="selectBatchRefundInfo" parameterType="Map" resultType="egovMap">
    SELECT Limit1.BATCH_ID AS BATCH_ID  ,
               Limit1.BATCH_STUS_ID AS BATCH_STUS_ID  ,
               Limit1.NAME AS NAME  ,
               Limit1.CNFM_USER_ID AS CNFM_USER_ID  ,
               Limit1.C1 AS C1  ,
               (CASE Limit1.CNFM_DT
                        WHEN '01/01/1900 00:00' THEN '-'
                         ELSE Limit1.CNFM_DT END) AS CNFM_DT  ,
               Limit1.CNFM_STUS_ID AS CNFM_STUS_ID  ,
               Limit1.NAME1 AS NAME1  ,
               Limit1.CNVR_USER_ID AS CNVR_USER_ID  ,
               Limit1.C2 AS C2  ,
               (CASE Limit1.CNVR_DT
                        WHEN '01/01/1900 00:00' THEN '-'
                        ELSE Limit1.CNVR_DT END) AS CNVR_DT  ,
               Limit1.CRT_DT AS CRT_DT  ,
               Limit1.CRT_USER_ID AS CRT_USER_ID  ,
               Limit1.USER_NAME AS USER_NAME  ,
               Limit1.REFUND_MODE_ID AS REFUND_MODE_ID  ,
               Limit1.CODE_NAME AS CODE_NAME  ,
               Limit1.UPD_DT AS UPD_DT  ,
               Limit1.USERNAME1 AS USERNAME1  ,
               Limit1.UPD_USER_ID AS UPD_USER_ID  ,
               Limit1.BATCH_REFUND_TYPE AS BATCH_REFUND_TYPE  ,
               Limit1.BATCH_REFUND_CUST_TYPE AS BATCH_REFUND_CUST_TYPE
    FROM ( SELECT Extent1.BATCH_ID AS BATCH_ID  ,
                          Extent1.REFUND_MODE_ID AS REFUND_MODE_ID  ,
                          Extent1.BATCH_STUS_ID AS BATCH_STUS_ID  ,
                          Extent1.CNFM_STUS_ID AS CNFM_STUS_ID  ,
                          Extent1.CRT_USER_ID AS CRT_USER_ID  ,
                          TO_CHAR(Extent1.CRT_DT, 'DD/MM/YYYY HH24:MI') AS CRT_DT  ,
                          Extent1.UPD_USER_ID AS UPD_USER_ID  ,
                          TO_CHAR(Extent1.UPD_DT, 'DD/MM/YYYY HH24:MI') AS UPD_DT  ,
                          TO_CHAR(Extent1.CNFM_DT, 'DD/MM/YYYY HH24:MI') AS CNFM_DT  ,
                          TO_CHAR(Extent1.CNVR_DT, 'DD/MM/YYYY HH24:MI') AS CNVR_DT  ,
                          Extent1.CNFM_USER_ID AS CNFM_USER_ID  ,
                          Extent1.CNVR_USER_ID AS CNVR_USER_ID  ,
                          Extent1.BATCH_REFUND_TYPE AS BATCH_REFUND_TYPE  ,
                          Extent1.BATCH_REFUND_CUST_TYPE AS BATCH_REFUND_CUST_TYPE  ,
                          Extent2.CODE_NAME AS CODE_NAME  ,
                          Extent3.NAME AS NAME  ,
                          Extent4.USER_NAME AS USER_NAME  ,
                          Extent5.USER_NAME AS USERNAME1  ,
                          Extent7.NAME AS NAME1  ,
                          CASE WHEN ( Extent6.USER_ID IS NOT NULL )
                                  THEN Extent6.USER_NAME
                                  ELSE '-' END AS C1  ,
                          CASE WHEN ( Extent8.USER_ID IS NOT NULL )
                                  THEN Extent8.USER_NAME
                                  ELSE '-' END AS C2
               FROM PAY0364M Extent1
               JOIN SYS0013M Extent2 ON Extent2.CODE_ID = Extent1.REFUND_MODE_ID
               JOIN SYS0038M Extent3 ON Extent3.STUS_CODE_ID = Extent1.BATCH_STUS_ID
               JOIN SYS0047M Extent4 ON Extent4.USER_ID = Extent1.CRT_USER_ID
               JOIN SYS0047M Extent5 ON Extent5.USER_ID = Extent1.UPD_USER_ID
               LEFT JOIN SYS0047M Extent6 ON Extent6.USER_ID = Extent1.CNFM_USER_ID
               JOIN SYS0038M Extent7 ON Extent7.STUS_CODE_ID = Extent1.CNFM_STUS_ID
               LEFT JOIN SYS0047M Extent8 ON Extent8.USER_ID = Extent1.CNVR_USER_ID
               WHERE Extent1.BATCH_ID = #{batchId}
               AND ROWNUM <![CDATA[ <= ]]> 1) Limit1
  </select>

  <select id="selectBatchRefundItem" parameterType="Map" resultType="egovMap">
    SELECT Project1.DET_ID AS DET_ID  ,
               Project1.SALES_ORD_NO AS SALES_ORD_NO  ,
               Project1.SALES_CUST_ID AS SALES_CUST_ID  ,
               Project1.DISABLED AS DISABLED  ,
               Project1.BATCH_ID AS BATCH_ID  ,
               Project1.BOR_NO AS BOR_NO  ,
               Project1.AMT AS AMT  ,
               Project1.PAY_MODE AS PAY_MODE  ,
               Project1.PAY_TYPE_ID AS PAY_TYPE_ID  ,
               Project1.PAY_ITM_ID AS PAY_ITM_ID  ,
               Project1.ACC_CODE AS ACC_CODE  ,
               (Project1.ACC_CODE || ' - ' || Project1.ACC_DESC) AS BANK_ACC  ,
               Project1.ACC_DESC AS ACC_DESC  ,
               Project1.NAME AS NAME  ,
               Project1.REF_NO AS REF_NO  ,
               Project1.CHQ_NO AS CHQ_NO  ,
               Project1.CC_HOLDER_NAME AS CC_HOLDER_NAME  ,
               Project1.CC_NO AS CC_NO  ,
               Project1.REFUND_REM AS REFUND_REM  ,
               Project1.REF_DT_DAY AS REF_DT_DAY  ,
               Project1.REF_DT_MONTH AS REF_DT_MONTH  ,
               Project1.REF_DT_YEAR AS REF_DT_YEAR  ,
               Project1.VALID_REM AS VALID_REM  ,
               Project1.VALID_STUS_ID AS VALID_STUS_ID
    FROM ( SELECT Extent1.DET_ID AS DET_ID  ,
                          Extent1.BATCH_ID AS BATCH_ID  ,
                          Extent1.DISAB AS DISABLED  ,
                          Extent1.VALID_STUS_ID AS VALID_STUS_ID  ,
                          Extent1.VALID_REM AS VALID_REM  ,
                          Extent1.BOR_NO AS BOR_NO  ,
                          Extent1.AMT AS AMT  ,
                          Extent1.PAY_MODE AS PAY_MODE  ,
                          Extent1.PAY_TYPE_ID AS PAY_TYPE_ID  ,
                          Extent1.REF_NO AS REF_NO  ,
                          Extent1.CHQ_NO AS CHQ_NO  ,
                          Extent1.CC_HOLDER_NAME AS CC_HOLDER_NAME  ,
                          Extent1.CC_NO AS CC_NO  ,
                          Extent1.REFUND_REM AS REFUND_REM  ,
                          Extent1.REF_DT_MONTH AS REF_DT_MONTH  ,
                          Extent1.REF_DT_DAY AS REF_DT_DAY  ,
                          Extent1.REF_DT_YEAR AS REF_DT_YEAR  ,
                          Extent1.PAY_ITM_ID AS PAY_ITM_ID  ,
                          Extent6.SUP_REF_NO AS SALES_ORD_NO  ,
                          Extent6.CUST_ID AS SALES_CUST_ID,
                          Extent7.ACC_CODE AS ACC_CODE  ,
                          Extent7.ACC_DESC AS ACC_DESC  ,
                          Extent8.NAME AS NAME
               FROM PAY0363D Extent1
               JOIN SYS0038M Extent2 ON Extent2.STUS_CODE_ID = Extent1.VALID_STUS_ID
               JOIN PAY0065D Extent3 ON Extent3.PAY_ITM_ID = Extent1.PAY_ITM_ID
               JOIN PAY0064D Extent4 ON Extent4.PAY_ID = Extent3.PAY_ID
               JOIN PAY0007D Extent5 ON Extent5.BILL_ID = Extent4.BILL_ID
               JOIN SUP0001M Extent6 ON Extent6.SUP_REF_NO = Extent5.BILL_NO
               LEFT JOIN SYS0001M Extent7 ON Extent7.ACC_ID = Extent1.BANK_ACC_ID
               LEFT JOIN SYS0004M Extent8 ON Extent8.BANK_ID = Extent1.ISS_BANK_ID
               WHERE (0 = Extent1.DISAB)
                   AND (1  <![CDATA[ <> ]]> Extent1.VALID_STUS_ID)
                   AND (Extent1.BATCH_ID = #{batchId})
    ) Project1
    ORDER BY Project1.DET_ID ASC
  </select>

  <select id="selectAccNoList" parameterType="Map" resultType="egovMap">
    SELECT ACC_ID AS CODE_ID,
               (ACC_CODE || ' - ' || ACC_DESC) AS CODE_NAME
    FROM SYS0001M
    WHERE ACC_STUS_ID = 1

    <if test="payMode == 105">
      AND IS_PAY_CASH = 1
    </if>

    <if test="payMode == 106">
      AND IS_PAY_CHQ = 1
    </if>

    <if test="payMode == 107">
      AND IS_PAY_CRC = 1
    </if>

    <if test="payMode == 108">
      AND IS_PAY_ONLINE = 1
    </if>

    <if test="payMode == 109">
      AND ECASH = 1
    </if>

    <if test="payMode == 110">
      AND AUTO_DEBT = 1
    </if>
    ORDER BY ACC_CODE
  </select>

  <select id="selectNextBatchId" resultType="int">
    SELECT NVL(MAX(BATCH_ID) + 1, 1) AS BATCH_ID FROM PAY0364M
  </select>

  <insert id="insertBatchRefundM" parameterType="Map">
    INSERT INTO PAY0364M ( BATCH_ID,
                                        REFUND_MODE_ID,
                                        BATCH_STUS_ID,
                                        CNFM_STUS_ID,
                                        CNFM_DT,
                                        CNVR_DT,
                                        CNFM_USER_ID,
                                        CNVR_USER_ID,
                                        BATCH_REFUND_TYPE,
                                        BATCH_REFUND_REM,
                                        BATCH_REFUND_CUST_TYPE,
                                        DEL_FLG,
                                        CRT_USER_ID,
                                        CRT_DT,
                                        UPD_USER_ID,
                                        UPD_DT
    ) VALUES ( #{batchId},
                    #{refundModeId},
                    #{batchStatusId},
                    #{confirmStatusId},
                    TO_DATE(#{confirmDate} , 'YYYY/MM/DD'),
                    TO_DATE(#{convertDate} , 'YYYY/MM/DD'),
                    #{confirmBy},
                    #{convertBy},
                    #{batchRefundType},
                    #{batchRefundRemark},
                    #{batchRefundCustType},
                    #{delFlg},
                    #{creator},
                    SYSDATE,
                    #{updator},
                    SYSDATE
    )
  </insert>

  <select id="selectNextDetId" resultType="int">
    SELECT NVL(MAX(DET_ID) + 1, 1) AS DET_ID FROM PAY0363D
  </select>

  <insert id="insertBatchRefundD" parameterType="Map">
    INSERT INTO PAY0363D ( DET_ID,
                                        BATCH_ID,
                                        DISAB,
                                        VALID_STUS_ID,
                                        VALID_REM,
                                        SUP_REF_ID,
                                        SUP_REF_NO,
                                        BOR_NO,
                                        AMT,
                                        PAY_MODE,
                                        PAY_TYPE_ID,
                                        BANK_ACC_ID,
                                        ISS_BANK_ID,
                                        REF_NO,
                                        CHQ_NO,
                                        CC_HOLDER_NAME,
                                        CC_NO,
                                        REFUND_REM,
                                        REF_DT_MONTH,
                                        REF_DT_DAY,
                                        REF_DT_YEAR,
                                        PAY_ITM_ID,
                                        DEL_FLG,
                                        CRT_USER_ID,
                                        CRT_DT,
                                        UPD_USER_ID,
                                        UPD_DT
    ) VALUES ( #{detId},
                    #{batchId},
                    #{disabled},
                    #{validStatusId},
                    #{validRemark},
                    #{supRefId},
                    #{supRefNo},
                    #{borNo},
                    #{amt},
                    #{payMode},
                    #{payTypeId},
                    #{bankAccId},
                    #{issBankId},
                    #{refNo},
                    #{chqNo},
                    #{ccHolderName},
                    #{ccNo},
                    #{refundRemark},
                    #{refDateMonth},
                    #{refDateDay},
                    #{refDateYear},
                    #{payItemId},
                    #{delFlg},
                    #{creator},
                    SYSDATE,
                    #{updator},
                    SYSDATE
    )
  </insert>

  <resultMap id="rstCnvrBatRefundMap1" type="egovMap"></resultMap>
  <update id="callBatchRefundVerifyDet" statementType="CALLABLE" parameterType="Map">
    {call SP_SUPPLEMENT_BATCH_REFUND_VERIFY_DET(#{batchId}, #{p1, mode=OUT, jdbcType=INTEGER, javaType=int, resultMap=rstCnvrBatRefundMap1})}
  </update>

  <update id="batchRefundDeactivate" parameterType="Map">
    UPDATE PAY0364M SET BATCH_STUS_ID = #{batchStatusId},
                                    CNFM_STUS_ID = #{confirmStatusId},
                                    UPD_USER_ID = #{updator},
                                    UPD_DT = SYSDATE
    WHERE BATCH_ID = #{batchId}
  </update>

  <update id="batchRefundConfirm" parameterType="Map">
    UPDATE PAY0364M SET CNFM_STUS_ID = #{confirmStatusId},
                                     UPD_USER_ID = #{updator},
                                     UPD_DT = SYSDATE,
                                     CNFM_USER_ID = #{confirmBy},
                                     CNFM_DT = SYSDATE
    WHERE  BATCH_ID = #{batchId}
  </update>

  <update id="batchRefundItemDisab" parameterType="Map">
    UPDATE PAY0363D SET DISAB = #{disabled},
                                    UPD_USER_ID = #{updator},
                                    UPD_DT = SYSDATE
    WHERE  DET_ID = #{detId}
  </update>

  <resultMap id="cnvrBatRefundMap" type="egovMap"></resultMap>
  <update id="callConvertBatchRefund" statementType="CALLABLE" parameterType="Map">
    {call SP_SUPPLEMENT_UPD_CNVR_BATCH_REFUND(#{batchId}, #{confirmBy}, #{p1, mode=OUT, jdbcType=INTEGER, javaType=int, resultMap=cnvrBatRefundMap})}
  </update>

  <select id="selectNextIfKey" resultType="String">
    SELECT 941 || TO_CHAR (SYSDATE, 'yymmdd') || '_' || NVL (TO_CHAR (MAX (SUBSTR (IF_KEY, 11, 7) + 1), 'FM0000000'), '0000001') AS IF_KEY
    FROM ITF0941M
    WHERE SUBSTR (IF_KEY, 4, 6) = TO_CHAR (SYSDATE, 'yymmdd')
  </select>

  <insert id="insertInterface" parameterType="egovMap">
    INSERT INTO ITF0941M ( IF_KEY
                                      ,SEQ
                                      ,IF_TYPE
                                      ,TRAN_STATUS_CD
                                      ,RGST_DT
                                      ,RGST_TM
                                      ,RGST_ID
                                      ,REFN_DATE
                                      ,REFN_SEQ
                                      ,ORDER_NO
                                      ,WOR_NO
                                      ,RBATCH_ID
                                      ,CUST_NO
                                      ,REFN_AMT
    ) VALUES ( FN_CRT_IFKEY('941')
                   ,1
                   ,'941'
                   ,'10'
                   ,TO_CHAR(SYSDATE, 'YYYYMMDD')
                   ,TO_CHAR(SYSDATE, 'HH24MISS')
                   ,#{userId}
                   ,TO_CHAR(TO_DATE(#{refnDate}, 'DD/MM/YYYY HH24:MI'), 'YYYYMMDD')
                   ,#{detId}
                   ,#{salesOrdNo}
                   ,#{borNo}
                   ,#{batchId}
                   ,#{salesCustId}
                   ,#{amt}
    )
  </insert>

  <select id="selectCodeList" parameterType="Map" resultType="egovMap">
    SELECT CODE AS CODE,
               CODE || ' - ' || CODE_NAME AS CODE_NAME
    FROM SYS0013M
    WHERE DISAB = 0
        AND CODE_MASTER_ID = 395
  </select>

  <select id="getPaymentMode" parameterType="Map" resultType="egovMap">
    SELECT CODE_ID AS CODE_ID,
               CODE_NAME || ' (' || CODE || ')' AS CODE_NAME
    FROM SYS0013M
    WHERE CODE_MASTER_ID = '36'
        AND DISAB = '0'
  </select>

  <select id="getBatStatus" parameterType="Map" resultType="egovMap">
    SELECT STUS_CODE_ID AS CODE_ID,
               NAME || ' (' || CODE || ')' AS CODE_NAME
    FROM SYS0038M
    WHERE STUS_CODE_ID IN ('1', '4', '8')
  </select>

  <select id="getBatConfirmtStatus" parameterType="Map" resultType="egovMap">
    SELECT STUS_CODE_ID AS CODE_ID,
               NAME || ' (' || CODE || ')' AS CODE_NAME
    FROM SYS0038M
    WHERE STUS_CODE_ID IN ('44', '77', '8')
  </select>

  <select id="selectSupOrdList" parameterType="String" resultType="egovMap">
    SELECT C.SUP_REF_ID,
               B.BILL_NO AS SUP_REF_NO
    FROM PAY0064D A
    JOIN PAY0007D B ON B.BILL_ID = A.BILL_ID
    JOIN SUP0001M C ON C.SUP_REF_NO = B.BILL_NO
    WHERE OR_NO = #{borNo}
  </select>

  <select id="selectSupBatchRefundDtl" parameterType="Map" resultType="egovMap">
    SELECT DET_ID,
               BATCH_ID,
               DISAB,
               VALID_STUS_ID,
               VALID_REM,
               SUP_REF_ID,
               SUP_REF_NO,
               BOR_NO,
               AMT,
               PAY_MODE,
               PAY_TYPE_ID,
               BANK_ACC_ID,
               ISS_BANK_ID,
               REF_NO,
               CHQ_NO,
               CC_HOLDER_NAME,
               CC_NO,
               REFUND_REM,
               REF_DT_MONTH,
               REF_DT_DAY,
               REF_DT_YEAR,
               PAY_ITM_ID,
               DEL_FLG,
               CRT_USER_ID,
               CRT_DT,
               UPD_USER_ID ,
               UPD_DT
    FROM PAY0363D
    WHERE BATCH_ID = #{batchId}
        AND DISAB = 0
  </select>

  <update id="updSupplementRtnRfnd" parameterType="Map">
    MERGE INTO SUP0001M A USING ( SELECT SUP_REF_NO,
                                                                SUP_REF_STUS,
                                                                SUP_REF_STG,
                                                                SUP_RTN_RFND
                                                    FROM GBSLCVD.SUP0001M
                                                    WHERE SUP_RTN_RFND = 'N'
                                                        AND SUP_REF_NO = #{supRefNo}
    ) SRC ON (A.SUP_REF_NO = SRC.SUP_REF_NO)
    WHEN MATCHED THEN UPDATE SET A.SUP_RTN_RFND = 'Y'
                                                   , A.UPD_USR_ID = #{userId}
                                                   , A.UPD_DT = SYSDATE
  </update>
</mapper>