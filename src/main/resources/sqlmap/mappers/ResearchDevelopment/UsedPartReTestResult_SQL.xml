<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.coway.trust.biz.ResearchDevelopment.impl.UsedPartReTestResultMapper">

 <!-- SELECT START -->

<select id="selectUsedPartReList" parameterType="Map" resultType="egovMap">

select

distinct B.SALES_ORD_NO,
B.SALES_ORD_ID,
B.SALES_ORD_ID AS ORD_ID,
NVL(FLOOR(MONTHS_BETWEEN(C.AS_SETL_DT,E.LAST_INSTALL_DT)),'0') AS AS_AGING ,
E.LAST_INSTALL_DT,
C.AS_SETL_DT,
Q.CODE_NAME AS PRODUCT_CATEGORY,
P.STK_CODE,
P.STK_DESC,
A.AS_NO,
A.AS_ID,
C.AS_RESULT_NO,
G.NAME AS CUST_NAME,
E.LAST_INSTALL_SERIAL_NO,
E.LAST_INSTALL_CT_CODE,
E.LAST_INSTALL_CT_NAME,
E.DSC_CODE,
E.DSC_NAME,
D.ASR_ITM_PART_ID,
D.ASR_ITM_PART_DESC,
C.PSI,
C.LPM,
C.AS_RESULT_REM,
M.DEFECT_DESC AS AS_Error_Code,
N.DEFECT_DESC AS AS_Description,
H.DEFECT_CODE,
H.DEFECT_DESC AS Solution_Large ,
I.DEFECT_DESC AS Solution_Small ,
J.DEFECT_DESC AS Problem_Symptom_Large ,
K.DEFECT_DESC AS Problem_Symptom_Small ,
L.DEFECT_DESC AS Defect_Part ,
E.INST_STATE,
E.INST_CITY,
E.INST_AREA,
R.TEST_UP_NO AS TEST_RESULT_NO,
R.TEST_UP_REM AS TEST_RESULT_REMARK,
R.TEST_UP_GNE,
TO_CHAR(R.TEST_UP_SETL_DT, 'DD/MM/YYYY') AS TEST_UP_SETL_DT,
R.TEST_YN,
S.CMPLT_YN,
R.RCD_TMS,
CASE WHEN R.TEST_UP_STUS = 0 THEN CASE WHEN R.TEST_UP_NO IS NULL THEN 'Active' END
ELSE T.NAME END AS TEST_STUS

FROM SVC0001D A
JOIN SAL0001D B ON B.SALES_ORD_ID = A.AS_SO_ID
LEFT JOIN SVC0004D C ON A.AS_ID = C.AS_ENTRY_ID
LEFT JOIN SVC0005D D ON C.AS_RESULT_ID = D.AS_RESULT_ID
LEFT JOIN SAL1010V E ON E.ORD_ID = A.AS_SO_ID
LEFT JOIN SAL0002D F ON F.SALES_ORD_ID = B.SALES_ORD_ID
LEFT JOIN SAL0029D G ON G.CUST_ID = B.CUST_ID
LEFT JOIN SVC0122D R ON R.AS_NO = A.AS_NO
LEFT JOIN SYS0100M H1 ON H1.DEFECT_ID = C.AS_DEFECT_TYPE_ID AND H1.DEFECT_TYP = 'DT'
LEFT JOIN SYS0100M H ON H.DEFECT_ID = R.TEST_AS_DEFECT_TYPE_ID AND H.DEFECT_TYP = 'DT'
LEFT JOIN SYS0100M I ON I.DEFECT_ID = R.TEST_AS_SLUTN_RESN_ID AND I.DEFECT_TYP = 'SC'
LEFT JOIN SYS0100M J ON J.DEFECT_ID = R.TEST_AS_DEFECT_DTL_RESN_ID AND J.DEFECT_TYP = 'DD'
LEFT JOIN SYS0100M K ON K.DEFECT_ID = R.TEST_AS_DEFECT_ID AND K.DEFECT_TYP = 'DC'
LEFT JOIN SYS0100M L ON L.DEFECT_ID = R.TEST_AS_DEFECT_PART_ID AND L.DEFECT_TYP = 'DP'
LEFT JOIN SYS0100M M ON M.DEFECT_ID = A.AS_MALFUNC_ID
LEFT JOIN SYS0100M N ON N.DEFECT_ID = A.AS_MALFUNC_RESN_ID AND N.DEFECT_GRP = M.DEFECT_ID
JOIN SAL0002D O ON O.SALES_ORD_ID = B.SALES_ORD_ID
LEFT JOIN SYS0026M P ON P.STK_ID = O.ITM_STK_ID
LEFT JOIN SYS0013M Q ON Q.CODE_ID = P.STK_CTGRY_ID
LEFT JOIN LOG0103M S ON S.SVC_ORD_ID = A.AS_NO
LEFT JOIN SYS0038M T ON T.STUS_CODE_ID = R.TEST_UP_STUS

where H1.DEFECT_CODE in ('1800', '1500')
and S.CMPLT_YN = 'Y'
and D.ASR_ITM_PART_ID is not null

<if test="orderNum != null and orderNum != '' ">
AND  B.SALES_ORD_NO = #{orderNum}
</if>

<if test="cmbbranchId != null and cmbbranchId != '' ">
AND E.DSC_CODE = #{cmbbranchId}
</if>

<if test="trStatus != null and trStatus != '' ">
                <choose>
                    <when test="trStatus == 1 ">
                        AND (R.TEST_UP_STUS = '1' OR R.TEST_UP_STUS ='' OR R.TEST_UP_STUS IS NULL)
                    </when>
                    <otherwise>
                        AND R.TEST_UP_STUS = '4'
                    </otherwise>
                </choose>
</if>

<if test="cmbCategory != null and cmbCategory != '' ">
AND P.STK_CTGRY_ID = #{cmbCategory}
</if>

<if test="asProduct != null and asProduct != '' ">
AND P.STK_CODE = #{asProduct}
</if>


<if test="spareFilterName != null and spareFilterName != '' ">
AND D.ASR_ITM_PART_ID = #{spareFilterName}
</if>

<if test="Genuinity != null and Genuinity != '' ">
AND R.TEST_UP_GNE = #{Genuinity}
</if>

<!-- <if test="Type != null and Type != '' ">
AND P.STK_TYPE_ID = #{Type}
</if> -->

 <if test="TestResultNo != null and TestResultNo != '' ">
AND R.TEST_UP_NO = #{TestResultNo}
</if>

order by B.SALES_ORD_NO

</select>


<select id="getTestResultInfo" parameterType="Map" resultType="egovMap">
    SELECT
    S.SO_EXCHG_ID SO_EXCHG_ID,
    S.SO_ID SO_ID,
    S.TEST_RESULT_STUS TEST_RESULT_STUS,
    S.TEST_RESULT_ID TEST_RESULT_ID,
    S.TEST_RESULT_NO TEST_RESULT_NO,
    S.TEST_RESULT_REM TEST_RESULT_REM,
    S.TEST_SETTLE_DT TEST_SETTLE_DT,
    S.TEST_SETTLE_TIME TEST_SETTLE_TIME,
    S.PEX_INS_ID PEX_INS_ID,
    S.AMP AMP ,
    S.VOLTAGE VOLTAGE,
    S.PROD_GENUINE PROD_GENUINE,
    S.TEST_RESULT_STUS TEST_RESULT_STUS,
    S.CT_ID CT_ID,
    S.CT_CODE CT_CODE,
    S.CT_NAME CT_NAME,
    S.DSC_ID,
    S.DSC_CODE,
    S.DSC_NAME,
    S.CRT_USER_ID CRT_USER_ID,
    S.CRT_DT CRT_DT,
    S.UPD_USER_ID UPD_USER_ID,
    S.UPD_DT UPD_DT,
    S.PROB_LARGE_ID PROB_LARGE_ID,
    S.PROB_LARGE_CODE PROB_LARGE_CODE,
    S.Problem_Symptom_Large Problem_Symptom_Large ,
    S.PROB_SMALL_ID PROB_SMALL_ID,
    S.PROB_SMALL_CODE PROB_SMALL_CODE,
    S.Problem_Symptom_Small Problem_Symptom_Small ,
    S.DEF_LARGE_ID DEF_LARGE_ID,
    S.DEF_LARGE_CODE DEF_LARGE_CODE,
    S.Defect_Part_Large Defect_Part_Large ,
    S.RCD_TMS,
    S.PROD_CAT PROD_CAT,
    S.PROD_CDE PROD_CDE

    FROM ( SELECT

        A.SO_EXCHG_ID SO_EXCHG_ID,
        B.SO_ID SO_ID,
        A.TEST_RESULT_STUS PEX_STUS_ID,
        A.TEST_RESULT_ID TEST_RESULT_ID,
        A.TEST_RESULT_NO TEST_RESULT_NO,
        A.TEST_RESULT_REM TEST_RESULT_REM,
        TO_CHAR(A.TEST_SETTLE_DT,'DD/MM/YYYY') AS TEST_SETTLE_DT,
        A.TEST_SETTLE_TIME TEST_SETTLE_TIME,
        A.PEX_INS_ID PEX_INS_ID,
        A.AMP AMP ,
        A.VOLTAGE VOLTAGE,
        A.PROD_GENUINE AS PROD_GENUINE,
        A.TEST_RESULT_STUS TEST_RESULT_STUS,
        K.CT_ID CT_ID,
        E.LAST_INSTALL_CT_CODE AS CT_CODE,
        E.LAST_INSTALL_CT_NAME AS CT_NAME,
        E.DSC_ID,
        E.DSC_CODE,
        E.DSC_NAME,
        NVL((SELECT USER_NAME FROM SYS0047M WHERE USER_ID = A.CRT_USER_ID),A.CRT_USER_ID) CRT_USER_ID,
        TO_CHAR(A.CRT_DT,'DD/MM/YYYY') AS CRT_DT,
        NVL((SELECT USER_NAME FROM SYS0047M WHERE USER_ID = A.UPD_USER_ID),A.UPD_USER_ID) UPD_USER_ID,
        TO_CHAR(A.UPD_DT,'DD/MM/YYYY') AS UPD_DT,
        G.DEFECT_ID AS PROB_LARGE_ID,
        G.DEFECT_CODE AS PROB_LARGE_CODE,
        G.DEFECT_DESC AS Problem_Symptom_Large ,
        H.DEFECT_ID AS PROB_SMALL_ID,
        H.DEFECT_CODE AS PROB_SMALL_CODE,
        H.DEFECT_DESC AS Problem_Symptom_Small ,
        I.DEFECT_ID AS DEF_LARGE_ID,
        I.DEFECT_CODE AS DEF_LARGE_CODE,
        I.DEFECT_DESC AS Defect_Part_Large ,
        A.RCD_TMS RCD_TMS,
        M.CODE AS PROD_CAT,
        L.STK_CODE AS PROD_CDE

           FROM SVC0125D A
           JOIN SAL0004D B ON B.SO_EXCHG_ID = A.SO_EXCHG_ID
           JOIN SAL0001D D ON D.SALES_ORD_ID = B.SO_ID
           LEFT JOIN SYS0038M C ON C.STUS_CODE_ID = A.TEST_RESULT_STUS
           LEFT JOIN SAL1010V E ON E.ORD_ID = B.SO_ID
           LEFT JOIN SAL0265D F ON F.SO_EXCHG_ID = B.SO_EXCHG_ID
           LEFT JOIN SYS0100M G ON G.DEFECT_ID = A.PROB_LARGE_ID AND G.DEFECT_TYP = 'DD'
           LEFT JOIN SYS0100M H ON H.DEFECT_ID = A.PROB_SMALL_ID AND H.DEFECT_TYP = 'DC'
           LEFT JOIN SYS0100M I ON I.DEFECT_ID = A.DEF_LARGE_ID AND I.DEFECT_TYP = 'DP'
           LEFT JOIN SYS0005M J ON J.BRNCH_ID = D.BRNCH_ID
           JOIN SAL0046D K ON K.INSTALL_ENTRY_ID = B.INSTALL_ENTRY_ID
           LEFT JOIN SYS0026M L ON L.STK_ID = K.INSTALL_STK_ID
           LEFT JOIN SYS0013M M ON M.CODE_ID = L.STK_CTGRY_ID AND M.CODE_MASTER_ID = 11

           WHERE
           A.TEST_RESULT_ID = (SELECT TEST_RESULT_ID FROM SVC0125D WHERE TEST_RESULT_NO = #{DSC_CODE})
           AND ROWNUM   <![CDATA[<= ]]> 1 ) S
  </select>

  <select id="selectOrderBasicInfo" parameterType="Map" resultType="egovMap">
    <![CDATA[ SELECT Extent1.ORD_ID ORD_ID ,
                     Extent1.ORD_NO ORD_NO ,
                     Extent1.RENTAL_STUS RENTAL_STUS ,
                     Extent1.ORD_STUS_ID ORD_STUS_ID ,
                     Extent1.ORD_STUS_CODE ORD_STUS_CODE ,
                     Extent1.ORD_STUS_NAME ORD_STUS_NAME ,
                     to_char(Extent1.ORD_DT,'dd/mm/yyyy') ORD_DT ,
                     Extent1.INSTLMT_PRIOD INSTLMT_PRIOD ,
                     Extent1.ORD_AMT ORD_AMT ,
                     Extent1.ORD_MTH_RENTAL ORD_MTH_RENTAL ,
                     Extent1.ORD_PV ORD_PV ,
                     Extent1.ORD_PV_MONTH ORD_PV_MONTH ,
                     Extent1.ORD_PV_YEAR ORD_PV_YEAR ,
                     Extent1.ORD_REF_NO ORD_REF_NO ,
                     Extent1.ORD_PO_NO ORD_PO_NO ,
                     Extent1.ORD_DEPT_CODE ORD_DEPT_CODE ,
                     Extent1.ORD_GRP_CODE ORD_GRP_CODE ,
                     Extent1.ORD_ORG_CODE ORD_ORG_CODE ,
                     Extent1.ORD_CRT_USER_ID ORD_CRT_USER_ID ,
                     to_char(Extent1.ORD_CRT_DT,'dd/mm/yyyy') ORD_CRT_DT ,
                     Extent1.APP_TYPE_ID APP_TYPE_ID ,
                     Extent1.APP_TYPE_CODE APP_TYPE_CODE ,
                     Extent1.APP_TYPE_DESC APP_TYPE_DESC ,
                     Extent1.STOCK_ID STOCK_ID ,
                     Extent1.STOCK_CODE STOCK_CODE ,
                     Extent1.STOCK_DESC STOCK_DESC ,
                     Extent1.CUST_ID CUST_ID ,
                     Extent1.CUST_TYPE CUST_TYPE ,
                     Extent1.CUST_NAME CUST_NAME ,
                     Extent1.CUST_NRIC CUST_NRIC ,
                     Extent1.CUST_DOB CUST_DOB ,
                     Extent1.CUST_NATION CUST_NATION ,
                     Extent1.CUST_GENDER CUST_GENDER ,
                     Extent1.CUST_RACE CUST_RACE ,
                     Extent1.CUST_EMAIL CUST_EMAIL ,
                     Extent1.CUST_VA_NO CUST_VA_NO ,
                     Extent1.CUST_PASSPORT_EXPR CUST_PASSPORT_EXPR ,
                     Extent1.CUST_VISA_EXPR CUST_VISA_EXPR ,
                     Extent1.ORD_PROMO_ID ORD_PROMO_ID ,
                     Extent1.ORD_PROMO_CODE ORD_PROMO_CODE ,
                     Extent1.ORD_PROMO_DESC ORD_PROMO_DESC ,
                     Extent1.ORD_MEM_ID ORD_MEM_ID ,
                     Extent1.ORD_MEM_CODE ORD_MEM_CODE ,
                     Extent1.ORD_MEM_NAME ORD_MEM_NAME ,
                     Extent1.ORD_MEM_NRIC ORD_MEM_NRIC ,
                     Extent1.ORD_MEM_TYPE_ID ORD_MEM_TYPE_ID ,
                     Extent1.ORD_MEM_TYPE_CODE ORD_MEM_TYPE_CODE ,
                     Extent1.ORD_MEM_TYPE_NAME ORD_MEM_TYPE_NAME ,
                     Extent1.COOL_OFF_PRIOD COOL_OFF_PRIOD ,
                     Extent1.KEYIN_BRNCH_ID KEYIN_BRNCH_ID ,
                     Extent1.KEYIN_BRNCH_CODE KEYIN_BRNCH_CODE ,
                     Extent1.KEYIN_BRNCH_NAME KEYIN_BRNCH_NAME ,
                     Extent1.ORD_REM ORD_REM ,
                     Extent1.RENT_CHK_ID RENT_CHK_ID ,
                     Extent1.ORD_HM_ID ORD_HM_ID ,
                     Extent1.ORD_SM_ID ORD_SM_ID ,
                     Extent1.ORD_GM_ID ORD_GM_ID ,
                     Extent1.ORD_ADDR_ID ORD_ADDR_ID ,
                     Extent1.ORD_CNTC_ID ORD_CNTC_ID ,
                     Extent1.ORD_PROMO_RELATED_NO ORD_PROMO_RELATED_NO ,
                     Extent1.UPD_DT UPD_DT ,
                     Extent1.UPD_USER_ID UPD_USER_ID ,
                     Extent1.JOM_PAY_REF JOM_PAY_REF ,
                     Extent1.STK_CTGRY_ID STK_CTGRY_ID ,
                     Extent1.STK_CTGRY_NAME STK_CTGRY_NAME ,
                     Extent1.CUST_TYPE_ID CUST_TYPE_ID ,
                     Extent1.CUST_BILL_ID CUST_BILL_ID ,
                     Extent1.OBLIGT_YEAR OBLIGT_YEAR
      FROM ( SELECT vOrderBasicInfo.ORD_ID ORD_ID ,
                    vOrderBasicInfo.ORD_NO ORD_NO ,
                    vOrderBasicInfo.RENTAL_STUS RENTAL_STUS ,
                    vOrderBasicInfo.ORD_STUS_ID ORD_STUS_ID ,
                    vOrderBasicInfo.ORD_STUS_CODE ORD_STUS_CODE ,
                    vOrderBasicInfo.ORD_STUS_NAME ORD_STUS_NAME ,
                    vOrderBasicInfo.ORD_DT ORD_DT ,
                    vOrderBasicInfo.INSTLMT_PRIOD INSTLMT_PRIOD ,
                    vOrderBasicInfo.ORD_AMT ORD_AMT ,
                    vOrderBasicInfo.ORD_MTH_RENTAL ORD_MTH_RENTAL ,
                    vOrderBasicInfo.ORD_PV ORD_PV ,
                    vOrderBasicInfo.ORD_PV_MONTH ORD_PV_MONTH ,
                    vOrderBasicInfo.ORD_PV_YEAR ORD_PV_YEAR ,
                    vOrderBasicInfo.ORD_REF_NO ORD_REF_NO ,
                    vOrderBasicInfo.ORD_PO_NO ORD_PO_NO ,
                    vOrderBasicInfo.ORD_DEPT_CODE ORD_DEPT_CODE ,
                    vOrderBasicInfo.ORD_GRP_CODE ORD_GRP_CODE ,
                    vOrderBasicInfo.ORD_ORG_CODE ORD_ORG_CODE ,
                    vOrderBasicInfo.ORD_CRT_USER_ID ORD_CRT_USER_ID ,
                    vOrderBasicInfo.ORD_CRT_DT ORD_CRT_DT ,
                    vOrderBasicInfo.APP_TYPE_ID APP_TYPE_ID ,
                    vOrderBasicInfo.APP_TYPE_CODE APP_TYPE_CODE ,
                    vOrderBasicInfo.APP_TYPE_DESC APP_TYPE_DESC ,
                    vOrderBasicInfo.STOCK_ID STOCK_ID ,
                    vOrderBasicInfo.STOCK_CODE STOCK_CODE ,
                    vOrderBasicInfo.STOCK_DESC STOCK_DESC ,
                    vOrderBasicInfo.CUST_ID CUST_ID ,
                    vOrderBasicInfo.CUST_TYPE CUST_TYPE ,
                    vOrderBasicInfo.CUST_NAME CUST_NAME ,
                    vOrderBasicInfo.CUST_NRIC CUST_NRIC ,
                    vOrderBasicInfo.CUST_DOB CUST_DOB ,
                    vOrderBasicInfo.CUST_NATION CUST_NATION ,
                    vOrderBasicInfo.CUST_GENDER CUST_GENDER ,
                    vOrderBasicInfo.CUST_RACE CUST_RACE ,
                    vOrderBasicInfo.CUST_EMAIL CUST_EMAIL ,
                    vOrderBasicInfo.CUST_VA_NO CUST_VA_NO ,
                    vOrderBasicInfo.CUST_PASSPORT_EXPR CUST_PASSPORT_EXPR ,
                    vOrderBasicInfo.CUST_VISA_EXPR CUST_VISA_EXPR ,
                    vOrderBasicInfo.ORD_PROMO_ID ORD_PROMO_ID ,
                    vOrderBasicInfo.ORD_PROMO_CODE ORD_PROMO_CODE ,
                    vOrderBasicInfo.ORD_PROMO_DESC ORD_PROMO_DESC ,
                    vOrderBasicInfo.ORD_MEM_ID ORD_MEM_ID ,
                    vOrderBasicInfo.ORD_MEM_CODE ORD_MEM_CODE ,
                    vOrderBasicInfo.ORD_MEM_NAME ORD_MEM_NAME ,
                    vOrderBasicInfo.ORD_MEM_NRIC ORD_MEM_NRIC ,
                    vOrderBasicInfo.ORD_MEM_TYPE_ID ORD_MEM_TYPE_ID ,
                    vOrderBasicInfo.ORD_MEM_TYPE_CODE ORD_MEM_TYPE_CODE ,
                    vOrderBasicInfo.ORD_MEM_TYPE_NAME ORD_MEM_TYPE_NAME ,
                    vOrderBasicInfo.COOL_OFF_PRIOD COOL_OFF_PRIOD ,
                    vOrderBasicInfo.KEYIN_BRNCH_ID KEYIN_BRNCH_ID ,
                    vOrderBasicInfo.KEYIN_BRNCH_CODE KEYIN_BRNCH_CODE ,
                    vOrderBasicInfo.KEYIN_BRNCH_NAME KEYIN_BRNCH_NAME ,
                    vOrderBasicInfo.ORD_REM ORD_REM ,
                    vOrderBasicInfo.RENT_CHK_ID RENT_CHK_ID ,
                    vOrderBasicInfo.ORD_HM_ID ORD_HM_ID ,
                    vOrderBasicInfo.ORD_SM_ID ORD_SM_ID ,
                    vOrderBasicInfo.ORD_GM_ID ORD_GM_ID ,
                    vOrderBasicInfo.ORD_ADDR_ID ORD_ADDR_ID ,
                    vOrderBasicInfo.ORD_CNTC_ID ORD_CNTC_ID ,
                    vOrderBasicInfo.ORD_PROMO_RELATED_NO ORD_PROMO_RELATED_NO ,
                    vOrderBasicInfo.UPD_DT UPD_DT ,
                    vOrderBasicInfo.UPD_USER_ID UPD_USER_ID ,
                    vOrderBasicInfo.JOM_PAY_REF JOM_PAY_REF ,
                    vOrderBasicInfo.STK_CTGRY_ID STK_CTGRY_ID ,
                    vOrderBasicInfo.STK_CTGRY_NAME STK_CTGRY_NAME ,
                    vOrderBasicInfo.CUST_TYPE_ID CUST_TYPE_ID ,
                    vOrderBasicInfo.CUST_BILL_ID CUST_BILL_ID ,
                    vOrderBasicInfo.OBLIGT_YEAR OBLIGT_YEAR
             FROM SAL1006V vOrderBasicInfo ) Extent1
             LEFT JOIN SAL0102D Extent2 ON Extent2.CCP_SALES_ORD_ID = Extent1.ORD_ID
             JOIN SAL0009D Extent3 ON Extent3.LOG_ID = (SELECT MAX(LOG_ID)
                                                        FROM SAL0009D
                                                        WHERE SALES_ORD_ID = Extent1.ORD_ID
                                                        GROUP BY SALES_ORD_ID)
             WHERE ( Extent1.ORD_NO = #{orderNo} )
               AND NOT EXISTS (SELECT 1
                                 FROM SAL0001D Z
                                WHERE Z.SALES_ORD_ID = EXTENT1.ORD_ID
                                  AND Z.BNDL_ID IS NOT NULL
                              )             -- homecare Remove(except)
                AND ( Extent1.ORD_STUS_ID = 4 ) AND (Extent1.RENTAL_STUS NOT IN ('WOF','SUS','RET'))
                AND ((Extent2.CCP_STUS_ID = 5 OR Extent2.CCP_STUS_ID IS NULL) OR (Extent3.PRGRS_ID = 5))
                AND ROWNUM <= 1
    ]]>
  </select>

  <select id="getUsedPartReTestResultDocNo" parameterType="Map" resultType="egovMap">
    <![CDATA[
      SELECT FN_GET_DOCNO(#{DOCNO})  uprno  FROM DUAL
    ]]>
  </select>

  <select id="getUsedPartReTestResultId" parameterType="Map" resultType="egovMap">
    <![CDATA[
      SELECT SVC0122D_ID.NEXTVAL seq FROM DUAL
    ]]>
  </select>

  <select id="isReTestAlreadyResult" parameterType="Map" resultType="java.lang.Integer">
    <![CDATA[
      SELECT COUNT(TEST_UP_ID)
      FROM SVC0122D
      WHERE  AS_NO =#{serviceNo} AND TEST_UP_STUS NOT IN ('1')
    ]]>
  </select>

  <select id="getAsEventInfo" parameterType="Map" resultType="egovMap">
    SELECT DISTINCT CASE WHEN(H.RESN_ID IS NOT NULL)
                           THEN H.RESN_DESC
                           ELSE B.DEFECT_TYPE_CODE_DESC
                    END malfu_code ,
                    CASE WHEN (H.RESN_ID IS NOT NULL)
                           THEN I.RESN_DESC
                           ELSE B.DEFECT_DTL_CODE_DESC
                    END malfu_reason ,
                    D.CODE|| ' - ' || D.NAME DSC,
                    A.AS_APPNT_TM Req_tm
    FROM SVC0001D A,
         SVC0056M B,
         ORG0001D C,
         SYS0005M D,
         SYS0032M H,
         SYS0032M I
    WHERE A.AS_MALFUNC_ID = B.DEFECT_TYPE_CODE
      AND A.AS_MALFUNC_RESN_ID = B.DEFECT_DTL_CODE
      AND A.AS_MEM_ID = C.MEM_ID
      AND C.BRNCH = D.BRNCH_ID
      AND A.AS_MALFUNC_ID = H.RESN_ID(+)
      and A.AS_MALFUNC_RESN_ID =
      I.RESN_ID(+) AND A.AS_NO = #{as_No}
  </select>

  <select id="selRcdTms" parameterType="Map" resultType="int">
    SELECT COUNT(*) COUNT
    FROM SVC0001D
    WHERE AS_ID = #{asId}
      AND AS_NO = #{asNo}
      AND AS_SO_ID = #{salesOrderId}
      AND RCD_TMS = #{rcdTms}
  </select>

  <select id="getSearchDtRange" parameterType="Map" resultType="String">
    SELECT CODE
    FROM SYS0094M
    WHERE IND = 'AS_DT_RGN'
      AND DISB = '0'
  </select>

  <select id="asProd"  parameterType="Map" resultType="egovMap">
    SELECT STK_CODE AS STK_ID,
           STK_CODE || ' - ' || STK_DESC AS STK_DESC
    FROM SYS0026M
    WHERE STK_TYPE_ID = '61'
      AND STUS_CODE_ID NOT IN (8, 7)
    ORDER BY STK_CODE
  </select>

  <select id="selectAsCrtStat"  parameterType="Map" resultType="egovMap">
    SELECT CODE AS CODE_ID,
           CODE_NAME AS CODE_NAME
    FROM SYS0094M
    WHERE IND = 'AS_CRTSTAT'
      AND DISB = 0
      AND CODE in ('1','4')
    ORDER BY LPAD(CODE,4)
  </select>

  <select id="selectTimePick"  parameterType="Map" resultType="egovMap">
    SELECT CODE AS CODE_ID,
           CODE_NAME AS CODE_NAME
    FROM SYS0094M
    WHERE IND = 'TIME_PICK'
      AND DISB = '0'
    ORDER BY LPAD(CODE,4)
  </select>

  <insert id="insertSVC0122D" parameterType="Map">
    INSERT INTO SVC0122D ( TEST_UP_ID,
                           TEST_UP_NO,
                           TEST_UP_STUS,
                           TEST_UP_REM,
                           TEST_UP_GNE,
                           TEST_MNF_DT,
                           TEST_UP_SETL_DT,
                           TEST_UP_SETL_TM,
                           TEST_YN,
                           TEST_UP_CT,
                           TEST_AS_DEFECT_PART_ID,
                           TEST_AS_DEFECT_DTL_RESN_ID,
                           TEST_AS_DEFECT_ID,
                           TEST_AS_DEFECT_TYPE_ID,
                           TEST_AS_SLUTN_RESN_ID,
                           AS_NO,
                           CRT_USER_ID,
                           CRT_DT,
                           UPD_USER_ID,
                           UPD_DT
    ) VALUES ( #{TEST_UP_ID},
               #{TEST_UP_NO},
               #{TEST_UP_STUS},
               #{TEST_UP_REM},
               #{TEST_UP_GNE},
               #{TEST_MNF_DT},
               #{TEST_UP_SETL_DT},
               #{TEST_UP_SETL_TM},
               #{TEST_YN},
               #{updator},
               #{TEST_AS_DEFECT_PART_ID},
               #{TEST_AS_DEFECT_DTL_RESN_ID},
               #{TEST_AS_DEFECT_ID},
               #{TEST_AS_DEFECT_TYPE_ID},
               #{TEST_AS_SLUTN_RESN_ID},
               #{AS_NO},
               #{updator},
               SYSDATE,
               #{updator},
               SYSDATE
    )
  </insert>

  </mapper>