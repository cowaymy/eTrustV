<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.coway.trust.biz.scm.impl.SalesPlanMngementMapper"> 

  <!-- Supply-CDC -->
  <select id="selectSupplyCDC" parameterType="Map" resultType="egovMap">
    SELECT DISTINCT 
          PLAN_ID CODE_VALUE 
        , CDC     CODE_VIEW
    FROM SCM0005M 
   WHERE PLAN_YEAR  = #{planYear}  
   <if test="planMonth != null and planMonth !=''">
     AND PLAN_MONTH = #{planMonth}  
   </if>
     AND PLAN_WEEK  = #{planWeek}  
     AND PLAN_STUS  = 4
   ORDER BY PLAN_ID
  </select> 
  
  <select id="selectComboSupplyCDC" parameterType="Map" resultType="egovMap">
    SELECT CODE
         , CODE_NAME
         , CODE_ID 
     FROM SYS0013M 
    WHERE CODE_MASTER_ID = #{codeMasterId}
  </select> 
  
  <select id="selectSupplyPlanMaster" parameterType="Map" resultType="egovMap">
     SELECT 
           PLAN_ID   
          ,PLAN_YEAR   
          ,PLAN_WEEK   
          ,CDC   
          ,PLAN_MONTH   
          ,PLAN_STUS   
          ,PLAN_CRT_DT   
          ,LAST_UP_DT   
          ,VER_NO   
          ,VER_DT   
      FROM SCM0005M 
     WHERE PLAN_YEAR = #{scmYearCbBox}
       AND PLAN_WEEK = #{scmPeriodCbBox}
       AND CDC = DECODE(#{cdcCbBox},'2010','KL','2020','PN','2030','JB','2040','KK','2050','KC','') 
                   
  </select> 
  
  <select id="selectSalesPlanMaster" parameterType="Map" resultType="egovMap">
      SELECT 
           PLAN_ID   
          ,PLAN_YEAR   
          ,PLAN_MONTH   
          ,PLAN_WEEK   
          ,TEAM   
          ,PLAN_STUS_ID   
          ,CRT_DT   
          ,STUS_DT   
          ,CRT_USER_ID   
      FROM SCM0001M 
     WHERE PLAN_YEAR  = #{scmYearCbBox} 
       AND PLAN_MONTH = ( SELECT SCM_MONTH FROM SCM0018M WHERE SCM_YEAR = #{scmYearCbBox}  AND week_th = #{scmPeriodCbBox}  AND WEEK_TH_SN = 1) 
       AND PLAN_WEEK  = #{scmPeriodCbBox}
       AND PLAN_STUS_ID = 4
  </select>
  
  <!--  미저장이 있는 경우 RED -->
  <select id="selectSupplyCdcSaveFlag" parameterType="Map" resultType="egovMap">
    SELECT DECODE(COUNT(PLAN_MASTER_ID) ,0,'B','R' ) SAVE_FLAG
      FROM SCM0006D
     WHERE PLAN_MASTER_ID = ( SELECT PLAN_ID 
                                FROM SCM0005M  
                               WHERE PLAN_YEAR = #{scmYearCbBox} 
                                 AND PLAN_WEEK = #{scmPeriodCbBox} 
                                 AND CDC = DECODE(#{cdcCbBox},'2010','KL','2020','PN','2030','JB','2040','KK','2050','KC','') 
                             )
       AND CMPLT = 0
  </select> 
  <!--  임시 나중에 원복 -->
  <select id="selectSupplyCdcMainList" parameterType="Map" resultType="egovMap">
  SELECT  
           MOD( DENSE_RANK() OVER ( ORDER BY STOCK_CTGRY ,STOCK_CODE),2) DIV_ODD
           ,PLAN_DTL_ID   
           ,PLAN_MASTER_ID   
           ,PSI_ID     
           ,STOCK_CODE CODE   
           ,CMPLT      IS_SAVED
           ,LAST_UPD_COLUMN   
           ,PSI_NAME   PSI
           ,STOCK_CTGRY CATEGORY
           ,STOCK_NAME  NAME
           ,S26M.STK_TYPE_ID 
           ,M_3   
           ,M_2   
           ,M_1   
           ,M3_ISSU_AVG   
           ,SALES_PLAN_PRCNTAG   
           ,ROUND(M0_ORD)  M0_ORD  
           ,ROUND(M0_PLAN) M0_PLAN_ORDER  
           ,ROUND(M1) M1  
           ,ROUND(M2) M2  
           ,ROUND(M3) M3  
           ,ROUND(M4) M4  
           ,ROUND(OVERDUE) OVERDUE  
           ,ROUND(WS0) BEF_1_WEEK_TH  
           ,ROUND(WS1) BEF_2_WEEK_TH  
           ,ROUND(WS2) BEF_3_WEEK_TH  
           ,ROUND(WS3) BEF_4_WEEK_TH  
           ,ROUND(W00) W00  
           ,ROUND(W01) W01  
           ,ROUND(W02) W02  
           ,ROUND(W03) W03  
           ,ROUND(W04) W04  
           ,ROUND(W05) W05  
           ,ROUND(W06) W06  
           ,ROUND(W07) W07  
           ,ROUND(W08) W08  
           ,ROUND(W09) W09  
           ,ROUND(W10) W10  
           ,ROUND(W11) W11  
           ,ROUND(W12) W12  
           ,ROUND(W13) W13  
           ,ROUND(W14) W14  
           ,ROUND(W15) W15  
           ,ROUND(W16) W16  
           ,ROUND(W17) W17  
           ,ROUND(W18) W18  
           ,ROUND(W19) W19  
           ,ROUND(W20) W20  
           ,ROUND(W21) W21  
           ,ROUND(W22) W22  
           ,ROUND(W23) W23  
           ,ROUND(W24) W24  
           ,ROUND(W25) W25  
           ,ROUND(W26) W26  
           ,ROUND(W27) W27  
           ,ROUND(W28) W28  
           ,ROUND(W29) W29  
           ,ROUND(W30) W30  
      FROM SCM0006D  S06D
          ,SYS0026M  S26M   
     WHERE PLAN_MASTER_ID = ( SELECT PLAN_ID 
                                FROM SCM0005M  
                               WHERE PLAN_YEAR = '2016'
                                 AND PLAN_WEEK = 10
                                 AND CDC = DECODE(#{cdcCbBox},'2010','KL','2020','PN','2030','JB','2040','KK','2050','KC','')  
                            )
        AND S06D.STOCK_CODE = S26M.STK_CODE
      <if test="stockCodeCbBox != null and stockCodeCbBox !=''">
       AND S06D.STOCK_CODE = #{stockCodeCbBox}         
      </if>
      <if test="scmStockType != null and scmStockType !=''">
       AND S26M.STK_TYPE_ID = #{scmStockType}         
      </if>
     ORDER BY S06D.STOCK_CTGRY 
             ,S06D.STOCK_CODE 
             ,S06D.PSI_ID
  </select>
  
  <select id="selectSupplyCdcMainList_TEMP" parameterType="Map" resultType="egovMap">
  SELECT  
           MOD( DENSE_RANK() OVER ( ORDER BY STOCK_CTGRY ,STOCK_CODE),2) DIV_ODD
           ,PLAN_DTL_ID   
           ,PLAN_MASTER_ID   
           ,PSI_ID     
           ,STOCK_CODE CODE   
           ,CMPLT      IS_SAVED
           ,LAST_UPD_COLUMN   
           ,PSI_NAME   PSI
           ,STOCK_CTGRY CATEGORY
           ,STOCK_NAME  NAME
           ,S26M.STK_TYPE_ID 
           ,M_3   
           ,M_2   
           ,M_1   
           ,M3_ISSU_AVG   
           ,SALES_PLAN_PRCNTAG   
           ,ROUND(M0_ORD)  M0_ORD  
           ,ROUND(M0_PLAN) M0_PLAN_ORDER  
           ,ROUND(M1) M1  
           ,ROUND(M2) M2  
           ,ROUND(M3) M3  
           ,ROUND(M4) M4  
           ,ROUND(OVERDUE) OVERDUE  
           ,ROUND(WS0) BEF_1_WEEK_TH  
           ,ROUND(WS1) BEF_2_WEEK_TH  
           ,ROUND(WS2) BEF_3_WEEK_TH  
           ,ROUND(WS3) BEF_4_WEEK_TH  
           ,ROUND(W00) W00  
           ,ROUND(W01) W01  
           ,ROUND(W02) W02  
           ,ROUND(W03) W03  
           ,ROUND(W04) W04  
           ,ROUND(W05) W05  
           ,ROUND(W06) W06  
           ,ROUND(W07) W07  
           ,ROUND(W08) W08  
           ,ROUND(W09) W09  
           ,ROUND(W10) W10  
           ,ROUND(W11) W11  
           ,ROUND(W12) W12  
           ,ROUND(W13) W13  
           ,ROUND(W14) W14  
           ,ROUND(W15) W15  
           ,ROUND(W16) W16  
           ,ROUND(W17) W17  
           ,ROUND(W18) W18  
           ,ROUND(W19) W19  
           ,ROUND(W20) W20  
           ,ROUND(W21) W21  
           ,ROUND(W22) W22  
           ,ROUND(W23) W23  
           ,ROUND(W24) W24  
           ,ROUND(W25) W25  
           ,ROUND(W26) W26  
           ,ROUND(W27) W27  
           ,ROUND(W28) W28  
           ,ROUND(W29) W29  
           ,ROUND(W30) W30  
      FROM SCM0006D  S06D
          ,SYS0026M  S26M
     WHERE PLAN_MASTER_ID = ( SELECT PLAN_ID 
                                FROM SCM0005M  
                               WHERE PLAN_YEAR = #{scmYearCbBox} 
                                 AND PLAN_WEEK = #{scmPeriodCbBox} 
                                 AND CDC = DECODE(#{cdcCbBox},'2010','KL','2020','PN','2030','JB','2040','KK','2050','KC','')  
                            )
        AND S06D.STOCK_CODE = S26M.STK_CODE
      <if test="stockCodeCbBox != null and stockCodeCbBox !=''">
       AND S06D.STOCK_CODE = #{stockCodeCbBox}         
      </if>
      <if test="scmStockType != null and scmStockType !=''">
       AND S26M.STK_TYPE_ID = #{scmStockType}         
      </if>
     ORDER BY S06D.STOCK_CTGRY 
             ,S06D.STOCK_CODE 
             ,S06D.PSI_ID
  </select>
  
  
<insert id="updatePlanByCDC" parameterType="Map">
      UPDATE SCM0006D
         SET PLAN_MASTER_ID = #{planMasterId} 
      
         <if test='w00 != null and w00 !="" '>
               , W00 = #{w00} 
         </if>
         <if test='w01 != null and w01 !="" '>
               , W01 = #{w01} 
         </if>
         <if test='w02 != null and w02 !="" '>
               , W02 = #{w02} 
         </if>
         <if test='w03 != null and w03 !="" '>
               , W03 = #{w03} 
         </if>
         <if test='w04 != null and w04 !="" '>
               , W04 = #{w04} 
         </if>
         <if test='w05 != null and w05 !="" '>
               , W05 = #{w05} 
         </if>
      
         <if test='w06 != null and w06 !="" '>
               , W06 = #{w06} 
         </if>
         <if test='w07 != null and w07 !="" '>
               , W07 = #{w07} 
         </if>
         <if test='w08 != null and w08 !="" '>
               , W08 = #{w08} 
         </if>
         <if test='w09 != null and w09 !="" '>
               , W09 = #{w09} 
         </if>
         <if test='w10 != null and w10 !="" '>
               , W10 = #{w10} 
         </if>
         
         <if test='w11 != null and w11 !="" '>
               , W11 = #{w11} 
         </if>         
         <if test='w12 != null and w12 !="" '>
               , W12 = #{w12} 
         </if>
         <if test='w13 != null and w13 !="" '>
               , W13 = #{w13} 
         </if>
         <if test='w14 != null and w14 !="" '>
               , W14 = #{w14} 
         </if>
         <if test='w15 != null and w15 !="" '>
               , W15 = #{w15} 
         </if>
         <if test='w16 != null and w16 !="" '>
               , W16 = #{w16} 
         </if>
         <if test='w17 != null and w17 !="" '>
               , W17 = #{w17} 
         </if>
         <if test='w18 != null and w18 !="" '>
               , W18 = #{w18} 
         </if>
         <if test='w19 != null and w19 !="" '>
               , W19 = #{w19} 
         </if>
         <if test='w20 != null and w20 !="" '>
               , W20 = #{w20} 
         </if>
         
         <if test='w21 != null and w21 !="" '>
               , W21 = #{w21} 
         </if>
         <if test='w22 != null and w22 !="" '>
               , W22 = #{w22} 
         </if>
         <if test='w23 != null and w23 !="" '>
               , W23 = #{w23} 
         </if>
         <if test='w24 != null and w24 !="" '>
               , W24 = #{w24} 
         </if>
         <if test='w25 != null and w25 !="" '>
               , W25 = #{w25} 
         </if>
         <if test='w26 != null and w26 !="" '>
               , W26 = #{w26} 
         </if>
         <if test='w27 != null and w27 !="" '>
               , W27 = #{w27} 
         </if>
         <if test='w28 != null and w28 !="" '>
               , W28 = #{w28} 
         </if>
         <if test='w29 != null and w29 !="" '>
               , W29 = #{w29} 
         </if>
         <if test='w30 != null and w30 !="" '>
               , W30 = #{w30} 
         </if>
       
       WHERE PLAN_MASTER_ID = #{planMasterId} 
         AND PSI_ID  = #{psiId} 
         AND STOCK_CODE = #{code}  
         
</insert>  
  
  <!-- Supply-CORP -->
  <select id="selectSupplyCorpList" parameterType="Map" resultType="egovMap">
     SELECT MOD( DENSE_RANK() OVER ( ORDER BY STOCK_CTGRY,STOCK_CODE ),2 ) DIV_ODD
           ,PLAN_YEAR   
           ,PLAN_MONTH   
           ,PLAN_WEEK   
           ,STOCK_CTGRY CATEGORY
           ,STOCK_CODE  CODE 
           ,STOCK_NAME  NAME
           ,STK_TYPE_ID 
           ,PSI_ID      
           ,PSI_NAME    PSI
           ,ROUND(M0_ORD)  M0_ORD 
           ,ROUND(M0_PLAN) M0_PLAN_ORDER  
           ,ROUND(M1) M1  
           ,ROUND(M2) M2  
           ,ROUND(M3) M3  
           ,ROUND(M4) M4  
           ,ROUND(OVERDUE) OVERDUE   
           ,ROUND(WS0) BEF_1_WEEK_TH  
           ,ROUND(WS1) BEF_2_WEEK_TH  
           ,ROUND(WS2) BEF_3_WEEK_TH  
           ,ROUND(WS3) BEF_4_WEEK_TH  
           ,ROUND(W00) W00  
           ,ROUND(W01) W01  
           ,ROUND(W02) W02  
           ,ROUND(W03) W03  
           ,ROUND(W04) W04  
           ,ROUND(W05) W05  
           ,ROUND(W06) W06  
           ,ROUND(W07) W07  
           ,ROUND(W08) W08  
           ,ROUND(W09) W09  
           ,ROUND(W10) W10  
           ,ROUND(W11) W11  
           ,ROUND(W12) W12  
           ,ROUND(W13) W13  
           ,ROUND(W14) W14  
           ,ROUND(W15) W15  
           ,ROUND(W16) W16  
           ,ROUND(W17) W17  
           ,ROUND(W18) W18  
           ,ROUND(W19) W19  
           ,ROUND(W20) W20  
           ,ROUND(W21) W21  
           ,ROUND(W22) W22  
           ,ROUND(W23) W23  
           ,ROUND(W24) W24  
           ,ROUND(W25) W25  
           ,ROUND(W26) W26  
           ,ROUND(W27) W27  
           ,ROUND(W28) W28  
           ,ROUND(W29) W29  
           ,ROUND(W30) W30  
      FROM SCM0040V  
     WHERE PLAN_YEAR  = #{scmYearCbBox} 
       AND PLAN_WEEK  = #{scmPeriodCbBox}
       <if test="stockCodeCbBox != null and stockCodeCbBox !=''">
       AND STOCK_CODE = #{stockCodeCbBox}   
       </if>
       <if test="scmStockType != null and scmStockType !=''">
       AND STK_TYPE_ID = #{scmStockType}
       </if>
     ORDER BY STOCK_CTGRY
             ,STOCK_CODE
             ,PSI_ID
  </select> 
    
</mapper>