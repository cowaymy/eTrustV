<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.coway.trust.biz.scm.impl.SalesPlanMngementMapper">  

    <select id="selectCalendarHeader" parameterType="Map" resultType="egovMap">
    WITH HEAD_DATA 
		AS
		(
			SELECT  
			     SCM_YEAR
			    ,'STOCK' STOCK_PH1
			    ,'team' TEAM_H1
			    ,'planMasterId' PLAN_MASTER_ID
			    ,'category' CATEGORY_H1  
			    ,'code' CODE_H1
			    ,'name' NAME_H1
			    ,'m3AvgIssueOrder' ISUUEORDER_H  
			    ,'m1IssueOrder'  BEFORE_DAY_H2
			    ,'m0PlanOrder' TODAY_H2
			    ,'m1' M1_H2
			    ,'m2' M2_H2
			    ,'m3' M3_H3
			    ,'m4' M4_H4
			    ,'W'|| LPAD(WEEK_TH,2,0)||'-'||WEEK_TH_SN WEEK_SEQ
			   , ROWNUM  RNO  
			 FROM  SCM0018M
			WHERE (SCM_YEAR = #{scmYearCbBox}) 
			  AND (WEEK_TH <![CDATA[ >= ]]> #{scmPeriodCbBox} ) 
			  AND (WEEK_TH <![CDATA[ <= ]]> (#{scmPeriodCbBox} + 16) )
		  )
		  SELECT *
		    FROM HEAD_DATA
		    PIVOT
		   ( MAX(WEEK_SEQ) WEEK_SEQ 
		                     FOR RNO IN (  1 AS W1,2 AS W2,3 AS W3,4 AS W4,5 AS W5,6 AS W6,7 AS W7,8 AS W8,9 AS W9,10 AS W10,11 AS W11,12 AS W12,13 AS W13,14 AS W14,15 AS W15,16 AS W16,17 AS W17,18 AS W18,19 AS W19,20 AS W20, 21 AS W21,22 AS W22,23 AS W23, 24 AS W24, 25 AS W25
                                     ,26 AS W26,27 AS W27,28 AS W28,29 AS W29,30 AS W30
                                    )
       )
    </select>

    <select id="selectSalesCnt" parameterType="Map" resultType="egovMap">
 SELECT  
       SUM(ORD_CNT) SALE_CNT 
  FROM SCM0030S 
  WHERE SCM_YEAR='2017' 
    AND SCM_MONTH=1 
    AND SCM_WEEK_TH = 2
    AND TEAM='DST' 
    AND STOCK_CODE  = #{stockCode}
  GROUP BY SCM_YEAR, SCM_MONTH,SCM_WEEK_TH,TEAM
    </select>

    <select id="selectExcuteYear" parameterType="Map" resultType="egovMap">
			SELECT TO_CHAR((SYSDATE-365),'YYYY') YEAR FROM DUAL
			UNION
			SELECT TO_CHAR(SYSDATE,'YYYY') YEAR FROM DUAL
    </select>

    <select id="selectPeriodByYear" parameterType="Map" resultType="egovMap">
			SELECT SCM_YEAR   
			     , WEEK_TH ||'-'|| WEEK_TH_SN ||decode(length(WEEK_TH),1,'  [','[')||TO_CHAR(WEEK_TH_SN_START,'YYYY-MM-DD') || ' ~ ' ||  WEEK_TH_SN_END ||']' SCM_PERIOD  
			     , SCM_MONTH  
			     , WEEK_TH  
			  FROM SCM0018M 
			 WHERE SCM_YEAR = #{year} 
			   AND WEEK_TH_SN = 1
    </select>

    <select id="selectScmTeamCode" parameterType="Map" resultType="egovMap">
	     SELECT CODE
	           ,CODE_NAME
	      FROM SYS0013M
	     WHERE CODE_MASTER_ID = #{codeMasterId}
	     ORDER BY CODE_ID 
    </select>

    <select id="selectStockCategoryCode" parameterType="Map" resultType="egovMap">
	     SELECT CODE_ID 
				    , CODE 
				    , CODE CODE_NAME
				  FROM
				     (
				       SELECT Extent1.STK_ID STK_ID  ,
				              Extent1.STK_CODE STK_CODE  ,
				              Extent2.CODE_ID CODE_ID  ,
				              Extent2.CODE CODE  ,
				              Extent1.STK_DESC STK_DESC  ,
				              Extent3.CODE_ID CODEID1  ,
				              Extent3.CODE CODE1  
				         FROM SYS0026M Extent1
				               JOIN SYS0013M Extent2   ON Extent1.STK_CTGRY_ID = Extent2.CODE_ID
				               JOIN SYS0013M Extent3   ON Extent1.STK_TYPE_ID = Extent3.CODE_ID
				               JOIN SCM0008M Extent4   ON Extent1.STK_ID = Extent4.STOCK_ID     
				    ) GROUP BY CODE_ID, CODE     
				      ORDER BY CODE_ID, CODE   
	  </select>

    <select id="selectStockCode" parameterType="Map" resultType="egovMap">
			SELECT Extent1.STK_ID   
			     , Extent1.STK_CODE 
			     , Extent1.STK_DESC  
			     , Extent2.CODE_ID   
			     , Extent2.CODE CODE 
			     , Extent3.CODE_ID CODE_ID2  
			     , Extent3.CODE CODE2  
			  FROM SYS0026M Extent1
			  JOIN SYS0013M Extent2   ON Extent1.STK_CTGRY_ID = Extent2.CODE_ID
			  JOIN SYS0013M Extent3   ON Extent1.STK_TYPE_ID = Extent3.CODE_ID
			<choose>
        <when test=' codeId != null and codeId != "" '>
        WHERE EXISTS ( SELECT 1 C1  
                         FROM SCM0008M Extent4
                        WHERE  Extent4.STOCK_ID = Extent1.STK_ID 
                     ) 
		     AND ( 1 = Extent1.STUS_CODE_ID )
		     AND ( 0 = TO_NUMBER(Extent1.IS_NCV) )
		     AND ( Extent2.CODE_ID = #{codeId} )
        </when>
        <otherwise>
          JOIN SCM0008M Extent4   ON Extent1.STK_ID = Extent4.STOCK_ID
        </otherwise>
      </choose>
			 ORDER BY Extent1.STK_DESC   ASC
    </select>
    
    <select id="selectPlanId" parameterType="Map" resultType="egovMap">
			SELECT 
			       PLAN_ID
			      ,PLAN_YEAR
			      ,PLAN_MONTH
			      ,PLAN_WEEK
			      ,TEAM
			      ,DECODE(PLAN_STUS_ID,1,'Active','Confirmed') PLAN_STUS_NM
			      ,TO_CHAR(CRT_DT,'YYYY/MM/DD HH24:MI:SS') CRT_DT
			      ,STUS_DT
			      ,CRT_USER_ID
			 FROM SCM0001M
			WHERE PLAN_YEAR = #{scmYearCbBox}
			  AND PLAN_WEEK = #{scmPeriodCbBox} 
     <if test="scmTeamCbBox != null and scmTeamCbBox !=''">
        AND TEAM      = #{scmTeamCbBox}   
     </if>
			  AND ROWNUM    = 1
    </select>    

    <select id="selectSalesPlanMngmentList" parameterType="Map" resultType="egovMap">
			SELECT  PLAN_DTL_ID      
			       , PLAN_MASTER_ID   
			       , TEAM team        
			       , STOCK_CODE code  
			       , PRE_M3_AVG_ORDED 
			       , PRE_M3_AVG_ISSU  
			       , ROUND(PRE_M3_AVG_ISSU)  ||'/'|| ROUND(PRE_M3_AVG_ORDED)  M3_AVG_Issue_Order
			       , ROUND(M_1)  ||'/'|| ROUND(M1_ORD)  M1_ISSUE_ORDER
             , ROUND(M0_PLAN)  ||'/'|| ROUND(M0_ORD)  M0_PLAN_ORDER
			       , M1_ORD   
			       , M2_ORD   
			       , M3_ORD   
			       , M_3 M_3  
			       , M_2 M_2  
			       , M_1 M_1  
			       , M0_PLAN  
			       , M0_ORD   
			       , M1   
			       , M2   
			       , M3   
			       , M4   
			       , W00  
			       , W01  
			       , W02  
			       , W03  
			       , W04  
			       , W05  
			       , W06  
			       , W07  
			       , W08  
			       , W09  
			       , W10  
			       , W11  
			       , W12  
			       , W13  
			       , W14  
			       , W15  
			       , W16  
			       , W17  
			       , W18  
			       , W19  
			       , W20  
			       , W21  
			       , W22  
			       , W23  
			       , W24  
			       , W25  
			       , W26  
			       , W27  
			       , W28  
			       , W29  
			       , W30  
			       , WS1  
			       , WS2  
			       , WS3  
			       , WS4  
			       , WS5  
			       , STOCK_NAME name  
			       , STOCK_CTGRY category  
			   FROM SCM0039V 
			   WHERE  PLAN_MASTER_ID  IN ( SELECT PLAN_ID
															         FROM SCM0001M
															        WHERE PLAN_YEAR = #{scmYearCbBox}
															          AND PLAN_WEEK = #{scmPeriodCbBox}
															      <if test="scmTeamCbBox != null and scmTeamCbBox !=''">
															          AND TEAM      = #{scmTeamCbBox}   
															      </if>
                                    )
      <choose>
        <when test=' stkCodes != null and stkCodes != "" '>

         AND  STOCK_CODE IN
            <foreach item="item" collection="stkCodes" index="index" open="(" separator="," close=")">
                #{item}
            </foreach>

        </when>
        <otherwise>
        </otherwise>
      </choose>
    </select>

    <select id="selectSalesPlanMngmentPeriod" parameterType="Map" resultType="egovMap">
			SELECT SCM_YEAR   ,
			       WEEK_TH ||'-'|| WEEK_TH_SN ||'['||TO_CHAR(WEEK_TH_SN_START,'YYYY-MM-DD') || ' ~ ' ||  WEEK_TH_SN_END ||']' SCM_PERIOD  ,
			       SCM_MONTH  ,
			       WEEK_TH  
			  FROM SCM0018M 
			 WHERE SCM_YEAR = #{year} 
			   AND WEEK_TH_SN = 1
    </select>
    
    <update id="updateScmPlanMaster" parameterType="Map">
      UPDATE SCM0002D
         SET PLAN_MASTER_ID = #{planMasterId} 
      
         <if test='w00 != null and w00 !="" '>
               , W00 = #{w00} 
         </if>
         <if test='w01 != null and w01 !="" '>
               , W01 = #{w01} 
         </if>
         <if test='w02 != null and w02 !="" '>
               , W02 = #{w02} 
         </if>
         <if test='w03 != null and w03 !="" '>
               , W03 = #{w03} 
         </if>
         <if test='w04 != null and w04 !="" '>
               , W04 = #{w04} 
         </if>
         <if test='w05 != null and w05 !="" '>
               , W05 = #{w05} 
         </if>
      
         <if test='w06 != null and w06 !="" '>
               , W06 = #{w06} 
         </if>
         <if test='w07 != null and w07 !="" '>
               , W07 = #{w07} 
         </if>
         <if test='w08 != null and w08 !="" '>
               , W08 = #{w08} 
         </if>
         <if test='w09 != null and w09 !="" '>
               , W09 = #{w09} 
         </if>
         <if test='w10 != null and w10 !="" '>
               , W10 = #{w10} 
         </if>
         
         <if test='w11 != null and w11 !="" '>
               , W11 = #{w11} 
         </if>         
         <if test='w12 != null and w12 !="" '>
               , W12 = #{w12} 
         </if>
         <if test='w13 != null and w13 !="" '>
               , W13 = #{w13} 
         </if>
         <if test='w14 != null and w14 !="" '>
               , W14 = #{w14} 
         </if>
         <if test='w15 != null and w15 !="" '>
               , W15 = #{w15} 
         </if>
         <if test='w16 != null and w16 !="" '>
               , W16 = #{w16} 
         </if>
         <if test='w17 != null and w17 !="" '>
               , W17 = #{w17} 
         </if>
         <if test='w18 != null and w18 !="" '>
               , W18 = #{w18} 
         </if>
         <if test='w19 != null and w19 !="" '>
               , W19 = #{w19} 
         </if>
         <if test='w20 != null and w20 !="" '>
               , W20 = #{w20} 
         </if>
         
         <if test='w21 != null and w21 !="" '>
               , W21 = #{w21} 
         </if>
         <if test='w22 != null and w22 !="" '>
               , W22 = #{w22} 
         </if>
         <if test='w23 != null and w23 !="" '>
               , W23 = #{w23} 
         </if>
         <if test='w24 != null and w24 !="" '>
               , W24 = #{w24} 
         </if>
         <if test='w25 != null and w25 !="" '>
               , W25 = #{w25} 
         </if>
         <if test='w26 != null and w26 !="" '>
               , W26 = #{w26} 
         </if>
         <if test='w27 != null and w27 !="" '>
               , W27 = #{w27} 
         </if>
         <if test='w28 != null and w28 !="" '>
               , W28 = #{w28} 
         </if>
         <if test='w29 != null and w29 !="" '>
               , W29 = #{w29} 
         </if>
         <if test='w30 != null and w30 !="" '>
               , W30 = #{w30} 
         </if>
       
       WHERE PLAN_MASTER_ID = #{planMasterId} 
         AND STOCK_CODE = #{code}  
         AND TEAM  = #{team} 
    </update>        
    

    <update id="updatePassWord" parameterType="Map">
        UPDATE SYS0047M
        SET USER_PASSWD = #{newPasswordConfirmTxt}
        ,USER_PASSWD_LAST_UPD_DT = SYSDATE
        <choose>
            <when test=' newUserIdTxt != null and newUserIdTxt != "" '>
                WHERE USER_ID = #{newUserIdTxt}
            </when>
            <otherwise>
                WHERE USER_ID = #{searchLoginId}
            </otherwise>
        </choose>
    </update>

    <select id="selectFindUserIdPop" parameterType="Map" resultType="loginVO">
   SELECT 
          SYS47M.USER_NAME    userName
         ,SYS47M.USER_ID      userId
         ,SYS47M.USER_PASSWD  userPassWord
         ,SYS47M.USER_SEC_QUES_ID  userSecQuesId
         ,SYS47M.USER_SEC_QUES_ANS userSecQuesAns
         ,SYS32M.RESN_DESC         securityQuestion
    FROM  SYS0047M SYS47M
        , SYS0032M SYS32M
    WHERE SYS47M.USER_NAME = #{userIdFindPopTxt}
      AND (SYS32M.RESN_ID = SYS47M.USER_SEC_QUES_ID  OR SYS47M.USER_SEC_QUES_ID = 0  )
      AND ROWNUM = 1
  </select>

    <insert id="insertLoginHistory" parameterType="loginHistory">
        INSERT INTO SYS0077M
        (
            system_id
           ,login_dtm
           ,user_id
           ,user_nm
           ,login_type
           ,ip_addr
           ,os
           ,browser
        )
        VALUES
        (
            #{systemId}
            ,SYSDATE
            ,#{userId}
            ,#{userNm}
            ,#{loginType}
            ,#{ipAddr}
            ,#{os}
            ,#{browser}
        )
    </insert>
    

    
</mapper>