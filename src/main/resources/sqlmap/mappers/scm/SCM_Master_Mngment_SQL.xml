<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.coway.trust.biz.scm.impl.ScmMasterMngMentMapper"> 

  <!-- SCM MASTER MANAGEMENT -->
  <select id="selectMasterMngmentSearch" parameterType="Map" resultType="egovMap">
			  SELECT 
			        STK_CTGRY_CODE
			      , STOCK_CODE
			      , STOCK_DESC  
			      , DEFAULTSTOCKNAME DEFAUT_STOCK_NAME  
			      , IS_TRGET   
			      , MEMO   
			      , TO_CHAR(START_DT,'mm-dd-yyyy') START_DT
			      , TO_CHAR(END_DT,'mm-dd-yyyy') END_DT
			      , KL_TARGET   
			      , JB_TARGET   
			      , KK_TARGET   
			      , PN_TARGET   
			      , KC_TARGET        
			      , TO_CHAR(KL_MOQ, 'fm999,990') KL_MOQ      
			      , TO_CHAR(JB_MOQ, 'fm999,990') JB_MOQ   
			      , TO_CHAR(KK_MOQ, 'fm999,990') KK_MOQ   
			      , TO_CHAR(PN_MOQ, 'fm999,990') PN_MOQ   
			      , TO_CHAR(KC_MOQ, 'fm999,990') KC_MOQ    
			      , SAFETY_STOCK   
			      , LEAD_TM   
			      , LOADING_QTY
			         
			      , MIN_ORD_QTY       
			      , STK_CTGRY_ID  
			      , STK_CTGRY_NAME   
			      , STK_TYPE_ID   
			      , STK_TYPE_NAME  
			      , STOCK_ID   
			      , DFLT_STOCK   
			 FROM SCM0046V  
			 WHERE STOCK_ID <![CDATA[ > ]]> 0
		<if test="stockCodeCbBox != null and stockCodeCbBox !=''">
			   AND STOCK_ID = #{stockCodeCbBox}
		</if>
    <if test="scmStockType != null and scmStockType !=''">
         AND STK_TYPE_ID = #{scmStockType}    
   </if>		
			 ORDER BY STK_CTGRY_CODE
			         ,STOCK_DESC	 
  </select> 
  
  <update id="updateMasterMngment" parameterType="Map">
      UPDATE SCM0008M
         SET IS_TRGET = #{isTrget}
         <if test='startDt != null and startDt !=""'>
            ,START_DT = TO_DATE(#{startDt},'mm-dd-yyyy')      
         </if>
         <if test='endDt != null and endDt !=""'>
            ,END_DT   = TO_DATE(#{endDt},'mm-dd-yyyy')
         </if>            
         <if test='memo != null and memo !=""'>
            ,MEMO     = #{memo}
         </if>
         <if test='safetyStock != null and safetyStock !=""'>
            ,SAFETY_STOCK = #{safetyStock} 
         </if>
         <if test='leadTm != null and leadTm !=""'>
            ,LEAD_TM     = #{leadTm}
         </if>
         <if test='loadingQty != null and loadingQty !=""'>
            ,LOADING_QTY = #{loadingQty}
         </if>
         <if test='defautStockName != null and defautStockName !=""'>
            ,DFLT_STOCK  = (SELECT DECODE(STOCK_CODE,NULL, #{defautStockName}, STOCK_CODE ) STOCK_CODE
                              FROM SCM0008M T0 LEFT JOIN SYS0026M T1 ON T1.STK_CODE=T0.STOCK_CODE WHERE (T1.STK_DESC= #{defautStockName} OR STOCK_CODE = #{defautStockName})
                           )
         </if>
			 WHERE STOCK_ID    = #{stockId}    
  </update>  
  
  <update id="updateMasterMngSupplyPlanTgtMoq" parameterType="Map">
    UPDATE SCM0017M
       SET IS_TRGET = #{cdcIsTarget}
       <if test='moq != null and moq !=""'>
         , MOQ      = #{moq}
       </if>
     WHERE STOCK_ID = #{stockId}
       AND CDC_CODE = #{cdcCode}
  </update> 
  
<insert id="insertMstMngMasterCDC" parameterType="Map">
  INSERT INTO SCM0017M 
                     ( STOCK_ID 
                      ,CDC_CODE 
                      ,STOCK_CODE 
                      ,IS_TRGET 
                      ,MOQ
                     )
              VALUES 
                     (
                       #{stkId} 
                      ,#{cdcCode} 
                      ,NULL
                      ,#{cdcIsTarget} 
                      ,NULL
                     )
</insert>    
  
<insert id="insertMstMngMasterHeader" parameterType="Map">
  INSERT INTO SCM0008M 
                     ( 
                       STOCK_ID 
                     , STOCK_CODE 
                     , IS_TRGET 
                     <if test="memoTxt != null and memoTxt !=''">
                     , MEMO 
                     </if>
                     , START_DT 
                     , END_DT 
                     , SAFETY_STOCK 
                     , LEAD_TM 
                     , MIN_ORD_QTY 
                     , LOADING_QTY 
                     , STUS_CODE 
                     , DFLT_STOCK
                     )
              VALUES 
                     (
                       #{stkId} 
                     , #{stockCodeTxt} 
                     , #{headerIsTrget}
                     <if test="memoTxt != null and memoTxt !=''"> 
                     , #{memoTxt} 
                     </if>
                     , TO_DATE(#{StartedDateTxt},'dd-mm-yyyy')  
                     , TO_DATE(#{EndDateTxt},'dd-mm-yyyy')   
                     , #{supplyPlanSafetyStockTxt} 
                     , #{supplyPlanLTtxt} 
                     , #{supplyPlanMoqTxt} 
                     , #{supplyPlanLoadingQtyTxt} 
                     , NULL 
                     , NULL
                     )
</insert>    

  <!-- WARE HOUSE MAPPING -->
  <select id="selectCdcWareMapping" parameterType="Map" resultType="egovMap">
		SELECT 'delete' FLAG
		      ,t0.WH_ID
		      ,t0.CDC 
		      ,t1.WH_LOC_CODE WH_CODE
		      ,t1.WH_LOC_DESC WH_NAME  
		  FROM SCM0022M  t0
		         LEFT JOIN SYS0028M t1   ON t1.WH_LOC_ID = t0.WH_ID
		 WHERE  t1.WH_LOC_CODE NOT LIKE 'CT%' 
	 <if test="cdcCbBox != null and cdcCbBox !=''">
		   AND t0.CDC= DECODE(#{cdcCbBox},'1001','KL','1002','PN','1003','JB','1004','KK','1005','KC','') 
	 </if>
	 
  </select> 
  
  <select id="selectWhLocationMapping" parameterType="Map" resultType="egovMap">
		SELECT WH_LOC_ID WH_ID 
		      , ' ' CDC  
		      , WH_LOC_CODE WH_CODE 
		      , WH_LOC_DESC WH_NAME  
		  FROM SYS0028M 
		 WHERE WH_LOC_CODE LIKE 'DSC%'
		   AND WH_LOC_ID NOT IN ( SELECT WH_ID 
		                            FROM SCM0022M  
		                        )
   
  </select> 
  
  <insert id="insetCdcWhMapping" parameterType="Map">
     INSERT INTO SCM0022M
       (
         WH_ID
        ,CDC
       )
     VALUES
       (
         #{whId}
        ,#{cdc}
       )
  </insert>  
  
  <delete id="deleteCdcWhMapping" parameterType="Map">
     DELETE FROM SCM0022M WHERE  WH_ID = #{whId} AND CDC = #{cdc}
  </delete> 
  
<select id="selectInvenCbBoxByStockType" parameterType="Map" resultType="egovMap">
		SELECT 
		       SCM26M.STK_CODE  STOCK_CODE
		     , SCM26M.STK_DESC  STOCK_NAME 
		     , SCM26M.STK_ID 
		     , Extent2.CODE_ID  CODE_ID_1
		     , Extent3.CODE_ID  CODE_ID_2
		     , Extent2.CODE     CODE_2  
		     , Extent3.CODE     CODE_SUB
		FROM   SYS0026M  SCM26M
		       INNER JOIN SYS0013M  Extent2 ON SCM26M.STK_CTGRY_ID = Extent2.CODE_ID  
		       INNER JOIN SYS0013M  Extent3 ON SCM26M.STK_TYPE_ID = Extent3.CODE_ID
		WHERE  NOT EXISTS (SELECT '1' 
		                     FROM SCM0008M  SCM08M
		                    WHERE SCM08M.STOCK_ID = SCM26M.STK_ID
		                  )
		  AND SCM26M.STUS_CODE_ID = 1 
		  AND TO_NUMBER( SCM26M.IS_NCV ) = 0 
	 <if test='scmStockTypeCbBox != null and scmStockTypeCbBox !=""'>
		  AND Extent3.CODE_ID = #{scmStockTypeCbBox}
	 </if>
		ORDER BY SCM26M.STK_ID
</select> 
  
<select id="selectInvenCbBoxByCategory" parameterType="Map" resultType="egovMap">
		SELECT 
		      Filter2.STK_CODE STK_CODE
        , Filter2.STK_DESC STK_NAME 
        , Filter2.STK_ID 
        , Filter2.CODE_ID CATEGORY_ID 
        , Extent4.CODE_ID STK_TYPE_CODE
        , Filter2.CODE    CATEGORY_CODE
        , Extent4.CODE    STK_TYPE
		FROM   (SELECT SYS26M.STK_ID AS STK_ID
		             , SYS26M.STK_CODE AS STK_CODE
		             , SYS26M.STK_DESC AS STK_DESC
		             , SYS26M.STK_TYPE_ID AS STK_TYPE_ID
		             , SYS13M.CODE_ID AS CODE_ID
		             , SYS13M.Code AS Code
		          FROM SYS0026M  SYS26M
		         INNER JOIN SYS0013M  SYS13M ON SYS26M.STK_CTGRY_ID = SYS13M.CODE_ID
		         WHERE NOT EXISTS (SELECT 
		                                 '1'
		                             FROM SCM0008M  Extent3
		                            WHERE Extent3.STOCK_ID = SYS26M.STK_ID
		                          )
		           AND SYS26M.STUS_CODE_ID = 1 
		           AND TO_NUMBER( SYS26M.IS_NCV ) = 0  
		        )  Filter2
		    INNER JOIN SYS0013M  Extent4 ON Filter2.STK_TYPE_ID = Extent4.CODE_ID
		WHERE 1 = 1
	 <if test='scmStockTypeCbBox != null and scmStockTypeCbBox !=""'>	
	    AND Extent4.CODE_ID = #{scmStockTypeCbBox}
   </if>
   <if test='scmCategoryCbBox != null and scmCategoryCbBox !=""'>
		  AND Filter2.CODE_ID = #{scmCategoryCbBox}
	 </if>
	 <if test='scmStockNameTxt != null and scmStockNameTxt !=""'>	
      AND Filter2.STK_DESC LIKE '%' || #{scmStockNameTxt} || '%'
   </if>
</select> 

  <!-- Business Plan Manager -->
  <select id="selectVersionCbList" parameterType="Map" resultType="egovMap">
		SELECT VER 
		      , EXTRACT(YEAR FROM CRT_DT) YEAR
		      , EXTRACT(MONTH FROM CRT_DT) MONTH
		      , EXTRACT(DAY FROM CRT_DT) DAY
		      , '[ ' || LPAD(VER,2,'0') || ' ]' || ' - ' ||  EXTRACT(YEAR FROM CRT_DT) || '.' || LPAD(EXTRACT(MONTH FROM CRT_DT),2,'0') || '.' ||  LPAD(EXTRACT(DAY FROM CRT_DT),2,'0') EXCUTE_DATE
		  FROM SCM0003M 
		 WHERE TEAM = #{scmTeamCbBox}  
		   AND YYYY = #{scmYearCbBox}  
		 ORDER BY VER DESC
  </select> 
  
  <select id="selectBizPlanManager" parameterType="Map" resultType="egovMap">
			SELECT  STOCK_CTGRY   
			      , M01 JAN
			      , M02 FEB  
			      , M03 MAR  
			      , M04 APR  
			      , M05 MAY  
			      , M06 JUN  
			      , M07 JUL  
			      , M08 AGU  
			      , M09 SEP  
			      , M10 OCT  
			      , M11 NOV  
			      , M12 DEC  
			      , YEARTOTAL TOTAL
			      , PLAN_ID   
			      , YYYY   
			      , VER     
			   FROM SCM0049V 
			  WHERE YYYY = #{scmYearCbBox}            
			    AND VER  = #{scmPeriodCbBox} 
			  ORDER BY  STOCK_CTGRY
  </select> 

  <select id="selectBizPlanStock" parameterType="Map" resultType="egovMap">
			 SELECT  PLAN_ID
			       , TEAM    
			       , STOCK_CTGRY 
			       , STK_TYPE_ID 
			       , STOCK_CODE  
			       , STOCK_NAME  
			       , M01 JAN
			       , M02 FEB  
			       , M03 MAR  
			       , M04 APR  
			       , M05 MAY  
			       , M06 JUN  
			       , M07 JUL  
			       , M08 AGU  
			       , M09 SEP  
			       , M10 OCT  
			       , M11 NOV  
			       , M12 DEC  
			       , YEAR_TOT TOTAL
			       , YYYY  
			       , VER  
			       , PLAN_DESC  
			       , CRT_USER_ID  
			       , CRT_DT  
			       , UPD_USER_ID  
			       , UPD_DT 
			   FROM SCM0050V  
			  WHERE TEAM = #{scmTeamCbBox} 
			    AND YYYY = #{scmYearCbBox}
			    AND VER  = #{scmPeriodCbBox}
       <if test="scmStockType != null and scmStockType !=''">
          AND STK_TYPE_ID = #{scmStockType}
       </if>			    
			  ORDER BY STOCK_NAME  
  </select> 
  
  <update id="updatePlanStock" parameterType="Map">
		  UPDATE SCM0004D
		     SET PLAN_ID = #{planId}   
      <if test='jan != null and jan !="" '>
            , M01 = #{jan} 
      </if>
      <if test='feb != null and feb !="" '>
            , M02 = #{feb} 
      </if>
      <if test='mar != null and mar !="" '>
            , M03 = #{mar} 
      </if>
      <if test='apr != null and apr !="" '>
            , M04 = #{apr} 
      </if>
      <if test='may != null and may !="" '>
            , M05 = #{may} 
      </if>
      <if test='jun != null and jun !="" '>
            , M06 = #{jun} 
      </if>
      <if test='jul != null and jul !="" '>
            , M07 = #{jul} 
      </if>
      <if test='agu != null and agu !="" '>
            , M08 = #{agu} 
      </if>
      <if test='sep != null and sep !="" '>
            , M09 = #{sep} 
      </if>
      <if test='oct != null and oct !="" '>
            , M10 = #{oct} 
      </if>
      <if test='nov != null and nov !="" '>
            , M11 = #{nov} 
      </if>
      <if test='dec != null and dec !="" '>
            , M12 = #{dec} 
      </if>
		 WHERE PLAN_ID    = #{planId}  
		   AND STOCK_CODE = #{stockCode}  
  </update>  
  
    <insert id="insertBizPlanMaster" parameterType="Map">
        <selectKey keyProperty="bizPlanMasterSeq" resultType="int" order="BEFORE">
            SELECT SCM0003M_PLAN_ID_SEQ.NEXTVAL FROM DUAL
        </selectKey>
    
			INSERT INTO SCM0003M
			  (   
			      PLAN_ID
			    , TEAM
			    , YYYY
			    , VER
			    , PLAN_DESC
			    , CRT_USER_ID
			    , CRT_DT
			    , UPD_USER_ID
			    , UPD_DT 
			  )
			  VALUES
			  ( 
			      #{bizPlanMasterSeq}
			    , #{scmTeamCbBox}
			    , #{scmYearCbBox}
			    , (SELECT MAX(VER)+1 FROM SCM0003M WHERE TEAM= #{scmTeamCbBox} AND YYYY= #{scmYearCbBox} GROUP BY TEAM, YYYY )
			    , ''
			    , #{crtUserId} 
			    , SYSDATE
			    , #{updUserId}
			    , SYSDATE
			  )
  </insert>  
  
  <insert id="insertDetailExcel" parameterType="Map">
      INSERT INTO SCM0004D
        (   PLAN_ID
           ,STOCK_CODE
           ,M01
           ,M02
           ,M03
           ,M04
           ,M05
           ,M06
           ,M07
           ,M08
           ,M09
           ,M10
           ,M11
           ,M12
        )
        VALUES
        ( 
            #{planDetailIdSeq}
          , #{stockCode}
          , #{m01}
          , #{m02}
          , #{m03}
          , #{m04}
          , #{m05}
          , #{m06}
          , #{m07}
          , #{m08}
          , #{m09}
          , #{m10}
          , #{m11}
          , #{m12}
        )
  </insert>  

    <select id="getSeqNowSCM0003M" resultType="int">
        SELECT SCM0003M_PLAN_ID_SEQ.CURRVAL FROM DUAL
    </select>
    
    <insert id="insertMasterExcel" parameterType="Map">
        <selectKey keyProperty="bizPlanMasterSeq" resultType="int" order="BEFORE">
            SELECT SCM0003M_PLAN_ID_SEQ.NEXTVAL FROM DUAL
        </selectKey>
    
      INSERT INTO SCM0003M
        (   
            PLAN_ID
          , TEAM
          , YYYY
          , VER
          , PLAN_DESC
          , CRT_USER_ID
          , CRT_DT
          , UPD_USER_ID
          , UPD_DT 
        )
        VALUES
        (   
            #{bizPlanMasterSeq}
          , #{scmTeamCbBox}
          , #{scmYearCbBox}
          , #{scmPeriodCbBox}
          , ''
          , #{crtUserId} 
          , SYSDATE
          , #{updUserId}
          , SYSDATE
        )
  </insert>      
    
    
  <!-- Plan Sales DashBoard -->
  <select id="selectChartDataList" parameterType="Map" resultType="egovMap">
        SELECT 
              SCM_YEAR   
            , SCM_MONTH   
            , BIZ_PLAN   
            , SALES_PLAN  
            , ORDED  ACTUAL_SALES 
            , RATE   
         FROM SCM0051V
        WHERE SCM_YEAR = #{scmYearCbBox}
        ORDER BY SCM_YEAR   
               , SCM_QUARTER   
               , SCM_MONTH   
  </select>
  
  <select id="selectQuarterRate" parameterType="Map" resultType="egovMap">
    SELECT SCM_QUARTER
         , BIZ_PLAN
         , SALES_PLAN
         , ORDED ACTUAL_SALES
         , ROUND(RATE,2) RATING
         , 'view detail' VIEW_DETAIL
     FROM SCM0061V
    WHERE SCM_YEAR = #{scmYearCbBox}
    ORDER BY SCM_QUARTER
    
  </select>
  
  <select id="selectPSDashList" parameterType="Map" resultType="egovMap">
    SELECT
		       GRP
		      ,STOCK_CTGRY
		      ,STK_TYPE_ID
		      ,M1_BIZ_PLAN
		      ,M1_SALES_PLAN
		      ,M1_ORDED
		      ,M1_RATE
		      ,M2_BIZ_PLAN
		      ,M2_SALES_PLAN
		      ,M2_ORDED
		      ,M2_RATE
		      ,M3_BIZ_PLAN
		      ,M3_SALES_PLAN
		      ,M3_ORDED
		      ,M3_RATE
		      ,M4_BIZ_PLAN
		      ,M4_SALES_PLAN
		      ,M4_ORDED
		      ,M4_RATE
		      
		      ,M5_BIZ_PLAN
		      ,M5_SALES_PLAN
		      ,M5_ORDED
		      ,M5_RATE
		      ,M6_BIZ_PLAN
		      ,M6_SALES_PLAN
		      ,M6_ORDED
		      ,M6_RATE
		      ,M7_BIZ_PLAN
		      ,M7_SALES_PLAN
		      ,M7_ORDED
		      ,M7_RATE
		      ,M8_BIZ_PLAN
		      ,M8_SALES_PLAN
		      ,M8_ORDED
		      ,M8_RATE
		      
		      ,M9_BIZ_PLAN
		      ,M9_SALES_PLAN
		      ,M9_ORDED
		      ,M9_RATE
		      ,M10_BIZ_PLAN
		      ,M10_SALES_PLAN
		      ,M10_ORDED
		      ,M10_RATE
		      ,M11_BIZ_PLAN
		      ,M11_SALES_PLAN
		      ,M11_ORDED
		      ,M11_RATE
		      ,M12_BIZ_PLAN
		      ,M12_SALES_PLAN
		      ,M12_ORDED
		      ,M12_RATE
		FROM
		    ( 
		       WITH BODY_CONT
		       AS
		       (
		         SELECT 
		               GRP 
		              ,STOCK_CTGRY 
		              ,STK_TYPE_ID
		              ,SCM_MONTH 
		              ,BIZ_PLAN 
		              ,SALES_PLAN 
		              ,ORDED 
		              ,ROUND(RATE,1) RATE
		         FROM SCM0062V
		        WHERE SCM_YEAR = #{scmYearCbBox}
		          <if test='paramStockCtgry != null and paramStockCtgry !=""'>
		          AND STOCK_CTGRY = #{paramStockCtgry}
		          </if>
		          <if test="scmStockType != null and scmStockType !=''">
              AND STK_TYPE_ID = #{scmStockType}
              </if>
		          <if test='paramGrp != null and paramGrp !=""'>
		          AND GRP= #{paramGrp}
		          </if>
		        GROUP BY GRP 
		                ,SCM_YEAR 
		                ,SCM_QUARTER 
		                ,SCM_MONTH 
		                ,STOCK_CTGRY 
		                ,STK_TYPE_ID
		                ,BIZ_PLAN 
		                ,SALES_PLAN 
		                ,ORDED 
		                ,RATE
		      )
		      SELECT 
		             *
		        FROM BODY_CONT
		         PIVOT ( MAX(BIZ_PLAN)   AS BIZ_PLAN
		               , MAX(SALES_PLAN) AS SALES_PLAN
		               , MAX(ORDED) AS ORDED
		               , MAX(RATE )  AS RATE 
		                 FOR SCM_MONTH  IN (1 AS M1,2 AS M2,3 AS M3,4 AS M4,5 AS M5,6 AS M6,7 AS M7,8 AS M8,9 AS M9,10 AS M10,11 AS M11,12 AS M12) 
		               )
		    ) SCM62V
		       ORDER BY GRP
		               ,STOCK_CTGRY
    
  </select>
  
   
</mapper>