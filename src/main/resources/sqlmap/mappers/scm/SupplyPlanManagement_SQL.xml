<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.coway.trust.biz.scm.impl.SupplyPlanManagementMapper">

<select id="selectSupplyPlanHeader" parameterType="Map" resultType="egovMap">
SELECT PLAN_ID
     , PLAN_DTL_ID
     , STOCK
     , CDC
     , PLAN_STUS_ID
     , VER_NO
     , TYPE_ID
     , TYPE_NAME
     , CATEGORY_ID
     , CATEGORY_NAME
     , CODE
     , NAME
     , PSI_ID
     , PSI_NAME
     , LEAD_TM
     , M0
     , M1
     , M2
     , M3
     , M4
     , DIV_ODD
     , OVERDUE
     , (CASE WHEN (FN_GET_SPLIT_DATA2(W1_WEEK_SEQ ,'-',3) = 2 AND FN_GET_SPLIT_DATA2(W1_WEEK_SEQ ,'-',2) = 1) OR (FN_GET_SPLIT_DATA2(W1_WEEK_SEQ ,'-',3) = 1 AND FN_GET_SPLIT_DATA2(W1_WEEK_SEQ ,'-',2) = 2) OR (FN_GET_SPLIT_DATA2(W1_WEEK_SEQ ,'-',3) = 9 AND FN_GET_SPLIT_DATA2(W1_WEEK_SEQ ,'-',2) = 2) THEN SUBSTR(W1_WEEK_SEQ ,1,5) ELSE SUBSTR(W1_WEEK_SEQ ,1,3) END) AS W1_WEEK_SEQ
     , (CASE WHEN (FN_GET_SPLIT_DATA2(W2_WEEK_SEQ ,'-',3) = 2 AND FN_GET_SPLIT_DATA2(W2_WEEK_SEQ ,'-',2) = 1) OR (FN_GET_SPLIT_DATA2(W2_WEEK_SEQ ,'-',3) = 1 AND FN_GET_SPLIT_DATA2(W2_WEEK_SEQ ,'-',2) = 2) OR (FN_GET_SPLIT_DATA2(W2_WEEK_SEQ ,'-',3) = 9 AND FN_GET_SPLIT_DATA2(W2_WEEK_SEQ ,'-',2) = 2) THEN SUBSTR(W2_WEEK_SEQ ,1,5) ELSE SUBSTR(W2_WEEK_SEQ ,1,3) END) AS W2_WEEK_SEQ
     , (CASE WHEN (FN_GET_SPLIT_DATA2(W3_WEEK_SEQ ,'-',3) = 2 AND FN_GET_SPLIT_DATA2(W3_WEEK_SEQ ,'-',2) = 1) OR (FN_GET_SPLIT_DATA2(W3_WEEK_SEQ ,'-',3) = 1 AND FN_GET_SPLIT_DATA2(W3_WEEK_SEQ ,'-',2) = 2) OR (FN_GET_SPLIT_DATA2(W3_WEEK_SEQ ,'-',3) = 9 AND FN_GET_SPLIT_DATA2(W3_WEEK_SEQ ,'-',2) = 2) THEN SUBSTR(W3_WEEK_SEQ ,1,5) ELSE SUBSTR(W3_WEEK_SEQ ,1,3) END) AS W3_WEEK_SEQ
     , (CASE WHEN (FN_GET_SPLIT_DATA2(W4_WEEK_SEQ ,'-',3) = 2 AND FN_GET_SPLIT_DATA2(W4_WEEK_SEQ ,'-',2) = 1) OR (FN_GET_SPLIT_DATA2(W4_WEEK_SEQ ,'-',3) = 1 AND FN_GET_SPLIT_DATA2(W4_WEEK_SEQ ,'-',2) = 2) OR (FN_GET_SPLIT_DATA2(W4_WEEK_SEQ ,'-',3) = 9 AND FN_GET_SPLIT_DATA2(W4_WEEK_SEQ ,'-',2) = 2) THEN SUBSTR(W4_WEEK_SEQ ,1,5) ELSE SUBSTR(W4_WEEK_SEQ ,1,3) END) AS W4_WEEK_SEQ
     , (CASE WHEN (FN_GET_SPLIT_DATA2(W5_WEEK_SEQ ,'-',3) = 2 AND FN_GET_SPLIT_DATA2(W5_WEEK_SEQ ,'-',2) = 1) OR (FN_GET_SPLIT_DATA2(W5_WEEK_SEQ ,'-',3) = 1 AND FN_GET_SPLIT_DATA2(W5_WEEK_SEQ ,'-',2) = 2) OR (FN_GET_SPLIT_DATA2(W5_WEEK_SEQ ,'-',3) = 9 AND FN_GET_SPLIT_DATA2(W5_WEEK_SEQ ,'-',2) = 2) THEN SUBSTR(W5_WEEK_SEQ ,1,5) ELSE SUBSTR(W5_WEEK_SEQ ,1,3) END) AS W5_WEEK_SEQ
     , (CASE WHEN (FN_GET_SPLIT_DATA2(W6_WEEK_SEQ ,'-',3) = 2 AND FN_GET_SPLIT_DATA2(W6_WEEK_SEQ ,'-',2) = 1) OR (FN_GET_SPLIT_DATA2(W6_WEEK_SEQ ,'-',3) = 1 AND FN_GET_SPLIT_DATA2(W6_WEEK_SEQ ,'-',2) = 2) OR (FN_GET_SPLIT_DATA2(W6_WEEK_SEQ ,'-',3) = 9 AND FN_GET_SPLIT_DATA2(W6_WEEK_SEQ ,'-',2) = 2) THEN SUBSTR(W6_WEEK_SEQ ,1,5) ELSE SUBSTR(W6_WEEK_SEQ ,1,3) END) AS W6_WEEK_SEQ
     , (CASE WHEN (FN_GET_SPLIT_DATA2(W7_WEEK_SEQ ,'-',3) = 2 AND FN_GET_SPLIT_DATA2(W7_WEEK_SEQ ,'-',2) = 1) OR (FN_GET_SPLIT_DATA2(W7_WEEK_SEQ ,'-',3) = 1 AND FN_GET_SPLIT_DATA2(W7_WEEK_SEQ ,'-',2) = 2) OR (FN_GET_SPLIT_DATA2(W7_WEEK_SEQ ,'-',3) = 9 AND FN_GET_SPLIT_DATA2(W7_WEEK_SEQ ,'-',2) = 2) THEN SUBSTR(W7_WEEK_SEQ ,1,5) ELSE SUBSTR(W7_WEEK_SEQ ,1,3) END) AS W7_WEEK_SEQ
     , (CASE WHEN (FN_GET_SPLIT_DATA2(W8_WEEK_SEQ ,'-',3) = 2 AND FN_GET_SPLIT_DATA2(W8_WEEK_SEQ ,'-',2) = 1) OR (FN_GET_SPLIT_DATA2(W8_WEEK_SEQ ,'-',3) = 1 AND FN_GET_SPLIT_DATA2(W8_WEEK_SEQ ,'-',2) = 2) OR (FN_GET_SPLIT_DATA2(W8_WEEK_SEQ ,'-',3) = 9 AND FN_GET_SPLIT_DATA2(W8_WEEK_SEQ ,'-',2) = 2) THEN SUBSTR(W8_WEEK_SEQ ,1,5) ELSE SUBSTR(W8_WEEK_SEQ ,1,3) END) AS W8_WEEK_SEQ
     , (CASE WHEN (FN_GET_SPLIT_DATA2(W9_WEEK_SEQ ,'-',3) = 2 AND FN_GET_SPLIT_DATA2(W9_WEEK_SEQ ,'-',2) = 1) OR (FN_GET_SPLIT_DATA2(W9_WEEK_SEQ ,'-',3) = 1 AND FN_GET_SPLIT_DATA2(W9_WEEK_SEQ ,'-',2) = 2) OR (FN_GET_SPLIT_DATA2(W9_WEEK_SEQ ,'-',3) = 9 AND FN_GET_SPLIT_DATA2(W9_WEEK_SEQ ,'-',2) = 2) THEN SUBSTR(W9_WEEK_SEQ ,1,5) ELSE SUBSTR(W9_WEEK_SEQ ,1,3) END) AS W9_WEEK_SEQ
     , (CASE WHEN (FN_GET_SPLIT_DATA2(W10_WEEK_SEQ,'-',3) = 2 AND FN_GET_SPLIT_DATA2(W10_WEEK_SEQ,'-',2) = 1) OR (FN_GET_SPLIT_DATA2(W10_WEEK_SEQ,'-',3) = 1 AND FN_GET_SPLIT_DATA2(W10_WEEK_SEQ,'-',2) = 2) OR (FN_GET_SPLIT_DATA2(W10_WEEK_SEQ,'-',3) = 9 AND FN_GET_SPLIT_DATA2(W10_WEEK_SEQ,'-',2) = 2) THEN SUBSTR(W10_WEEK_SEQ,1,5) ELSE SUBSTR(W10_WEEK_SEQ,1,3) END) AS W10_WEEK_SEQ
     , (CASE WHEN (FN_GET_SPLIT_DATA2(W11_WEEK_SEQ,'-',3) = 2 AND FN_GET_SPLIT_DATA2(W11_WEEK_SEQ,'-',2) = 1) OR (FN_GET_SPLIT_DATA2(W11_WEEK_SEQ,'-',3) = 1 AND FN_GET_SPLIT_DATA2(W11_WEEK_SEQ,'-',2) = 2) OR (FN_GET_SPLIT_DATA2(W11_WEEK_SEQ,'-',3) = 9 AND FN_GET_SPLIT_DATA2(W11_WEEK_SEQ,'-',2) = 2) THEN SUBSTR(W11_WEEK_SEQ,1,5) ELSE SUBSTR(W11_WEEK_SEQ,1,3) END) AS W11_WEEK_SEQ
     , (CASE WHEN (FN_GET_SPLIT_DATA2(W12_WEEK_SEQ,'-',3) = 2 AND FN_GET_SPLIT_DATA2(W12_WEEK_SEQ,'-',2) = 1) OR (FN_GET_SPLIT_DATA2(W12_WEEK_SEQ,'-',3) = 1 AND FN_GET_SPLIT_DATA2(W12_WEEK_SEQ,'-',2) = 2) OR (FN_GET_SPLIT_DATA2(W12_WEEK_SEQ,'-',3) = 9 AND FN_GET_SPLIT_DATA2(W12_WEEK_SEQ,'-',2) = 2) THEN SUBSTR(W12_WEEK_SEQ,1,5) ELSE SUBSTR(W12_WEEK_SEQ,1,3) END) AS W12_WEEK_SEQ
     , (CASE WHEN (FN_GET_SPLIT_DATA2(W13_WEEK_SEQ,'-',3) = 2 AND FN_GET_SPLIT_DATA2(W13_WEEK_SEQ,'-',2) = 1) OR (FN_GET_SPLIT_DATA2(W13_WEEK_SEQ,'-',3) = 1 AND FN_GET_SPLIT_DATA2(W13_WEEK_SEQ,'-',2) = 2) OR (FN_GET_SPLIT_DATA2(W13_WEEK_SEQ,'-',3) = 9 AND FN_GET_SPLIT_DATA2(W13_WEEK_SEQ,'-',2) = 2) THEN SUBSTR(W13_WEEK_SEQ,1,5) ELSE SUBSTR(W13_WEEK_SEQ,1,3) END) AS W13_WEEK_SEQ
     , (CASE WHEN (FN_GET_SPLIT_DATA2(W14_WEEK_SEQ,'-',3) = 2 AND FN_GET_SPLIT_DATA2(W14_WEEK_SEQ,'-',2) = 1) OR (FN_GET_SPLIT_DATA2(W14_WEEK_SEQ,'-',3) = 1 AND FN_GET_SPLIT_DATA2(W14_WEEK_SEQ,'-',2) = 2) OR (FN_GET_SPLIT_DATA2(W14_WEEK_SEQ,'-',3) = 9 AND FN_GET_SPLIT_DATA2(W14_WEEK_SEQ,'-',2) = 2) THEN SUBSTR(W14_WEEK_SEQ,1,5) ELSE SUBSTR(W14_WEEK_SEQ,1,3) END) AS W14_WEEK_SEQ
     , (CASE WHEN (FN_GET_SPLIT_DATA2(W15_WEEK_SEQ,'-',3) = 2 AND FN_GET_SPLIT_DATA2(W15_WEEK_SEQ,'-',2) = 1) OR (FN_GET_SPLIT_DATA2(W15_WEEK_SEQ,'-',3) = 1 AND FN_GET_SPLIT_DATA2(W15_WEEK_SEQ,'-',2) = 2) OR (FN_GET_SPLIT_DATA2(W15_WEEK_SEQ,'-',3) = 9 AND FN_GET_SPLIT_DATA2(W15_WEEK_SEQ,'-',2) = 2) THEN SUBSTR(W15_WEEK_SEQ,1,5) ELSE SUBSTR(W15_WEEK_SEQ,1,3) END) AS W15_WEEK_SEQ
     , (CASE WHEN (FN_GET_SPLIT_DATA2(W16_WEEK_SEQ,'-',3) = 2 AND FN_GET_SPLIT_DATA2(W16_WEEK_SEQ,'-',2) = 1) OR (FN_GET_SPLIT_DATA2(W16_WEEK_SEQ,'-',3) = 1 AND FN_GET_SPLIT_DATA2(W16_WEEK_SEQ,'-',2) = 2) OR (FN_GET_SPLIT_DATA2(W16_WEEK_SEQ,'-',3) = 9 AND FN_GET_SPLIT_DATA2(W16_WEEK_SEQ,'-',2) = 2) THEN SUBSTR(W16_WEEK_SEQ,1,5) ELSE SUBSTR(W16_WEEK_SEQ,1,3) END) AS W16_WEEK_SEQ
     , (CASE WHEN (FN_GET_SPLIT_DATA2(W17_WEEK_SEQ,'-',3) = 2 AND FN_GET_SPLIT_DATA2(W17_WEEK_SEQ,'-',2) = 1) OR (FN_GET_SPLIT_DATA2(W17_WEEK_SEQ,'-',3) = 1 AND FN_GET_SPLIT_DATA2(W17_WEEK_SEQ,'-',2) = 2) OR (FN_GET_SPLIT_DATA2(W17_WEEK_SEQ,'-',3) = 9 AND FN_GET_SPLIT_DATA2(W17_WEEK_SEQ,'-',2) = 2) THEN SUBSTR(W17_WEEK_SEQ,1,5) ELSE SUBSTR(W17_WEEK_SEQ,1,3) END) AS W17_WEEK_SEQ
     , (CASE WHEN (FN_GET_SPLIT_DATA2(W18_WEEK_SEQ,'-',3) = 2 AND FN_GET_SPLIT_DATA2(W18_WEEK_SEQ,'-',2) = 1) OR (FN_GET_SPLIT_DATA2(W18_WEEK_SEQ,'-',3) = 1 AND FN_GET_SPLIT_DATA2(W18_WEEK_SEQ,'-',2) = 2) OR (FN_GET_SPLIT_DATA2(W18_WEEK_SEQ,'-',3) = 9 AND FN_GET_SPLIT_DATA2(W18_WEEK_SEQ,'-',2) = 2) THEN SUBSTR(W18_WEEK_SEQ,1,5) ELSE SUBSTR(W18_WEEK_SEQ,1,3) END) AS W18_WEEK_SEQ
     , (CASE WHEN (FN_GET_SPLIT_DATA2(W19_WEEK_SEQ,'-',3) = 2 AND FN_GET_SPLIT_DATA2(W19_WEEK_SEQ,'-',2) = 1) OR (FN_GET_SPLIT_DATA2(W19_WEEK_SEQ,'-',3) = 1 AND FN_GET_SPLIT_DATA2(W19_WEEK_SEQ,'-',2) = 2) OR (FN_GET_SPLIT_DATA2(W19_WEEK_SEQ,'-',3) = 9 AND FN_GET_SPLIT_DATA2(W19_WEEK_SEQ,'-',2) = 2) THEN SUBSTR(W19_WEEK_SEQ,1,5) ELSE SUBSTR(W19_WEEK_SEQ,1,3) END) AS W19_WEEK_SEQ
     , (CASE WHEN (FN_GET_SPLIT_DATA2(W20_WEEK_SEQ,'-',3) = 2 AND FN_GET_SPLIT_DATA2(W20_WEEK_SEQ,'-',2) = 1) OR (FN_GET_SPLIT_DATA2(W20_WEEK_SEQ,'-',3) = 1 AND FN_GET_SPLIT_DATA2(W20_WEEK_SEQ,'-',2) = 2) OR (FN_GET_SPLIT_DATA2(W20_WEEK_SEQ,'-',3) = 9 AND FN_GET_SPLIT_DATA2(W20_WEEK_SEQ,'-',2) = 2) THEN SUBSTR(W20_WEEK_SEQ,1,5) ELSE SUBSTR(W20_WEEK_SEQ,1,3) END) AS W20_WEEK_SEQ
     , (CASE WHEN (FN_GET_SPLIT_DATA2(W21_WEEK_SEQ,'-',3) = 2 AND FN_GET_SPLIT_DATA2(W21_WEEK_SEQ,'-',2) = 1) OR (FN_GET_SPLIT_DATA2(W21_WEEK_SEQ,'-',3) = 1 AND FN_GET_SPLIT_DATA2(W21_WEEK_SEQ,'-',2) = 2) OR (FN_GET_SPLIT_DATA2(W21_WEEK_SEQ,'-',3) = 9 AND FN_GET_SPLIT_DATA2(W21_WEEK_SEQ,'-',2) = 2) THEN SUBSTR(W21_WEEK_SEQ,1,5) ELSE SUBSTR(W21_WEEK_SEQ,1,3) END) AS W21_WEEK_SEQ
     , (CASE WHEN (FN_GET_SPLIT_DATA2(W22_WEEK_SEQ,'-',3) = 2 AND FN_GET_SPLIT_DATA2(W22_WEEK_SEQ,'-',2) = 1) OR (FN_GET_SPLIT_DATA2(W22_WEEK_SEQ,'-',3) = 1 AND FN_GET_SPLIT_DATA2(W22_WEEK_SEQ,'-',2) = 2) OR (FN_GET_SPLIT_DATA2(W22_WEEK_SEQ,'-',3) = 9 AND FN_GET_SPLIT_DATA2(W22_WEEK_SEQ,'-',2) = 2) THEN SUBSTR(W22_WEEK_SEQ,1,5) ELSE SUBSTR(W22_WEEK_SEQ,1,3) END) AS W22_WEEK_SEQ
     , (CASE WHEN (FN_GET_SPLIT_DATA2(W23_WEEK_SEQ,'-',3) = 2 AND FN_GET_SPLIT_DATA2(W23_WEEK_SEQ,'-',2) = 1) OR (FN_GET_SPLIT_DATA2(W23_WEEK_SEQ,'-',3) = 1 AND FN_GET_SPLIT_DATA2(W23_WEEK_SEQ,'-',2) = 2) OR (FN_GET_SPLIT_DATA2(W23_WEEK_SEQ,'-',3) = 9 AND FN_GET_SPLIT_DATA2(W23_WEEK_SEQ,'-',2) = 2) THEN SUBSTR(W23_WEEK_SEQ,1,5) ELSE SUBSTR(W23_WEEK_SEQ,1,3) END) AS W23_WEEK_SEQ
     , (CASE WHEN (FN_GET_SPLIT_DATA2(W24_WEEK_SEQ,'-',3) = 2 AND FN_GET_SPLIT_DATA2(W24_WEEK_SEQ,'-',2) = 1) OR (FN_GET_SPLIT_DATA2(W24_WEEK_SEQ,'-',3) = 1 AND FN_GET_SPLIT_DATA2(W24_WEEK_SEQ,'-',2) = 2) OR (FN_GET_SPLIT_DATA2(W24_WEEK_SEQ,'-',3) = 9 AND FN_GET_SPLIT_DATA2(W24_WEEK_SEQ,'-',2) = 2) THEN SUBSTR(W24_WEEK_SEQ,1,5) ELSE SUBSTR(W24_WEEK_SEQ,1,3) END) AS W24_WEEK_SEQ
     , (CASE WHEN (FN_GET_SPLIT_DATA2(W25_WEEK_SEQ,'-',3) = 2 AND FN_GET_SPLIT_DATA2(W25_WEEK_SEQ,'-',2) = 1) OR (FN_GET_SPLIT_DATA2(W25_WEEK_SEQ,'-',3) = 1 AND FN_GET_SPLIT_DATA2(W25_WEEK_SEQ,'-',2) = 2) OR (FN_GET_SPLIT_DATA2(W25_WEEK_SEQ,'-',3) = 9 AND FN_GET_SPLIT_DATA2(W25_WEEK_SEQ,'-',2) = 2) THEN SUBSTR(W25_WEEK_SEQ,1,5) ELSE SUBSTR(W25_WEEK_SEQ,1,3) END) AS W25_WEEK_SEQ
     , (CASE WHEN (FN_GET_SPLIT_DATA2(W26_WEEK_SEQ,'-',3) = 2 AND FN_GET_SPLIT_DATA2(W26_WEEK_SEQ,'-',2) = 1) OR (FN_GET_SPLIT_DATA2(W26_WEEK_SEQ,'-',3) = 1 AND FN_GET_SPLIT_DATA2(W26_WEEK_SEQ,'-',2) = 2) OR (FN_GET_SPLIT_DATA2(W26_WEEK_SEQ,'-',3) = 9 AND FN_GET_SPLIT_DATA2(W26_WEEK_SEQ,'-',2) = 2) THEN SUBSTR(W26_WEEK_SEQ,1,5) ELSE SUBSTR(W26_WEEK_SEQ,1,3) END) AS W26_WEEK_SEQ
     , (CASE WHEN (FN_GET_SPLIT_DATA2(W27_WEEK_SEQ,'-',3) = 2 AND FN_GET_SPLIT_DATA2(W27_WEEK_SEQ,'-',2) = 1) OR (FN_GET_SPLIT_DATA2(W27_WEEK_SEQ,'-',3) = 1 AND FN_GET_SPLIT_DATA2(W27_WEEK_SEQ,'-',2) = 2) OR (FN_GET_SPLIT_DATA2(W27_WEEK_SEQ,'-',3) = 9 AND FN_GET_SPLIT_DATA2(W27_WEEK_SEQ,'-',2) = 2) THEN SUBSTR(W27_WEEK_SEQ,1,5) ELSE SUBSTR(W27_WEEK_SEQ,1,3) END) AS W27_WEEK_SEQ
     , (CASE WHEN (FN_GET_SPLIT_DATA2(W28_WEEK_SEQ,'-',3) = 2 AND FN_GET_SPLIT_DATA2(W28_WEEK_SEQ,'-',2) = 1) OR (FN_GET_SPLIT_DATA2(W28_WEEK_SEQ,'-',3) = 1 AND FN_GET_SPLIT_DATA2(W28_WEEK_SEQ,'-',2) = 2) OR (FN_GET_SPLIT_DATA2(W28_WEEK_SEQ,'-',3) = 9 AND FN_GET_SPLIT_DATA2(W28_WEEK_SEQ,'-',2) = 2) THEN SUBSTR(W28_WEEK_SEQ,1,5) ELSE SUBSTR(W28_WEEK_SEQ,1,3) END) AS W28_WEEK_SEQ
     , (CASE WHEN (FN_GET_SPLIT_DATA2(W29_WEEK_SEQ,'-',3) = 2 AND FN_GET_SPLIT_DATA2(W29_WEEK_SEQ,'-',2) = 1) OR (FN_GET_SPLIT_DATA2(W29_WEEK_SEQ,'-',3) = 1 AND FN_GET_SPLIT_DATA2(W29_WEEK_SEQ,'-',2) = 2) OR (FN_GET_SPLIT_DATA2(W29_WEEK_SEQ,'-',3) = 9 AND FN_GET_SPLIT_DATA2(W29_WEEK_SEQ,'-',2) = 2) THEN SUBSTR(W29_WEEK_SEQ,1,5) ELSE SUBSTR(W29_WEEK_SEQ,1,3) END) AS W29_WEEK_SEQ
     , (CASE WHEN (FN_GET_SPLIT_DATA2(W30_WEEK_SEQ,'-',3) = 2 AND FN_GET_SPLIT_DATA2(W30_WEEK_SEQ,'-',2) = 1) OR (FN_GET_SPLIT_DATA2(W30_WEEK_SEQ,'-',3) = 1 AND FN_GET_SPLIT_DATA2(W30_WEEK_SEQ,'-',2) = 2) OR (FN_GET_SPLIT_DATA2(W30_WEEK_SEQ,'-',3) = 9 AND FN_GET_SPLIT_DATA2(W30_WEEK_SEQ,'-',2) = 2) THEN SUBSTR(W30_WEEK_SEQ,1,5) ELSE SUBSTR(W30_WEEK_SEQ,1,3) END) AS W30_WEEK_SEQ
  FROM (
        SELECT *
          FROM (
                SELECT DECODE(RNO, 1,  '1',  2,  '2',  3,  '3',  4,  '4',  5,  '5',  6,  '6',  7,  '7',  8,  '8',  9,  '9',  10, '10'
                                 , 11, '11', 12, '12', 13, '13', 14, '14', 15, '15', 16, '16', 17, '17', 18, '18', 19, '19', 20, '20'
                                 , 21, '21', 22, '22', 23, '23', 24, '24', 25, '25', 26, '26', 27, '27', 28, '28', 29, '29', 30, '30') AS RNO
                     , WEEK_SEQ
                     , PLAN_ID
                     , PLAN_DTL_ID
                     , STOCK
                     , CDC
                     , PLAN_STUS_ID
                     , VER_NO
                     , TYPE_ID
                     , TYPE_NAME
                     , CATEGORY_ID
                     , CATEGORY_NAME
                     , CODE
                     , NAME
                     , PSI_ID
                     , PSI_NAME
                     , LEAD_TM
                     , M0
                     , M1
                     , M2
                     , M3
                     , M4
                     , DIV_ODD
                     , OVERDUE
                  FROM (
                        SELECT ROWNUM AS RNO
                             , DECODE(LEAD(Z.WEEK_TH_SN) OVER (ORDER BY 'W' || LPAD(Z.WEEK_TH, 2, 0) || '-' || Z.WEEK_TH_SN)
                                    , NULL
                                    , 'W' || LPAD(Z.WEEK_TH, 2, 0) || '-' || Z.WEEK_TH_SN || '-' || '9'
                                    , 'W' || LPAD(Z.WEEK_TH, 2, 0) || '-' || Z.WEEK_TH_SN || '-' || LEAD(Z.WEEK_TH_SN) OVER (ORDER BY 'W'|| LPAD(Z.WEEK_TH, 2, 0) || '-' || Z.WEEK_TH_SN)) AS WEEK_SEQ
                             , 'planId' AS PLAN_ID
                             , 'planDtlId' AS PLAN_DTL_ID
                             , 'stock' AS STOCK
                             , 'cdc' AS CDC
                             , 'planStusId' AS PLAN_STUS_ID
                             , 'verNo' AS VER_NO
                             , 'typeId' AS TYPE_ID
                             , 'typeName' AS TYPE_NAME
                             , 'categoryId' AS CATEGORY_ID
                             , 'categoryName' AS CATEGORY_NAME
                             , 'code' AS CODE
                             , 'name' AS NAME
                             , 'psiId' AS PSI_ID
                             , 'psiName' AS PSI_NAME
                             , 'leadTm' AS LEAD_TM
                             , 'm0' AS M0
                             , 'm1' AS M1
                             , 'm2' AS M2
                             , 'm3' AS M3
                             , 'm4' AS M4
                             , 'divOdd' AS DIV_ODD
                             , 'overdue' AS OVERDUE
                          FROM SCM0018M Z
                         WHERE TO_CHAR(Z.WEEK_TH_SN_START, 'YYYYMM') BETWEEN #{salesPlanFrom} AND #{salesPlanTo}
                        )
                )
         PIVOT (
                MAX(WEEK_SEQ) WEEK_SEQ
                FOR RNO IN (1  AS W1,  2  AS W2,  3  AS W3,  4  AS W4,  5  AS W5,  6  AS W6,  7  AS W7,  8  AS W8,  9  AS W9,  10 AS W10
                          , 11 AS W11, 12 AS W12, 13 AS W13, 14 AS W14, 15 AS W15, 16 AS W16, 17 AS W17, 18 AS W18, 19 AS W19, 20 AS W20
                          , 21 AS W21, 22 AS W22, 23 AS W23, 24 AS W24, 25 AS W25, 26 AS W26, 27 AS W27, 28 AS W28, 29 AS W29, 30 AS W30)
                )
        )
</select>

<select id="selectSupplyPlanInfo" parameterType="Map" resultType="egovMap">
SELECT A.SALES_PLAN_STUS_ID
     , NVL(B.SUPPLY_PLAN_STUS_ID, 0) AS SUPPLY_PLAN_STUS_ID
     , B.PLAN_ID
  FROM (
        SELECT Z.PLAN_YEAR, Z.PLAN_WEEK
             , SUM(TO_NUMBER(Z.PLAN_STUS_ID)) AS SALES_PLAN_STUS_ID
          FROM SCM0001M Z
         WHERE Z.PLAN_YEAR = #{scmYearCbBox}
           AND Z.PLAN_WEEK = #{scmWeekCbBox}
         GROUP BY Z.PLAN_YEAR, Z.PLAN_WEEK
        ) A
     , (
        SELECT Z.PLAN_YEAR, Z.PLAN_WEEK, Z.PLAN_ID
             , NVL(Z.PLAN_STUS, 0) AS SUPPLY_PLAN_STUS_ID
          FROM SCM0005M Z
         WHERE Z.PLAN_YEAR = #{scmYearCbBox}
           AND Z.PLAN_WEEK = #{scmWeekCbBox}
           AND Z.CDC = #{scmCdcCbBox}
        ) B
 WHERE A.PLAN_YEAR = B.PLAN_YEAR(+)
   AND A.PLAN_WEEK = B.PLAN_WEEK(+)
</select>

<select id="selectSupplyPlanList" parameterType="Map" resultType="egovMap">
SELECT MOD(DENSE_RANK() OVER (ORDER BY D.STK_CTGRY_ID, B.STOCK_CODE), 2) AS DIV_ODD
     , A.PLAN_ID
     , A.PLAN_YEAR
     , A.PLAN_MONTH
     , A.PLAN_WEEK
     , A.CDC
     , A.PLAN_STUS AS PLAN_STUS_ID
     , A.VER_NO
     , (
        SELECT SUM(TO_NUMBER(Z.PLAN_STUS_ID))
          FROM SCM0001M Z
         WHERE Z.PLAN_YEAR = #{scmYearCbBox}
           AND Z.PLAN_WEEK = #{scmWeekCbBox}
        ) AS SALES_PLAN_STUS_ID
     , B.PLAN_DTL_ID
     , B.PSI_ID
     , G.CODE_NAME AS PSI_NAME
     , D.STK_TYPE_ID AS TYPE_ID
     , E.CODE_NAME AS CATEGORY_NAME
     , D.STK_CTGRY_ID AS CATEGORY_ID
     , F.CODE_NAME AS TYPE_NAME
     , B.STOCK_CODE AS CODE
     , D.STK_DESC AS NAME
     , NVL(C.LEAD_TM, 0) AS LEAD_TM
     , NVL(B.M0_PLAN, 0) AS M0
     , NVL(B.M1, 0) AS M1
     , NVL(B.M2, 0) AS M2
     , NVL(B.M3, 0) AS M3
     , NVL(B.M4, 0) AS M4
     , NVL(B.OVERDUE, 0) AS OVERDUE
     , NVL(B.W01, 0) AS W01
     , NVL(B.W02, 0) AS W02
     , NVL(B.W03, 0) AS W03
     , NVL(B.W04, 0) AS W04
     , NVL(B.W05, 0) AS W05
     , NVL(B.W06, 0) AS W06
     , NVL(B.W07, 0) AS W07
     , NVL(B.W08, 0) AS W08
     , NVL(B.W09, 0) AS W09
     , NVL(B.W10, 0) AS W10
     , NVL(B.W11, 0) AS W11
     , NVL(B.W12, 0) AS W12
     , NVL(B.W13, 0) AS W13
     , NVL(B.W14, 0) AS W14
     , NVL(B.W15, 0) AS W15
     , NVL(B.W16, 0) AS W16
     , NVL(B.W17, 0) AS W17
     , NVL(B.W18, 0) AS W18
     , NVL(B.W19, 0) AS W19
     , NVL(B.W20, 0) AS W20
     , NVL(B.W21, 0) AS W21
     , NVL(B.W22, 0) AS W22
     , NVL(B.W23, 0) AS W23
     , NVL(B.W24, 0) AS W24
     , NVL(B.W25, 0) AS W25
     , NVL(B.W26, 0) AS W26
     , NVL(B.W27, 0) AS W27
     , NVL(B.W28, 0) AS W28
     , NVL(B.W29, 0) AS W29
     , NVL(B.W30, 0) AS W30
  FROM SCM0005M A
  LEFT OUTER JOIN SCM0006D B ON (A.PLAN_ID = B.PLAN_MASTER_ID)
  LEFT OUTER JOIN SCM0008M C ON (B.STOCK_CODE = C.STOCK_CODE)
  LEFT OUTER JOIN SYS0026M D ON (C.STOCK_ID = D.STK_ID)
  LEFT OUTER JOIN SYS0013M E ON (D.STK_CTGRY_ID = E.CODE_ID AND E.CODE_MASTER_ID = 11) /* 11 : Stock Category */
  LEFT OUTER JOIN SYS0013M F ON (D.STK_TYPE_ID = F.CODE_ID AND F.CODE_MASTER_ID = 15) /* 15 : Spare Part Type */
  LEFT OUTER JOIN SYS0013M G ON (B.PSI_ID = G.CODE AND G.CODE_MASTER_ID = 399) /* 399 : PSI ID */
 WHERE A.PLAN_YEAR = #{scmYearCbBox}
   AND A.PLAN_WEEK = #{scmWeekCbBox}
   AND A.CDC = #{scmCdcCbBox}
	<if test="scmStockTypeCbBox != null and ! scmStockTypeCbBox.isEmpty">
   AND D.STK_TYPE_ID IN
		<foreach item="item" collection="scmStockTypeCbBox" index="index" open="(" separator="," close=")">
		#{item}
		</foreach>
	</if>
   AND ((B.STOCK_CODE LIKE '%' || #{scmStockCode} || '%') OR (D.STK_DESC LIKE '%' || #{scmStockCode} || '%'))
 ORDER BY D.STK_CTGRY_ID, B.STOCK_CODE, B.PSI_ID
</select>

<select id="selectSupplyPlanSummaryList" parameterType="Map" resultType="egovMap">
SELECT MOD(DENSE_RANK() OVER (ORDER BY D.STK_CTGRY_ID, B.STOCK_CODE), 2) AS DIV_ODD
     , A.PLAN_ID
     , A.PLAN_YEAR
     , A.PLAN_MONTH
     , A.PLAN_WEEK
     , B.PSI_ID
     , G.CODE_NAME AS PSI_NAME
     , D.STK_TYPE_ID AS TYPE_ID
     , E.CODE_NAME AS CATEGORY_NAME
     , D.STK_CTGRY_ID AS CATEGORY_ID
     , F.CODE_NAME AS TYPE_NAME
     , B.STOCK_CODE AS CODE
     , D.STK_DESC AS NAME
     , SUM(NVL(B.M0_PLAN, 0)) AS M0
     , SUM(NVL(B.M1, 0)) AS M1
     , SUM(NVL(B.M2, 0)) AS M2
     , SUM(NVL(B.M3, 0)) AS M3
     , SUM(NVL(B.M4, 0)) AS M4
     , SUM(NVL(B.OVERDUE, 0)) AS OVERDUE
     , SUM(NVL(B.W01, 0)) AS W01
     , SUM(NVL(B.W02, 0)) AS W02
     , SUM(NVL(B.W03, 0)) AS W03
     , SUM(NVL(B.W04, 0)) AS W04
     , SUM(NVL(B.W05, 0)) AS W05
     , SUM(NVL(B.W06, 0)) AS W06
     , SUM(NVL(B.W07, 0)) AS W07
     , SUM(NVL(B.W08, 0)) AS W08
     , SUM(NVL(B.W09, 0)) AS W09
     , SUM(NVL(B.W10, 0)) AS W10
     , SUM(NVL(B.W11, 0)) AS W11
     , SUM(NVL(B.W12, 0)) AS W12
     , SUM(NVL(B.W13, 0)) AS W13
     , SUM(NVL(B.W14, 0)) AS W14
     , SUM(NVL(B.W15, 0)) AS W15
     , SUM(NVL(B.W16, 0)) AS W16
     , SUM(NVL(B.W17, 0)) AS W17
     , SUM(NVL(B.W18, 0)) AS W18
     , SUM(NVL(B.W19, 0)) AS W19
     , SUM(NVL(B.W20, 0)) AS W20
     , SUM(NVL(B.W21, 0)) AS W21
     , SUM(NVL(B.W22, 0)) AS W22
     , SUM(NVL(B.W23, 0)) AS W23
     , SUM(NVL(B.W24, 0)) AS W24
     , SUM(NVL(B.W25, 0)) AS W25
     , SUM(NVL(B.W26, 0)) AS W26
     , SUM(NVL(B.W27, 0)) AS W27
     , SUM(NVL(B.W28, 0)) AS W28
     , SUM(NVL(B.W29, 0)) AS W29
     , SUM(NVL(B.W30, 0)) AS W30
  FROM SCM0005M A
  LEFT OUTER JOIN SCM0006D B ON (A.PLAN_ID = B.PLAN_MASTER_ID)
  LEFT OUTER JOIN SCM0008M C ON (B.STOCK_CODE = C.STOCK_CODE)
  LEFT OUTER JOIN SYS0026M D ON (C.STOCK_ID = D.STK_ID)
  LEFT OUTER JOIN SYS0013M E ON (D.STK_CTGRY_ID = E.CODE_ID AND E.CODE_MASTER_ID = 11) /* 11 : Stock Category */
  LEFT OUTER JOIN SYS0013M F ON (D.STK_TYPE_ID = F.CODE_ID AND F.CODE_MASTER_ID = 15) /* 15 : Spare Part Type */
  LEFT OUTER JOIN SYS0013M G ON (B.PSI_ID = G.CODE AND G.CODE_MASTER_ID = 399) /* 399 : PSI ID */
 WHERE A.PLAN_YEAR = #{scmYearCbBox}
   AND A.PLAN_WEEK = #{scmWeekCbBox}
	<if test="scmStockTypeCbBox != null and ! scmStockTypeCbBox.isEmpty">
   AND D.STK_TYPE_ID IN
		<foreach item="item" collection="scmStockTypeCbBox" index="index" open="(" separator="," close=")">
		#{item}
		</foreach>
	</if>
   AND ((B.STOCK_CODE LIKE '%' || #{scmStockCode} || '%') OR (D.STK_DESC LIKE '%' || #{scmStockCode} || '%'))
 GROUP BY A.PLAN_ID
     , A.PLAN_YEAR
     , A.PLAN_MONTH
     , A.PLAN_WEEK
     , B.PSI_ID
     , G.CODE_NAME
     , D.STK_TYPE_ID
     , E.CODE_NAME
     , D.STK_CTGRY_ID
     , F.CODE_NAME
     , B.STOCK_CODE
     , D.STK_DESC
 ORDER BY D.STK_CTGRY_ID, B.STOCK_CODE, B.PSI_ID
</select>

<insert id="insertSupplyPlanMaster" parameterType="Map">
INSERT INTO SCM0005M
(
       PLAN_ID
     , PLAN_YEAR
     , PLAN_MONTH
     , PLAN_WEEK
     , CDC
     , PLAN_STUS
     , PLAN_CRT_DT
     , VER_NO
     , VER_DT
 )
VALUES
(
       SCM0005M_PLAN_ID_SEQ.NEXTVAL
     , #{scmYearCbBox}
     , #{planMonth}
     , #{scmWeekCbBox}
     , #{scmCdcCbBox}
     , 1
     , SYSDATE
     , 0
     , SYSDATE
 )
</insert>

<resultMap id="insertSupplyPlanDetailResultMap" type="egovMap"></resultMap>
<select id="callSpScmInsSupplyPlanDetail" statementType="CALLABLE" parameterType="Map">
{ call GBSLCVD.SP_SCM_INS_SUPPLY_PLAN_DETAIL(#{scmYearCbBox}, #{scmWeekCbBox}, #{scmCdcCbBox}, #{result, mode=OUT, jdbcType=VARCHAR, javaType=STRING, resultMap=insertSupplyPlanDetailResultMap}) }
</select>
<!-- 
<insert id="insertSupplyPlanDetail" parameterType="Map">
INSERT INTO SCM0006D
(
       PLAN_DTL_ID
     , PLAN_MASTER_ID
     , PSI_ID
     , STOCK_CODE
     , CMPLT
     , M0_ORD
     , M0_PLAN
     , M1
     , M2
     , M3
     , M4
     , OVERDUE
     , W01, W02, W03, W04, W05, W06, W07, W08, W09, W10
     , W11, W12, W13, W14, W15, W16, W17, W18, W19, W20
     , W21, W22, W23, W24, W25, W26, W27, W28, W29, W30
 )
VALUES
(
       SCM0006D_PLAN_DETAIL_SEQ.NEXTVAL
     , #{planMasterId}
     , #{psiId}
     , #{stockCode}
     , 1
     , 0
     , NVL(#{m0}, 0)
     , NVL(#{m1}, 0)
     , NVL(#{m2}, 0)
     , NVL(#{m3}, 0)
     , NVL(#{m4}, 0)
     , NVL(#{overdue}, 0)
     , NVL(#{w01}, 0), NVL(#{w02}, 0), NVL(#{w03}, 0), NVL(#{w04}, 0), NVL(#{w05}, 0), NVL(#{w06}, 0), NVL(#{w07}, 0), NVL(#{w08}, 0), NVL(#{w09}, 0), NVL(#{w10}, 0)
     , NVL(#{w11}, 0), NVL(#{w12}, 0), NVL(#{w13}, 0), NVL(#{w14}, 0), NVL(#{w15}, 0), NVL(#{w16}, 0), NVL(#{w17}, 0), NVL(#{w18}, 0), NVL(#{w19}, 0), NVL(#{w20}, 0)
     , NVL(#{w21}, 0), NVL(#{w22}, 0), NVL(#{w23}, 0), NVL(#{w24}, 0), NVL(#{w25}, 0), NVL(#{w26}, 0), NVL(#{w27}, 0), NVL(#{w28}, 0), NVL(#{w29}, 0), NVL(#{w30}, 0)
 )
</insert>
 -->
<!-- 
<resultMap id="insertSalesPlanDetailResultMap" type="egovMap"></resultMap>
<select id="callSpScmInsSalesPlanDetail" statementType="CALLABLE" parameterType="Map">
{ call GBSLCVD.SP_SCM_INS_SALES_PLAN_DETAIL(#{scmYearCbBox}, #{scmWeekCbBox}, #{scmTeamCbBox}, #{result, mode=OUT, jdbcType=VARCHAR, javaType=STRING, resultMap=insertSalesPlanDetailResultMap}) }
</select>
 -->
<update id="updateSupplyPlanDetail" parameterType="Map">
UPDATE SCM0006D
   SET M0_PLAN = CEIL(TO_NUMBER(REPLACE(#{m0}, ',')))
     , M1 = CEIL(TO_NUMBER(REPLACE(#{m1}, ',')))
     , M2 = CEIL(TO_NUMBER(REPLACE(#{m2}, ',')))
     , M3 = CEIL(TO_NUMBER(REPLACE(#{m2}, ',')))
     , M4 = CEIL(TO_NUMBER(REPLACE(#{m2}, ',')))
     , W01 = CEIL(TO_NUMBER(REPLACE(#{w01}, ',')))
     , W02 = CEIL(TO_NUMBER(REPLACE(#{w02}, ',')))
     , W03 = CEIL(TO_NUMBER(REPLACE(#{w03}, ',')))
     , W04 = CEIL(TO_NUMBER(REPLACE(#{w04}, ',')))
     , W05 = CEIL(TO_NUMBER(REPLACE(#{w05}, ',')))
     , W06 = CEIL(TO_NUMBER(REPLACE(#{w06}, ',')))
     , W07 = CEIL(TO_NUMBER(REPLACE(#{w07}, ',')))
     , W08 = CEIL(TO_NUMBER(REPLACE(#{w08}, ',')))
     , W09 = CEIL(TO_NUMBER(REPLACE(#{w09}, ',')))
     , W10 = CEIL(TO_NUMBER(REPLACE(#{w10}, ',')))
     , W11 = CEIL(TO_NUMBER(REPLACE(#{w11}, ',')))
     , W12 = CEIL(TO_NUMBER(REPLACE(#{w12}, ',')))
     , W13 = CEIL(TO_NUMBER(REPLACE(#{w13}, ',')))
     , W14 = CEIL(TO_NUMBER(REPLACE(#{w14}, ',')))
     , W15 = CEIL(TO_NUMBER(REPLACE(#{w15}, ',')))
     , W16 = CEIL(TO_NUMBER(REPLACE(#{w16}, ',')))
     , W17 = CEIL(TO_NUMBER(REPLACE(#{w17}, ',')))
     , W18 = CEIL(TO_NUMBER(REPLACE(#{w18}, ',')))
     , W19 = CEIL(TO_NUMBER(REPLACE(#{w19}, ',')))
     , W20 = CEIL(TO_NUMBER(REPLACE(#{w20}, ',')))
     , W21 = CEIL(TO_NUMBER(REPLACE(#{w21}, ',')))
     , W22 = CEIL(TO_NUMBER(REPLACE(#{w22}, ',')))
     , W23 = CEIL(TO_NUMBER(REPLACE(#{w23}, ',')))
     , W24 = CEIL(TO_NUMBER(REPLACE(#{w24}, ',')))
     , W25 = CEIL(TO_NUMBER(REPLACE(#{w25}, ',')))
     , W26 = CEIL(TO_NUMBER(REPLACE(#{w26}, ',')))
     , W27 = CEIL(TO_NUMBER(REPLACE(#{w27}, ',')))
     , W28 = CEIL(TO_NUMBER(REPLACE(#{w28}, ',')))
     , W29 = CEIL(TO_NUMBER(REPLACE(#{w29}, ',')))
     , W30 = CEIL(TO_NUMBER(REPLACE(#{w30}, ',')))
 WHERE PLAN_DTL_ID = #{planDtlId}
</update>

<update id="updateSupplyPlanMaster" parameterType="Map">
UPDATE SCM0005M
   SET PLAN_STUS = #{planStusId}
 WHERE PLAN_ID = #{planId}
</update>

<select id="selectCdcRate" parameterType="Map" resultType="egovMap">
SELECT A.STOCK_CODE
     , B.CDC
     , CEIL((B.CDC_SUM / A.STOCK_SUM) * 100) AS CDC_RATE
  FROM (
        SELECT Z.STOCK_CODE
             , SUM(Z.ISS_QTY) AS STOCK_SUM
          FROM SCM0051S Z
         WHERE Z.ISS_DT BETWEEN #{befDtFrom} AND #{befDtTo}
         GROUP BY Z.STOCK_CODE
        ) A
  LEFT OUTER JOIN (
                   SELECT Z.STOCK_CODE
                        , Z.CDC
                        , SUM(Z.ISS_QTY) AS CDC_SUM
                     FROM SCM0051S Z
                    WHERE Z.ISS_DT BETWEEN #{befDtFrom} AND #{befDtTo}
                    GROUP BY Z.STOCK_CODE, Z.CDC
                   ) B ON (A.STOCK_CODE = B.STOCK_CODE)
</select>

<select id="selectSupplyPlanMoq" parameterType="Map" resultType="egovMap">
SELECT A.STOCK_CODE
     , NVL(A.MOQ, 0) AS MOQ
     , NVL(B.LEAD_TM, 0) AS LEAD_TM
     , NVL(B.SAFETY_STOCK, 0) AS SAFETY_STOCK
  FROM SCM0017M A
  LEFT OUTER JOIN SCM0008M B ON (A.STOCK_ID = B.STOCK_ID)
 WHERE A.CDC_CODE = #{scmCdcCbBox}
   AND A.IS_TRGET = 1
</select>

<select id="selectSupplyPlanMonth" parameterType="Map" resultType="egovMap">
SELECT A.SCM_MONTH
  FROM SCM0018M A
 WHERE A.SCM_YEAR = #{scmYearCbBox}
   AND A.WEEK_TH = #{scmWeekCbBox}
</select>

<select id="selectSupplyPlanWeekCnt" parameterType="Map" resultType="int">
SELECT COUNT(*) AS WEEK_CNT
  FROM SCM0018M A
 WHERE A.SCM_YEAR = #{scmYearCbBox}
   AND A.SCM_MONTH = #{scmMonth}
   AND A.WEEK_TH <![CDATA[ < ]]> #{scmWeekCbBox}
</select>

<select id="selectBeforeOrdCnt" parameterType="Map" resultType="int">
SELECT NVL(SUM(ORD_CNT), 0) AS ORD_CNT
  FROM SCM0008M A
     , (
        SELECT Z.ORD_CNT
             , Z.STOCK_CODE
          FROM SCM0044S Z
         WHERE Z.SCM_YEAR = #{scmYearCbBox}
           AND Z.SCM_WEEK_TH= #{scmBeforeWeekCbBox}
           AND Z.STOCK_CODE = #{stockCode}
           AND Z.CDC = #{scmCdcCbBox}
        ) B
 WHERE A.STOCK_CODE = B.STOCK_CODE(+)
   AND A.STOCK_CODE = #{stockCode}
</select>

<select id="selectBeforePoCnt" parameterType="Map" resultType="int">
SELECT NVL(SUM(QTY), 0) AS QTY
  FROM (
        SELECT SCM10D.STOCK_CODE
             , SCM10D.PO_ITM_APPV_STUS
             , NVL(SCM10D.QTY,0) AS QTY
             , SCM09M.BAS_YEAR
             , SCM09M.EST_WEEK
             , SCM09M.GR_WEEK
          FROM SCM0009M SCM09M
             , SCM0010D SCM10D
         WHERE SCM09M.PO_NO = SCM10D.PO_NO
           AND SCM10D.PO_ITM_APPV_STUS = '5'
           AND SCM09M.CDC = #{scmCdcCbBox}
           AND BAS_YEAR = #{scmYearCbBox}
           AND EST_WEEK = #{scmBeforeWeekCbBox}
        ) A
     , SCM0008M B
 WHERE B.STOCK_CODE = A.STOCK_CODE(+)
   AND B.STOCK_CODE = #{stockCode}
</select>

<select id="selectAfterPoCnt" parameterType="Map" resultType="int">
SELECT NVL(SUM(QTY), 0) AS QTY
  FROM (
        SELECT X.STOCK_CODE
             , X.PO_ITM_APPV_STUS
             , NVL(X.QTY, 0) AS QTY
             , Z.BAS_YEAR
             , Z.EST_WEEK
             , Z.GR_WEEK
          FROM SCM0009M Z, SCM0010D X
         WHERE Z.PO_NO = X.PO_NO
           AND X.PO_ITM_APPV_STUS = '5'
           AND Z.CDC = #{scmCdcCbBox}
           AND BAS_YEAR = FN_GET_CALYEAR(#{scmYearCbBox}, #{planMonth}, #{scmWeekCbBox}, #{scmAfterWeekCbBox})
           AND EST_WEEK = FN_GET_CALWEEK(#{scmYearCbBox}, #{planMonth}, #{scmWeekCbBox}, #{scmAfterWeekCbBox})
        ) A
     , SCM0008M B
 WHERE B.STOCK_CODE = A.STOCK_CODE(+)
   AND B.STOCK_CODE = #{stockCode}
</select>

<select id="selectSupplyPlanBeforeYearsLastWeek" parameterType="Map" resultType="egovMap">
SELECT MAX(A.WEEK_TH) AS WEEK_TH
  FROM SCM0018M A
 WHERE A.SCM_YEAR = TO_NUMBER(#{scmYearCbBox}) - 1
</select>

<select id="selectSupplyPlanEndingInventory" parameterType="Map" resultType="int">
SELECT NVL(SUM(QTY) + SUM(MOV_QTY),0) QTY
  FROM LOG0088M A
     , SYS0028M B
 WHERE B.WH_LOC_ID  = A.LOG_ID
   AND B.CDC_CODE = #{scmCdcCbBox}
   AND A.ZMONTH = (#{beforeYear} || LPAD(#{beforeMonth},2,0))
   AND A.STK_CODE = #{stockCode}
</select>

<select id="selectSalesPlanInSupplyPlan" parameterType="Map" resultType="egovMap">
SELECT B.PLAN_DTL_ID
     , B.STOCK_CODE
     , NVL(C.SAFETY_STOCK, 0) AS SAFETY_STOCK
     , NVL(C.LEAD_TM, 0) AS LEAD_TM
     , NVL(D.MOQ, 0) AS MOQ
  FROM SCM0005M A
  LEFT OUTER JOIN SCM0006D B ON (A.PLAN_ID = B.PLAN_MASTER_ID)
  LEFT OUTER JOIN SCM0008M C ON (B.STOCK_CODE = C.STOCK_CODE)
  LEFT OUTER JOIN SCM0017M D ON (B.STOCK_CODE = D.STOCK_CODE AND A.CDC = D.CDC_CODE)
 WHERE A.PLAN_YEAR = #{scmYearCbBox}
   AND A.PLAN_WEEK = #{scmWeekCbBox}
   AND A.CDC = #{scmCdcCbBox}
   AND B.PSI_ID = 2
</select>

<select id="selectInsertedSalesPlan" parameterType="Map" resultType="egovMap">
SELECT B.PLAN_DTL_ID
     , B.STOCK_CODE
     , NVL(B.W01, 0) AS W01, NVL(B.W02, 0) AS W02, NVL(B.W03, 0) AS W03, NVL(B.W04, 0) AS W04, NVL(B.W05, 0) AS W05
     , NVL(B.W06, 0) AS W06, NVL(B.W07, 0) AS W07, NVL(B.W08, 0) AS W08, NVL(B.W09, 0) AS W09, NVL(B.W10, 0) AS W10
     , NVL(B.W11, 0) AS W11, NVL(B.W12, 0) AS W12, NVL(B.W13, 0) AS W13, NVL(B.W14, 0) AS W14, NVL(B.W15, 0) AS W15
     , NVL(B.W16, 0) AS W16, NVL(B.W17, 0) AS W17, NVL(B.W18, 0) AS W18, NVL(B.W19, 0) AS W19, NVL(B.W20, 0) AS W20
     , NVL(B.W21, 0) AS W21, NVL(B.W22, 0) AS W22, NVL(B.W23, 0) AS W23, NVL(B.W24, 0) AS W24, NVL(B.W25, 0) AS W25
     , NVL(B.W26, 0) AS W26, NVL(B.W27, 0) AS W27, NVL(B.W28, 0) AS W28, NVL(B.W29, 0) AS W29, NVL(B.W30, 0) AS W30
  FROM SCM0005M A
  LEFT OUTER JOIN SCM0006D B ON (A.PLAN_ID = B.PLAN_MASTER_ID)
 WHERE A.PLAN_YEAR = #{scmYearCbBox}
   AND A.PLAN_WEEK = #{scmWeekCbBox}
   AND A.CDC = #{scmCdcCbBox}
   AND B.STOCK_CODE = #{stockCode}
   AND B.PSI_ID = 1
</select>


<insert id="insertSupplyPlanDetailPsi1" parameterType="Map">
INSERT INTO SCM0006D
(
       PLAN_DTL_ID
     , PLAN_MASTER_ID
     , PSI_ID
     , STOCK_CODE
     , CMPLT
     , OVERDUE
     , M0_ORD
     , M0_PLAN
     , M1, M2, M3, M4
     , W01, W02, W03, W04, W05, W06, W07, W08, W09, W10
     , W11, W12, W13, W14, W15, W16, W17, W18, W19, W20
     , W21, W22, W23, W24, W25, W26, W27, W28, W29, W30
 )
SELECT SCM0006D_PLAN_DETAIL_SEQ.NEXTVAL AS PLAN_DTL_ID
     , #{planId}
     , 1 AS PSI_ID
     , B.STOCK_CODE
     , 1 AS CMPLT
     , NVL(E.QTY, 0) - NVL(F.QTY, 0) AS OVERDUE
     , CEIL(NVL((NVL(B.M0_ORD, 0) * D.CDC_RATE) / 100, 0)) AS M0_ORDER
     , CEIL(NVL((NVL(B.M0_PLAN, 0) * D.CDC_RATE) / 100, 0)) AS M0
     , CEIL(NVL((NVL(B.M1, 0) * D.CDC_RATE) / 100, 0)) AS M1
     , CEIL(NVL((NVL(B.M2, 0) * D.CDC_RATE) / 100, 0)) AS M2
     , CEIL(NVL((NVL(B.M3, 0) * D.CDC_RATE) / 100, 0)) AS M3
     , CEIL(NVL((NVL(B.M4, 0) * D.CDC_RATE) / 100, 0)) AS M4
     , CEIL(NVL((NVL(B.W01, 0) * D.CDC_RATE) / 100, 0)) AS W01
     , CEIL(NVL((NVL(B.W02, 0) * D.CDC_RATE) / 100, 0)) AS W02
     , CEIL(NVL((NVL(B.W03, 0) * D.CDC_RATE) / 100, 0)) AS W03
     , CEIL(NVL((NVL(B.W04, 0) * D.CDC_RATE) / 100, 0)) AS W04
     , CEIL(NVL((NVL(B.W05, 0) * D.CDC_RATE) / 100, 0)) AS W05
     , CEIL(NVL((NVL(B.W06, 0) * D.CDC_RATE) / 100, 0)) AS W06
     , CEIL(NVL((NVL(B.W07, 0) * D.CDC_RATE) / 100, 0)) AS W07
     , CEIL(NVL((NVL(B.W08, 0) * D.CDC_RATE) / 100, 0)) AS W08
     , CEIL(NVL((NVL(B.W09, 0) * D.CDC_RATE) / 100, 0)) AS W09
     , CEIL(NVL((NVL(B.W10, 0) * D.CDC_RATE) / 100, 0)) AS W10
     , CEIL(NVL((NVL(B.W11, 0) * D.CDC_RATE) / 100, 0)) AS W11
     , CEIL(NVL((NVL(B.W12, 0) * D.CDC_RATE) / 100, 0)) AS W12
     , CEIL(NVL((NVL(B.W13, 0) * D.CDC_RATE) / 100, 0)) AS W13
     , CEIL(NVL((NVL(B.W14, 0) * D.CDC_RATE) / 100, 0)) AS W14
     , CEIL(NVL((NVL(B.W15, 0) * D.CDC_RATE) / 100, 0)) AS W15
     , CEIL(NVL((NVL(B.W16, 0) * D.CDC_RATE) / 100, 0)) AS W16
     , CEIL(NVL((NVL(B.W17, 0) * D.CDC_RATE) / 100, 0)) AS W17
     , CEIL(NVL((NVL(B.W18, 0) * D.CDC_RATE) / 100, 0)) AS W18
     , CEIL(NVL((NVL(B.W19, 0) * D.CDC_RATE) / 100, 0)) AS W19
     , CEIL(NVL((NVL(B.W20, 0) * D.CDC_RATE) / 100, 0)) AS W20
     , CEIL(NVL((NVL(B.W21, 0) * D.CDC_RATE) / 100, 0)) AS W21
     , CEIL(NVL((NVL(B.W22, 0) * D.CDC_RATE) / 100, 0)) AS W22
     , CEIL(NVL((NVL(B.W23, 0) * D.CDC_RATE) / 100, 0)) AS W23
     , CEIL(NVL((NVL(B.W24, 0) * D.CDC_RATE) / 100, 0)) AS W24
     , CEIL(NVL((NVL(B.W25, 0) * D.CDC_RATE) / 100, 0)) AS W25
     , CEIL(NVL((NVL(B.W26, 0) * D.CDC_RATE) / 100, 0)) AS W26
     , CEIL(NVL((NVL(B.W27, 0) * D.CDC_RATE) / 100, 0)) AS W27
     , CEIL(NVL((NVL(B.W28, 0) * D.CDC_RATE) / 100, 0)) AS W28
     , CEIL(NVL((NVL(B.W29, 0) * D.CDC_RATE) / 100, 0)) AS W29
     , CEIL(NVL((NVL(B.W30, 0) * D.CDC_RATE) / 100, 0)) AS W30
  FROM SCM0001M A
  LEFT OUTER JOIN SCM0002D B ON (A.PLAN_ID = B.PLAN_MASTER_ID)
  LEFT OUTER JOIN SCM0017M C ON (B.STOCK_CODE = C.STOCK_CODE AND C.CDC_CODE = #{scmCdcCbBox} AND C.IS_TRGET = 1)
  LEFT OUTER JOIN (
                   SELECT Z.STOCK_CODE
                        , X.CDC
                        , CEIL((X.CDC_SUM / Z.STOCK_SUM) * 100) AS CDC_RATE
                     FROM (
                           SELECT H.STOCK_CODE
                                , SUM(H.ISS_QTY) AS STOCK_SUM
                                , COUNT(DISTINCT H.CDC) AS CDC_SUM
                             FROM SCM0051S H
                            WHERE H.ISS_DT BETWEEN #{befDtFrom} AND #{befDtTo}
                            GROUP BY H.STOCK_CODE
                           ) Z
                     LEFT OUTER JOIN (
                                      SELECT G.STOCK_CODE
                                           , G.CDC
                                           , SUM(G.ISS_QTY) AS CDC_SUM
                                        FROM SCM0051S G
                                       WHERE G.ISS_DT BETWEEN #{befDtFrom} AND #{befDtTo}
                                       GROUP BY G.STOCK_CODE, G.CDC
                                      ) X ON (Z.STOCK_CODE = X.STOCK_CODE)
                   ) D ON (B.STOCK_CODE = D.STOCK_CODE AND D.CDC = #{scmCdcCbBox})
  LEFT OUTER JOIN SCM0028S E ON (E.CDC = #{scmCdcCbBox} AND B.STOCK_CODE = E.STOCK_CODE AND E.CLOS_YEAR = #{invenYear} AND E.CLOS_MONTH = #{invenMonth})
  LEFT OUTER JOIN SCM0029S F ON (F.CDC = #{scmCdcCbBox} AND B.STOCK_CODE = F.STOCK_CODE AND F.CLOS_YEAR = #{invenYear} AND F.CLOS_MONTH = #{invenMonth})
 WHERE A.PLAN_YEAR = #{scmYearCbBox}
   AND A.PLAN_WEEK = #{scmWeekCbBox}
</insert>

<insert id="insertSupplyPlanDetailPsi235" parameterType="Map">
INSERT INTO SCM0006D
(
       PLAN_DTL_ID
     , PLAN_MASTER_ID
     , PSI_ID
     , STOCK_CODE
     , CMPLT
     , OVERDUE
 )
SELECT SCM0006D_PLAN_DETAIL_SEQ.NEXTVAL AS PLAN_DTL_ID
     , #{planId}
     , A.PSI_ID
     , A.STOCK_CODE
     , 1 AS CMPLT
     , A.OVERDUE
  FROM (
        SELECT 2 AS PSI_ID
             , B.STOCK_CODE
             , 0 AS OVERDUE
          FROM SCM0005M A
          LEFT OUTER JOIN SCM0006D B ON (A.PLAN_ID = B.PLAN_MASTER_ID)
         WHERE A.PLAN_YEAR = #{scmYearCbBox}
           AND A.PLAN_WEEK = #{scmWeekCbBox}
           AND A.CDC = #{scmCdcCbBox}
           AND B.PSI_ID = 1
        UNION ALL
        SELECT 3 AS PSI_ID
             , A.STOCK_CODE
             , NVL(SUM(B.QTY), 0) AS OVERDUE
          FROM (
                SELECT Z.CDC
                     , X.STOCK_CODE
                     , Z.PLAN_YEAR || LPAD(Z.PLAN_WEEK, 2, '0') AS YYYYMM
                  FROM SCM0005M Z
                  LEFT OUTER JOIN SCM0006D X ON (Z.PLAN_ID = X.PLAN_MASTER_ID)
                 WHERE Z.PLAN_YEAR = #{scmYearCbBox}
                   AND Z.PLAN_WEEK = #{scmWeekCbBox}
                   AND Z.CDC = #{scmCdcCbBox}
                   AND X.PSI_ID = 1
                ) A
          LEFT OUTER JOIN (
                           SELECT Z.CDC
                                , X.STOCK_CODE
                                , Z.GR_YEAR || LPAD(Z.GR_WEEK, 2, '0') AS YYYYMM
                                , NVL(X.QTY, 0) - NVL(X.GR_QTY, 0) AS QTY
                             FROM SCM0009M Z
                             LEFT OUTER JOIN SCM0010D X ON (Z.PO_NO = X.PO_NO)
                            WHERE Z.CDC = #{scmCdcCbBox}
                           ) B ON (A.STOCK_CODE = B.STOCK_CODE AND A.YYYYMM > B.YYYYMM)
         GROUP BY A.STOCK_CODE
        UNION ALL
        SELECT 5 AS PSI_ID
             , B.STOCK_CODE
             , NVL(C.QTY, 0) AS OVERDUE
          FROM SCM0005M A
          LEFT OUTER JOIN SCM0006D B ON (A.PLAN_ID = B.PLAN_MASTER_ID)
          LEFT OUTER JOIN SCM0029S C ON (C.CDC = #{scmCdcCbBox} AND B.STOCK_CODE = C.STOCK_CODE AND C.CLOS_YEAR = #{invenYear} AND C.CLOS_MONTH = #{invenMonth})
         WHERE A.PLAN_YEAR = #{scmYearCbBox}
           AND A.PLAN_WEEK = #{scmWeekCbBox}
           AND A.CDC = #{scmCdcCbBox}
           AND B.PSI_ID = 1
        ) A
</insert>

<insert id="insertSupplyPlanDetailPsi4" parameterType="Map">
INSERT INTO SCM0006D
(
       PLAN_DTL_ID
     , PLAN_MASTER_ID
     , PSI_ID
     , STOCK_CODE
     , CMPLT
     , OVERDUE
     , M0_ORD
     , M0_PLAN
     , M1, M2, M3, M4
     , W01, W02, W03, W04, W05, W06, W07, W08, W09, W10
     , W11, W12, W13, W14, W15, W16, W17, W18, W19, W20
     , W21, W22, W23, W24, W25, W26, W27, W28, W29, W30
 )
SELECT SCM0006D_PLAN_DETAIL_SEQ.NEXTVAL AS PLAN_DTL_ID
     , #{planId}
     , 4 AS PSI_ID
     , B.STOCK_CODE
     , 1 AS CMPLT
     , 0 AS OVERDUE
     , NVL(C.M0_ORD, 0) AS M0_ORD
     , NVL(C.M0, 0) AS M0
     , NVL(C.M1, 0) AS M1, NVL(C.M2, 0) AS M2, NVL(C.M3, 0) AS M3, NVL(C.M4, 0) AS M4
     , NVL(C.W01, 0) AS W01, NVL(C.W02, 0) AS W02, NVL(C.W03, 0) AS W03, NVL(C.W04, 0) AS W04, NVL(C.W05, 0) AS W05
     , NVL(C.W06, 0) AS W06, NVL(C.W07, 0) AS W07, NVL(C.W08, 0) AS W08, NVL(C.W09, 0) AS W09, NVL(C.W10, 0) AS W10
     , NVL(C.W11, 0) AS W11, NVL(C.W12, 0) AS W12, NVL(C.W13, 0) AS W13, NVL(C.W14, 0) AS W14, NVL(C.W15, 0) AS W15
     , NVL(C.W16, 0) AS W16, NVL(C.W17, 0) AS W17, NVL(C.W18, 0) AS W18, NVL(C.W19, 0) AS W19, NVL(C.W20, 0) AS W20
     , NVL(C.W21, 0) AS W21, NVL(C.W22, 0) AS W22, NVL(C.W23, 0) AS W23, NVL(C.W24, 0) AS W24, NVL(C.W25, 0) AS W25
     , NVL(C.W26, 0) AS W26, NVL(C.W27, 0) AS W27, NVL(C.W28, 0) AS W28, NVL(C.W29, 0) AS W29, NVL(C.W30, 0) AS W30
  FROM SCM0005M A
  LEFT OUTER JOIN SCM0006D B ON (A.PLAN_ID = B.PLAN_MASTER_ID)
  LEFT OUTER JOIN (
                   SELECT A.PLAN_ID
                        , 4 AS PSI_ID
                        , B.STOCK_CODE
                        , 1 AS CMPLT
                        , 0 AS OVERDUE
                        , NVL(B.M0_ORD, 0) AS M0_ORD
                        , NVL(B.M0_PLAN, 0) AS M0
                        , NVL(B.M1, 0) AS M1, NVL(B.M2, 0) AS M2, NVL(B.M3, 0) AS M3, NVL(B.M4, 0) AS M4
                        , NVL(B.W01, 0) AS W01, NVL(B.W02, 0) AS W02, NVL(B.W03, 0) AS W03, NVL(B.W04, 0) AS W04, NVL(B.W05, 0) AS W05
                        , NVL(B.W06, 0) AS W06, NVL(B.W07, 0) AS W07, NVL(B.W08, 0) AS W08, NVL(B.W09, 0) AS W09, NVL(B.W10, 0) AS W10
                        , NVL(B.W11, 0) AS W11, NVL(B.W12, 0) AS W12, NVL(B.W13, 0) AS W13, NVL(B.W14, 0) AS W14, NVL(B.W15, 0) AS W15
                        , NVL(B.W16, 0) AS W16, NVL(B.W17, 0) AS W17, NVL(B.W18, 0) AS W18, NVL(B.W19, 0) AS W19, NVL(B.W20, 0) AS W20
                        , NVL(B.W21, 0) AS W21, NVL(B.W22, 0) AS W22, NVL(B.W23, 0) AS W23, NVL(B.W24, 0) AS W24, NVL(B.W25, 0) AS W25
                        , NVL(B.W26, 0) AS W26, NVL(B.W27, 0) AS W27, NVL(B.W28, 0) AS W28, NVL(B.W29, 0) AS W29, NVL(B.W30, 0) AS W30
                     FROM SCM0005M A
                     LEFT OUTER JOIN SCM0006D B ON (A.PLAN_ID = B.PLAN_MASTER_ID)
                    WHERE A.PLAN_YEAR = #{befPlanYear}
                      AND A.PLAN_WEEK = #{befPlanWeek}
                      AND A.CDC = #{scmCdcCbBox}
                      AND B.PSI_ID = 3
                   ) C ON (B.STOCK_CODE = C.STOCK_CODE)
 WHERE A.PLAN_YEAR = #{scmYearCbBox}
   AND A.PLAN_WEEK = #{scmWeekCbBox}
   AND A.CDC = #{scmCdcCbBox}
   AND B.PSI_ID = 1
</insert>

<update id="updateSupplyPlanDetailPsi1" parameterType="Map">
UPDATE SCM0006D
   SET M0_PLAN = CEIL(TO_NUMBER(REPLACE(#{m0}, ',')))
     , M1 = CEIL(TO_NUMBER(REPLACE(#{m1}, ',')))
     , M2 = CEIL(TO_NUMBER(REPLACE(#{m2}, ',')))
     , M3 = CEIL(TO_NUMBER(REPLACE(#{m3}, ',')))
     , M4 = CEIL(TO_NUMBER(REPLACE(#{m4}, ',')))
 WHERE PLAN_MASTER_ID = #{planId}
   AND PSI_ID = #{psiId}
   AND STOCK_CODE = #{stockCode}
</update>

<update id="updateSupplyPlanDetailPsi235" parameterType="Map">
UPDATE SCM0006D
   SET M0_PLAN = CEIL(TO_NUMBER(REPLACE(#{m0}, ',')))
     , M1 = CEIL(TO_NUMBER(REPLACE(#{m1}, ',')))
     , M2 = CEIL(TO_NUMBER(REPLACE(#{m2}, ',')))
     , M3 = CEIL(TO_NUMBER(REPLACE(#{m3}, ',')))
     , M4 = CEIL(TO_NUMBER(REPLACE(#{m4}, ',')))
     , W01 = CEIL(TO_NUMBER(REPLACE(#{w01}, ',')))
     , W02 = CEIL(TO_NUMBER(REPLACE(#{w02}, ',')))
     , W03 = CEIL(TO_NUMBER(REPLACE(#{w03}, ',')))
     , W04 = CEIL(TO_NUMBER(REPLACE(#{w04}, ',')))
     , W05 = CEIL(TO_NUMBER(REPLACE(#{w05}, ',')))
     , W06 = CEIL(TO_NUMBER(REPLACE(#{w06}, ',')))
     , W07 = CEIL(TO_NUMBER(REPLACE(#{w07}, ',')))
     , W08 = CEIL(TO_NUMBER(REPLACE(#{w08}, ',')))
     , W09 = CEIL(TO_NUMBER(REPLACE(#{w09}, ',')))
     , W10 = CEIL(TO_NUMBER(REPLACE(#{w10}, ',')))
     , W11 = CEIL(TO_NUMBER(REPLACE(#{w11}, ',')))
     , W12 = CEIL(TO_NUMBER(REPLACE(#{w12}, ',')))
     , W13 = CEIL(TO_NUMBER(REPLACE(#{w13}, ',')))
     , W14 = CEIL(TO_NUMBER(REPLACE(#{w14}, ',')))
     , W15 = CEIL(TO_NUMBER(REPLACE(#{w15}, ',')))
     , W16 = CEIL(TO_NUMBER(REPLACE(#{w16}, ',')))
     , W17 = CEIL(TO_NUMBER(REPLACE(#{w17}, ',')))
     , W18 = CEIL(TO_NUMBER(REPLACE(#{w18}, ',')))
     , W19 = CEIL(TO_NUMBER(REPLACE(#{w19}, ',')))
     , W20 = CEIL(TO_NUMBER(REPLACE(#{w20}, ',')))
     , W21 = CEIL(TO_NUMBER(REPLACE(#{w21}, ',')))
     , W22 = CEIL(TO_NUMBER(REPLACE(#{w22}, ',')))
     , W23 = CEIL(TO_NUMBER(REPLACE(#{w23}, ',')))
     , W24 = CEIL(TO_NUMBER(REPLACE(#{w24}, ',')))
     , W25 = CEIL(TO_NUMBER(REPLACE(#{w25}, ',')))
     , W26 = CEIL(TO_NUMBER(REPLACE(#{w26}, ',')))
     , W27 = CEIL(TO_NUMBER(REPLACE(#{w27}, ',')))
     , W28 = CEIL(TO_NUMBER(REPLACE(#{w28}, ',')))
     , W29 = CEIL(TO_NUMBER(REPLACE(#{w29}, ',')))
     , W30 = CEIL(TO_NUMBER(REPLACE(#{w30}, ',')))
 WHERE PLAN_MASTER_ID = #{planId}
   AND PSI_ID = #{psiId}
   AND STOCK_CODE = #{stockCode}
</update>

<select id="selectBefWeekInfo" parameterType="Map" resultType="egovMap">
SELECT A.BEF_PLAN_YEAR
     , A.BEF_PLAN_WEEK
     , (
        SELECT Z.SCM_MONTH
          FROM SCM0018M Z
         WHERE Z.SCM_YEAR = A.BEF_PLAN_YEAR
           AND Z.WEEK_TH = A.BEF_PLAN_WEEK
           AND Z.WEEK_TH_SN = 1
        ) AS BEF_PLAN_MONTH
     , (
        SELECT MIN(A.WEEK_TH)
          FROM SCM0018M A
         WHERE A.SCM_YEAR = #{scmYearCbBox}
           AND A.SCM_MONTH = (SELECT Z.SCM_MONTH FROM SCM0018M Z WHERE Z.SCM_YEAR = #{scmYearCbBox} AND Z.WEEK_TH = #{scmWeekCbBox})
        ) AS FST_WEEK
     , (
        SELECT MIN(Z.LEAD_TM)
          FROM SCM0008M Z
         WHERE Z.LEAD_TM IS NOT NULL
           AND Z.LEAD_TM != 0
        ) AS LEAD_TM
  FROM (
        SELECT A.BEF_PLAN_YEAR
             , CASE WHEN TO_NUMBER(#{scmWeekCbBox}) = 1 THEN (SELECT TO_NUMBER(MAX(Z.WEEK_TH)) FROM SCM0018M Z WHERE Z.SCM_YEAR = A.BEF_PLAN_YEAR)
                    ELSE TO_NUMBER(#{scmWeekCbBox}) - 1 END AS BEF_PLAN_WEEK
          FROM (
                SELECT CASE WHEN TO_NUMBER(#{scmWeekCbBox}) = 1 THEN TO_NUMBER(#{scmYearCbBox}) - 1
                            ELSE TO_NUMBER(#{scmYearCbBox}) END AS BEF_PLAN_YEAR
                  FROM DUAL
                ) A
        ) A
</select>

<select id="selectPsi1" parameterType="Map" resultType="egovMap">
SELECT A.PLAN_ID
     , A.PLAN_MONTH
     , B.PLAN_DTL_ID
     , B.PSI_ID
     , B.STOCK_CODE
     , NVL(C.MOQ, 0) AS MOQ
     , NVL(D.SAFETY_STOCK, 0) AS SAFETY_STOCK
     , NVL(D.LEAD_TM, 0) AS LEAD_TM
     , NVL(D.LOADING_QTY, 0) AS LOADING_QTY
     , NVL(B.OVERDUE, 0) AS OVERDUE
     , NVL(B.W01, 0) AS W01, NVL(B.W02, 0) AS W02, NVL(B.W03, 0) AS W03, NVL(B.W04, 0) AS W04, NVL(B.W05, 0) AS W05
     , NVL(B.W06, 0) AS W06, NVL(B.W07, 0) AS W07, NVL(B.W08, 0) AS W08, NVL(B.W09, 0) AS W09, NVL(B.W10, 0) AS W10
     , NVL(B.W11, 0) AS W11, NVL(B.W12, 0) AS W12, NVL(B.W13, 0) AS W13, NVL(B.W14, 0) AS W14, NVL(B.W15, 0) AS W15
     , NVL(B.W16, 0) AS W16, NVL(B.W17, 0) AS W17, NVL(B.W18, 0) AS W18, NVL(B.W19, 0) AS W19, NVL(B.W20, 0) AS W20
     , NVL(B.W21, 0) AS W21, NVL(B.W22, 0) AS W22, NVL(B.W23, 0) AS W23, NVL(B.W24, 0) AS W24, NVL(B.W25, 0) AS W25
     , NVL(B.W26, 0) AS W26, NVL(B.W27, 0) AS W27, NVL(B.W28, 0) AS W28, NVL(B.W29, 0) AS W29, NVL(B.W30, 0) AS W30
  FROM SCM0005M A 
  LEFT OUTER JOIN SCM0006D B ON (A.PLAN_ID = B.PLAN_MASTER_ID AND B.PSI_ID = 1)
  LEFT OUTER JOIN SCM0017M C ON (B.STOCK_CODE = C.STOCK_CODE AND C.IS_TRGET = 1 AND C.CDC_CODE = #{scmCdcCbBox})
  LEFT OUTER JOIN SCM0008M D ON (B.STOCK_CODE = D.STOCK_CODE AND D.IS_TRGET = 1 AND D.STUS_CODE = 1)
 WHERE A.PLAN_YEAR = #{scmYearCbBox}
   AND A.PLAN_WEEK = #{scmWeekCbBox}
   AND A.CDC = #{scmCdcCbBox}
 ORDER BY B.STOCK_CODE
</select>

<select id="selectEachPsi" parameterType="Map" resultType="egovMap">
SELECT A.PLAN_ID
     , A.PLAN_MONTH
     , B.PLAN_DTL_ID
     , B.PSI_ID
     , B.STOCK_CODE
     , NVL(B.OVERDUE, 0) AS OVERDUE
     , NVL(B.W01, 0) AS W01, NVL(B.W02, 0) AS W02, NVL(B.W03, 0) AS W03, NVL(B.W04, 0) AS W04, NVL(B.W05, 0) AS W05
     , NVL(B.W06, 0) AS W06, NVL(B.W07, 0) AS W07, NVL(B.W08, 0) AS W08, NVL(B.W09, 0) AS W09, NVL(B.W10, 0) AS W10
     , NVL(B.W11, 0) AS W11, NVL(B.W12, 0) AS W12, NVL(B.W13, 0) AS W13, NVL(B.W14, 0) AS W14, NVL(B.W15, 0) AS W15
     , NVL(B.W16, 0) AS W16, NVL(B.W17, 0) AS W17, NVL(B.W18, 0) AS W18, NVL(B.W19, 0) AS W19, NVL(B.W20, 0) AS W20
     , NVL(B.W21, 0) AS W21, NVL(B.W22, 0) AS W22, NVL(B.W23, 0) AS W23, NVL(B.W24, 0) AS W24, NVL(B.W25, 0) AS W25
     , NVL(B.W26, 0) AS W26, NVL(B.W27, 0) AS W27, NVL(B.W28, 0) AS W28, NVL(B.W29, 0) AS W29, NVL(B.W30, 0) AS W30
  FROM SCM0005M A
  LEFT OUTER JOIN SCM0006D B ON (A.PLAN_ID = B.PLAN_MASTER_ID AND B.PSI_ID = #{psiId})
 WHERE A.PLAN_YEAR = #{scmYearCbBox}
   AND A.PLAN_WEEK = #{scmWeekCbBox}
   AND A.CDC = #{scmCdcCbBox}
 ORDER BY B.STOCK_CODE
</select>

<select id="selectPoInLeadTm" parameterType="Map" resultType="egovMap">
SELECT B.STOCK_CODE
     , NVL((SELECT SUM(NVL(X.QTY, 0)) - SUM(NVL(X.GR_QTY, 0))
              FROM SCM0009M Z
              LEFT OUTER JOIN SCM0010D X ON (Z.PO_NO = X.PO_NO)
             WHERE Z.BAS_YEAR = A.PLAN_YEAR
               AND Z.CDC = A.CDC
               AND Z.GR_WEEK = #{week1}
               AND X.STOCK_CODE = B.STOCK_CODE
            ), 0) AS W01
     , NVL((SELECT SUM(NVL(X.QTY, 0)) - SUM(NVL(X.GR_QTY, 0))
              FROM SCM0009M Z
              LEFT OUTER JOIN SCM0010D X ON (Z.PO_NO = X.PO_NO)
             WHERE Z.BAS_YEAR = A.PLAN_YEAR
               AND Z.CDC = A.CDC
               AND Z.GR_WEEK = #{week2}
               AND X.STOCK_CODE = B.STOCK_CODE
            ), 0) AS W02
     , NVL((SELECT SUM(NVL(X.QTY, 0)) - SUM(NVL(X.GR_QTY, 0))
              FROM SCM0009M Z
              LEFT OUTER JOIN SCM0010D X ON (Z.PO_NO = X.PO_NO)
             WHERE Z.BAS_YEAR = A.PLAN_YEAR
               AND Z.CDC = A.CDC
               AND Z.GR_WEEK = #{week3}
               AND X.STOCK_CODE = B.STOCK_CODE
            ), 0) AS W03
     , NVL((SELECT SUM(NVL(X.QTY, 0)) - SUM(NVL(X.GR_QTY, 0))
              FROM SCM0009M Z
              LEFT OUTER JOIN SCM0010D X ON (Z.PO_NO = X.PO_NO)
             WHERE Z.BAS_YEAR = A.PLAN_YEAR
               AND Z.CDC = A.CDC
               AND Z.GR_WEEK = #{week4}
               AND X.STOCK_CODE = B.STOCK_CODE
            ), 0) AS W04
     , NVL((SELECT SUM(NVL(X.QTY, 0)) - SUM(NVL(X.GR_QTY, 0))
              FROM SCM0009M Z
              LEFT OUTER JOIN SCM0010D X ON (Z.PO_NO = X.PO_NO)
             WHERE Z.BAS_YEAR = A.PLAN_YEAR
               AND Z.CDC = A.CDC
               AND Z.GR_WEEK = #{week5}
               AND X.STOCK_CODE = B.STOCK_CODE
            ), 0) AS W05
     , NVL((SELECT SUM(NVL(X.QTY, 0)) - SUM(NVL(X.GR_QTY, 0))
              FROM SCM0009M Z
              LEFT OUTER JOIN SCM0010D X ON (Z.PO_NO = X.PO_NO)
             WHERE Z.BAS_YEAR = A.PLAN_YEAR
               AND Z.CDC = A.CDC
               AND Z.GR_WEEK = #{week6}
               AND X.STOCK_CODE = B.STOCK_CODE
            ), 0) AS W06
     , NVL((SELECT SUM(NVL(X.QTY, 0)) - SUM(NVL(X.GR_QTY, 0))
              FROM SCM0009M Z
              LEFT OUTER JOIN SCM0010D X ON (Z.PO_NO = X.PO_NO)
             WHERE Z.BAS_YEAR = A.PLAN_YEAR
               AND Z.CDC = A.CDC
               AND Z.GR_WEEK = #{week7}
               AND X.STOCK_CODE = B.STOCK_CODE
            ), 0) AS W07
     , NVL((SELECT SUM(NVL(X.QTY, 0)) - SUM(NVL(X.GR_QTY, 0))
              FROM SCM0009M Z
              LEFT OUTER JOIN SCM0010D X ON (Z.PO_NO = X.PO_NO)
             WHERE Z.BAS_YEAR = A.PLAN_YEAR
               AND Z.CDC = A.CDC
               AND Z.GR_WEEK = #{week8}
               AND X.STOCK_CODE = B.STOCK_CODE
            ), 0) AS W08
     , NVL((SELECT SUM(NVL(X.QTY, 0)) - SUM(NVL(X.GR_QTY, 0))
              FROM SCM0009M Z
              LEFT OUTER JOIN SCM0010D X ON (Z.PO_NO = X.PO_NO)
             WHERE Z.BAS_YEAR = A.PLAN_YEAR
               AND Z.CDC = A.CDC
               AND Z.GR_WEEK = #{week9}
               AND X.STOCK_CODE = B.STOCK_CODE
            ), 0) AS W09
     , NVL((SELECT SUM(NVL(X.QTY, 0)) - SUM(NVL(X.GR_QTY, 0))
              FROM SCM0009M Z
              LEFT OUTER JOIN SCM0010D X ON (Z.PO_NO = X.PO_NO)
             WHERE Z.BAS_YEAR = A.PLAN_YEAR
               AND Z.CDC = A.CDC
               AND Z.GR_WEEK = #{week10}
               AND X.STOCK_CODE = B.STOCK_CODE
            ), 0) AS W10
     , NVL((SELECT SUM(NVL(X.QTY, 0)) - SUM(NVL(X.GR_QTY, 0))
              FROM SCM0009M Z
              LEFT OUTER JOIN SCM0010D X ON (Z.PO_NO = X.PO_NO)
             WHERE Z.BAS_YEAR = A.PLAN_YEAR
               AND Z.CDC = A.CDC
               AND Z.GR_WEEK = #{week11}
               AND X.STOCK_CODE = B.STOCK_CODE
            ), 0) AS W11
     , NVL((SELECT SUM(NVL(X.QTY, 0)) - SUM(NVL(X.GR_QTY, 0))
              FROM SCM0009M Z
              LEFT OUTER JOIN SCM0010D X ON (Z.PO_NO = X.PO_NO)
             WHERE Z.BAS_YEAR = A.PLAN_YEAR
               AND Z.CDC = A.CDC
               AND Z.GR_WEEK = #{week12}
               AND X.STOCK_CODE = B.STOCK_CODE
            ), 0) AS W12
     , NVL((SELECT SUM(NVL(X.QTY, 0)) - SUM(NVL(X.GR_QTY, 0))
              FROM SCM0009M Z
              LEFT OUTER JOIN SCM0010D X ON (Z.PO_NO = X.PO_NO)
             WHERE Z.BAS_YEAR = A.PLAN_YEAR
               AND Z.CDC = A.CDC
               AND Z.GR_WEEK = #{week13}
               AND X.STOCK_CODE = B.STOCK_CODE
            ), 0) AS W13
     , NVL((SELECT SUM(NVL(X.QTY, 0)) - SUM(NVL(X.GR_QTY, 0))
              FROM SCM0009M Z
              LEFT OUTER JOIN SCM0010D X ON (Z.PO_NO = X.PO_NO)
             WHERE Z.BAS_YEAR = A.PLAN_YEAR
               AND Z.CDC = A.CDC
               AND Z.GR_WEEK = #{week14}
               AND X.STOCK_CODE = B.STOCK_CODE
            ), 0) AS W14
     , NVL((SELECT SUM(NVL(X.QTY, 0)) - SUM(NVL(X.GR_QTY, 0))
              FROM SCM0009M Z
              LEFT OUTER JOIN SCM0010D X ON (Z.PO_NO = X.PO_NO)
             WHERE Z.BAS_YEAR = A.PLAN_YEAR
               AND Z.CDC = A.CDC
               AND Z.GR_WEEK = #{week15}
               AND X.STOCK_CODE = B.STOCK_CODE
            ), 0) AS W15
  FROM SCM0005M A
  LEFT OUTER JOIN SCM0006D B ON (A.PLAN_ID = B.PLAN_MASTER_ID AND B.PSI_ID = 1)
 WHERE A.PLAN_YEAR = #{scmYearCbBox}
   AND A.PLAN_WEEK = #{scmWeekCbBox}
   AND A.CDC = #{scmCdcCbBox}
 ORDER BY B.STOCK_CODE
</select>

<select id="selectTotalSplitInfo" parameterType="Map" resultType="egovMap">
SELECT A.CAL_ID
     , A.SCM_YEAR AS PLAN_YEAR
     , A.SCM_MONTH
     , B.PLAN_MONTH
     , A.WEEK_TH AS PLAN_WEEK
     , A.WEEK_TH_SN AS PLAN_WEEK_SN
     , TO_CHAR(A.WEEK_TH_SN_START, 'YYYYMMDD') AS PLAN_WEEK_START
     , TO_CHAR(A.WEEK_TH_SN_END, 'YYYYMMDD') AS PLAN_WEEK_END
     , A.IS_SRPTD
     , A.LEAD_TM
     , A.PLAN_WEEK_TH
     , A.FST_WEEK
     , (
        SELECT SUM(CASE WHEN Z.WEEK_TH_SN = 2 THEN 1 ELSE 0 END)
          FROM SCM0018M Z
         WHERE Z.SCM_YEAR = #{scmYearCbBox}
           AND Z.WEEK_TH BETWEEN A.WEEK_TH AND TO_NUMBER(A.LEAD_TM) + TO_NUMBER(A.PLAN_WEEK_TH)
        ) AS SPLIT_CNT
     , B.BEF_PLAN_YEAR
     , B.BEF_PLAN_WEEK
     , (
        SELECT Z.SCM_MONTH
          FROM SCM0018M Z
         WHERE Z.SCM_YEAR = B.BEF_PLAN_YEAR
           AND Z.WEEK_TH = B.BEF_PLAN_WEEK
           AND Z.WEEK_TH_SN = 1
        ) AS BEF_PLAN_MONTH
     , C.WEEK_CNT AS M0_WEEK_CNT
     , D.WEEK_CNT AS M1_WEEK_CNT
     , E.WEEK_CNT AS M2_WEEK_CNT
     , F.WEEK_CNT AS M3_WEEK_CNT
     , G.WEEK_CNT AS M4_WEEK_CNT
  FROM (
        SELECT *
          FROM SCM0018M A
             , (SELECT MIN(Z.LEAD_TM) AS LEAD_TM
                  FROM SCM0008M Z
                 WHERE Z.LEAD_TM IS NOT NULL
                   AND Z.LEAD_TM != 0) B
             , (SELECT #{scmWeekCbBox} - MIN(Z.WEEK_TH) AS PLAN_WEEK_TH
                     , MIN(Z.WEEK_TH) AS FST_WEEK
                  FROM SCM0018M Z
                 WHERE Z.SCM_YEAR = #{scmYearCbBox}
                   AND Z.SCM_MONTH = (SELECT MIN(SCM_MONTH) FROM SCM0018M WHERE SCM_YEAR = #{scmYearCbBox} AND WEEK_TH = #{scmWeekCbBox})
                 GROUP BY Z.SCM_YEAR) C
         WHERE A.SCM_YEAR = #{scmYearCbBox}
        ) A
     , (
        SELECT A.BEF_PLAN_YEAR
             , (SELECT MIN(SCM_MONTH) FROM SCM0018M WHERE SCM_YEAR = #{scmYearCbBox} AND WEEK_TH = #{scmWeekCbBox}) AS PLAN_MONTH
             , CASE WHEN TO_NUMBER(#{scmWeekCbBox}) = 1 THEN (SELECT TO_NUMBER(MAX(Z.WEEK_TH)) FROM SCM0018M Z WHERE Z.SCM_YEAR = A.BEF_PLAN_YEAR)
                    ELSE TO_NUMBER(#{scmWeekCbBox}) - 1 END AS BEF_PLAN_WEEK
          FROM (
                SELECT CASE WHEN TO_NUMBER(#{scmWeekCbBox}) = 1 THEN TO_NUMBER(#{scmYearCbBox}) - 1
                            ELSE TO_NUMBER(#{scmYearCbBox}) END AS BEF_PLAN_YEAR
                  FROM DUAL
                ) A
        ) B
     , (
        SELECT COUNT(*) AS WEEK_CNT
          FROM SCM0018M Z
         WHERE Z.USE_YN = 'Y'
           AND TO_CHAR(Z.WEEK_TH_SN_END, 'YYYYMM') = #{scmYearCbBox} || LPAD((SELECT MIN(SCM_MONTH) FROM SCM0018M WHERE SCM_YEAR = #{scmYearCbBox} AND WEEK_TH = #{scmWeekCbBox}), 2, 0)
        ) C
     , (
        SELECT COUNT(*) AS WEEK_CNT
          FROM SCM0018M Z
         WHERE Z.USE_YN = 'Y'
           AND TO_CHAR(Z.WEEK_TH_SN_END, 'YYYYMM') = (SELECT TO_CHAR(ADD_MONTHS(TO_DATE(#{scmYearCbBox} || LPAD((SELECT MIN(SCM_MONTH) FROM SCM0018M WHERE SCM_YEAR = #{scmYearCbBox} AND WEEK_TH = #{scmWeekCbBox}), 2, 0), 'YYYYMM'), 1), 'YYYYMM') FROM DUAL)
        ) D
     , (
        SELECT COUNT(*) AS WEEK_CNT
          FROM SCM0018M Z
         WHERE Z.USE_YN = 'Y'
           AND TO_CHAR(Z.WEEK_TH_SN_END, 'YYYYMM') = (SELECT TO_CHAR(ADD_MONTHS(TO_DATE(#{scmYearCbBox} || LPAD((SELECT MIN(SCM_MONTH) FROM SCM0018M WHERE SCM_YEAR = #{scmYearCbBox} AND WEEK_TH = #{scmWeekCbBox}), 2, 0), 'YYYYMM'), 2), 'YYYYMM') FROM DUAL)
        ) E
     , (
        SELECT COUNT(*) AS WEEK_CNT
          FROM SCM0018M Z
         WHERE Z.USE_YN = 'Y'
           AND TO_CHAR(Z.WEEK_TH_SN_END, 'YYYYMM') = (SELECT TO_CHAR(ADD_MONTHS(TO_DATE(#{scmYearCbBox} || LPAD((SELECT MIN(SCM_MONTH) FROM SCM0018M WHERE SCM_YEAR = #{scmYearCbBox} AND WEEK_TH = #{scmWeekCbBox}), 2, 0), 'YYYYMM'), 3), 'YYYYMM') FROM DUAL)
        ) F
     , (
        SELECT COUNT(*) AS WEEK_CNT
          FROM SCM0018M Z
         WHERE Z.USE_YN = 'Y'
           AND TO_CHAR(Z.WEEK_TH_SN_END, 'YYYYMM') = (SELECT TO_CHAR(ADD_MONTHS(TO_DATE(#{scmYearCbBox} || LPAD((SELECT MIN(SCM_MONTH) FROM SCM0018M WHERE SCM_YEAR = #{scmYearCbBox} AND WEEK_TH = #{scmWeekCbBox}), 2, 0), 'YYYYMM'), 4), 'YYYYMM') FROM DUAL)
        ) G
 WHERE A.WEEK_TH BETWEEN A.FST_WEEK AND A.LEAD_TM + A.FST_WEEK + A.PLAN_WEEK_TH - 1
   AND A.SCM_MONTH >= B.PLAN_MONTH
 ORDER BY A.CAL_ID
</select>

</mapper>